/*! For license information please see main.js.LICENSE.txt */
(()=>{var e={948:(e,t,n)=>{var s=n(140),r=n(980),a=n(730),i=n(405),o=n(26),l=n(865),u=n(721);u.alea=s,u.xor128=r,u.xorwow=a,u.xorshift7=i,u.xor4096=o,u.tychei=l,e.exports=u},140:function(e,t,n){var s;!function(e,r,a){function i(e){var t,n=this,s=(t=4022871197,function(e){e=e.toString();for(var n=0;n<e.length;n++){var s=.02519603282416938*(t+=e.charCodeAt(n));s-=t=s>>>0,t=(s*=t)>>>0,t+=4294967296*(s-=t)}return 2.3283064365386963e-10*(t>>>0)});n.next=function(){var e=2091639*n.s0+2.3283064365386963e-10*n.c;return n.s0=n.s1,n.s1=n.s2,n.s2=e-(n.c=0|e)},n.c=1,n.s0=s(" "),n.s1=s(" "),n.s2=s(" "),n.s0-=s(e),n.s0<0&&(n.s0+=1),n.s1-=s(e),n.s1<0&&(n.s1+=1),n.s2-=s(e),n.s2<0&&(n.s2+=1),s=null}function o(e,t){return t.c=e.c,t.s0=e.s0,t.s1=e.s1,t.s2=e.s2,t}function l(e,t){var n=new i(e),s=t&&t.state,r=n.next;return r.int32=function(){return 4294967296*n.next()|0},r.double=function(){return r()+11102230246251565e-32*(2097152*r()|0)},r.quick=r,s&&("object"==typeof s&&o(s,n),r.state=function(){return o(n,{})}),r}r&&r.exports?r.exports=l:n.amdD&&n.amdO?void 0===(s=function(){return l}.call(t,n,t,r))||(r.exports=s):this.alea=l}(0,e=n.nmd(e),n.amdD)},865:function(e,t,n){var s;!function(e,r,a){function i(e){var t=this,n="";t.next=function(){var e=t.b,n=t.c,s=t.d,r=t.a;return e=e<<25^e>>>7^n,n=n-s|0,s=s<<24^s>>>8^r,r=r-e|0,t.b=e=e<<20^e>>>12^n,t.c=n=n-s|0,t.d=s<<16^n>>>16^r,t.a=r-e|0},t.a=0,t.b=0,t.c=-1640531527,t.d=1367130551,e===Math.floor(e)?(t.a=e/4294967296|0,t.b=0|e):n+=e;for(var s=0;s<n.length+20;s++)t.b^=0|n.charCodeAt(s),t.next()}function o(e,t){return t.a=e.a,t.b=e.b,t.c=e.c,t.d=e.d,t}function l(e,t){var n=new i(e),s=t&&t.state,r=function(){return(n.next()>>>0)/4294967296};return r.double=function(){do{var e=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===e);return e},r.int32=n.next,r.quick=r,s&&("object"==typeof s&&o(s,n),r.state=function(){return o(n,{})}),r}r&&r.exports?r.exports=l:n.amdD&&n.amdO?void 0===(s=function(){return l}.call(t,n,t,r))||(r.exports=s):this.tychei=l}(0,e=n.nmd(e),n.amdD)},980:function(e,t,n){var s;!function(e,r,a){function i(e){var t=this,n="";t.x=0,t.y=0,t.z=0,t.w=0,t.next=function(){var e=t.x^t.x<<11;return t.x=t.y,t.y=t.z,t.z=t.w,t.w^=t.w>>>19^e^e>>>8},e===(0|e)?t.x=e:n+=e;for(var s=0;s<n.length+64;s++)t.x^=0|n.charCodeAt(s),t.next()}function o(e,t){return t.x=e.x,t.y=e.y,t.z=e.z,t.w=e.w,t}function l(e,t){var n=new i(e),s=t&&t.state,r=function(){return(n.next()>>>0)/4294967296};return r.double=function(){do{var e=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===e);return e},r.int32=n.next,r.quick=r,s&&("object"==typeof s&&o(s,n),r.state=function(){return o(n,{})}),r}r&&r.exports?r.exports=l:n.amdD&&n.amdO?void 0===(s=function(){return l}.call(t,n,t,r))||(r.exports=s):this.xor128=l}(0,e=n.nmd(e),n.amdD)},26:function(e,t,n){var s;!function(e,r,a){function i(e){var t=this;t.next=function(){var e,n,s=t.w,r=t.X,a=t.i;return t.w=s=s+1640531527|0,n=r[a+34&127],e=r[a=a+1&127],n^=n<<13,e^=e<<17,n^=n>>>15,e^=e>>>12,n=r[a]=n^e,t.i=a,n+(s^s>>>16)|0},function(e,t){var n,s,r,a,i,o=[],l=128;for(t===(0|t)?(s=t,t=null):(t+="\0",s=0,l=Math.max(l,t.length)),r=0,a=-32;a<l;++a)t&&(s^=t.charCodeAt((a+32)%t.length)),0===a&&(i=s),s^=s<<10,s^=s>>>15,s^=s<<4,s^=s>>>13,a>=0&&(i=i+1640531527|0,r=0==(n=o[127&a]^=s+i)?r+1:0);for(r>=128&&(o[127&(t&&t.length||0)]=-1),r=127,a=512;a>0;--a)s=o[r+34&127],n=o[r=r+1&127],s^=s<<13,n^=n<<17,s^=s>>>15,n^=n>>>12,o[r]=s^n;e.w=i,e.X=o,e.i=r}(t,e)}function o(e,t){return t.i=e.i,t.w=e.w,t.X=e.X.slice(),t}function l(e,t){null==e&&(e=+new Date);var n=new i(e),s=t&&t.state,r=function(){return(n.next()>>>0)/4294967296};return r.double=function(){do{var e=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===e);return e},r.int32=n.next,r.quick=r,s&&(s.X&&o(s,n),r.state=function(){return o(n,{})}),r}r&&r.exports?r.exports=l:n.amdD&&n.amdO?void 0===(s=function(){return l}.call(t,n,t,r))||(r.exports=s):this.xor4096=l}(0,e=n.nmd(e),n.amdD)},405:function(e,t,n){var s;!function(e,r,a){function i(e){var t=this;t.next=function(){var e,n,s=t.x,r=t.i;return e=s[r],n=(e^=e>>>7)^e<<24,n^=(e=s[r+1&7])^e>>>10,n^=(e=s[r+3&7])^e>>>3,n^=(e=s[r+4&7])^e<<7,e=s[r+7&7],n^=(e^=e<<13)^e<<9,s[r]=n,t.i=r+1&7,n},function(e,t){var n,s=[];if(t===(0|t))s[0]=t;else for(t=""+t,n=0;n<t.length;++n)s[7&n]=s[7&n]<<15^t.charCodeAt(n)+s[n+1&7]<<13;for(;s.length<8;)s.push(0);for(n=0;n<8&&0===s[n];++n);for(8==n?s[7]=-1:s[n],e.x=s,e.i=0,n=256;n>0;--n)e.next()}(t,e)}function o(e,t){return t.x=e.x.slice(),t.i=e.i,t}function l(e,t){null==e&&(e=+new Date);var n=new i(e),s=t&&t.state,r=function(){return(n.next()>>>0)/4294967296};return r.double=function(){do{var e=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===e);return e},r.int32=n.next,r.quick=r,s&&(s.x&&o(s,n),r.state=function(){return o(n,{})}),r}r&&r.exports?r.exports=l:n.amdD&&n.amdO?void 0===(s=function(){return l}.call(t,n,t,r))||(r.exports=s):this.xorshift7=l}(0,e=n.nmd(e),n.amdD)},730:function(e,t,n){var s;!function(e,r,a){function i(e){var t=this,n="";t.next=function(){var e=t.x^t.x>>>2;return t.x=t.y,t.y=t.z,t.z=t.w,t.w=t.v,(t.d=t.d+362437|0)+(t.v=t.v^t.v<<4^e^e<<1)|0},t.x=0,t.y=0,t.z=0,t.w=0,t.v=0,e===(0|e)?t.x=e:n+=e;for(var s=0;s<n.length+64;s++)t.x^=0|n.charCodeAt(s),s==n.length&&(t.d=t.x<<10^t.x>>>4),t.next()}function o(e,t){return t.x=e.x,t.y=e.y,t.z=e.z,t.w=e.w,t.v=e.v,t.d=e.d,t}function l(e,t){var n=new i(e),s=t&&t.state,r=function(){return(n.next()>>>0)/4294967296};return r.double=function(){do{var e=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===e);return e},r.int32=n.next,r.quick=r,s&&("object"==typeof s&&o(s,n),r.state=function(){return o(n,{})}),r}r&&r.exports?r.exports=l:n.amdD&&n.amdO?void 0===(s=function(){return l}.call(t,n,t,r))||(r.exports=s):this.xorwow=l}(0,e=n.nmd(e),n.amdD)},721:(e,t,n)=>{var s;!function(r,a){var i,o=this,l=256,u=a.pow(l,6),c=a.pow(2,52),h=2*c,p=255;function d(e,t,n){var s=[],p=y(g((t=1==t?{entropy:!0}:t||{}).entropy?[e,b(r)]:null==e?function(){try{var e;return i&&(e=i.randomBytes)?e=e(l):(e=new Uint8Array(l),(o.crypto||o.msCrypto).getRandomValues(e)),b(e)}catch(e){var t=o.navigator,n=t&&t.plugins;return[+new Date,o,n,o.screen,b(r)]}}():e,3),s),d=new f(s),x=function(){for(var e=d.g(6),t=u,n=0;e<c;)e=(e+n)*l,t*=l,n=d.g(1);for(;e>=h;)e/=2,t/=2,n>>>=1;return(e+n)/t};return x.int32=function(){return 0|d.g(4)},x.quick=function(){return d.g(4)/4294967296},x.double=x,y(b(d.S),r),(t.pass||n||function(e,t,n,s){return s&&(s.S&&m(s,d),e.state=function(){return m(d,{})}),n?(a.random=e,t):e})(x,p,"global"in t?t.global:this==a,t.state)}function f(e){var t,n=e.length,s=this,r=0,a=s.i=s.j=0,i=s.S=[];for(n||(e=[n++]);r<l;)i[r]=r++;for(r=0;r<l;r++)i[r]=i[a=p&a+e[r%n]+(t=i[r])],i[a]=t;(s.g=function(e){for(var t,n=0,r=s.i,a=s.j,i=s.S;e--;)t=i[r=p&r+1],n=n*l+i[p&(i[r]=i[a=p&a+t])+(i[a]=t)];return s.i=r,s.j=a,n})(l)}function m(e,t){return t.i=e.i,t.j=e.j,t.S=e.S.slice(),t}function g(e,t){var n,s=[],r=typeof e;if(t&&"object"==r)for(n in e)try{s.push(g(e[n],t-1))}catch(e){}return s.length?s:"string"==r?e:e+"\0"}function y(e,t){for(var n,s=e+"",r=0;r<s.length;)t[p&r]=p&(n^=19*t[p&r])+s.charCodeAt(r++);return b(t)}function b(e){return String.fromCharCode.apply(0,e)}if(a.seedrandom=d,y(a.random(),r),e.exports){e.exports=d;try{i=n(914)}catch(e){}}else void 0===(s=function(){return d}.call(t,n,t,e))||(e.exports=s)}([],Math)},129:(e,t,n)=>{var s=n(626),r=n(477),a=n(868),i=n(197),o=n(954),l=n(408),u=n(662);u.alea=s,u.xor128=r,u.xorwow=a,u.xorshift7=i,u.xor4096=o,u.tychei=l,e.exports=u},626:function(e,t,n){var s;!function(e,r,a){function i(e){var t,n=this,s=(t=4022871197,function(e){e=e.toString();for(var n=0;n<e.length;n++){var s=.02519603282416938*(t+=e.charCodeAt(n));s-=t=s>>>0,t=(s*=t)>>>0,t+=4294967296*(s-=t)}return 2.3283064365386963e-10*(t>>>0)});n.next=function(){var e=2091639*n.s0+2.3283064365386963e-10*n.c;return n.s0=n.s1,n.s1=n.s2,n.s2=e-(n.c=0|e)},n.c=1,n.s0=s(" "),n.s1=s(" "),n.s2=s(" "),n.s0-=s(e),n.s0<0&&(n.s0+=1),n.s1-=s(e),n.s1<0&&(n.s1+=1),n.s2-=s(e),n.s2<0&&(n.s2+=1),s=null}function o(e,t){return t.c=e.c,t.s0=e.s0,t.s1=e.s1,t.s2=e.s2,t}function l(e,t){var n=new i(e),s=t&&t.state,r=n.next;return r.int32=function(){return 4294967296*n.next()|0},r.double=function(){return r()+11102230246251565e-32*(2097152*r()|0)},r.quick=r,s&&("object"==typeof s&&o(s,n),r.state=function(){return o(n,{})}),r}r&&r.exports?r.exports=l:n.amdD&&n.amdO?void 0===(s=function(){return l}.call(t,n,t,r))||(r.exports=s):this.alea=l}(0,e=n.nmd(e),n.amdD)},408:function(e,t,n){var s;!function(e,r,a){function i(e){var t=this,n="";t.next=function(){var e=t.b,n=t.c,s=t.d,r=t.a;return e=e<<25^e>>>7^n,n=n-s|0,s=s<<24^s>>>8^r,r=r-e|0,t.b=e=e<<20^e>>>12^n,t.c=n=n-s|0,t.d=s<<16^n>>>16^r,t.a=r-e|0},t.a=0,t.b=0,t.c=-1640531527,t.d=1367130551,e===Math.floor(e)?(t.a=e/4294967296|0,t.b=0|e):n+=e;for(var s=0;s<n.length+20;s++)t.b^=0|n.charCodeAt(s),t.next()}function o(e,t){return t.a=e.a,t.b=e.b,t.c=e.c,t.d=e.d,t}function l(e,t){var n=new i(e),s=t&&t.state,r=function(){return(n.next()>>>0)/4294967296};return r.double=function(){do{var e=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===e);return e},r.int32=n.next,r.quick=r,s&&("object"==typeof s&&o(s,n),r.state=function(){return o(n,{})}),r}r&&r.exports?r.exports=l:n.amdD&&n.amdO?void 0===(s=function(){return l}.call(t,n,t,r))||(r.exports=s):this.tychei=l}(0,e=n.nmd(e),n.amdD)},477:function(e,t,n){var s;!function(e,r,a){function i(e){var t=this,n="";t.x=0,t.y=0,t.z=0,t.w=0,t.next=function(){var e=t.x^t.x<<11;return t.x=t.y,t.y=t.z,t.z=t.w,t.w^=t.w>>>19^e^e>>>8},e===(0|e)?t.x=e:n+=e;for(var s=0;s<n.length+64;s++)t.x^=0|n.charCodeAt(s),t.next()}function o(e,t){return t.x=e.x,t.y=e.y,t.z=e.z,t.w=e.w,t}function l(e,t){var n=new i(e),s=t&&t.state,r=function(){return(n.next()>>>0)/4294967296};return r.double=function(){do{var e=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===e);return e},r.int32=n.next,r.quick=r,s&&("object"==typeof s&&o(s,n),r.state=function(){return o(n,{})}),r}r&&r.exports?r.exports=l:n.amdD&&n.amdO?void 0===(s=function(){return l}.call(t,n,t,r))||(r.exports=s):this.xor128=l}(0,e=n.nmd(e),n.amdD)},954:function(e,t,n){var s;!function(e,r,a){function i(e){var t=this;t.next=function(){var e,n,s=t.w,r=t.X,a=t.i;return t.w=s=s+1640531527|0,n=r[a+34&127],e=r[a=a+1&127],n^=n<<13,e^=e<<17,n^=n>>>15,e^=e>>>12,n=r[a]=n^e,t.i=a,n+(s^s>>>16)|0},function(e,t){var n,s,r,a,i,o=[],l=128;for(t===(0|t)?(s=t,t=null):(t+="\0",s=0,l=Math.max(l,t.length)),r=0,a=-32;a<l;++a)t&&(s^=t.charCodeAt((a+32)%t.length)),0===a&&(i=s),s^=s<<10,s^=s>>>15,s^=s<<4,s^=s>>>13,a>=0&&(i=i+1640531527|0,r=0==(n=o[127&a]^=s+i)?r+1:0);for(r>=128&&(o[127&(t&&t.length||0)]=-1),r=127,a=512;a>0;--a)s=o[r+34&127],n=o[r=r+1&127],s^=s<<13,n^=n<<17,s^=s>>>15,n^=n>>>12,o[r]=s^n;e.w=i,e.X=o,e.i=r}(t,e)}function o(e,t){return t.i=e.i,t.w=e.w,t.X=e.X.slice(),t}function l(e,t){null==e&&(e=+new Date);var n=new i(e),s=t&&t.state,r=function(){return(n.next()>>>0)/4294967296};return r.double=function(){do{var e=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===e);return e},r.int32=n.next,r.quick=r,s&&(s.X&&o(s,n),r.state=function(){return o(n,{})}),r}r&&r.exports?r.exports=l:n.amdD&&n.amdO?void 0===(s=function(){return l}.call(t,n,t,r))||(r.exports=s):this.xor4096=l}(0,e=n.nmd(e),n.amdD)},197:function(e,t,n){var s;!function(e,r,a){function i(e){var t=this;t.next=function(){var e,n,s=t.x,r=t.i;return e=s[r],n=(e^=e>>>7)^e<<24,n^=(e=s[r+1&7])^e>>>10,n^=(e=s[r+3&7])^e>>>3,n^=(e=s[r+4&7])^e<<7,e=s[r+7&7],n^=(e^=e<<13)^e<<9,s[r]=n,t.i=r+1&7,n},function(e,t){var n,s=[];if(t===(0|t))s[0]=t;else for(t=""+t,n=0;n<t.length;++n)s[7&n]=s[7&n]<<15^t.charCodeAt(n)+s[n+1&7]<<13;for(;s.length<8;)s.push(0);for(n=0;n<8&&0===s[n];++n);for(8==n?s[7]=-1:s[n],e.x=s,e.i=0,n=256;n>0;--n)e.next()}(t,e)}function o(e,t){return t.x=e.x.slice(),t.i=e.i,t}function l(e,t){null==e&&(e=+new Date);var n=new i(e),s=t&&t.state,r=function(){return(n.next()>>>0)/4294967296};return r.double=function(){do{var e=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===e);return e},r.int32=n.next,r.quick=r,s&&(s.x&&o(s,n),r.state=function(){return o(n,{})}),r}r&&r.exports?r.exports=l:n.amdD&&n.amdO?void 0===(s=function(){return l}.call(t,n,t,r))||(r.exports=s):this.xorshift7=l}(0,e=n.nmd(e),n.amdD)},868:function(e,t,n){var s;!function(e,r,a){function i(e){var t=this,n="";t.next=function(){var e=t.x^t.x>>>2;return t.x=t.y,t.y=t.z,t.z=t.w,t.w=t.v,(t.d=t.d+362437|0)+(t.v=t.v^t.v<<4^e^e<<1)|0},t.x=0,t.y=0,t.z=0,t.w=0,t.v=0,e===(0|e)?t.x=e:n+=e;for(var s=0;s<n.length+64;s++)t.x^=0|n.charCodeAt(s),s==n.length&&(t.d=t.x<<10^t.x>>>4),t.next()}function o(e,t){return t.x=e.x,t.y=e.y,t.z=e.z,t.w=e.w,t.v=e.v,t.d=e.d,t}function l(e,t){var n=new i(e),s=t&&t.state,r=function(){return(n.next()>>>0)/4294967296};return r.double=function(){do{var e=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===e);return e},r.int32=n.next,r.quick=r,s&&("object"==typeof s&&o(s,n),r.state=function(){return o(n,{})}),r}r&&r.exports?r.exports=l:n.amdD&&n.amdO?void 0===(s=function(){return l}.call(t,n,t,r))||(r.exports=s):this.xorwow=l}(0,e=n.nmd(e),n.amdD)},662:(e,t,n)=>{var s;!function(r,a){var i,o=this,l=256,u=a.pow(l,6),c=a.pow(2,52),h=2*c,p=255;function d(e,t,n){var s=[],p=y(g((t=1==t?{entropy:!0}:t||{}).entropy?[e,b(r)]:null==e?function(){try{var e;return i&&(e=i.randomBytes)?e=e(l):(e=new Uint8Array(l),(o.crypto||o.msCrypto).getRandomValues(e)),b(e)}catch(e){var t=o.navigator,n=t&&t.plugins;return[+new Date,o,n,o.screen,b(r)]}}():e,3),s),d=new f(s),x=function(){for(var e=d.g(6),t=u,n=0;e<c;)e=(e+n)*l,t*=l,n=d.g(1);for(;e>=h;)e/=2,t/=2,n>>>=1;return(e+n)/t};return x.int32=function(){return 0|d.g(4)},x.quick=function(){return d.g(4)/4294967296},x.double=x,y(b(d.S),r),(t.pass||n||function(e,t,n,s){return s&&(s.S&&m(s,d),e.state=function(){return m(d,{})}),n?(a.random=e,t):e})(x,p,"global"in t?t.global:this==a,t.state)}function f(e){var t,n=e.length,s=this,r=0,a=s.i=s.j=0,i=s.S=[];for(n||(e=[n++]);r<l;)i[r]=r++;for(r=0;r<l;r++)i[r]=i[a=p&a+e[r%n]+(t=i[r])],i[a]=t;(s.g=function(e){for(var t,n=0,r=s.i,a=s.j,i=s.S;e--;)t=i[r=p&r+1],n=n*l+i[p&(i[r]=i[a=p&a+t])+(i[a]=t)];return s.i=r,s.j=a,n})(l)}function m(e,t){return t.i=e.i,t.j=e.j,t.S=e.S.slice(),t}function g(e,t){var n,s=[],r=typeof e;if(t&&"object"==r)for(n in e)try{s.push(g(e[n],t-1))}catch(e){}return s.length?s:"string"==r?e:e+"\0"}function y(e,t){for(var n,s=e+"",r=0;r<s.length;)t[p&r]=p&(n^=19*t[p&r])+s.charCodeAt(r++);return b(t)}function b(e){return String.fromCharCode.apply(0,e)}if(a.seedrandom=d,y(a.random(),r),e.exports){e.exports=d;try{i=n(778)}catch(e){}}else void 0===(s=function(){return d}.call(t,n,t,e))||(e.exports=s)}([],Math)},843:(e,t,n)=>{"use strict";n.r(t),n.d(t,{Abs:()=>Ye,Acos:()=>Ze,Acosh:()=>Je,AdadeltaOptimizer:()=>$l,AdagradOptimizer:()=>Al,AdamOptimizer:()=>Fl,AdamaxOptimizer:()=>Ml,Add:()=>Qe,AddN:()=>et,All:()=>tt,Any:()=>nt,ArgMax:()=>st,ArgMin:()=>rt,Asin:()=>at,Asinh:()=>it,Atan:()=>ot,Atan2:()=>ut,Atanh:()=>lt,AvgPool:()=>ct,AvgPool3D:()=>pt,AvgPool3DGrad:()=>dt,AvgPoolGrad:()=>ht,BatchMatMul:()=>ft,BatchToSpaceND:()=>mt,Bincount:()=>gt,BroadcastArgs:()=>bt,BroadcastTo:()=>yt,Callback:()=>FI,CallbackList:()=>Bb,Cast:()=>xt,Ceil:()=>vt,ClipByValue:()=>wt,Complex:()=>kt,ComplexAbs:()=>It,Concat:()=>St,Conv2D:()=>Nt,Conv2DBackpropFilter:()=>Tt,Conv2DBackpropInput:()=>Ct,Conv3D:()=>$t,Conv3DBackpropFilterV2:()=>Et,Conv3DBackpropInputV2:()=>At,Cos:()=>_t,Cosh:()=>Rt,CropAndResize:()=>Ot,Cumprod:()=>Ft,Cumsum:()=>Dt,CustomCallback:()=>Ub,DataStorage:()=>j,DenseBincount:()=>Mt,DepthToSpace:()=>Lt,DepthwiseConv2dNative:()=>zt,DepthwiseConv2dNativeBackpropFilter:()=>Pt,DepthwiseConv2dNativeBackpropInput:()=>Bt,Diag:()=>Wt,Dilation2D:()=>Vt,Dilation2DBackpropFilter:()=>Gt,Dilation2DBackpropInput:()=>Ut,ENV:()=>qe,EarlyStopping:()=>MI,Einsum:()=>jt,Elu:()=>qt,EluGrad:()=>Kt,Environment:()=>Ue,Equal:()=>Yt,Erf:()=>Xt,Exp:()=>Zt,ExpandDims:()=>Jt,Expm1:()=>Qt,FFT:()=>en,Fill:()=>tn,FlipLeftRight:()=>nn,Floor:()=>sn,FloorDiv:()=>rn,FromPixels:()=>tr,FusedBatchNorm:()=>an,FusedConv2D:()=>rr,FusedDepthwiseConv2D:()=>ar,GatherNd:()=>ln,GatherV2:()=>on,GraphModel:()=>JS,Greater:()=>un,GreaterEqual:()=>cn,History:()=>Vb,IFFT:()=>pn,Identity:()=>hn,Imag:()=>dn,InputSpec:()=>Hy,IsFinite:()=>fn,IsInf:()=>mn,IsNan:()=>gn,KernelBackend:()=>q,LRN:()=>$n,LRNGrad:()=>En,LayerVariable:()=>Vy,LayersModel:()=>Wx,LeakyRelu:()=>yn,Less:()=>bn,LessEqual:()=>xn,LinSpace:()=>vn,Log:()=>wn,Log1p:()=>kn,LogSoftmax:()=>Tn,LogicalAnd:()=>In,LogicalNot:()=>Sn,LogicalOr:()=>Nn,LowerBound:()=>Cn,Max:()=>An,MaxPool:()=>Rn,MaxPool3D:()=>Dn,MaxPool3DGrad:()=>On,MaxPoolGrad:()=>Fn,MaxPoolWithArgmax:()=>Mn,Maximum:()=>_n,Mean:()=>Ln,Min:()=>zn,Minimum:()=>Pn,MirrorPad:()=>Bn,Mod:()=>Wn,MomentumOptimizer:()=>zl,Multinomial:()=>Vn,Multiply:()=>Un,Neg:()=>Gn,NonMaxSuppressionV3:()=>jn,NonMaxSuppressionV4:()=>qn,NonMaxSuppressionV5:()=>Kn,NotEqual:()=>Hn,OP_SCOPE_SUFFIX:()=>Ea,OneHot:()=>Yn,OnesLike:()=>Xn,Optimizer:()=>Cl,OptimizerConstructors:()=>Bl,Pack:()=>Zn,PadV2:()=>Jn,Pool:()=>Qn,Pow:()=>es,Prelu:()=>ts,Prod:()=>ns,RMSPropOptimizer:()=>Pl,RNN:()=>qv,Range:()=>ss,Rank:()=>ea,Real:()=>rs,RealDiv:()=>Ht,Reciprocal:()=>as,Reduction:()=>yd,Relu:()=>is,Relu6:()=>ps,Reshape:()=>os,ResizeBilinear:()=>cs,ResizeBilinearGrad:()=>hs,ResizeNearestNeighbor:()=>ls,ResizeNearestNeighborGrad:()=>us,Reverse:()=>ds,RotateWithOffset:()=>nr,Round:()=>fs,Rsqrt:()=>ms,SGDOptimizer:()=>Ll,ScatterNd:()=>gs,SearchSorted:()=>ys,Select:()=>bs,Selu:()=>xs,Sequential:()=>Gx,Sigmoid:()=>Ss,Sign:()=>Is,Sin:()=>ws,Sinh:()=>ks,Slice:()=>vs,Softmax:()=>As,Softplus:()=>Ns,SpaceToBatchND:()=>$s,SparseFillEmptyRows:()=>_s,SparseReshape:()=>Rs,SparseSegmentMean:()=>Fs,SparseSegmentSum:()=>Ds,SparseToDense:()=>Os,SplitV:()=>Es,Sqrt:()=>Ts,Square:()=>Ls,SquaredDifference:()=>Ms,Step:()=>er,StridedSlice:()=>zs,StringNGrams:()=>Ps,StringSplit:()=>Bs,StringToHashBucketFast:()=>Ws,Sub:()=>Vs,Sum:()=>Cs,SymbolicTensor:()=>jy,Tan:()=>Us,Tanh:()=>Gs,Tensor:()=>Zr,TensorBuffer:()=>qr,Tile:()=>Hs,TopK:()=>js,Transform:()=>qs,Transpose:()=>Ks,Unique:()=>Xs,Unpack:()=>Ys,UnsortedSegmentSum:()=>Zs,UpperBound:()=>Js,Variable:()=>Qr,ZerosLike:()=>Qs,_FusedMatMul:()=>sr,abs:()=>Dl,acos:()=>Wl,acosh:()=>Vl,add:()=>pl,addN:()=>Ul,all:()=>Gl,any:()=>Hl,argMax:()=>jl,argMin:()=>ql,asin:()=>Kl,asinh:()=>Xl,atan:()=>Yl,atan2:()=>Zl,atanh:()=>Jl,avgPool:()=>fu,avgPool3d:()=>mu,backend:()=>cl,backend_util:()=>y,basicLSTMCell:()=>vu,batchNorm:()=>ku,batchNorm2d:()=>Iu,batchNorm3d:()=>Su,batchNorm4d:()=>Nu,batchToSpaceND:()=>wu,bincount:()=>Tu,booleanMaskAsync:()=>Ip,broadcastArgs:()=>Cu,broadcastTo:()=>$u,broadcast_util:()=>l,browser:()=>u,buffer:()=>$i,callbacks:()=>LI,cast:()=>Ei,ceil:()=>Eu,clipByValue:()=>Au,clone:()=>Ai,complex:()=>_a,concat:()=>gu,concat1d:()=>_u,concat2d:()=>Ru,concat3d:()=>Fu,concat4d:()=>Du,constraints:()=>x,conv1d:()=>Mu,conv2d:()=>Ou,conv2dTranspose:()=>zu,conv3d:()=>Pu,conv3dTranspose:()=>Wu,copyRegisteredKernels:()=>yr,cos:()=>Vu,cosh:()=>Uu,cosineWindow:()=>Ap,cumprod:()=>Gu,cumsum:()=>Hu,customGrad:()=>Sl,data:()=>G,denseBincount:()=>ju,deprecationWarn:()=>Ko,depthToSpace:()=>qu,depthwiseConv2d:()=>Ku,deregisterOp:()=>UI,device_util:()=>a,diag:()=>Xu,dilation2d:()=>Yu,disableDeprecationWarnings:()=>qo,dispose:()=>el,disposeVariables:()=>Xo,div:()=>fl,divNoNan:()=>Qu,dot:()=>ec,dropout:()=>$p,einsum:()=>tc,elu:()=>nc,enableDebugMode:()=>jo,enableProdMode:()=>Ho,enclosingPowerOfTwo:()=>Ep,engine:()=>Yo,env:()=>He,equal:()=>Zu,erf:()=>sc,euclideanNorm:()=>yc,exp:()=>bc,expandDims:()=>xc,expm1:()=>vc,eye:()=>kc,fft:()=>Jh,fill:()=>El,findBackend:()=>ol,findBackendFactory:()=>ll,floor:()=>Ic,floorDiv:()=>dl,fused:()=>m,gather:()=>Sc,gatherND:()=>Cp,gather_util:()=>c,getBackend:()=>al,getGradient:()=>hr,getKernel:()=>cr,getKernelsForBackend:()=>pr,grad:()=>xl,grads:()=>vl,greater:()=>Nc,greaterEqual:()=>Tc,ifft:()=>Qh,imag:()=>Cc,image:()=>Md,inTopKAsync:()=>_p,initializers:()=>v,input:()=>Kx,io:()=>i,irfft:()=>ep,isFinite:()=>$c,isInf:()=>Ec,isNaN:()=>Ac,keep:()=>tl,kernel_impls:()=>b,layers:()=>w,leakyRelu:()=>_c,less:()=>Rc,lessEqual:()=>Fc,linalg:()=>Ld,linspace:()=>Dc,loadGraphModel:()=>QS,loadLayersModel:()=>qx,localResponseNormalization:()=>Oc,log:()=>Mc,log1p:()=>Lc,logSigmoid:()=>Bc,logSoftmax:()=>Wc,logSumExp:()=>Vc,logicalAnd:()=>Uc,logicalNot:()=>Gc,logicalOr:()=>Hc,logicalXor:()=>jc,losses:()=>zd,lowerBound:()=>Xc,matMul:()=>Xi,math:()=>o,max:()=>pc,maxPool:()=>Yc,maxPool3d:()=>Zc,maxPoolWithArgmax:()=>Jc,maximum:()=>Ol,mean:()=>Qc,memory:()=>Zo,meshgrid:()=>nh,metrics:()=>k,min:()=>dc,minimum:()=>sh,mirrorPad:()=>rh,mod:()=>ah,model:()=>Hx,models:()=>I,moments:()=>ih,movingAverage:()=>Sp,mul:()=>ml,multiRNNCell:()=>oh,multinomial:()=>lh,neg:()=>zc,nextFrame:()=>Ud,norm:()=>gc,notEqual:()=>uh,oneHot:()=>Yi,ones:()=>th,onesLike:()=>ch,op:()=>Aa,outerProduct:()=>hh,pad:()=>ph,pad1d:()=>dh,pad2d:()=>fh,pad3d:()=>mh,pad4d:()=>gh,pool:()=>bh,pow:()=>_l,prelu:()=>xh,print:()=>_i,prod:()=>vh,profile:()=>Jo,rand:()=>wh,randomGamma:()=>Th,randomNormal:()=>Ch,randomUniform:()=>$h,range:()=>Eh,ready:()=>rl,real:()=>Ah,reciprocal:()=>_h,registerBackend:()=>ul,registerCallbackConstructor:()=>Xx,registerGradient:()=>fr,registerKernel:()=>dr,registerOp:()=>WI,regularizers:()=>S,relu:()=>Rh,relu6:()=>Fh,removeBackend:()=>il,reshape:()=>du,reverse:()=>Dh,reverse1d:()=>Oh,reverse2d:()=>Mh,reverse3d:()=>Lh,reverse4d:()=>zh,rfft:()=>np,round:()=>Ph,rsqrt:()=>Bh,scalar:()=>Tl,scatterND:()=>Np,scatter_util:()=>h,searchSorted:()=>Kc,selu:()=>Wh,separableConv2d:()=>Vh,sequential:()=>jx,serialization:()=>d,setBackend:()=>sl,setPlatform:()=>hl,setdiff1dAsync:()=>Uh,sigmoid:()=>yu,sign:()=>Gh,signal:()=>Od,sin:()=>Hh,sinh:()=>jh,slice:()=>bu,slice1d:()=>qh,slice2d:()=>Kh,slice3d:()=>Xh,slice4d:()=>Yh,slice_util:()=>p,softmax:()=>Zh,softplus:()=>Pc,spaceToBatchND:()=>yh,sparse:()=>Pd,sparseToDense:()=>Tp,spectral:()=>Dd,split:()=>tp,sqrt:()=>gl,square:()=>yl,squaredDifference:()=>sp,squeeze:()=>rp,stack:()=>ap,step:()=>ip,stridedSlice:()=>op,string:()=>Bd,sub:()=>Rl,sum:()=>fc,sumOutType:()=>oa,tan:()=>lp,tanh:()=>xu,tensor:()=>Fa,tensor1d:()=>up,tensor2d:()=>cp,tensor3d:()=>no,tensor4d:()=>hp,tensor5d:()=>pp,tensor6d:()=>dp,tensor_util:()=>r,test_util:()=>f,tidy:()=>Qo,tile:()=>wc,time:()=>nl,topk:()=>fp,train:()=>Wd,transpose:()=>Zi,truncatedNormal:()=>mp,unique:()=>gp,unregisterGradient:()=>gr,unregisterKernel:()=>mr,unsortedSegmentSum:()=>yp,unstack:()=>bp,upcastType:()=>ia,upperBound:()=>xp,util:()=>s,valueAndGrad:()=>wl,valueAndGrads:()=>kl,variable:()=>vp,variableGrads:()=>Il,version:()=>bW,version_converter:()=>eN,version_core:()=>Go,version_layers:()=>Ix,where:()=>Ju,whereAsync:()=>kp,zeros:()=>eh,zerosLike:()=>bl});var s={};n.r(s),n.d(s,{arraysEqual:()=>ue,assert:()=>se,assertNonNegativeIntegerDimensions:()=>Pe,assertNonNull:()=>ae,assertShapesMatch:()=>re,bytesFromStringArray:()=>Te,bytesPerElement:()=>Ne,checkConversionForErrors:()=>we,clamp:()=>Z,computeStrides:()=>Fe,createScalarValue:()=>Fr,createShuffledIndices:()=>de,decodeString:()=>zr,distSquared:()=>ne,encodeString:()=>Lr,fetch:()=>Mr,fingerPrint64:()=>Rr,flatten:()=>ie,getArrayFromDType:()=>ve,getTypedArrayFromDType:()=>xe,hasEncodingLoss:()=>Ie,hexToLong:()=>wr,indexToLoc:()=>We,inferDtype:()=>Ae,inferFromImplicitShape:()=>ge,isBoolean:()=>$e,isFunction:()=>_e,isInt:()=>ce,isNumber:()=>Ee,isPromise:()=>Ve,isScalarShape:()=>le,isString:()=>Ce,isTypedArray:()=>Se,isValidDtype:()=>ke,locToIndex:()=>Be,makeOnesTypedArray:()=>Me,makeZerosNestedTypedArray:()=>ze,makeZerosTypedArray:()=>Le,nearestDivisor:()=>Re,nearestLargerEven:()=>J,now:()=>Or,parseAxisParam:()=>ye,randUniform:()=>te,repeatedTry:()=>me,rightPad:()=>fe,shuffle:()=>X,shuffleCombo:()=>Y,sizeFromShape:()=>oe,sizeToSquarishShape:()=>pe,squeezeShape:()=>be,sum:()=>ee,swap:()=>Q,tanh:()=>he,toNestedArray:()=>Oe,toTypedArray:()=>Dr});var r={};n.r(r),n.d(r,{assertTypesMatch:()=>ua,getTensorsInContainer:()=>ha,isTensorInList:()=>ca,makeTypesMatch:()=>la});var a={};n.r(a),n.d(a,{isBrowser:()=>ka,isMobile:()=>wa,mockIsMobile:()=>va});var i={};n.r(i),n.d(i,{browserFiles:()=>Oi,browserHTTPRequest:()=>Gi,concatenateArrayBuffers:()=>Ba,copyModel:()=>Si,decodeWeights:()=>Ma,encodeWeights:()=>Oa,fromMemory:()=>qi,getLoadHandlers:()=>Ya,getModelArtifactsForJSON:()=>Ua,getModelArtifactsInfoForJSON:()=>Ga,getSaveHandlers:()=>Xa,http:()=>Ui,isHTTPScheme:()=>Wi,listModels:()=>ki,loadWeights:()=>zi,moveModel:()=>Ni,registerLoadRouter:()=>Ka,registerSaveRouter:()=>qa,removeModel:()=>Ii,weightsLoaderFactory:()=>Pi,withSaveHandler:()=>Ki});var o={};n.r(o),n.d(o,{confusionMatrix:()=>Ji});var l={};n.r(l),n.d(l,{assertAndGetBroadcastShape:()=>to,getBroadcastDims:()=>Qi,getReductionAxes:()=>eo});var u={};n.r(u),n.d(u,{fromPixels:()=>oo,fromPixelsAsync:()=>ao,toPixels:()=>io});var c={};n.r(c),n.d(c,{prepareAndValidate:()=>lo});var h={};n.r(h),n.d(h,{calculateShapes:()=>ho,validateInput:()=>co,validateUpdateShape:()=>uo});var p={};n.r(p),n.d(p,{assertParamsValid:()=>po,computeFlatOffset:()=>To,computeOutShape:()=>mo,getNormalizedAxes:()=>xo,isSliceContinous:()=>No,maskToAxes:()=>fo,parseSliceParams:()=>Co,sliceInfo:()=>$o,startForAxis:()=>Io,startIndicesWithElidedDims:()=>vo,stopForAxis:()=>So,stopIndicesWithElidedDims:()=>wo,stridesForAxis:()=>ko,stridesWithElidedDims:()=>go});var d={};n.r(d),n.d(d,{Serializable:()=>Ao,SerializationMap:()=>_o,registerClass:()=>Ro});var f={};n.r(f),n.d(f,{TEST_EPSILON_FLOAT16:()=>Fo,encodeStrings:()=>Uo,expectArrayBuffersEqual:()=>Vo,expectArraysClose:()=>Do,expectArraysEqual:()=>zo,expectNumbersClose:()=>Po,expectPromiseToFail:()=>Lo,expectValuesInRange:()=>Wo,testEpsilon:()=>Oo});var m={};n.r(m),n.d(m,{conv2d:()=>Lp,depthwiseConv2d:()=>Bp,matMul:()=>Wp});var g={};n.r(g),n.d(g,{collectGatherOpShapeInfo:()=>Pf,computeOutShape:()=>zf,segOpComputeOptimalWindowSize:()=>Lf});var y={};n.r(y),n.d(y,{ERF_A1:()=>sf,ERF_A2:()=>rf,ERF_A3:()=>af,ERF_A4:()=>of,ERF_A5:()=>lf,ERF_P:()=>nf,PARALLELIZE_THRESHOLD:()=>jd,SELU_SCALE:()=>tf,SELU_SCALEALPHA:()=>ef,applyActivation:()=>Op,assertAndGetBroadcastShape:()=>to,assertAxesAreInnerMostDims:()=>lc,assertParamsConsistent:()=>Gd,assignToTypedArray:()=>ff,axesAreInnerMostDims:()=>rc,calculateShapes:()=>ho,checkEinsumDimSizes:()=>vf,checkPadOnDimRoundingMode:()=>pu,combineLocations:()=>ac,complexWithEvenIndex:()=>hf,complexWithOddIndex:()=>pf,computeConv2DInfo:()=>nu,computeConv3DInfo:()=>su,computeDefaultPad:()=>ru,computeDilation2DInfo:()=>Ql,computeOptimalWindowSize:()=>qd,computeOutAndReduceShapes:()=>ic,computeOutShape:()=>Hd,computePool2DInfo:()=>eu,computePool3DInfo:()=>tu,convertConv2DDataFormat:()=>hu,decodeEinsumEquation:()=>bf,eitherStridesOrDilationsAreOne:()=>cu,expandShapeToKeepDim:()=>oc,exponent:()=>gf,exponents:()=>mf,fromStringArrayToUint8:()=>Wf,fromUint8ToStringArray:()=>Bf,getAxesPermutation:()=>uc,getBroadcastDims:()=>Qi,getComplexWithIndex:()=>df,getEinsumComputePath:()=>wf,getEinsumPermutation:()=>xf,getFusedBiasGradient:()=>Dp,getFusedDyActivation:()=>Fp,getImageCenter:()=>Kd,getInnerMostAxes:()=>hc,getPermuted:()=>Yd,getReductionAxes:()=>eo,getReshaped:()=>Xd,getReshapedPermuted:()=>Zd,getSliceBeginCoords:()=>Jd,getSliceSize:()=>Qd,getSparseFillEmptyRowsIndicesDenseShapeMismatch:()=>Nf,getSparseFillEmptyRowsNegativeIndexErrorMessage:()=>Tf,getSparseFillEmptyRowsOutOfRangeIndexErrorMessage:()=>Cf,getSparseReshapeEmptyTensorZeroOutputDimErrorMessage:()=>Af,getSparseReshapeInputOutputMismatchErrorMessage:()=>Rf,getSparseReshapeInputOutputMultipleErrorMessage:()=>_f,getSparseReshapeMultipleNegativeOneOutputDimErrorMessage:()=>$f,getSparseReshapeNegativeOutputDimErrorMessage:()=>Ef,getSparseSegmentReductionIndicesOutOfRangeErrorMessage:()=>Mf,getSparseSegmentReductionNegativeSegmentIdsErrorMessage:()=>Ff,getSparseSegmentReductionNonIncreasingSegmentIdsErrorMessage:()=>Df,getSparseSegmentReductionSegmentIdOutOfRangeErrorMessage:()=>Of,getUndoAxesPermutation:()=>cc,isIdentityPermutation:()=>kf,log:()=>or,mergeRealAndImagArrays:()=>uf,prepareAndValidate:()=>lo,prepareSplitSize:()=>Sf,segment_util:()=>g,shouldFuse:()=>Mp,slice_util:()=>p,splitRealAndImagArrays:()=>cf,tupleValuesAreOne:()=>uu,upcastType:()=>ia,validateInput:()=>co,validateUpdateShape:()=>uo,warn:()=>ir});var b={};n.r(b),n.d(b,{nonMaxSuppressionV3Impl:()=>ed,nonMaxSuppressionV4Impl:()=>td,nonMaxSuppressionV5Impl:()=>nd,whereImpl:()=>wp});var x={};n.r(x),n.d(x,{maxNorm:()=>yb,minMaxNorm:()=>vb,nonNeg:()=>xb,unitNorm:()=>bb});var v={};n.r(v),n.d(v,{constant:()=>Ib,glorotNormal:()=>Ab,glorotUniform:()=>Eb,heNormal:()=>_b,heUniform:()=>Rb,identity:()=>Cb,leCunNormal:()=>Fb,leCunUniform:()=>Db,ones:()=>kb,orthogonal:()=>Ob,randomNormal:()=>Nb,randomUniform:()=>Sb,truncatedNormal:()=>Tb,varianceScaling:()=>$b,zeros:()=>wb});var w={};n.r(w),n.d(w,{Layer:()=>Yy,RNN:()=>qv,RNNCell:()=>Kv,activation:()=>fk,add:()=>Ik,alphaDropout:()=>dI,average:()=>Sk,averagePooling1d:()=>Fk,averagePooling2d:()=>Mk,averagePooling3d:()=>Pk,avgPool1d:()=>Dk,avgPool2d:()=>Lk,avgPool3d:()=>Bk,avgPooling1d:()=>Ok,avgPooling2d:()=>zk,avgPooling3d:()=>Wk,batchNormalization:()=>Ak,bidirectional:()=>aI,concatenate:()=>Nk,conv1d:()=>ak,conv2d:()=>ik,conv2dTranspose:()=>ok,conv3d:()=>lk,conv3dTranspose:()=>uk,convLstm2d:()=>tI,convLstm2dCell:()=>nI,cropping2D:()=>hk,dense:()=>mk,depthwiseConv2d:()=>dk,dot:()=>Ek,dropout:()=>gk,elu:()=>Qw,embedding:()=>kk,flatten:()=>bk,gaussianDropout:()=>pI,gaussianNoise:()=>hI,globalAveragePooling1d:()=>Vk,globalAveragePooling2d:()=>Uk,globalMaxPool1d:()=>oI,globalMaxPool2d:()=>lI,globalMaxPooling1d:()=>Gk,globalMaxPooling2d:()=>Hk,gru:()=>Xk,gruCell:()=>Yk,input:()=>Kx,inputLayer:()=>Jw,layerNormalization:()=>_k,leakyReLU:()=>tk,lstm:()=>Zk,lstmCell:()=>Jk,masking:()=>fI,maxPool1d:()=>uI,maxPool2d:()=>cI,maxPooling1d:()=>jk,maxPooling2d:()=>qk,maxPooling3d:()=>Kk,maximum:()=>Tk,minimum:()=>Ck,multiply:()=>$k,permute:()=>wk,prelu:()=>nk,reLU:()=>ek,repeatVector:()=>xk,reshape:()=>vk,rnn:()=>sI,separableConv2d:()=>ck,simpleRNN:()=>Qk,simpleRNNCell:()=>eI,softmax:()=>sk,spatialDropout1d:()=>yk,stackedRNNCells:()=>rI,thresholdedReLU:()=>rk,timeDistributed:()=>iI,upSampling2d:()=>pk,zeroPadding2d:()=>Rk});var k={};n.r(k),n.d(k,{MAPE:()=>NI,MSE:()=>$I,binaryAccuracy:()=>mI,binaryCrossentropy:()=>gI,categoricalAccuracy:()=>bI,categoricalCrossentropy:()=>xI,cosineProximity:()=>kI,mape:()=>TI,meanAbsoluteError:()=>II,meanAbsolutePercentageError:()=>SI,meanSquaredError:()=>CI,mse:()=>EI,precision:()=>vI,recall:()=>wI,sparseCategoricalAccuracy:()=>yI});var I={};n.r(I),n.d(I,{modelFromJSON:()=>Ux});var S={};n.r(S),n.d(S,{l1:()=>_I,l1l2:()=>AI,l2:()=>RI});var N={};n.r(N),n.d(N,{json:()=>ZI});var T={};n.r(T),n.d(T,{json:()=>JI});var C={};n.r(C),n.d(C,{json:()=>QI});var $={};n.r($),n.d($,{json:()=>eS});var E={};n.r(E),n.d(E,{json:()=>tS});var A={};n.r(A),n.d(A,{json:()=>nS});var _={};n.r(_),n.d(_,{json:()=>sS});var R={};n.r(R),n.d(R,{json:()=>rS});var F={};n.r(F),n.d(F,{json:()=>aS});var D={};n.r(D),n.d(D,{json:()=>iS});var O={};n.r(O),n.d(O,{json:()=>oS});var M={};n.r(M),n.d(M,{json:()=>lS});var L={};n.r(L),n.d(L,{json:()=>uS});var z={};n.r(z),n.d(z,{json:()=>cS});var P={};n.r(P),n.d(P,{json:()=>hS});var B={};n.r(B),n.d(B,{json:()=>pS});var W={};n.r(W),n.d(W,{json:()=>dS});var V={};n.r(V),n.d(V,{json:()=>fS});var U={};n.r(U),n.d(U,{json:()=>mS});var G={};n.r(G),n.d(G,{CSVDataset:()=>UN,Dataset:()=>_N,FileDataSource:()=>tT,TextLineDataset:()=>MN,URLDataSource:()=>nT,array:()=>FN,csv:()=>sT,func:()=>rT,generator:()=>aT,microphone:()=>oT,version_data:()=>lT,webcam:()=>iT,zip:()=>DN});var H={};n.r(H),n.d(H,{addImpl:()=>VT,bincountImpl:()=>DC,bincountReduceImpl:()=>OC,ceilImpl:()=>zC,concatImpl:()=>GC,equalImpl:()=>C$,expImpl:()=>z$,expm1Impl:()=>U$,floorImpl:()=>iE,gatherNdImpl:()=>fE,gatherV2Impl:()=>gE,greaterEqualImpl:()=>wE,greaterImpl:()=>bE,lessEqualImpl:()=>DE,lessImpl:()=>_E,linSpaceImpl:()=>LE,logImpl:()=>PE,maxImpl:()=>eA,maximumImpl:()=>sA,minimumImpl:()=>dA,multiplyImpl:()=>x$,negImpl:()=>SA,notEqualImpl:()=>RA,prodImpl:()=>HA,rangeImpl:()=>qA,rsqrtImpl:()=>a_,scatterImpl:()=>l_,sigmoidImpl:()=>ET,simpleAbsImpl:()=>ZT,sliceImpl:()=>AC,sparseFillEmptyRowsImpl:()=>$_,sparseReshapeImpl:()=>A_,sparseSegmentReductionImpl:()=>R_,sqrtImpl:()=>L_,squaredDifferenceImpl:()=>W_,stridedSliceImpl:()=>j_,stringNGramsImpl:()=>X_,stringSplitImpl:()=>J_,stringToHashBucketFastImpl:()=>eR,subImpl:()=>X$,tileImpl:()=>aR,topKImpl:()=>uR,transposeImpl:()=>rC,uniqueImpl:()=>gR});class j{constructor(e,t){this.backend=e,this.dataMover=t,this.data=new WeakMap,this.dataIdsCount=0}get(e){return this.data.has(e)||this.dataMover.moveData(this.backend,e),this.data.get(e)}set(e,t){this.dataIdsCount++,this.data.set(e,t)}has(e){return this.data.has(e)}delete(e){return this.dataIdsCount--,this.data.delete(e)}numDataIds(){return this.dataIdsCount}}class q{refCount(e){return K("refCount")}incRef(e){return K("incRef")}timerAvailable(){return!0}time(e){return K("time")}read(e){return K("read")}readSync(e){return K("readSync")}readToGPU(e,t){return K("readToGPU")}numDataIds(){return K("numDataIds")}disposeData(e,t){return K("disposeData")}write(e,t,n){return K("write")}move(e,t,n,s,r){return K("move")}memory(){return K("memory")}floatPrecision(){return K("floatPrecision")}epsilon(){return 32===this.floatPrecision()?1e-7:1e-4}dispose(){return K("dispose")}}function K(e){throw new Error(`'${e}' not yet implemented or not found in the registry. This kernel may not be supported by the tfjs backend you have chosen`)}function X(e){let t=e.length,n=0;for(;t>0;)n=Math.random()*t|0,t--,Q(e,t,n)}function Y(e,t){if(e.length!==t.length)throw new Error(`Array sizes must match to be shuffled together First array length was ${e.length}Second array length was ${t.length}`);let n=e.length,s=0;for(;n>0;)s=Math.random()*n|0,n--,Q(e,n,s),Q(t,n,s)}function Z(e,t,n){return Math.max(e,Math.min(t,n))}function J(e){return e%2==0?e:e+1}function Q(e,t,n){const s=e[t];e[t]=e[n],e[n]=s}function ee(e){let t=0;for(let n=0;n<e.length;n++)t+=e[n];return t}function te(e,t){const n=Math.random();return t*n+(1-n)*e}function ne(e,t){let n=0;for(let s=0;s<e.length;s++){const r=Number(e[s])-Number(t[s]);n+=r*r}return n}function se(e,t){if(!e)throw new Error("string"==typeof t?t:t())}function re(e,t,n=""){se(ue(e,t),(()=>n+` Shapes ${e} and ${t} must match`))}function ae(e){se(null!=e,(()=>"The input to the tensor constructor must be a non-null value."))}function ie(e,t=[],n=!1){if(null==t&&(t=[]),Array.isArray(e)||Se(e)&&!n)for(let s=0;s<e.length;++s)ie(e[s],t,n);else t.push(e);return t}function oe(e){if(0===e.length)return 1;let t=e[0];for(let n=1;n<e.length;n++)t*=e[n];return t}function le(e){return 0===e.length}function ue(e,t){if(e===t)return!0;if(null==e||null==t)return!1;if(e.length!==t.length)return!1;for(let n=0;n<e.length;n++)if(e[n]!==t[n])return!1;return!0}function ce(e){return e%1==0}function he(e){if(null!=Math.tanh)return Math.tanh(e);if(e===1/0)return 1;if(e===-1/0)return-1;{const t=Math.exp(2*e);return(t-1)/(t+1)}}function pe(e){const t=Math.ceil(Math.sqrt(e));return[t,Math.ceil(e/t)]}function de(e){const t=new Uint32Array(e);for(let n=0;n<e;++n)t[n]=n;return X(t),t}function fe(e,t){return t<=e.length?e:e+" ".repeat(t-e.length)}function me(e,t=(e=>0),n){return new Promise(((s,r)=>{let a=0;const i=()=>{if(e())return void s();a++;const o=t(a);null!=n&&a>=n?r():setTimeout(i,o)};i()}))}function ge(e,t){let n=1,s=-1;for(let t=0;t<e.length;++t)if(e[t]>=0)n*=e[t];else if(-1===e[t]){if(-1!==s)throw Error(`Shapes can only have 1 implicit size. Found -1 at dim ${s} and dim ${t}`);s=t}else if(e[t]<0)throw Error(`Shapes can not be < 0. Found ${e[t]} at dim ${t}`);if(-1===s){if(t>0&&t!==n)throw Error(`Size(${t}) must match the product of shape ${e}`);return e}if(0===n)throw Error(`Cannot infer the missing size in [${e}] when there are 0 elements`);if(t%n!=0)throw Error(`The implicit shape can't be a fractional number. Got ${t} / ${n}`);const r=e.slice();return r[s]=t/n,r}function ye(e,t){const n=t.length;return se((e=null==e?t.map(((e,t)=>t)):[].concat(e)).every((e=>e>=-n&&e<n)),(()=>`All values in axis param must be in range [-${n}, ${n}) but got axis ${e}`)),se(e.every((e=>ce(e))),(()=>`All values in axis param must be integers but got axis ${e}`)),e.map((e=>e<0?n+e:e))}function be(e,t){const n=[],s=[],r=null!=t&&Array.isArray(t)&&0===t.length,a=null==t||r?null:ye(t,e).sort();let i=0;for(let t=0;t<e.length;++t){if(null!=a){if(a[i]===t&&1!==e[t])throw new Error(`Can't squeeze axis ${t} since its dim '${e[t]}' is not 1`);(null==a[i]||a[i]>t)&&1===e[t]&&(n.push(e[t]),s.push(t)),a[i]<=t&&i++}1!==e[t]&&(n.push(e[t]),s.push(t))}return{newShape:n,keptDims:s}}function xe(e,t){let n=null;if(null==e||"float32"===e)n=new Float32Array(t);else if("int32"===e)n=new Int32Array(t);else{if("bool"!==e)throw new Error(`Unknown data type ${e}`);n=new Uint8Array(t)}return n}function ve(e,t){let n=null;if(null==e||"float32"===e)n=new Float32Array(t);else if("int32"===e)n=new Int32Array(t);else if("bool"===e)n=new Uint8Array(t);else{if("string"!==e)throw new Error(`Unknown data type ${e}`);n=new Array(t)}return n}function we(e,t){for(let n=0;n<e.length;n++){const s=e[n];if(isNaN(s)||!isFinite(s))throw Error(`A tensor of type ${t} being uploaded contains ${s}.`)}}function ke(e){return"bool"===e||"complex64"===e||"float32"===e||"int32"===e||"string"===e}function Ie(e,t){return!("complex64"===t||"float32"===t&&"complex64"!==e||"int32"===t&&"float32"!==e&&"complex64"!==e||"bool"===t&&"bool"===e)}function Se(e){return e instanceof Float32Array||e instanceof Int32Array||e instanceof Uint8Array||e instanceof Uint8ClampedArray}function Ne(e){if("float32"===e||"int32"===e)return 4;if("complex64"===e)return 8;if("bool"===e)return 1;throw new Error(`Unknown dtype ${e}`)}function Te(e){if(null==e)return 0;let t=0;return e.forEach((e=>t+=e.length)),t}function Ce(e){return"string"==typeof e||e instanceof String}function $e(e){return"boolean"==typeof e}function Ee(e){return"number"==typeof e}function Ae(e){return Array.isArray(e)?Ae(e[0]):e instanceof Float32Array?"float32":e instanceof Int32Array||e instanceof Uint8Array||e instanceof Uint8ClampedArray?"int32":Ee(e)?"float32":Ce(e)?"string":$e(e)?"bool":"float32"}function _e(e){return!!(e&&e.constructor&&e.call&&e.apply)}function Re(e,t){for(let n=t;n<e;++n)if(e%n==0)return n;return e}function Fe(e){const t=e.length;if(t<2)return[];const n=new Array(t-1);n[t-2]=e[t-1];for(let s=t-3;s>=0;--s)n[s]=n[s+1]*e[s+1];return n}function De(e,t,n,s=!1){const r=new Array;if(1===t.length){const a=t[0]*(s?2:1);for(let t=0;t<a;t++)r[t]=n[e+t]}else{const a=t[0],i=t.slice(1),o=i.reduce(((e,t)=>e*t))*(s?2:1);for(let t=0;t<a;t++)r[t]=De(e+t*o,i,n,s)}return r}function Oe(e,t,n=!1){if(0===e.length)return t[0];const s=e.reduce(((e,t)=>e*t))*(n?2:1);if(0===s)return[];if(s!==t.length)throw new Error(`[${e}] does not match the input size ${t.length}${n?" for a complex tensor":""}.`);return De(0,e,t,n)}function Me(e,t){const n=Le(e,t);for(let e=0;e<n.length;e++)n[e]=1;return n}function Le(e,t){if(null==t||"float32"===t||"complex64"===t)return new Float32Array(e);if("int32"===t)return new Int32Array(e);if("bool"===t)return new Uint8Array(e);throw new Error(`Unknown data type ${t}`)}function ze(e,t){const n=e.reduce(((e,t)=>e*t),1);if(null==t||"float32"===t)return Oe(e,new Float32Array(n));if("int32"===t)return Oe(e,new Int32Array(n));if("bool"===t)return Oe(e,new Uint8Array(n));throw new Error(`Unknown data type ${t}`)}function Pe(e){e.forEach((t=>{se(Number.isInteger(t)&&t>=0,(()=>`Tensor must have a shape comprised of positive integers but got shape [${e}].`))}))}function Be(e,t,n){if(0===t)return 0;if(1===t)return e[0];let s=e[e.length-1];for(let t=0;t<e.length-1;++t)s+=n[t]*e[t];return s}function We(e,t,n){if(0===t)return[];if(1===t)return[e];const s=new Array(t);for(let t=0;t<s.length-1;++t)s[t]=Math.floor(e/n[t]),e-=s[t]*n[t];return s[s.length-1]=e,s}function Ve(e){return e&&e.then&&"function"==typeof e.then}class Ue{constructor(e){this.global=e,this.flags={},this.flagRegistry={},this.urlFlags={},this.getQueryParams=Ge,this.populateURLFlags()}setPlatform(e,t){null!=this.platform&&(He().getBool("IS_TEST")||He().getBool("PROD")||console.warn(`Platform ${this.platformName} has already been set. Overwriting the platform with ${e}.`)),this.platformName=e,this.platform=t}registerFlag(e,t,n){if(this.flagRegistry[e]={evaluationFn:t,setHook:n},null!=this.urlFlags[e]){const t=this.urlFlags[e];He().getBool("IS_TEST")||He().getBool("PROD")||console.warn(`Setting feature override from URL ${e}: ${t}.`),this.set(e,t)}}async getAsync(e){return e in this.flags||(this.flags[e]=await this.evaluateFlag(e)),this.flags[e]}get(e){if(e in this.flags)return this.flags[e];const t=this.evaluateFlag(e);if(Ve(t))throw new Error(`Flag ${e} cannot be synchronously evaluated. Please use getAsync() instead.`);return this.flags[e]=t,this.flags[e]}getNumber(e){return this.get(e)}getBool(e){return this.get(e)}getFlags(){return this.flags}get features(){return this.flags}set(e,t){if(null==this.flagRegistry[e])throw new Error(`Cannot set flag ${e} as it has not been registered.`);this.flags[e]=t,null!=this.flagRegistry[e].setHook&&this.flagRegistry[e].setHook(t)}evaluateFlag(e){if(null==this.flagRegistry[e])throw new Error(`Cannot evaluate flag '${e}': no evaluation function found.`);return this.flagRegistry[e].evaluationFn()}setFlags(e){this.flags=Object.assign({},e)}reset(){this.flags={},this.urlFlags={},this.populateURLFlags()}populateURLFlags(){if(void 0===this.global||void 0===this.global.location||void 0===this.global.location.search)return;const e=this.getQueryParams(this.global.location.search);"tfjsflags"in e&&e.tfjsflags.split(",").forEach((e=>{const[t,n]=e.split(":");this.urlFlags[t]=function(e,t){if("true"===(t=t.toLowerCase())||"false"===t)return"true"===t;if(""+ +t===t)return+t;throw new Error(`Could not parse value flag value ${t} for flag ${e}.`)}(t,n)}))}}function Ge(e){const t={};return e.replace(/[?&]([^=?&]+)(?:=([^&]*))?/g,((e,...n)=>(function(e,t,n){e[decodeURIComponent(t)]=decodeURIComponent(n||"")}(t,n[0],n[1]),n.join("=")))),t}function He(){return qe}let je,qe=null;function Ke(){if(null==je){let e;if("undefined"!=typeof window)e=window;else if(void 0!==n.g)e=n.g;else if("undefined"!=typeof process)e=process;else{if("undefined"==typeof self)throw new Error("Could not find a global object");e=self}je=e}return je}function Xe(e,t){const n=function(){const e=Ke();return null==e._tfGlobals&&(e._tfGlobals=new Map),e._tfGlobals}();if(n.has(e))return n.get(e);{const s=t();return n.set(e,s),n.get(e)}}const Ye="Abs",Ze="Acos",Je="Acosh",Qe="Add",et="AddN",tt="All",nt="Any",st="ArgMax",rt="ArgMin",at="Asin",it="Asinh",ot="Atan",lt="Atanh",ut="Atan2",ct="AvgPool",ht="AvgPoolGrad",pt="AvgPool3D",dt="AvgPool3DGrad",ft="BatchMatMul",mt="BatchToSpaceND",gt="Bincount",yt="BroadcastTo",bt="BroadcastArgs",xt="Cast",vt="Ceil",wt="ClipByValue",kt="Complex",It="ComplexAbs",St="Concat",Nt="Conv2D",Tt="Conv2DBackpropFilter",Ct="Conv2DBackpropInput",$t="Conv3D",Et="Conv3DBackpropFilterV2",At="Conv3DBackpropInputV2",_t="Cos",Rt="Cosh",Ft="Cumprod",Dt="Cumsum",Ot="CropAndResize",Mt="DenseBincount",Lt="DepthToSpace",zt="DepthwiseConv2dNative",Pt="DepthwiseConv2dNativeBackpropFilter",Bt="DepthwiseConv2dNativeBackpropInput",Wt="Diag",Vt="Dilation2D",Ut="Dilation2DBackpropInput",Gt="Dilation2DBackpropFilter",Ht="RealDiv",jt="Einsum",qt="Elu",Kt="EluGrad",Xt="Erf",Yt="Equal",Zt="Exp",Jt="ExpandDims",Qt="Expm1",en="FFT",tn="Fill",nn="FlipLeftRight",sn="Floor",rn="FloorDiv",an="FusedBatchNorm",on="GatherV2",ln="GatherNd",un="Greater",cn="GreaterEqual",hn="Identity",pn="IFFT",dn="Imag",fn="IsFinite",mn="IsInf",gn="IsNan",yn="LeakyRelu",bn="Less",xn="LessEqual",vn="LinSpace",wn="Log",kn="Log1p",In="LogicalAnd",Sn="LogicalNot",Nn="LogicalOr",Tn="LogSoftmax",Cn="LowerBound",$n="LRN",En="LRNGrad",An="Max",_n="Maximum",Rn="MaxPool",Fn="MaxPoolGrad",Dn="MaxPool3D",On="MaxPool3DGrad",Mn="MaxPoolWithArgmax",Ln="Mean",zn="Min",Pn="Minimum",Bn="MirrorPad",Wn="Mod",Vn="Multinomial",Un="Multiply",Gn="Neg",Hn="NotEqual",jn="NonMaxSuppressionV3",qn="NonMaxSuppressionV4",Kn="NonMaxSuppressionV5",Xn="OnesLike",Yn="OneHot",Zn="Pack",Jn="PadV2",Qn="Pool",es="Pow",ts="Prelu",ns="Prod",ss="Range",rs="Real",as="Reciprocal",is="Relu",os="Reshape",ls="ResizeNearestNeighbor",us="ResizeNearestNeighborGrad",cs="ResizeBilinear",hs="ResizeBilinearGrad",ps="Relu6",ds="Reverse",fs="Round",ms="Rsqrt",gs="ScatterNd",ys="SearchSorted",bs="Select",xs="Selu",vs="Slice",ws="Sin",ks="Sinh",Is="Sign",Ss="Sigmoid",Ns="Softplus",Ts="Sqrt",Cs="Sum",$s="SpaceToBatchND",Es="SplitV",As="Softmax",_s="SparseFillEmptyRows",Rs="SparseReshape",Fs="SparseSegmentMean",Ds="SparseSegmentSum",Os="SparseToDense",Ms="SquaredDifference",Ls="Square",zs="StridedSlice",Ps="StringNGrams",Bs="StringSplit",Ws="StringToHashBucketFast",Vs="Sub",Us="Tan",Gs="Tanh",Hs="Tile",js="TopK",qs="Transform",Ks="Transpose",Xs="Unique",Ys="Unpack",Zs="UnsortedSegmentSum",Js="UpperBound",Qs="ZerosLike",er="Step",tr="FromPixels",nr="RotateWithOffset",sr="_FusedMatMul",rr="FusedConv2D",ar="FusedDepthwiseConv2D";function ir(...e){He().getBool("IS_TEST")||He().getBool("PROD")||console.warn(...e)}function or(...e){He().getBool("IS_TEST")||He().getBool("PROD")||console.log(...e)}const lr=Xe("kernelRegistry",(()=>new Map)),ur=Xe("gradRegistry",(()=>new Map));function cr(e,t){const n=br(e,t);return lr.get(n)}function hr(e){return ur.get(e)}function pr(e){const t=lr.entries(),n=[];for(;;){const{done:s,value:r}=t.next();if(s)break;const[a,i]=r,[o]=a.split("_");o===e&&n.push(i)}return n}function dr(e){const{kernelName:t,backendName:n}=e,s=br(t,n);lr.has(s)&&ir(`The kernel '${t}' for backend '${n}' is already registered`),lr.set(s,e)}function fr(e){const{kernelName:t}=e;ur.has(t)&&He().getBool("DEBUG")&&ir(`Overriding the gradient for '${t}'`),ur.set(t,e)}function mr(e,t){const n=br(e,t);if(!lr.has(n))throw new Error(`The kernel '${e}' for backend '${t}' is not registered`);lr.delete(n)}function gr(e){if(!ur.has(e))throw new Error(`The gradient '${e}' for backend is not registered`);ur.delete(e)}function yr(e,t){pr(e).forEach((e=>{dr(Object.assign({},e,{backendName:t}))}))}function br(e,t){return`${t}_${e}`}var xr=n(720);const vr=n.n(xr)()||xr;function wr(e){return vr.fromString(e,!0,16)}const kr=wr("c3a5c85c97cb3127"),Ir=wr("b492b66fbe98f273"),Sr=wr("9ae16a3b2f90404f");function Nr(e){return e.xor(e.shru(47))}function Tr(e,t,n){const s=e.slice(t,t+n);return vr.fromBytes(Array.from(s),!0,!0)}function Cr(e,t){return Tr(e,t,8)}function $r(e,t){return Tr(e,t,4)}function Er(e,t){return 0===t?e:e.shru(t).or(e.shl(64-t))}function Ar(e,t,n=wr("9ddfea08eb382d69")){let s=e.xor(t).mul(n);s=s.xor(s.shru(47));let r=t.xor(s).mul(n);return r=r.xor(r.shru(47)),r=r.mul(n),r}function _r(e,t,n,s){return function(e,t,n,s,r,a){r=r.add(e),a=Er(a.add(r).add(s),21);const i=r;return r=(r=r.add(t)).add(n),a=a.add(Er(r,44)),[r.add(s),a.add(i)]}(Cr(e,t),Cr(e,t+8),Cr(e,t+16),Cr(e,t+24),n,s)}function Rr(e,t=e.length){const n=vr.fromNumber(81,!0);if(t<=32)return t<=16?function(e,t=e.length){if(t>=8){const n=Sr.add(2*t),s=Cr(e,0).add(Sr),r=Cr(e,t-8);return Ar(Er(r,37).mul(n).add(s),Er(s,25).add(r).mul(n),n)}if(t>=4){const n=Sr.add(2*t);return Ar($r(e,0).shl(3).add(t),$r(e,t-4),n)}if(t>0){const n=e[0]+(e[t>>1]<<8),s=t+(e[t-1]<<2);return Nr(Sr.mul(n).xor(kr.mul(s))).mul(Sr)}return Sr}(e,t):function(e,t=e.length){const n=Sr.add(2*t),s=Cr(e,0).mul(Ir),r=Cr(e,8),a=Cr(e,t-8).mul(n),i=Cr(e,t-16).mul(Sr);return Ar(Er(s.add(r),43).add(Er(a,30)).add(i),s.add(Er(r.add(Sr),18)).add(a),n)}(e,t);if(t<=64)return function(e,t=e.length){const n=Sr.add(2*t),s=Cr(e,0).mul(Sr),r=Cr(e,8),a=Cr(e,t-8).mul(n),i=Cr(e,t-16).mul(Sr),o=Er(s.add(r),43).add(Er(a,30)).add(i),l=Ar(o,s.add(Er(r.add(Sr),18)).add(a),n),u=Cr(e,16).mul(n),c=Cr(e,24),h=o.add(Cr(e,t-32)).mul(n),p=l.add(Cr(e,t-24)).mul(n);return Ar(Er(u.add(c),43).add(Er(h,30)).add(p),u.add(Er(c.add(s),18)).add(h),n)}(e,t);let s=n,r=n.mul(Ir).add(113),a=Nr(r.mul(Sr).add(113)).mul(Sr),i=[vr.UZERO,vr.UZERO],o=[vr.UZERO,vr.UZERO];s=s.mul(Sr).add(Cr(e,0));let l=0;const u=64*(t-1>>6),c=u+(t-1&63)-63;do{s=Er(s.add(r).add(i[0]).add(Cr(e,l+8)),37).mul(Ir),r=Er(r.add(i[1]).add(Cr(e,l+48)),42).mul(Ir),s=s.xor(o[1]),r=r.add(i[0]).add(Cr(e,l+40)),a=Er(a.add(o[0]),33).mul(Ir),i=_r(e,l,i[1].mul(Ir),s.add(o[0])),o=_r(e,l+32,a.add(o[1]),r.add(Cr(e,l+16))),[a,s]=[s,a],l+=64}while(l!==u);const h=Ir.add(a.and(255).shl(1));return l=c,o[0]=o[0].add(t-1&63),i[0]=i[0].add(o[0]),o[0]=o[0].add(i[0]),s=Er(s.add(r).add(i[0]).add(Cr(e,l+8)),37).mul(h),r=Er(r.add(i[1]).add(Cr(e,l+48)),42).mul(h),s=s.xor(o[1].mul(9)),r=r.add(i[0].mul(9).add(Cr(e,l+40))),a=Er(a.add(o[0]),33).mul(h),i=_r(e,l,i[1].mul(h),s.add(o[0])),o=_r(e,l+32,a.add(o[1]),r.add(Cr(e,l+16))),[a,s]=[s,a],Ar(Ar(i[0],o[0],h).add(Nr(r).mul(kr)).add(a),Ar(i[1],o[1],h).add(s),h)}function Fr(e,t){return"string"===t?Lr(e):Dr([e],t)}function Dr(e,t){if("string"===t)throw new Error("Cannot convert a string[] to a TypedArray");if(Array.isArray(e)&&(e=ie(e)),He().getBool("DEBUG")&&we(e,t),function(e,t){return e instanceof Float32Array&&"float32"===t||e instanceof Int32Array&&"int32"===t||e instanceof Uint8Array&&"bool"===t}(e,t))return e;if(null==t||"float32"===t||"complex64"===t)return new Float32Array(e);if("int32"===t)return new Int32Array(e);if("bool"===t){const t=new Uint8Array(e.length);for(let n=0;n<t.length;++n)0!==Math.round(e[n])&&(t[n]=1);return t}throw new Error(`Unknown data type ${t}`)}function Or(){return He().platform.now()}function Mr(e,t){return He().platform.fetch(e,t)}function Lr(e,t="utf-8"){return t=t||"utf-8",He().platform.encode(e,t)}function zr(e,t="utf-8"){return t=t||"utf-8",He().platform.decode(e,t)}class Pr{constructor(e,t){this.backendTimer=e,this.logger=t,null==t&&(this.logger=new Wr)}profileKernel(e,t,n){let s;const r=()=>{s=n()};let a;const i=Or();if(this.backendTimer.timerAvailable())a=this.backendTimer.time(r);else{r();for(const e of s)e.dataSync();a=Promise.resolve({kernelMs:Or()-i})}if(He().getBool("CHECK_COMPUTATION_FOR_ERRORS"))for(let t=0;t<s.length;t++){const n=s[t];n.data().then((t=>{Br(t,n.dtype,e)}))}return{kernelName:e,outputs:s,inputs:t,timeMs:a.then((e=>e.kernelMs)),extraInfo:a.then((e=>null!=e.getExtraProfileInfo?e.getExtraProfileInfo():""))}}logKernelProfile(e){const{kernelName:t,outputs:n,timeMs:s,inputs:r,extraInfo:a}=e;n.forEach((e=>{Promise.all([e.data(),s,a]).then((n=>{this.logger.logKernelProfile(t,e,n[0],n[1],r,n[2])}))}))}}function Br(e,t,n){if("float32"!==t)return!1;for(let t=0;t<e.length;t++){const s=e[t];if(isNaN(s)||!isFinite(s))return console.warn(`Found ${s} in the result of '${n}'`),!0}return!1}class Wr{logKernelProfile(e,t,n,s,r,a){const i="number"==typeof s?fe(`${s}ms`,9):s.error,o=fe(e,25),l=t.rank,u=t.size,c=fe(t.shape.toString(),14);let h="";for(const e in r){const n=r[e];if(null!=n){const s=n.shape||t.shape,r=s.length;h+=`${e}: ${r}D ${r>0?s:""} `}}console.log(`%c${o}\t%c${i}\t%c${l}D ${c}\t%c${u}\t%c${h}\t%c${a}`,"font-weight:bold","color:red","color:blue","color: orange","color: green","color: steelblue")}}function Vr(e,t,n,s){const r=Fe(t),a=function(e,t,n,s){const r=oe(t),a=s[s.length-1],i=new Array(a).fill(0),o=t.length,l="complex64"===n?jr(e):e;if(o>1)for(let e=0;e<r/a;e++){const t=e*a;for(let e=0;e<a;e++)i[e]=Math.max(i[e],Ur(l[t+e],0,n).length)}return i}(e,t,n,r),i=t.length,o=Hr(e,t,n,r,a),l=["Tensor"];return s&&(l.push(`  dtype: ${n}`),l.push(`  rank: ${i}`),l.push(`  shape: [${t}]`),l.push("  values:")),l.push(o.map((e=>"    "+e)).join("\n")),l.join("\n")}function Ur(e,t,n){let s;return s=Array.isArray(e)?`${parseFloat(e[0].toFixed(7))} + ${parseFloat(e[1].toFixed(7))}j`:Ce(e)?`'${e}'`:"bool"===n?Gr(e):parseFloat(e.toFixed(7)).toString(),fe(s,t)}function Gr(e){return 0===e?"false":"true"}function Hr(e,t,n,s,r,a=!0){const i="complex64"===n?2:1,o=t[0],l=t.length;if(0===l)return"complex64"===n?[Ur(jr(e)[0],0,n)]:"bool"===n?[Gr(e[0])]:[e[0].toString()];if(1===l){if(o>20){const t=3*i;let s=Array.from(e.slice(0,t)),a=Array.from(e.slice((o-3)*i,o*i));return"complex64"===n&&(s=jr(s),a=jr(a)),["["+s.map(((e,t)=>Ur(e,r[t],n))).join(", ")+", ..., "+a.map(((e,t)=>Ur(e,r[o-3+t],n))).join(", ")+"]"]}return["["+("complex64"===n?jr(e):Array.from(e)).map(((e,t)=>Ur(e,r[t],n))).join(", ")+"]"]}const u=t.slice(1),c=s.slice(1),h=s[0]*i,p=[];if(o>20){for(let t=0;t<3;t++){const s=t*h,a=s+h;p.push(...Hr(e.slice(s,a),u,n,c,r,!1))}p.push("...");for(let t=o-3;t<o;t++){const s=t*h,a=s+h;p.push(...Hr(e.slice(s,a),u,n,c,r,t===o-1))}}else for(let t=0;t<o;t++){const s=t*h,a=s+h;p.push(...Hr(e.slice(s,a),u,n,c,r,t===o-1))}const d=2===l?",":"";p[0]="["+p[0]+d;for(let e=1;e<p.length-1;e++)p[e]=" "+p[e]+d;let f=",\n";for(let e=2;e<l;e++)f+="\n";return p[p.length-1]=" "+p[p.length-1]+"]"+(a?"":f),p}function jr(e){const t=[];for(let n=0;n<e.length;n+=2)t.push([e[n],e[n+1]]);return t}class qr{constructor(e,t,n){if(this.dtype=t,this.shape=e.slice(),this.size=oe(e),null!=n){const e=n.length;se(e===this.size,(()=>`Length of values '${e}' does not match the size inferred by the shape '${this.size}'.`))}if("complex64"===t)throw new Error("complex64 dtype TensorBuffers are not supported. Please create a TensorBuffer for the real and imaginary parts separately and call tf.complex(real, imag).");this.values=n||ve(t,this.size),this.strides=Fe(e)}set(e,...t){0===t.length&&(t=[0]),se(t.length===this.rank,(()=>`The number of provided coordinates (${t.length}) must match the rank (${this.rank})`));const n=this.locToIndex(t);this.values[n]=e}get(...e){0===e.length&&(e=[0]);let t=0;for(const n of e){if(n<0||n>=this.shape[t]){const t=`Requested out of range element at ${e}.   Buffer shape=${this.shape}`;throw new Error(t)}t++}let n=e[e.length-1];for(let t=0;t<e.length-1;++t)n+=this.strides[t]*e[t];return this.values[n]}locToIndex(e){if(0===this.rank)return 0;if(1===this.rank)return e[0];let t=e[e.length-1];for(let n=0;n<e.length-1;++n)t+=this.strides[n]*e[n];return t}indexToLoc(e){if(0===this.rank)return[];if(1===this.rank)return[e];const t=new Array(this.shape.length);for(let n=0;n<t.length-1;++n)t[n]=Math.floor(e/this.strides[n]),e-=t[n]*this.strides[n];return t[t.length-1]=e,t}get rank(){return this.shape.length}toTensor(){return Kr().makeTensor(this.values,this.shape,this.dtype)}}let Kr=null,Xr=null,Yr=null;class Zr{constructor(e,t,n,s){this.kept=!1,this.isDisposedInternal=!1,this.shape=e.slice(),this.dtype=t||"float32",this.size=oe(e),this.strides=Fe(e),this.dataId=n,this.id=s,this.rankType=this.rank<5?this.rank.toString():"higher"}get rank(){return this.shape.length}async buffer(){const e=await this.data();return Xr.buffer(this.shape,this.dtype,e)}bufferSync(){return Xr.buffer(this.shape,this.dtype,this.dataSync())}async array(){const e=await this.data();return Oe(this.shape,e,"complex64"===this.dtype)}arraySync(){return Oe(this.shape,this.dataSync(),"complex64"===this.dtype)}async data(){this.throwIfDisposed();const e=Kr().read(this.dataId);if("string"===this.dtype){const t=await e;try{return t.map((e=>zr(e)))}catch(e){throw new Error("Failed to decode the string bytes into utf-8. To get the original bytes, call tensor.bytes().")}}return e}dataToGPU(e){return this.throwIfDisposed(),Kr().readToGPU(this.dataId,e)}dataSync(){this.throwIfDisposed();const e=Kr().readSync(this.dataId);if("string"===this.dtype)try{return e.map((e=>zr(e)))}catch(e){throw new Error("Failed to decode the string bytes into utf-8. To get the original bytes, call tensor.bytes().")}return e}async bytes(){this.throwIfDisposed();const e=await Kr().read(this.dataId);return"string"===this.dtype?e:new Uint8Array(e.buffer)}dispose(){this.isDisposed||(Kr().disposeTensor(this),this.isDisposedInternal=!0)}get isDisposed(){return this.isDisposedInternal}throwIfDisposed(){if(this.isDisposed)throw new Error("Tensor is disposed.")}print(e=!1){return Xr.print(this,e)}clone(){return this.throwIfDisposed(),Xr.clone(this)}toString(e=!1){return Vr(this.dataSync(),this.shape,this.dtype,e)}cast(e){return this.throwIfDisposed(),Xr.cast(this,e)}variable(e=!0,t,n){return this.throwIfDisposed(),Kr().makeVariable(this,e,t,n)}}function Jr(){return Xe("Tensor",(()=>Zr))}Object.defineProperty(Zr,Symbol.hasInstance,{value:e=>!!e&&null!=e.data&&null!=e.dataSync&&null!=e.throwIfDisposed}),Jr();class Qr extends Zr{constructor(e,t,n,s){super(e.shape,e.dtype,e.dataId,s),this.trainable=t,this.name=n}assign(e){if(e.dtype!==this.dtype)throw new Error(`dtype of the new value (${e.dtype}) and previous value (${this.dtype}) must match`);if(!ue(e.shape,this.shape))throw new Error(`shape of the new value (${e.shape}) and previous value (${this.shape}) must match`);Kr().disposeTensor(this),this.dataId=e.dataId,Kr().incRef(this,null)}dispose(){Kr().disposeVariable(this),this.isDisposedInternal=!0}}var ea,ta,na,sa,ra;Object.defineProperty(Qr,Symbol.hasInstance,{value:e=>e instanceof Zr&&null!=e.assign&&e.assign instanceof Function}),function(e){e.R0="R0",e.R1="R1",e.R2="R2",e.R3="R3",e.R4="R4",e.R5="R5",e.R6="R6"}(ea||(ea={})),function(e){e.float32="float32",e.int32="int32",e.bool="int32",e.complex64="complex64"}(ta||(ta={})),function(e){e.float32="float32",e.int32="int32",e.bool="bool",e.complex64="complex64"}(na||(na={})),function(e){e.float32="float32",e.int32="float32",e.bool="float32",e.complex64="complex64"}(sa||(sa={})),function(e){e.float32="complex64",e.int32="complex64",e.bool="complex64",e.complex64="complex64"}(ra||(ra={}));const aa={float32:sa,int32:ta,bool:na,complex64:ra};function ia(e,t){if("string"===e||"string"===t){if("string"===e&&"string"===t)return"string";throw new Error(`Can not upcast ${e} with ${t}`)}return aa[e][t]}function oa(e){return ia(e,"int32")}function la(e,t){if(e.dtype===t.dtype)return[e,t];const n=ia(e.dtype,t.dtype);return[e.cast(n),t.cast(n)]}function ua(e,t){se(e.dtype===t.dtype,(()=>`The dtypes of the first(${e.dtype}) and second(${t.dtype}) input must match`))}function ca(e,t){return t.some((t=>t.id===e.id))}function ha(e){const t=[];return pa(e,t,new Set),t}function pa(e,t,n){if(null==e)return;if(e instanceof Zr)return void t.push(e);if(s=e,!Array.isArray(s)&&"object"!=typeof s)return;var s;const r=e;for(const e in r){const s=r[e];n.has(s)||(n.add(s),pa(s,t,n))}}function da(e){return null!=e.kernelName}class fa{constructor(){this.registeredVariables={},this.nextTapeNodeId=0,this.numBytes=0,this.numTensors=0,this.numStringTensors=0,this.numDataBuffers=0,this.gradientDepth=0,this.kernelDepth=0,this.scopeStack=[],this.numDataMovesStack=[],this.nextScopeId=0,this.tensorInfo=new WeakMap,this.profiling=!1,this.activeProfile={newBytes:0,newTensors:0,peakBytes:0,kernels:[],result:null,get kernelNames(){return Array.from(new Set(this.kernels.map((e=>e.name))))}}}dispose(){for(const e in this.registeredVariables)this.registeredVariables[e].dispose()}}class ma{constructor(e){this.ENV=e,this.registry={},this.registryFactory={},this.pendingBackendInitId=0,this.state=new fa}async ready(){if(null!=this.pendingBackendInit)return this.pendingBackendInit.then((()=>{}));if(null!=this.backendInstance)return;const e=this.getSortedBackends();for(let t=0;t<e.length;t++){const n=e[t];if(await this.initializeBackend(n).success)return void await this.setBackend(n)}throw new Error("Could not initialize any backends, all backend initializations failed.")}get backend(){if(null!=this.pendingBackendInit)throw new Error(`Backend '${this.backendName}' has not yet been initialized. Make sure to await tf.ready() or await tf.setBackend() before calling other methods`);if(null==this.backendInstance){const{name:e,asyncInit:t}=this.initializeBackendsAndReturnBest();if(t)throw new Error(`The highest priority backend '${e}' has not yet been initialized. Make sure to await tf.ready() or await tf.setBackend() before calling other methods`);this.setBackend(e)}return this.backendInstance}backendNames(){return Object.keys(this.registryFactory)}findBackend(e){if(!(e in this.registry)){if(!(e in this.registryFactory))return null;{const{asyncInit:t}=this.initializeBackend(e);if(t)return null}}return this.registry[e]}findBackendFactory(e){return e in this.registryFactory?this.registryFactory[e].factory:null}registerBackend(e,t,n=1){return e in this.registryFactory?(ir(`${e} backend was already registered. Reusing existing backend factory.`),!1):(this.registryFactory[e]={factory:t,priority:n},!0)}async setBackend(e){if(null==this.registryFactory[e])throw new Error(`Backend name '${e}' not found in registry`);if(this.backendName=e,null==this.registry[e]){this.backendInstance=null;const{success:t,asyncInit:n}=this.initializeBackend(e);if(!(n?await t:t))return!1}return this.backendInstance=this.registry[e],this.setupRegisteredKernels(),this.profiler=new Pr(this.backendInstance),!0}setupRegisteredKernels(){pr(this.backendName).forEach((e=>{null!=e.setupFunc&&e.setupFunc(this.backendInstance)}))}disposeRegisteredKernels(e){pr(e).forEach((t=>{null!=t.disposeFunc&&t.disposeFunc(this.registry[e])}))}initializeBackend(e){const t=this.registryFactory[e];if(null==t)throw new Error(`Cannot initialize backend ${e}, no registration found.`);try{const n=t.factory();if(!n||n instanceof q||"function"!=typeof n.then)return this.registry[e]=n,{success:!0,asyncInit:!1};{const t=++this.pendingBackendInitId,s=n.then((n=>!(t<this.pendingBackendInitId||(this.registry[e]=n,this.pendingBackendInit=null,0)))).catch((n=>(t<this.pendingBackendInitId||(this.pendingBackendInit=null,ir(`Initialization of backend ${e} failed`),ir(n.stack||n.message)),!1)));return this.pendingBackendInit=s,{success:s,asyncInit:!0}}}catch(t){return ir(`Initialization of backend ${e} failed`),ir(t.stack||t.message),{success:!1,asyncInit:!1}}}removeBackend(e){if(!(e in this.registryFactory))throw new Error(`${e} backend not found in registry`);this.backendName===e&&null!=this.pendingBackendInit&&this.pendingBackendInitId++,e in this.registry&&(this.disposeRegisteredKernels(e),this.registry[e].dispose(),delete this.registry[e]),delete this.registryFactory[e],this.backendName===e&&(this.pendingBackendInit=null,this.backendName=null,this.backendInstance=null)}getSortedBackends(){if(0===Object.keys(this.registryFactory).length)throw new Error("No backend found in registry.");return Object.keys(this.registryFactory).sort(((e,t)=>this.registryFactory[t].priority-this.registryFactory[e].priority))}initializeBackendsAndReturnBest(){const e=this.getSortedBackends();for(let t=0;t<e.length;t++){const n=e[t],{success:s,asyncInit:r}=this.initializeBackend(n);if(r||s)return{name:n,asyncInit:r}}throw new Error("Could not initialize any backends, all backend initializations failed.")}moveData(e,t){const n=this.state.tensorInfo.get(t),s=n.backend,r=this.readSync(t),a=s.refCount(t);s.disposeData(t,!0),n.backend=e,e.move(t,r,n.shape,n.dtype,a),this.shouldCheckForMemLeaks()&&this.state.numDataMovesStack[this.state.numDataMovesStack.length-1]++}tidy(e,t){let n,s=null;if(null==t){if("function"!=typeof e)throw new Error("Please provide a function to tidy()");t=e}else{if("string"!=typeof e&&!(e instanceof String))throw new Error("When calling with two arguments, the first argument to tidy() must be a string");if("function"!=typeof t)throw new Error("When calling with two arguments, the 2nd argument to tidy() must be a function");s=e}return this.scopedRun((()=>this.startScope(s)),(()=>this.endScope(n)),(()=>(n=t(),n instanceof Promise&&console.error("Cannot return a Promise inside of tidy."),n)))}scopedRun(e,t,n){e();try{const e=n();return t(),e}catch(e){throw t(),e}}nextTensorId(){return ma.nextTensorId++}nextVariableId(){return ma.nextVariableId++}clone(e){const t=ya.runKernel(hn,{x:e}),n={x:e};return this.addTapeNode(this.state.activeScope.name,n,[t],(e=>({x:()=>{const t={x:e};return ya.runKernel(xt,t,{dtype:"float32"})}})),[],{}),t}runKernel(e,t,n){if(null==this.backendName&&this.backend,null==cr(e,this.backendName))throw new Error(`Kernel '${e}' not registered for backend '${this.backendName}'`);return this.runKernelFunc({kernelName:e,inputs:t,attrs:n})}shouldCheckForMemLeaks(){return this.ENV.getBool("IS_TEST")}checkKernelForMemLeak(e,t,n){const s=this.backend.numDataIds();let r=0;n.forEach((e=>{r+="complex64"===e.dtype?3:1}));const a=this.state.numDataMovesStack[this.state.numDataMovesStack.length-1],i=s-t-r-a;if(i>0)throw new Error(`Backend '${this.backendName}' has an internal memory leak (${i} data ids) after running '${e}'`)}runKernelFunc(e){let t,n=[];const s=this.isTapeOn(),r=this.state.numBytes,a=this.state.numTensors;let i,o;this.shouldCheckForMemLeaks()&&this.state.numDataMovesStack.push(0),null==this.backendName&&this.backend;const l=da(e)?e.kernelName:null!=this.state.activeScope?this.state.activeScope.name:"";if(da(e)){const{kernelName:t,inputs:r,attrs:a}=e;null==this.backendName&&this.backend;const l=cr(t,this.backendName);se(null!=l,(()=>`Cannot find registered kernel '${t}' for backend '${this.backendName}'`)),i=()=>{const e=this.backend.numDataIds();o=l.kernelFunc({inputs:r,attrs:a,backend:this.backend});const i=Array.isArray(o)?o:[o];this.shouldCheckForMemLeaks()&&this.checkKernelForMemLeak(t,e,i);const u=i.map((e=>null!=e.rank?e:this.makeTensorFromTensorInfo(e)));if(s){const e=this.getTensorsForGradient(t,r,u);n=this.saveTensorsForBackwardMode(e)}return u}}else{const{forwardFunc:t}=e,r=e=>{s&&(n=e.map((e=>this.keep(this.clone(e)))))};i=()=>{const e=this.backend.numDataIds();o=this.tidy((()=>t(this.backend,r)));const n=Array.isArray(o)?o:[o];return this.shouldCheckForMemLeaks()&&this.checkKernelForMemLeak(l,e,n),n}}const{inputs:u,attrs:c}=e,h=da(e)?null:e.backwardsFunc;let p;return this.scopedRun((()=>this.state.kernelDepth++),(()=>this.state.kernelDepth--),(()=>{this.ENV.getBool("DEBUG")||this.state.profiling?(p=this.profiler.profileKernel(l,u,(()=>i())),this.ENV.getBool("DEBUG")&&this.profiler.logKernelProfile(p),t=p.outputs):t=i()})),s&&this.addTapeNode(l,u,t,h,n,c),this.state.profiling&&this.state.activeProfile.kernels.push({name:l,bytesAdded:this.state.numBytes-r,totalBytesSnapshot:this.state.numBytes,tensorsAdded:this.state.numTensors-a,totalTensorsSnapshot:this.state.numTensors,inputShapes:Object.keys(u).map((e=>null!=u[e]?u[e].shape:null)),outputShapes:t.map((e=>e.shape)),kernelTimeMs:p.timeMs,extraInfo:p.extraInfo}),Array.isArray(o)?t:t[0]}saveTensorsForBackwardMode(e){const t=e.map((e=>this.keep(this.clone(e))));return t}getTensorsForGradient(e,t,n){const s=hr(e);if(null!=s){const e=s.inputsToSave||[],r=s.outputsToSave||[];let a;s.saveAllInputs?(se(Array.isArray(t),(()=>"saveAllInputs is true, expected inputs to be an array.")),a=Object.keys(t).map((e=>t[e]))):a=e.map((e=>t[e]));const i=n.filter(((e,t)=>r[t]));return a.concat(i)}return[]}makeTensor(e,t,n,s){if(null==e)throw new Error("Values passed to engine.makeTensor() are null");n=n||"float32",s=s||this.backend;let r=e;"string"===n&&Ce(e[0])&&(r=e.map((e=>Lr(e))));const a=s.write(r,t,n),i=new Zr(t,n,a,this.nextTensorId());if(this.trackTensor(i,s),"string"===n){const e=this.state.tensorInfo.get(a),t=Te(r);this.state.numBytes+=t-e.bytes,e.bytes=t}return i}makeTensorFromTensorInfo(e,t){const{dataId:n,shape:s,dtype:r}=e,a=new Zr(s,r,n,this.nextTensorId());return this.trackTensor(a,t),a}makeVariable(e,t=!0,n,s){n=n||this.nextVariableId().toString(),null!=s&&s!==e.dtype&&(e=e.cast(s));const r=new Qr(e,t,n,this.nextTensorId());if(null!=this.state.registeredVariables[r.name])throw new Error(`Variable with name ${r.name} was already registered`);return this.state.registeredVariables[r.name]=r,this.incRef(r,this.backend),r}trackTensor(e,t){this.state.numTensors++,"string"===e.dtype&&this.state.numStringTensors++;let n=0;"complex64"!==e.dtype&&"string"!==e.dtype&&(n=e.size*Ne(e.dtype)),this.state.numBytes+=n,this.state.tensorInfo.has(e.dataId)||(this.state.numDataBuffers++,this.state.tensorInfo.set(e.dataId,{backend:t||this.backend,dtype:e.dtype,shape:e.shape,bytes:n})),e instanceof Qr||this.track(e)}incRef(e,t){this.trackTensor(e,t),this.backend.incRef(e.dataId)}removeDataId(e,t){this.state.tensorInfo.has(e)&&this.state.tensorInfo.get(e).backend===t&&(this.state.tensorInfo.delete(e),this.state.numDataBuffers--)}disposeTensor(e){if(!this.state.tensorInfo.has(e.dataId))return;const t=this.state.tensorInfo.get(e.dataId);if(this.state.numTensors--,"string"===e.dtype&&(this.state.numStringTensors--,this.state.numBytes-=t.bytes),"complex64"!==e.dtype&&"string"!==e.dtype){const t=e.size*Ne(e.dtype);this.state.numBytes-=t}t.backend.disposeData(e.dataId)&&this.removeDataId(e.dataId,t.backend)}disposeVariables(){for(const e in this.state.registeredVariables){const t=this.state.registeredVariables[e];this.disposeVariable(t)}}disposeVariable(e){this.disposeTensor(e),null!=this.state.registeredVariables[e.name]&&delete this.state.registeredVariables[e.name]}memory(){const e=this.backend.memory();return e.numTensors=this.state.numTensors,e.numDataBuffers=this.state.numDataBuffers,e.numBytes=this.state.numBytes,this.state.numStringTensors>0&&(e.unreliable=!0,null==e.reasons&&(e.reasons=[]),e.reasons.push("Memory usage by string tensors is approximate (2 bytes per character)")),e}async profile(e){this.state.profiling=!0;const t=this.state.numBytes,n=this.state.numTensors;this.state.activeProfile.kernels=[],this.state.activeProfile.result=await e(),this.state.profiling=!1,this.state.activeProfile.peakBytes=Math.max(...this.state.activeProfile.kernels.map((e=>e.totalBytesSnapshot))),this.state.activeProfile.newBytes=this.state.numBytes-t,this.state.activeProfile.newTensors=this.state.numTensors-n;for(const e of this.state.activeProfile.kernels)e.kernelTimeMs=await e.kernelTimeMs,e.extraInfo=await e.extraInfo;return this.state.activeProfile}isTapeOn(){return this.state.gradientDepth>0&&0===this.state.kernelDepth}addTapeNode(e,t,n,s,r,a){const i={id:this.state.nextTapeNodeId++,kernelName:e,inputs:t,outputs:n,saved:r},o=hr(e);null!=o&&(s=o.gradFunc),null!=s&&(i.gradient=e=>(e=e.map(((e,t)=>{if(null==e){const e=n[t],s=Le(e.size,e.dtype);return this.makeTensor(s,e.shape,e.dtype)}return e})),s(e.length>1?e:e[0],r,a))),this.state.activeTape.push(i)}keep(e){return e.kept=!0,e}startTape(){0===this.state.gradientDepth&&(this.state.activeTape=[]),this.state.gradientDepth++}endTape(){this.state.gradientDepth--}startScope(e){const t={track:[],name:"unnamed scope",id:this.state.nextScopeId++};e&&(t.name=e),this.state.scopeStack.push(t),this.state.activeScope=t}endScope(e){const t=ha(e),n=new Set(t.map((e=>e.id)));for(let e=0;e<this.state.activeScope.track.length;e++){const t=this.state.activeScope.track[e];t.kept||n.has(t.id)||t.dispose()}const s=this.state.scopeStack.pop();this.state.activeScope=0===this.state.scopeStack.length?null:this.state.scopeStack[this.state.scopeStack.length-1],t.forEach((e=>{e.kept||e.scopeId!==s.id||this.track(e)}))}gradients(e,t,n,s=!1){if(se(t.length>0,(()=>"gradients() received an empty list of xs.")),null!=n&&"float32"!==n.dtype)throw new Error(`dy must have 'float32' dtype, but has '${n.dtype}'`);const r=this.scopedRun((()=>this.startTape()),(()=>this.endTape()),(()=>this.tidy("forward",e)));se(r instanceof Zr,(()=>"The result y returned by f() must be a tensor."));const a=function(e,t,n){const s={},r={};for(let e=0;e<t.length;e++)s[t[e].id]=!0;for(let n=0;n<e.length;n++){const a=e[n],i=a.inputs;for(const e in i){const n=i[e];let o=!1;for(let e=0;e<t.length;e++)if(s[n.id]){a.outputs.forEach((e=>s[e.id]=!0)),o=!0,r[a.id]=!0;break}if(o)break}}const a={};a[n.id]=!0;const i={};for(let t=e.length-1;t>=0;t--){const n=e[t],s=n.inputs;for(let e=0;e<n.outputs.length;e++)if(a[n.outputs[e].id]){for(const e in s)a[s[e].id]=!0,i[n.id]=!0;break}}const o=[];for(let t=0;t<e.length;t++){const n=e[t];if(r[n.id]&&i[n.id]){const e={};for(const t in n.inputs){const r=n.inputs[t];s[r.id]&&(e[t]=r)}const t=Object.assign({},n);t.inputs=e,t.outputs=n.outputs,o.push(t)}}return o}(this.state.activeTape,t,r);if(!s&&0===a.length&&t.length>0)throw new Error("Cannot compute gradient of y=f(x) with respect to x. Make sure that the f you passed encloses all operations that lead from x to y.");return this.tidy("backward",(()=>{const e={};e[r.id]=null==n?function(e){const t=Me(oe(e),"float32");return ya.makeTensor(t,e,"float32")}(r.shape):n,function(e,t,n,s){for(let r=t.length-1;r>=0;r--){const a=t[r],i=[];if(a.outputs.forEach((t=>{const n=e[t.id];null!=n?i.push(n):i.push(null)})),null==a.gradient)throw new Error(`Cannot compute gradient: gradient function not found for ${a.kernelName}.`);const o=a.gradient(i);for(const t in a.inputs){if(!(t in o))throw new Error(`Cannot backprop through input ${t}. Available gradients found: ${Object.keys(o)}.`);const r=n((()=>o[t]()));if("float32"!==r.dtype)throw new Error(`Error in gradient for op ${a.kernelName}. The gradient of input ${t} must have 'float32' dtype, but has '${r.dtype}'`);const i=a.inputs[t];if(!ue(r.shape,i.shape))throw new Error(`Error in gradient for op ${a.kernelName}. The gradient of input '${t}' has shape '${r.shape}', which does not match the shape of the input '${i.shape}'`);if(null==e[i.id])e[i.id]=r;else{const t=e[i.id];e[i.id]=s(t,r),t.dispose()}}}}(e,a,(e=>this.tidy(e)),ba);const s=t.map((t=>e[t.id]));return 0===this.state.gradientDepth&&(this.state.activeTape.forEach((e=>{for(const t of e.saved)t.dispose()})),this.state.activeTape=null),{value:r,grads:s}}))}customGrad(e){return se(_e(e),(()=>"The f passed in customGrad(f) must be a function.")),(...t)=>{let n;se(t.every((e=>e instanceof Zr)),(()=>"The args passed in customGrad(f)(x1, x2,...) must all be tensors"));const s={};return t.forEach(((e,t)=>{s[t]=e})),this.runKernelFunc({forwardFunc:(s,r)=>(n=e(...t,r),se(n.value instanceof Zr,(()=>"The function f passed in customGrad(f) must return an object where `obj.value` is a tensor")),se(_e(n.gradFunc),(()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function.")),n.value),backwardsFunc:(e,s)=>{const r=n.gradFunc(e,s),a=Array.isArray(r)?r:[r];se(a.length===t.length,(()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function that returns the same number of tensors as inputs passed to f(...).")),se(a.every((e=>e instanceof Zr)),(()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function that returns a list of only tensors."));const i={};return a.forEach(((e,t)=>{i[t]=()=>e})),i},inputs:s})}}readSync(e){return this.state.tensorInfo.get(e).backend.readSync(e)}read(e){return this.state.tensorInfo.get(e).backend.read(e)}readToGPU(e,t){return this.state.tensorInfo.get(e).backend.readToGPU(e,t)}async time(e){const t=Or(),n=await this.backend.time(e);return n.wallMs=Or()-t,n}track(e){return null!=this.state.activeScope&&(e.scopeId=this.state.activeScope.id,this.state.activeScope.track.push(e)),e}get registeredVariables(){return this.state.registeredVariables}reset(){this.pendingBackendInitId++,this.state.dispose(),this.ENV.reset(),this.state=new fa;for(const e in this.registry)this.disposeRegisteredKernels(e),this.registry[e].dispose(),delete this.registry[e];this.backendName=null,this.backendInstance=null,this.pendingBackendInit=null}}function ga(){const e=Ke();if(null==e._tfengine){const t=new Ue(e);e._tfengine=new ma(t)}var t;return t=e._tfengine.ENV,qe=t,Kr=()=>e._tfengine,e._tfengine}ma.nextTensorId=0,ma.nextVariableId=0;const ya=ga();function ba(e,t){const n={a:e,b:t};return ya.runKernel(Qe,n)}let xa;function va(e){xa=e}function wa(e){if(void 0!==xa)return xa;if(e||"undefined"!=typeof navigator&&null!=navigator){if(e||(e=navigator),"ReactNative"===e.product)return!0;const t=e.userAgent||e.vendor||("undefined"!=typeof window?window.opera:"");if(!t){const t=e;return t.userAgentData&&t.userAgentData.mobile}return/(android|bb\d+|meego).+mobile|avantgo|bada\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|iris|kindle|lge |maemo|midp|mmp|mobile.+firefox|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\.(browser|link)|vodafone|wap|windows ce|xda|xiino/i.test(t)||/1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s\-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|\-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw\-(n|u)|c55\/|capi|ccwa|cdm\-|cell|chtm|cldc|cmd\-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc\-s|devi|dica|dmob|do(c|p)o|ds(12|\-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(\-|_)|g1 u|g560|gene|gf\-5|g\-mo|go(\.w|od)|gr(ad|un)|haie|hcit|hd\-(m|p|t)|hei\-|hi(pt|ta)|hp( i|ip)|hs\-c|ht(c(\-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i\-(20|go|ma)|i230|iac( |\-|\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\/)|klon|kpt |kwc\-|kyo(c|k)|le(no|xi)|lg( g|\/(k|l|u)|50|54|\-[a-w])|libw|lynx|m1\-w|m3ga|m50\/|ma(te|ui|xo)|mc(01|21|ca)|m\-cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(\-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)\-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|\-([1-8]|c))|phil|pire|pl(ay|uc)|pn\-2|po(ck|rt|se)|prox|psio|pt\-g|qa\-a|qc(07|12|21|32|60|\-[2-7]|i\-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h\-|oo|p\-)|sdk\/|se(c(\-|0|1)|47|mc|nd|ri)|sgh\-|shar|sie(\-|m)|sk\-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h\-|v\-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl\-|tdg\-|tel(i|m)|tim\-|t\-mo|to(pl|sh)|ts(70|m\-|m3|m5)|tx\-9|up(\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|\-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(\-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas\-|your|zeto|zte\-/i.test(t.substr(0,4))}return!1}function ka(){return"undefined"!=typeof window&&null!=window.document||"undefined"!=typeof WorkerGlobalScope}const Ia=He();function Sa(e,t){let n=e;if(Se(e))return"string"===t?[]:[e.length];if(!Array.isArray(e))return[];const s=[];for(;Array.isArray(n)||Se(n)&&"string"!==t;)s.push(n.length),n=n[0];return Array.isArray(e)&&He().getBool("TENSORLIKE_CHECK_SHAPE_CONSISTENCY")&&Na(e,s,[]),s}function Na(e,t,n){if(n=n||[],!Array.isArray(e)&&!Se(e))return void se(0===t.length,(()=>`Element arr[${n.join("][")}] is a primitive, but should be an array/TypedArray of ${t[0]} elements`));se(t.length>0,(()=>`Element arr[${n.join("][")}] should be a primitive, but is an array of ${e.length} elements`)),se(e.length===t[0],(()=>`Element arr[${n.join("][")}] should have ${t[0]} elements, but has ${e.length} elements`));const s=t.slice(1);for(let t=0;t<e.length;++t)Na(e[t],s,n.concat(t))}function Ta(e,t,n,s){if("string_or_numeric"!==e){if(null==e)throw new Error("Expected dtype cannot be null.");if("numeric"!==e&&e!==t||"numeric"===e&&"string"===t)throw new Error(`Argument '${n}' passed to '${s}' must be ${e} tensor, but got ${t} tensor`)}}function Ca(e,t,n,s="numeric"){if(e instanceof Zr)return Ta(s,e.dtype,t,n),e;let r=Ae(e);if("string"!==r&&["bool","int32","float32"].indexOf(s)>=0&&(r=s),Ta(s,r,t,n),null==e||!Se(e)&&!Array.isArray(e)&&"number"!=typeof e&&"boolean"!=typeof e&&"string"!=typeof e){const s=null==e?"null":e.constructor.name;throw new Error(`Argument '${t}' passed to '${n}' must be a Tensor or TensorLike, but got '${s}'`)}const a=Sa(e,r);Se(e)||Array.isArray(e)||(e=[e]);const i="string"!==r?Dr(e,r):ie(e,[],!0);return ya.makeTensor(i,a,r)}function $a(e,t,n,s="numeric"){if(!Array.isArray(e))throw new Error(`Argument ${t} passed to ${n} must be a \`Tensor[]\` or \`TensorLike[]\``);return e.map(((e,r)=>Ca(e,`${t}[${r}]`,n,s)))}Ia.registerFlag("DEBUG",(()=>!1),(e=>{e&&console.warn("Debugging mode is ON. The output of every math call will be downloaded to CPU and checked for NaNs. This significantly impacts performance.")})),Ia.registerFlag("IS_BROWSER",(()=>ka())),Ia.registerFlag("IS_NODE",(()=>"undefined"!=typeof process&&void 0!==process.versions&&void 0!==process.versions.node)),Ia.registerFlag("IS_CHROME",(()=>"undefined"!=typeof navigator&&null!=navigator&&null!=navigator.userAgent&&/Chrome/.test(navigator.userAgent)&&/Google Inc/.test(navigator.vendor))),Ia.registerFlag("PROD",(()=>!1)),Ia.registerFlag("TENSORLIKE_CHECK_SHAPE_CONSISTENCY",(()=>Ia.getBool("DEBUG"))),Ia.registerFlag("DEPRECATION_WARNINGS_ENABLED",(()=>!0)),Ia.registerFlag("IS_TEST",(()=>!1)),Ia.registerFlag("CHECK_COMPUTATION_FOR_ERRORS",(()=>!0)),Ia.registerFlag("WRAP_TO_IMAGEBITMAP",(()=>!1)),Ia.registerFlag("ENGINE_COMPILE_ONLY",(()=>!1));const Ea="__op";function Aa(e){const t=Object.keys(e);if(1!==t.length)throw new Error(`Please provide an object with a single key (operation name) mapping to a function. Got an object with ${t.length} keys.`);let n=t[0];const s=e[n];n.endsWith("_")&&(n=n.substring(0,n.length-1)),n+=Ea;const r=(...e)=>{ya.startScope(n);try{const t=s(...e);return Ve(t)&&console.error("Cannot return a Promise inside of tidy."),ya.endScope(t),t}catch(e){throw ya.endScope(null),e}};return Object.defineProperty(r,"name",{value:n,configurable:!0}),r}const _a=Aa({complex_:function(e,t){const n=Ca(e,"real","complex"),s=Ca(t,"imag","complex");re(n.shape,s.shape,`real and imag shapes, ${n.shape} and ${s.shape}, must match in call to tf.complex().`);const r={real:n,imag:s};return ya.runKernel(kt,r)}});function Ra(e,t,n,s){if(null==s&&(s=Ae(e)),"complex64"===s)throw new Error("Cannot construct a complex64 tensor directly. Please use tf.complex(real, imag).");if(!Se(e)&&!Array.isArray(e)&&"number"!=typeof e&&"boolean"!=typeof e&&"string"!=typeof e)throw new Error("values passed to tensor(values) must be a number/boolean/string or an array of numbers/booleans/strings, or a TypedArray");if(null!=t){Pe(t);const e=oe(t),s=oe(n);se(e===s,(()=>`Based on the provided shape, [${t}], the tensor should have ${e} values but has ${s}`));for(let e=0;e<n.length;++e){const s=n[e],r=e!==n.length-1||s!==oe(t.slice(e));se(n[e]===t[e]||!r,(()=>`Error creating a new Tensor. Inferred shape (${n}) does not match the provided shape (${t}). `))}}return Se(e)||Array.isArray(e)||(e=[e]),t=t||n,e="string"!==s?Dr(e,s):ie(e,[],!0),ya.makeTensor(e,t,s)}function Fa(e,t,n){return Ra(e,t,Sa(e,n),n)}const Da={float32:4,float16:2,int32:4,uint16:2,uint8:1,bool:1,complex64:8};async function Oa(e,t){const n=[],s=[],r=Array.isArray(e)?e.map((e=>e.name)):Object.keys(e);for(let a=0;a<r.length;++a){const i=r[a],o=Array.isArray(e)?e[a].tensor:e[i];if("float32"!==o.dtype&&"int32"!==o.dtype&&"bool"!==o.dtype&&"string"!==o.dtype&&"complex64"!==o.dtype)throw new Error(`Unsupported dtype in weight '${i}': ${o.dtype}`);const l={name:i,shape:o.shape,dtype:o.dtype};if("string"===o.dtype){const e=new Promise((async e=>{const t=await o.bytes(),n=t.reduce(((e,t)=>e+t.length),0)+4*t.length,s=new Uint8Array(n);let r=0;for(let e=0;e<t.length;e++){const n=t[e],a=new Uint8Array(new Uint32Array([n.length]).buffer);s.set(a,r),r+=4,s.set(n,r),r+=n.length}e(s)}));s.push(e)}else s.push(o.data());null!=t&&(l.group=t),n.push(l)}return{data:La(await Promise.all(s)),specs:n}}function Ma(e,t){const n={};let s,r=0;for(const a of t){const t=a.name,i=a.dtype,o=a.shape,l=oe(o);let u;if("quantization"in a){const n=a.quantization;if("uint8"===n.dtype||"uint16"===n.dtype){if(!("min"in n)||!("scale"in n))throw new Error(`Weight ${a.name} with quantization ${n.dtype} doesn't have corresponding metadata min and scale.`)}else{if("float16"!==n.dtype)throw new Error(`Weight ${a.name} has unknown quantization dtype ${n.dtype}. Supported quantization dtypes are: 'uint8', 'uint16', and 'float16'.`);if("float32"!==i)throw new Error(`Weight ${a.name} is quantized with ${n.dtype} which only supports weights of type float32 not ${i}.`)}const o=Da[n.dtype],c=e.slice(r,r+l*o),h="uint8"===n.dtype?new Uint8Array(c):new Uint16Array(c);if("float32"===i)if("uint8"===n.dtype||"uint16"===n.dtype){u=new Float32Array(h.length);for(let e=0;e<h.length;e++){const t=h[e];u[e]=t*n.scale+n.min}}else{if("float16"!==n.dtype)throw new Error(`Unsupported quantization type ${n.dtype} for weight type float32.`);void 0===s&&(s=Ha()),u=s(h)}else{if("int32"!==i)throw new Error(`Unsupported dtype in weight '${t}': ${i}`);if("uint8"!==n.dtype&&"uint16"!==n.dtype)throw new Error(`Unsupported quantization type ${n.dtype} for weight type int32.`);u=new Int32Array(h.length);for(let e=0;e<h.length;e++){const t=h[e];u[e]=Math.round(t*n.scale+n.min)}}r+=l*o}else if("string"===i){const t=oe(a.shape);u=[];for(let n=0;n<t;n++){const t=new Uint32Array(e.slice(r,r+4))[0];r+=4;const n=new Uint8Array(e.slice(r,r+t));u.push(n),r+=t}}else{const s=Da[i],a=e.slice(r,r+l*s);if("float32"===i)u=new Float32Array(a);else if("int32"===i)u=new Int32Array(a);else if("bool"===i)u=new Uint8Array(a);else{if("complex64"!==i)throw new Error(`Unsupported dtype in weight '${t}': ${i}`);{u=new Float32Array(a);const e=new Float32Array(u.length/2),s=new Float32Array(u.length/2);for(let t=0;t<e.length;t++)e[t]=u[2*t],s[t]=u[2*t+1];const r=Fa(e,o,"float32"),i=Fa(s,o,"float32");n[t]=_a(r,i),r.dispose(),i.dispose()}}r+=l*s}"complex64"!==i&&(n[t]=Fa(u,o,i))}return n}function La(e){if(null===e)throw new Error(`Invalid input value: ${JSON.stringify(e)}`);let t=0;const n=[];e.forEach((e=>{if(t+=e.byteLength,n.push(e.byteLength===e.buffer.byteLength?e:new e.constructor(e)),!(e instanceof Float32Array||e instanceof Int32Array||e instanceof Uint8Array))throw new Error(`Unsupported TypedArray subtype: ${e.constructor.name}`)}));const s=new Uint8Array(t);let r=0;return n.forEach((e=>{s.set(new Uint8Array(e.buffer),r),r+=e.byteLength})),s.buffer}const za="undefined"!=typeof Buffer&&("undefined"==typeof Blob||"undefined"==typeof atob||"undefined"==typeof btoa);function Pa(e){return za?Buffer.byteLength(e):new Blob([e]).size}function Ba(e){if(1===e.length)return e[0];let t=0;e.forEach((e=>{t+=e.byteLength}));const n=new Uint8Array(t);let s=0;return e.forEach((e=>{n.set(new Uint8Array(e),s),s+=e.byteLength})),n.buffer}function Wa(e){for(e=e.trim();e.endsWith("/");)e=e.slice(0,e.length-1);const t=e.split("/");return t[t.length-1]}function Va(e,t){const n={modelTopology:e.modelTopology,format:e.format,generatedBy:e.generatedBy,convertedBy:e.convertedBy,weightsManifest:t};return null!=e.signature&&(n.signature=e.signature),null!=e.userDefinedMetadata&&(n.userDefinedMetadata=e.userDefinedMetadata),null!=e.modelInitializer&&(n.modelInitializer=e.modelInitializer),null!=e.trainingConfig&&(n.trainingConfig=e.trainingConfig),n}async function Ua(e,t){const n={modelTopology:e.modelTopology,format:e.format,generatedBy:e.generatedBy,convertedBy:e.convertedBy};if(null!=e.trainingConfig&&(n.trainingConfig=e.trainingConfig),null!=e.weightsManifest){const[s,r]=await t(e.weightsManifest);n.weightSpecs=s,n.weightData=r}return null!=e.signature&&(n.signature=e.signature),null!=e.userDefinedMetadata&&(n.userDefinedMetadata=e.userDefinedMetadata),null!=e.modelInitializer&&(n.modelInitializer=e.modelInitializer),n}function Ga(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("Expected JSON model topology, received ArrayBuffer.");return{dateSaved:new Date,modelTopologyType:"JSON",modelTopologyBytes:null==e.modelTopology?0:Pa(JSON.stringify(e.modelTopology)),weightSpecsBytes:null==e.weightSpecs?0:Pa(JSON.stringify(e.weightSpecs)),weightDataBytes:null==e.weightData?0:e.weightData.byteLength}}function Ha(){const e=function(){const e=e=>{let t=e<<13,n=0;for(;0==(8388608&t);)n-=8388608,t<<=1;return t&=-8388609,n+=947912704,t|n},t=new Uint32Array(2048);t[0]=0;for(let n=1;n<1024;n++)t[n]=e(n);for(let e=1024;e<2048;e++)t[e]=939524096+(e-1024<<13);return t}(),t=function(){const e=new Uint32Array(64);e[0]=0,e[31]=1199570944,e[32]=2147483648,e[63]=3347054592;for(let t=1;t<31;t++)e[t]=t<<23;for(let t=33;t<63;t++)e[t]=2147483648+(t-32<<23);return e}(),n=function(){const e=new Uint32Array(64);for(let t=0;t<64;t++)e[t]=1024;return e[0]=e[32]=0,e}();return s=>{const r=new ArrayBuffer(4*s.length),a=new Uint32Array(r);for(let r=0;r<s.length;r++){const i=s[r],o=e[n[i>>10]+(1023&i)]+t[i>>10];a[r]=o}return new Float32Array(r)}}class ja{constructor(){this.saveRouters=[],this.loadRouters=[]}static getInstance(){return null==ja.instance&&(ja.instance=new ja),ja.instance}static registerSaveRouter(e){ja.getInstance().saveRouters.push(e)}static registerLoadRouter(e){ja.getInstance().loadRouters.push(e)}static getSaveHandlers(e){return ja.getHandlers(e,"save")}static getLoadHandlers(e,t){return ja.getHandlers(e,"load",t)}static getHandlers(e,t,n){const s=[];return("load"===t?ja.getInstance().loadRouters:ja.getInstance().saveRouters).forEach((t=>{const r=t(e,n);null!==r&&s.push(r)})),s}}const qa=e=>ja.registerSaveRouter(e),Ka=e=>ja.registerLoadRouter(e),Xa=e=>ja.getSaveHandlers(e),Ya=(e,t)=>ja.getLoadHandlers(e,t),Za="tensorflowjs",Ja="models_store",Qa="model_info_store";function ei(){if(!He().getBool("IS_BROWSER"))throw new Error("Failed to obtain IndexedDB factory because the current environmentis not a web browser.");const e="undefined"==typeof window?self:window,t=e.indexedDB||e.mozIndexedDB||e.webkitIndexedDB||e.msIndexedDB||e.shimIndexedDB;if(null==t)throw new Error("The current browser does not appear to support IndexedDB.");return t}function ti(e){const t=e.result;t.createObjectStore(Ja,{keyPath:"modelPath"}),t.createObjectStore(Qa,{keyPath:"modelPath"})}class ni{constructor(e){if(this.indexedDB=ei(),null==e||!e)throw new Error("For IndexedDB, modelPath must not be null, undefined or empty.");this.modelPath=e}async save(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserLocalStorage.save() does not support saving model topology in binary formats yet.");return this.databaseAction(this.modelPath,e)}async load(){return this.databaseAction(this.modelPath)}databaseAction(e,t){return new Promise(((e,n)=>{const s=this.indexedDB.open(Za,1);s.onupgradeneeded=()=>ti(s),s.onsuccess=()=>{const r=s.result;if(null==t){const t=r.transaction(Ja,"readonly"),s=t.objectStore(Ja).get(this.modelPath);s.onsuccess=()=>{if(null==s.result)return r.close(),n(new Error(`Cannot find model with path '${this.modelPath}' in IndexedDB.`));e(s.result.modelArtifacts)},s.onerror=e=>(r.close(),n(s.error)),t.oncomplete=()=>r.close()}else{const s=Ga(t),a=r.transaction(Qa,"readwrite");let i=a.objectStore(Qa);const o=i.put({modelPath:this.modelPath,modelArtifactsInfo:s});let l;o.onsuccess=()=>{l=r.transaction(Ja,"readwrite");const o=l.objectStore(Ja).put({modelPath:this.modelPath,modelArtifacts:t,modelArtifactsInfo:s});o.onsuccess=()=>e({modelArtifactsInfo:s}),o.onerror=e=>{i=a.objectStore(Qa);const t=i.delete(this.modelPath);t.onsuccess=()=>(r.close(),n(o.error)),t.onerror=e=>(r.close(),n(o.error))}},o.onerror=e=>(r.close(),n(o.error)),a.oncomplete=()=>{null==l?r.close():l.oncomplete=()=>r.close()}}},s.onerror=e=>n(s.error)}))}}ni.URL_SCHEME="indexeddb://";const si=e=>{return He().getBool("IS_BROWSER")&&!Array.isArray(e)&&e.startsWith(ni.URL_SCHEME)?(t=e.slice(ni.URL_SCHEME.length),new ni(t)):null;var t};ja.registerSaveRouter(si),ja.registerLoadRouter(si);class ri{constructor(){this.indexedDB=ei()}async listModels(){return new Promise(((e,t)=>{const n=this.indexedDB.open(Za,1);n.onupgradeneeded=()=>ti(n),n.onsuccess=()=>{const s=n.result,r=s.transaction(Qa,"readonly"),a=r.objectStore(Qa).getAll();a.onsuccess=()=>{const t={};for(const e of a.result)t[e.modelPath]=e.modelArtifactsInfo;e(t)},a.onerror=e=>(s.close(),t(a.error)),r.oncomplete=()=>s.close()},n.onerror=e=>t(n.error)}))}async removeModel(e){var t;return e=(t=e).startsWith(ni.URL_SCHEME)?t.slice(ni.URL_SCHEME.length):t,new Promise(((t,n)=>{const s=this.indexedDB.open(Za,1);s.onupgradeneeded=()=>ti(s),s.onsuccess=()=>{const r=s.result,a=r.transaction(Qa,"readwrite"),i=a.objectStore(Qa),o=i.get(e);let l;o.onsuccess=()=>{if(null==o.result)return r.close(),n(new Error(`Cannot find model with path '${e}' in IndexedDB.`));{const s=i.delete(e),a=()=>{l=r.transaction(Ja,"readwrite");const s=l.objectStore(Ja).delete(e);s.onsuccess=()=>t(o.result.modelArtifactsInfo),s.onerror=e=>n(o.error)};s.onsuccess=a,s.onerror=e=>(a(),r.close(),n(o.error))}},o.onerror=e=>(r.close(),n(o.error)),a.oncomplete=()=>{null==l?r.close():l.oncomplete=()=>r.close()}},s.onerror=e=>n(s.error)}))}}const ai="/",ii="tensorflowjs_models",oi="info",li="model_topology",ui="weight_specs",ci="weight_data",hi="model_metadata";function pi(e){return{info:[ii,e,oi].join(ai),topology:[ii,e,li].join(ai),weightSpecs:[ii,e,ui].join(ai),weightData:[ii,e,ci].join(ai),modelMetadata:[ii,e,hi].join(ai)}}function di(e){for(const t of Object.values(e))window.localStorage.removeItem(t)}function fi(e){const t=e.split(ai);if(t.length<3)throw new Error(`Invalid key format: ${e}`);return t.slice(1,t.length-1).join(ai)}class mi{constructor(e){if(!He().getBool("IS_BROWSER")||"undefined"==typeof window||void 0===window.localStorage)throw new Error("The current environment does not support local storage.");if(this.LS=window.localStorage,null==e||!e)throw new Error("For local storage, modelPath must not be null, undefined or empty.");this.modelPath=e,this.keys=pi(this.modelPath)}async save(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserLocalStorage.save() does not support saving model topology in binary formats yet.");{const t=JSON.stringify(e.modelTopology),n=JSON.stringify(e.weightSpecs),s=Ga(e);try{this.LS.setItem(this.keys.info,JSON.stringify(s)),this.LS.setItem(this.keys.topology,t),this.LS.setItem(this.keys.weightSpecs,n),this.LS.setItem(this.keys.weightData,function(e){if(za)return Buffer.from(e).toString("base64");const t=new Uint8Array(e);let n="";for(let e=0,s=t.length;e<s;e++)n+=String.fromCharCode(t[e]);return btoa(n)}(e.weightData));const r={format:e.format,generatedBy:e.generatedBy,convertedBy:e.convertedBy,signature:null!=e.signature?e.signature:void 0,userDefinedMetadata:null!=e.userDefinedMetadata?e.userDefinedMetadata:void 0,modelInitializer:null!=e.modelInitializer?e.modelInitializer:void 0,trainingConfig:null!=e.trainingConfig?e.trainingConfig:void 0};return this.LS.setItem(this.keys.modelMetadata,JSON.stringify(r)),{modelArtifactsInfo:s}}catch(e){throw di(this.keys),new Error(`Failed to save model '${this.modelPath}' to local storage: size quota being exceeded is a possible cause of this failure: modelTopologyBytes=${s.modelTopologyBytes}, weightSpecsBytes=${s.weightSpecsBytes}, weightDataBytes=${s.weightDataBytes}.`)}}}async load(){const e=JSON.parse(this.LS.getItem(this.keys.info));if(null==e)throw new Error(`In local storage, there is no model with name '${this.modelPath}'`);if("JSON"!==e.modelTopologyType)throw new Error("BrowserLocalStorage does not support loading non-JSON model topology yet.");const t={},n=JSON.parse(this.LS.getItem(this.keys.topology));if(null==n)throw new Error(`In local storage, the topology of model '${this.modelPath}' is missing.`);t.modelTopology=n;const s=JSON.parse(this.LS.getItem(this.keys.weightSpecs));if(null==s)throw new Error(`In local storage, the weight specs of model '${this.modelPath}' are missing.`);t.weightSpecs=s;const r=this.LS.getItem(this.keys.modelMetadata);if(null!=r){const e=JSON.parse(r);t.format=e.format,t.generatedBy=e.generatedBy,t.convertedBy=e.convertedBy,null!=e.signature&&(t.signature=e.signature),null!=e.userDefinedMetadata&&(t.userDefinedMetadata=e.userDefinedMetadata),null!=e.modelInitializer&&(t.modelInitializer=e.modelInitializer),null!=e.trainingConfig&&(t.trainingConfig=e.trainingConfig)}const a=this.LS.getItem(this.keys.weightData);if(null==a)throw new Error(`In local storage, the binary weight values of model '${this.modelPath}' are missing.`);return t.weightData=function(e){if(za){const t=Buffer.from(e,"base64");return t.buffer.slice(t.byteOffset,t.byteOffset+t.byteLength)}const t=atob(e),n=new Uint8Array(t.length);for(let e=0;e<t.length;++e)n.set([t.charCodeAt(e)],e);return n.buffer}(a),t}}mi.URL_SCHEME="localstorage://";const gi=e=>{return He().getBool("IS_BROWSER")&&!Array.isArray(e)&&e.startsWith(mi.URL_SCHEME)?(t=e.slice(mi.URL_SCHEME.length),new mi(t)):null;var t};ja.registerSaveRouter(gi),ja.registerLoadRouter(gi);class yi{constructor(){se(He().getBool("IS_BROWSER"),(()=>"Current environment is not a web browser")),se("undefined"==typeof window||void 0!==window.localStorage,(()=>"Current browser does not appear to support localStorage")),this.LS=window.localStorage}async listModels(){const e={},t=ii+ai,n=ai+oi;for(let s=0;s<this.LS.length;++s){const r=this.LS.key(s);r.startsWith(t)&&r.endsWith(n)&&(e[fi(r)]=JSON.parse(this.LS.getItem(r)))}return e}async removeModel(e){var t;const n=pi(e=(t=e).startsWith(mi.URL_SCHEME)?t.slice(mi.URL_SCHEME.length):t);if(null==this.LS.getItem(n.info))throw new Error(`Cannot find model at path '${e}'`);const s=JSON.parse(this.LS.getItem(n.info));return di(n),s}}const bi="://";class xi{constructor(){this.managers={}}static getInstance(){return null==xi.instance&&(xi.instance=new xi),xi.instance}static registerManager(e,t){se(null!=e,(()=>"scheme must not be undefined or null.")),e.endsWith(bi)&&(e=e.slice(0,e.indexOf(bi))),se(e.length>0,(()=>"scheme must not be an empty string."));const n=xi.getInstance();se(null==n.managers[e],(()=>`A model store manager is already registered for scheme '${e}'.`)),n.managers[e]=t}static getManager(e){const t=this.getInstance().managers[e];if(null==t)throw new Error(`Cannot find model manager for scheme '${e}'`);return t}static getSchemes(){return Object.keys(this.getInstance().managers)}}function vi(e){if(-1===e.indexOf(bi))throw new Error(`The url string provided does not contain a scheme. Supported schemes are: ${xi.getSchemes().join(",")}`);return{scheme:e.split(bi)[0],path:e.split(bi)[1]}}async function wi(e,t,n=!1){se(e!==t,(()=>`Old path and new path are the same: '${e}'`));const s=ja.getLoadHandlers(e);se(s.length>0,(()=>`Copying failed because no load handler is found for source URL ${e}.`)),se(s.length<2,(()=>`Copying failed because more than one (${s.length}) load handlers for source URL ${e}.`));const r=s[0],a=ja.getSaveHandlers(t);se(a.length>0,(()=>`Copying failed because no save handler is found for destination URL ${t}.`)),se(a.length<2,(()=>`Copying failed because more than one (${s.length}) save handlers for destination URL ${t}.`));const i=a[0],o=vi(e).scheme,l=vi(e).path,u=o===vi(e).scheme,c=await r.load();n&&u&&await xi.getManager(o).removeModel(l);const h=await i.save(c);return n&&!u&&await xi.getManager(o).removeModel(l),h.modelArtifactsInfo}async function ki(){const e=xi.getSchemes(),t={};for(const n of e){const e=await xi.getManager(n).listModels();for(const s in e)t[n+bi+s]=e[s]}return t}async function Ii(e){const t=vi(e);return xi.getManager(t.scheme).removeModel(t.path)}async function Si(e,t){return wi(e,t,!1)}async function Ni(e,t){return wi(e,t,!0)}class Ti{fetch(e,t){return fetch(e,t)}now(){return performance.now()}encode(e,t){if("utf-8"!==t&&"utf8"!==t)throw new Error(`Browser's encoder only supports utf-8, but got ${t}`);return null==this.textEncoder&&(this.textEncoder=new TextEncoder),this.textEncoder.encode(e)}decode(e,t){return new TextDecoder(t).decode(e)}}if(He().get("IS_BROWSER")){He().setPlatform("browser",new Ti);try{xi.registerManager(mi.URL_SCHEME,new yi)}catch(e){}try{xi.registerManager(ni.URL_SCHEME,new ri)}catch(e){}}let Ci;function $i(e,t="float32",n){return t=t||"float32",Pe(e),new qr(e,t,n)}He().get("IS_NODE")&&!He().get("IS_BROWSER")&&He().setPlatform("node",new class{constructor(){this.util=n(628),this.textEncoder=new this.util.TextEncoder}fetch(e,t){return null!=He().global.fetch?He().global.fetch(e,t):(null==Ci&&(Ci=n(410)),Ci(e,t))}now(){const e=process.hrtime();return 1e3*e[0]+e[1]/1e6}encode(e,t){if("utf-8"!==t&&"utf8"!==t)throw new Error(`Node built-in encoder only supports utf-8, but got ${t}`);return this.textEncoder.encode(e)}decode(e,t){return 0===e.length?"":new this.util.TextDecoder(t).decode(e)}});const Ei=Aa({cast_:function(e,t){const n=Ca(e,"x","cast");if(!ke(t))throw new Error(`Failed to cast to unknown dtype ${t}`);if("string"===t&&"string"!==n.dtype||"string"!==t&&"string"===n.dtype)throw new Error("Only strings can be casted to strings");const s={x:n},r={dtype:t};return ya.runKernel(xt,s,r)}}),Ai=Aa({clone_:function(e){const t={x:Ca(e,"x","clone","string_or_numeric")};return ya.runKernel(hn,t)}});function _i(e,t=!1){console.log(e.toString(t))}function Ri(e){return new Promise((e=>setTimeout(e))).then(e)}ga(),Xr={buffer:$i,cast:Ei,clone:Ai,print:_i};class Fi{constructor(e){if(!He().getBool("IS_BROWSER"))throw new Error("browserDownloads() cannot proceed because the current environment is not a browser.");e.startsWith(Fi.URL_SCHEME)&&(e=e.slice(Fi.URL_SCHEME.length)),null!=e&&0!==e.length||(e="model"),this.modelJsonFileName=e+".json",this.weightDataFileName=e+".weights.bin"}async save(e){if("undefined"==typeof document)throw new Error("Browser downloads are not supported in this environment since `document` is not present");const t=window.URL.createObjectURL(new Blob([e.weightData],{type:"application/octet-stream"}));if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserDownloads.save() does not support saving model topology in binary formats yet.");{const n=Va(e,[{paths:["./"+this.weightDataFileName],weights:e.weightSpecs}]),s=window.URL.createObjectURL(new Blob([JSON.stringify(n)],{type:"application/json"})),r=null==this.modelJsonAnchor?document.createElement("a"):this.modelJsonAnchor;if(r.download=this.modelJsonFileName,r.href=s,await Ri((()=>r.dispatchEvent(new MouseEvent("click")))),null!=e.weightData){const e=null==this.weightDataAnchor?document.createElement("a"):this.weightDataAnchor;e.download=this.weightDataFileName,e.href=t,await Ri((()=>e.dispatchEvent(new MouseEvent("click"))))}return{modelArtifactsInfo:Ga(e)}}}}Fi.URL_SCHEME="downloads://";class Di{constructor(e){if(null==e||e.length<1)throw new Error(`When calling browserFiles, at least 1 file is required, but received ${e}`);this.jsonFile=e[0],this.weightsFiles=e.slice(1)}async load(){return new Promise(((e,t)=>{const n=new FileReader;n.onload=n=>{const s=JSON.parse(n.target.result),r=s.modelTopology;if(null==r)return void t(new Error(`modelTopology field is missing from file ${this.jsonFile.name}`));if(null==s.weightsManifest)return void t(new Error(`weightManifest field is missing from file ${this.jsonFile.name}`));if(0===this.weightsFiles.length)return void e({modelTopology:r});const a=Ua(s,(e=>this.loadWeights(e)));e(a)},n.onerror=e=>t(`Failed to read model topology and weights manifest JSON from file '${this.jsonFile.name}'. BrowserFiles supports loading Keras-style tf.Model artifacts only.`),n.readAsText(this.jsonFile)}))}loadWeights(e){const t=[],n=[];for(const s of e)t.push(...s.weights),n.push(...s.paths);const s=this.checkManifestAndWeightFiles(e),r=n.map((e=>this.loadWeightsFile(e,s[e])));return Promise.all(r).then((e=>[t,Ba(e)]))}loadWeightsFile(e,t){return new Promise(((n,s)=>{const r=new FileReader;r.onload=e=>{const t=e.target.result;n(t)},r.onerror=t=>s(`Failed to weights data from file of path '${e}'.`),r.readAsArrayBuffer(t)}))}checkManifestAndWeightFiles(e){const t=[],n=this.weightsFiles.map((e=>Wa(e.name))),s={};for(const r of e)r.paths.forEach((e=>{const r=Wa(e);if(-1!==t.indexOf(r))throw new Error(`Duplicate file basename found in weights manifest: '${r}'`);if(t.push(r),-1===n.indexOf(r))throw new Error(`Weight file with basename '${r}' is not provided.`);s[e]=this.weightsFiles[n.indexOf(r)]}));if(t.length!==this.weightsFiles.length)throw new Error(`Mismatch in the number of files in weights manifest (${t.length}) and the number of weight files provided (${this.weightsFiles.length}).`);return s}}function Oi(e){return new Di(e)}function Mi(e,t,n,s){!function(e){se(null!=e&&Array.isArray(e)&&e.length>0,(()=>"promises must be a none empty array"))}(e),function(e,t){se(e>=0&&e<=1,(()=>`Progress fraction must be in range [0, 1], but got startFraction ${e}`)),se(t>=0&&t<=1,(()=>`Progress fraction must be in range [0, 1], but got endFraction ${t}`)),se(t>=e,(()=>`startFraction must be no more than endFraction, but got startFraction ${e} and endFraction ${t}`))}(n=null==n?0:n,s=null==s?1:s);let r=0;return Promise.all(e.map((a=>(a.then((a=>{const i=n+ ++r/e.length*(s-n);return t(i),a})),a))))}async function Li(e,t){null==t&&(t={});const n=null==t.fetchFunc?He().platform.fetch:t.fetchFunc,s=e.map((e=>n(e,t.requestInit,{isBinary:!0}))),r=(null==t.onProgress?await Promise.all(s):await Mi(s,t.onProgress,0,.5)).map((e=>e.arrayBuffer()));return null==t.onProgress?await Promise.all(r):await Mi(r,t.onProgress,.5,1)}async function zi(e,t="",n,s){return Pi((e=>Li(e,{requestInit:s})))(e,t,n)}function Pi(e){return async(t,n="",s)=>{const r=t.map((()=>!1)),a={},i=null!=s?s.map((()=>!1)):[],o=[];if(t.forEach(((e,t)=>{let n=0;e.weights.forEach((e=>{const l="quantization"in e?e.quantization.dtype:e.dtype,u=Da[l]*oe(e.shape),c=()=>{r[t]=!0,null==a[t]&&(a[t]=[]),a[t].push({manifestEntry:e,groupOffset:n,sizeBytes:u})};null!=s?s.forEach(((t,n)=>{t===e.name&&(c(),i[n]=!0)})):c(),o.push(e.name),n+=u}))})),!i.every((e=>e))){const e=s.filter(((e,t)=>!i[t]));throw new Error(`Could not find weights in manifest with names: ${e.join(", ")}. \nManifest JSON has weights with names: ${o.join(", ")}.`)}const l=r.reduce(((e,t,n)=>(t&&e.push(n),e)),[]),u=[];l.forEach((e=>{t[e].paths.forEach((e=>{const t=n+(n.endsWith("/")?"":"/")+e;u.push(t)}))}));const c=await e(u),h={};let p=0;return l.forEach((e=>{const n=t[e].paths.length;let s=0;for(let e=0;e<n;e++)s+=c[p+e].byteLength;const r=new ArrayBuffer(s),i=new Uint8Array(r);let o=0;for(let e=0;e<n;e++){const t=new Uint8Array(c[p+e]);i.set(t,o),o+=t.byteLength}a[e].forEach((e=>{const t=Ma(r.slice(e.groupOffset,e.groupOffset+e.sizeBytes),[e.manifestEntry]);for(const e in t)h[e]=t[e]})),p+=n})),h}}ja.registerSaveRouter((e=>He().getBool("IS_BROWSER")&&!Array.isArray(e)&&e.startsWith(Fi.URL_SCHEME)?function(e="model"){return new Fi(e)}(e.slice(Fi.URL_SCHEME.length)):null));class Bi{constructor(e,t){if(this.DEFAULT_METHOD="POST",null==t&&(t={}),this.weightPathPrefix=t.weightPathPrefix,this.onProgress=t.onProgress,this.weightUrlConverter=t.weightUrlConverter,null!=t.fetchFunc?(se("function"==typeof t.fetchFunc,(()=>"Must pass a function that matches the signature of `fetch` (see https://developer.mozilla.org/en-US/docs/Web/API/Fetch_API)")),this.fetch=t.fetchFunc):this.fetch=He().platform.fetch,se(null!=e&&e.length>0,(()=>"URL path for http must not be null, undefined or empty.")),Array.isArray(e)&&se(2===e.length,(()=>`URL paths for http must have a length of 2, (actual length is ${e.length}).`)),this.path=e,null!=t.requestInit&&null!=t.requestInit.body)throw new Error("requestInit is expected to have no pre-existing body, but has one.");this.requestInit=t.requestInit||{}}async save(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserHTTPRequest.save() does not support saving model topology in binary formats yet.");const t=Object.assign({method:this.DEFAULT_METHOD},this.requestInit);t.body=new FormData;const n=Va(e,[{paths:["./model.weights.bin"],weights:e.weightSpecs}]);t.body.append("model.json",new Blob([JSON.stringify(n)],{type:"application/json"}),"model.json"),null!=e.weightData&&t.body.append("model.weights.bin",new Blob([e.weightData],{type:"application/octet-stream"}),"model.weights.bin");const s=await this.fetch(this.path,t);if(s.ok)return{modelArtifactsInfo:Ga(e),responses:[s]};throw new Error(`BrowserHTTPRequest.save() failed due to HTTP response status ${s.status}.`)}async load(){const e=await this.fetch(this.path,this.requestInit);if(!e.ok)throw new Error(`Request to ${this.path} failed with status code ${e.status}. Please verify this URL points to the model JSON of the model to load.`);let t;try{t=await e.json()}catch(e){let t=`Failed to parse model JSON of response from ${this.path}.`;throw this.path.endsWith(".pb")?t+=" Your path contains a .pb file extension. Support for .pb models have been removed in TensorFlow.js 1.0 in favor of .json models. You can re-convert your Python TensorFlow model using the TensorFlow.js 1.0 conversion scripts or you can convert your.pb models with the 'pb2json'NPM script in the tensorflow/tfjs-converter repository.":t+=" Please make sure the server is serving valid JSON for this request.",new Error(t)}const n=t.modelTopology,s=t.weightsManifest;if(null==n&&null==s)throw new Error(`The JSON from HTTP path ${this.path} contains neither model topology or manifest for weights.`);return Ua(t,(e=>this.loadWeights(e)))}async loadWeights(e){const t=Array.isArray(this.path)?this.path[1]:this.path,[n,s]=function(e){const t=e.lastIndexOf("/"),n=e.lastIndexOf("?");return[e.substring(0,t)+"/",n>t?e.substring(n):""]}(t),r=this.weightPathPrefix||n,a=[];for(const t of e)a.push(...t.weights);const i=[],o=[];for(const t of e)for(const e of t.paths)null!=this.weightUrlConverter?o.push(this.weightUrlConverter(e)):i.push(r+e+s);return this.weightUrlConverter&&i.push(...await Promise.all(o)),[a,Ba(await Li(i,{requestInit:this.requestInit,fetchFunc:this.fetch,onProgress:this.onProgress}))]}}function Wi(e){return null!=e.match(Bi.URL_SCHEME_REGEX)}Bi.URL_SCHEME_REGEX=/^https?:\/\//;const Vi=(e,t)=>{if("undefined"==typeof fetch&&(null==t||null==t.fetchFunc))return null;{let n=!0;if(n=Array.isArray(e)?e.every((e=>Wi(e))):Wi(e),n)return Ui(e,t)}return null};function Ui(e,t){return new Bi(e,t)}function Gi(e,t){return Ui(e,t)}ja.registerSaveRouter(Vi),ja.registerLoadRouter(Vi);class Hi{constructor(e){this.modelArtifacts=e}async load(){return this.modelArtifacts}}class ji{constructor(e){this.saveHandler=e}async save(e){return this.saveHandler(e)}}function qi(e,t,n,s){return 1===arguments.length?null!=e.modelTopology||null!=e.weightSpecs?new Hi(e):(console.warn("Please call tf.io.fromMemory() with only one argument. The argument should be of type ModelArtifacts. The multi-argument signature of tf.io.fromMemory() has been deprecated and will be removed in a future release."),new Hi({modelTopology:e})):(console.warn("Please call tf.io.fromMemory() with only one argument. The argument should be of type ModelArtifacts. The multi-argument signature of tf.io.fromMemory() has been deprecated and will be removed in a future release."),new Hi({modelTopology:e,weightSpecs:t,weightData:n,trainingConfig:s}))}function Ki(e){return new ji(e)}const Xi=Aa({matMul_:function(e,t,n=!1,s=!1){let r=Ca(e,"a","matMul"),a=Ca(t,"b","matMul");[r,a]=la(r,a);const i={a:r,b:a},o={transposeA:n,transposeB:s};return ya.runKernel(ft,i,o)}}),Yi=Aa({oneHot_:function(e,t,n=1,s=0){if(t<2)throw new Error(`Error in oneHot: depth must be >=2, but it is ${t}`);const r={indices:Ca(e,"indices","oneHot","int32")},a={depth:t,onValue:n,offValue:s};return ya.runKernel(Yn,r,a)}}),Zi=Aa({transpose_:function(e,t){const n=Ca(e,"x","transpose");if(null==t&&(t=n.shape.map(((e,t)=>t)).reverse()),se(n.rank===t.length,(()=>`Error in transpose: rank of input ${n.rank} must match length of perm ${t}.`)),t.forEach((e=>{se(e>=0&&e<n.rank,(()=>"All entries in 'perm' must be between 0 and "+(n.rank-1)+` but got ${t}`))})),n.rank<=1)return n.clone();const s={x:n},r={perm:t};return ya.runKernel(Ks,s,r)}}),Ji=Aa({confusionMatrix_:function(e,t,n){const s=Ca(e,"labels","confusionMatrix"),r=Ca(t,"predictions","confusionMatrix");se(null==n||n>0&&Number.isInteger(n),(()=>`If provided, numClasses must be a positive integer, but got ${n}`)),se(1===s.rank,(()=>`Expected the rank of labels to be 1, but got ${s.rank}`)),se(1===r.rank,(()=>`Expected the rank of predictions to be 1, but got ${r.rank}`)),se(s.shape[0]===r.shape[0],(()=>`Mismatch in the number of examples: ${s.shape[0]} vs. ${r.shape[0]}. Labels and predictions should have the same number of elements.`)),se(n>0&&Number.isInteger(n),(()=>`numClasses is required to be a positive integer, but got ${n}`));const a=Yi(Ei(s,"int32"),n),i=Yi(Ei(r,"int32"),n),o=Zi(a),l=Xi(o,i);return Ei(l,"int32")}});function Qi(e,t){const n=e.length,s=[];for(let r=0;r<n;r++){const a=n-1-r,i=e[a]||1;(t[t.length-1-r]||1)>1&&1===i&&s.unshift(a)}return s}function eo(e,t){const n=[];for(let s=0;s<t.length;s++){const r=e[e.length-s-1],a=t.length-s-1,i=t[a];(null==r||1===r&&i>1)&&n.unshift(a)}return n}function to(e,t){const n=[],s=Math.max(e.length,t.length);for(let r=0;r<s;r++){let s=e[e.length-r-1];null==s&&(s=1);let a=t[t.length-r-1];if(null==a&&(a=1),1===s)n.unshift(a);else if(1===a)n.unshift(s);else{if(s!==a)throw Error(`Operands could not be broadcast together with shapes ${e} and ${t}.`);n.unshift(s)}}return n}function no(e,t,n){if(ae(e),null!=t&&3!==t.length)throw new Error("tensor3d() requires shape to have three numbers");const s=Sa(e,n);if(3!==s.length&&1!==s.length)throw new Error("tensor3d() requires values to be number[][][] or flat/TypedArray");if(1===s.length&&null==t)throw new Error("tensor3d() requires shape to be provided when `values` are a flat array");return Ra(e,t,s,n)}let so;function ro(e,t=3){if(t>4)throw new Error("Cannot construct Tensor with more than 4 channels from pixels.");if(null==e)throw new Error("pixels passed to tf.browser.fromPixels() can not be null");let n=!1,s=!1,r=!1,a=!1,i=!1,o=!1;if(e.data instanceof Uint8Array)n=!0;else if("undefined"!=typeof ImageData&&e instanceof ImageData)s=!0;else if("undefined"!=typeof HTMLVideoElement&&e instanceof HTMLVideoElement)r=!0;else if("undefined"!=typeof HTMLImageElement&&e instanceof HTMLImageElement)a=!0;else if(null!=e.getContext)i=!0;else{if(!("undefined"!=typeof ImageBitmap&&e instanceof ImageBitmap))throw new Error(`pixels passed to tf.browser.fromPixels() must be either an HTMLVideoElement, HTMLImageElement, HTMLCanvasElement, ImageData in browser, or OffscreenCanvas, ImageData in webworker or {data: Uint32Array, width: number, height: number}, but was ${e.constructor.name}`);o=!0}if(r){const t=2;if(r&&e.readyState<t)throw new Error("The video element has not loaded data yet. Please wait for `loadeddata` event on the <video> element.")}if(null!=cr(tr,ya.backendName)){const n={pixels:e},s={numChannels:t};return ya.runKernel(tr,n,s)}const[l,u]=r?[e.videoWidth,e.videoHeight]:[e.width,e.height];let c,h;if(i)c=e.getContext("2d").getImageData(0,0,l,u).data;else if(s||n)c=e.data;else if(a||r||o){if(null==so)if("undefined"==typeof document){if("undefined"==typeof OffscreenCanvas||"undefined"==typeof OffscreenCanvasRenderingContext2D)throw new Error("Cannot parse input in current context. Reason: OffscreenCanvas Context2D rendering is not supported.");so=new OffscreenCanvas(1,1).getContext("2d")}else so=document.createElement("canvas").getContext("2d");so.canvas.width=l,so.canvas.height=u,so.drawImage(e,0,0,l,u),c=so.getImageData(0,0,l,u).data}if(4===t)h=new Int32Array(c);else{const e=l*u;h=new Int32Array(e*t);for(let n=0;n<e;n++)for(let e=0;e<t;++e)h[n*t+e]=c[4*n+e]}return no(h,[u,l,t],"int32")}async function ao(e,t=3){let n=null;if(He().getBool("WRAP_TO_IMAGEBITMAP")&&function(e){return"undefined"!=typeof window&&"undefined"!=typeof ImageBitmap&&window.hasOwnProperty("createImageBitmap")&&!(e instanceof ImageBitmap)&&function(e){return null!=e&&0!==e.width&&0!==e.height}(e)&&!function(e){return null!=e&&e.data instanceof Uint8Array}(e)}(e)){let t;try{t=await createImageBitmap(e,{premultiplyAlpha:"none"})}catch(e){t=null}n=null!=t&&t.width===e.width&&t.height===e.height?t:e}else n=e;return ro(n,t)}async function io(e,t){let n=Ca(e,"img","toPixels");if(!(e instanceof Zr)){const e=n;n=Ei(e,"int32"),e.dispose()}if(2!==n.rank&&3!==n.rank)throw new Error(`toPixels only supports rank 2 or 3 tensors, got rank ${n.rank}.`);const[s,r]=n.shape.slice(0,2),a=2===n.rank?1:n.shape[2];if(a>4||2===a)throw new Error(`toPixels only supports depth of size 1, 3 or 4 but got ${a}`);if("float32"!==n.dtype&&"int32"!==n.dtype)throw new Error(`Unsupported type for toPixels: ${n.dtype}. Please use float32 or int32 tensors.`);const i=await n.data(),o="float32"===n.dtype?255:1,l=new Uint8ClampedArray(r*s*4);for(let e=0;e<s*r;++e){const t=[0,0,0,255];for(let s=0;s<a;s++){const r=i[e*a+s];if("float32"===n.dtype){if(r<0||r>1)throw new Error(`Tensor values for a float32 Tensor must be in the range [0 - 1] but encountered ${r}.`)}else if("int32"===n.dtype&&(r<0||r>255))throw new Error(`Tensor values for a int32 Tensor must be in the range [0 - 255] but encountered ${r}.`);1===a?(t[0]=r*o,t[1]=r*o,t[2]=r*o):t[s]=r*o}const s=4*e;l[s+0]=Math.round(t[0]),l[s+1]=Math.round(t[1]),l[s+2]=Math.round(t[2]),l[s+3]=Math.round(t[3])}if(null!=t){t.width=r,t.height=s;const e=t.getContext("2d"),n=new ImageData(l,r,s);e.putImageData(n,0,0)}return n!==e&&n.dispose(),l}const oo=Aa({fromPixels_:ro});function lo(e,t){const n=e.shape.length,s=t.shape.length;if(n<1)throw new Error(`tf.gatherND() expects the input to be rank 1 or higher, but the rank was ${n}.`);if(s<1)throw new Error(`tf.gatherND() expects the indices to be rank 1 or higher, but the rank was ${s}.`);if("int32"!==t.dtype)throw new Error(`tf.gatherND() expects the indices to be int32 type, but the dtype was ${t.dtype}.`);if(t.shape[s-1]>n)throw new Error(`index innermost dimension length must be <= tensor rank; saw: ${t.shape[s-1]} vs. ${n}`);if(0===oe(e.shape))throw new Error(`Requested more than 0 entries, but input is empty. Input shape: ${e.shape}.`);const r=t.shape,a=r[r.length-1];let i=1;for(let e=0;e<r.length-1;++e)i*=r[e];const o=e.shape,l=r.slice();l.pop();let u=1;for(let e=a;e<n;++e)u*=o[e],l.push(o[e]);const c=[...Fe(e.shape).map((e=>e/u)),1].slice(0,a);return[l,i,u,c]}function uo(e,t,n){const s=t.rank>1?t.shape[t.rank-1]:1,r=t.rank>1?t.rank-1:1,a=`Must have updates.shape = indices.shape[:batchDim] + shape[sliceDim:], got updates.shape: ${n.shape}, indices.shape: ${t.shape}, shape: ${e}, sliceDim: ${s}, and batchDim: ${r}.`;if(n.rank<r)throw new Error(a+` update.rank < ${r}. `);if(e.length<s+(n.rank-r))throw new Error(a+` Output shape length < ${s+(n.rank-r)}`);if(n.rank!==r+e.length-s)throw new Error(a+" update.rank != "+(r+e.length-s));for(let e=0;e<r;++e)if(n.shape[e]!==t.shape[e])throw new Error(a+` updates.shape[${e}] (${n.shape[e]}) != indices.shape[${e}] (${t.shape[e]}).`);for(let t=0;t<n.rank-r;++t)if(n.shape[t+r]!==e[t+s])throw new Error(a+` updates.shape[${t+r}] (${n.shape[t+r]}) != shape[${t+r}] (${e[t+r]})`)}function co(e,t,n){if(t.rank<1)throw new Error(`tf.scatterND() expects the indices to be rank 1 or higher, but the rank was ${t.rank}.`);if(e.rank<1)throw new Error(`tf.scatterND() expects the updates to be rank 1 or higher, but the rank was ${e.rank}.`);if("int32"!==t.dtype)throw new Error(`The dtype of 'indices' should be int32, but got dtype: ${t.dtype}`);if(n.length<1)throw new Error(`Output rank must be greater or equal to 1, but got shape: ${n}`);if(0===n.length){if(0===t.size)throw new Error(`Indices specified for empty output. indices shape: ${t.shape}`);if(0===e.size)throw new Error(`Updates specified for empty output. updates shape: ${e.shape}`)}uo(n,t,e)}function ho(e,t,n){const s=t.shape.length,r=s>1?t.shape[s-1]:1,a=n.length;let i=1;for(let e=r;e<a;++e)i*=n[e];const o=r<1?1:r;return{sliceRank:r,numUpdates:oe(t.shape)/o,sliceSize:i,strides:[...Fe(n.slice(0,r)),1],outputSize:oe(n)}}function po(e,t,n){const s=e.shape.length;se(s===t.length,(()=>`Error in slice${s}D: Length of begin ${t} must match the rank of the array (${s}).`)),se(s===n.length,(()=>`Error in slice${s}D: Length of size ${n} must match the rank of the array (${s}).`));for(let r=0;r<s;++r)se(t[r]+n[r]<=e.shape[r],(()=>`Error in slice${s}D: begin[${r}] + size[${r}] (${t[r]+n[r]}) would overflow input.shape[${r}] (${e.shape[r]})`))}function fo(e){const t=[];let n=0;for(;e>0;)1&e&&t.push(n),e/=2,n++;return t}function mo(e,t,n){const s=[];for(let r=0;r<e.length;r++)s[r]=Math.ceil((t[r]-e[r])/n[r]);return s}function go(e,t,n,s){const r=[...e];for(let e=r.length;e<s.length;e++)r.push(1);for(let e=0;e<n;e++)0===e?r[t]=1:(r.splice(t,0,1),r.pop());return r}function yo(e,t,n){return n<=e?n:n-(t-1)}function bo(e,t){const n=[];for(let s=0;s<e;s++)n.push(t+s);return n}function xo(e,t,n,s,r,a,i,o,l){const u=e.length;let c=new Array(u),h=new Array(u),p=new Array(u);if(t.length&&n>0){const l=t[0],u=n+1;c=vo(i,l,u,s,e),h=wo(o,l,u,r,e),p=go(a,l,u,e)}else for(let t=0;t<u;t++)c[t]=Io(i,s,a,e,t,l),h[t]=So(o,r,a,e,t,l),p[t]=ko(a,t,l);return{begin:c,end:h,strides:p}}function vo(e,t,n,s,r){const a=[...r],i=bo(n,t);for(let r=0;r<a.length;r++)if(i.indexOf(r)>-1)a[r]=0;else{const i=yo(t,n,r);let o=s[i];e&1<<i&&(o=0),a[r]=o}return a}function wo(e,t,n,s,r){const a=[...r],i=bo(n,t);for(let r=0;r<a.length;r++)if(i.indexOf(r)>-1)a[r]=Number.MAX_SAFE_INTEGER;else{const i=yo(t,n,r);let o=s[i];e&1<<i&&(o=Number.MAX_SAFE_INTEGER),a[r]=o}for(let e=0;e<a.length;e++){const t=r[e];a[e]<0&&(a[e]+=t),a[e]=Z(0,a[e],r[e])}return a}function ko(e,t,n){let s=e[t];return(n&1<<t||null==s)&&(s=1),s}function Io(e,t,n,s,r,a){let i=t[r];const o=n[r]||1;(e&1<<r||a&1<<r||null==i)&&(i=o>0?Number.MIN_SAFE_INTEGER:Number.MAX_SAFE_INTEGER);const l=s[r];return i<0&&(i+=l),i=Z(0,i,l-1),i}function So(e,t,n,s,r,a){let i=t[r];const o=n[r]||1;(e&1<<r||a&1<<r||null==i)&&(i=o>0?Number.MAX_SAFE_INTEGER:Number.MIN_SAFE_INTEGER);const l=s[r];return i<0&&(i+=l),i=o>0?Z(0,i,l):Z(-1,i,l-1),i}function No(e,t,n){let s=n.length;for(let e=0;e<n.length;e++)if(n[e]>1){s=e;break}for(let r=s+1;r<n.length;r++)if(t[r]>0||n[r]!==e[r])return!1;return!0}function To(e,t){let n=e.length>0?e[e.length-1]:1;for(let s=0;s<e.length-1;s++)n+=e[s]*t[s];return n}function Co(e,t,n){let s;const r=e.shape.length;let a;return s="number"==typeof t?[t,...new Array(r-1).fill(0)]:t.length<r?t.concat(new Array(r-t.length).fill(0)):t.slice(),s.forEach((e=>{se(-1!==e,(()=>"slice() does not support negative begin indexing."))})),a=null==n?new Array(r).fill(-1):"number"==typeof n?[n,...new Array(r-1).fill(-1)]:n.length<r?n.concat(new Array(r-n.length).fill(-1)):n,a=a.map(((t,n)=>t>=0?t:(se(-1===t,(()=>`Negative size values should be exactly -1 but got ${t} for the slice() size at index ${n}.`)),e.shape[n]-s[n]))),[s,a]}function $o(e,t,n,s,r,a,i,o,l){let u;if(null==s?(u=new Array(t.length),u.fill(1)):u=s,null!=i&&0!=(i&i-1))throw new Error("Multiple ellipses in slice is not allowed.");let c=!1;const h={dims:u.length,numAddAxisAfterEllipsis:0,begin:t.slice(),end:n.slice(),strides:u.slice(),beginMask:r,endMask:a,ellipsisMask:i,newAxisMask:o,shrinkAxisMask:l};for(let e=0;e<h.dims;e++)c&&0!=(1<<e&o)&&h.numAddAxisAfterEllipsis++,1<<e&i&&(c=!0);c||(h.ellipsisMask|=1<<h.dims,h.dims++);const p={dims:e.length,beginMask:0,endMask:0,beginValid:!1,endValid:!1};!function(e,t){t.beginMask=0,t.endMask=0,t.shrinkAxisMask=0;let n=0;t.beginValid=null!=e.begin,t.endValid=null!=e.end,t.begin=new Array(t.dims),t.end=new Array(t.dims),t.strides=new Array(t.dims),t.finalShapeGatherIndices=[],t.finalShapeGatherIndicesSparse=[],t.inputShapeGatherIndicesSparse=new Array(t.dims);for(let s=0;s<e.dims;s++)if(1<<s&e.ellipsisMask){const r=Math.min(t.dims-(e.dims-s)+1+e.numAddAxisAfterEllipsis,t.dims);for(;n<r;n++)t.begin[n]=0,t.end[n]=0,t.strides[n]=1,t.beginMask|=1<<n,t.endMask|=1<<n,t.finalShapeGatherIndices.push(n),t.finalShapeGatherIndicesSparse.push(-1),t.inputShapeGatherIndicesSparse[n]=s}else if(1<<s&e.newAxisMask)t.finalShapeGatherIndices.push(-2),t.finalShapeGatherIndicesSparse.push(-1);else{if(n===t.begin.length)throw Error(`Index out of range using input dim ${n}; input has only ${t.dims} dims, ${t.begin.length}.`);null!=e.begin&&(t.begin[n]=e.begin[s]),null!=e.end&&(t.end[n]=e.end[s]),t.strides[n]=e.strides[s],e.beginMask&1<<s&&(t.beginMask|=1<<n),e.endMask&1<<s&&(t.endMask|=1<<n),e.shrinkAxisMask&1<<s?(t.finalShapeGatherIndices.push(-1),t.finalShapeGatherIndicesSparse.push(-1),t.shrinkAxisMask|=1<<n):(t.finalShapeGatherIndices.push(n),t.finalShapeGatherIndicesSparse.push(s)),t.inputShapeGatherIndicesSparse[n]=s,n++}}(h,p);let d=!0,f=!0,m=!0;const g=[],y=[];for(let t=0;t<e.length;++t){if(0===p.strides[t])throw Error(`strides[${t}] must be non-zero`);const n=!!(p.shrinkAxisMask&1<<t),s=e[t];if(-1===s){g.push(n?1:-1);continue}const r=[p.beginMask&1<<t,p.endMask&1<<t],a=[p.strides[t]>0?0:-1,p.strides[t]>0?s:s-1];if(n&&p.strides[t]<=0)throw Error("only stride 1 allowed on non-range indexing.");m=m&&1===p.strides[t];const i=!!(p.beginMask&1<<t&&p.endMask&1<<t);if(p.beginValid&&p.endValid){if(n){const e=p.begin[t]<0?s+p.begin[t]:p.begin[t];if(p.begin[t]=e,p.end[t]=p.begin[t]+1,e<0||e>=s)throw Error(`slice index ${p.begin[t]} of dimension ${t} out of bounds.`)}else p.begin[t]=Eo(p.begin[t],0,p.strides[t],s,r,a),p.end[t]=Eo(p.end[t],1,p.strides[t],s,r,a);const e=1===p.strides[t]&&0===p.begin[t]&&p.end[t]===s;d=d&&e,f=f&&(0===t&&1===p.strides[t]||e)}else d=d&&1===p.strides[t]&&i,f=f&&(0===t&&1===p.strides[t]||i);let o,l=!1;if(p.beginValid&&p.endValid?(o=p.end[t]-p.begin[t],l=!0):n?(o=1,l=!0):i&&s>=0&&(o=p.strides[t]<0?-s:s,l=!0),l){let e;e=0===o||o<0!=p.strides[t]<0?0:Math.trunc(o/p.strides[t])+(o%p.strides[t]!=0?1:0),g.push(e)}else g.push(-1)}for(let e=0;e<p.finalShapeGatherIndices.length;++e){const t=p.finalShapeGatherIndices[e];t>=0?y.push(g[t]):-2===t&&y.push(1)}return{finalShapeSparse:y.filter(((e,t)=>-2!==p.finalShapeGatherIndices[t])),finalShape:y,isIdentity:d,sliceDim0:f,isSimpleSlice:m,begin:p.begin,end:p.end,strides:p.strides}}function Eo(e,t,n,s,r,a){if(r[t])return n>0?a[t]:a[t+1&1];{const t=e<0?s+e:e;return t<a[0]?a[0]:t>a[1]?a[1]:t}}class Ao{getClassName(){return this.constructor.className}static fromConfig(e,t){return new e(t)}}class _o{constructor(){this.classNameMap={}}static getMap(){return null==_o.instance&&(_o.instance=new _o),_o.instance}static register(e){_o.getMap().classNameMap[e.className]=[e,e.fromConfig]}}function Ro(e){se(null!=e.className,(()=>"Class being registered does not have the static className property defined.")),se("string"==typeof e.className,(()=>"className is required to be a string, but got type "+typeof e.className)),se(e.className.length>0,(()=>"Class being registered has an empty-string as its className, which is disallowed.")),_o.register(e)}const Fo=.1;function Do(e,t,n){return null==n&&(n=Oo()),Mo(e,t,((e,t)=>Bo(e,t,n)))}function Oo(){return 32===ya.backend.floatPrecision()?.001:Fo}function Mo(e,t,n){let s=!0;if((Se(e)||Se(t))&&(s=!1),Se(e)&&Se(t)&&(s=!0),s){const n=e.constructor.name,s=t.constructor.name;if(n!==s)throw new Error(`Arrays are of different type. Actual: ${n}. Expected: ${s}`)}if(Array.isArray(e)&&Array.isArray(t)){const n=Sa(e),s=Sa(t);if(!ue(n,s))throw new Error(`Arrays have different shapes. Actual: [${n}]. Expected: [${s}]`)}const r=Se(e)?e:ie(e),a=Se(t)?t:ie(t);if(r.length!==a.length)throw new Error(`Arrays have different lengths actual: ${r.length} vs expected: ${a.length}.\nActual:   ${r}.\nExpected: ${a}.`);for(let e=0;e<a.length;++e){const t=r[e],s=a[e];if(!n(t,s))throw new Error(`Arrays differ: actual[${e}] = ${t}, expected[${e}] = ${s}.\nActual:   ${r}.\nExpected: ${a}.`)}}function Lo(e,t){e().then((()=>t.fail()),(()=>t()))}function zo(e,t){const n="string"==typeof t||"number"==typeof t||"boolean"==typeof t?[t]:t;return Ce(e)||Ce(e[0])||Ce(t)||Ce(t[0])?Mo(e,n,((e,t)=>e==t)):Mo(e,t,((e,t)=>Bo(e,t,0)))}function Po(e,t,n){if(null==n&&(n=Oo()),!Bo(e,t,n))throw new Error(`Numbers differ: actual === ${e}, expected === ${t}`)}function Bo(e,t,n){return!isFinite(e)&&!isFinite(t)||!(isNaN(e)||isNaN(t)||Math.abs(e-t)>n)}function Wo(e,t,n){for(let s=0;s<e.length;s++)if(e[s]<t||e[s]>n)throw new Error(`Value out of range:${e[s]} low: ${t}, high: ${n}`)}function Vo(e,t){const n=new Float32Array(e),s=new Float32Array(t);if(n.length!==s.length)throw new Error(`Expected ArrayBuffer to be of length ${s.length}, but it was ${n.length}`);for(let e=0;e<s.length;e++)if(n[e]!==s[e])throw new Error(`Expected ArrayBuffer value at ${e} to be ${s[e]} but got ${n[e]} instead`)}function Uo(e){for(let t=0;t<e.length;t++){const n=e[t];Array.isArray(n)?Uo(n):e[t]=Lr(n)}return e}const Go="3.17.0";function Ho(){He().set("PROD",!0)}function jo(){He().set("DEBUG",!0)}function qo(){He().set("DEPRECATION_WARNINGS_ENABLED",!1),console.warn("TensorFlow.js deprecation warnings have been disabled.")}function Ko(e){He().getBool("DEPRECATION_WARNINGS_ENABLED")&&console.warn(e+" You can disable deprecation warnings with tf.disableDeprecationWarnings().")}function Xo(){ya.disposeVariables()}function Yo(){return ya}function Zo(){return ya.memory()}function Jo(e){return ya.profile(e)}function Qo(e,t){return ya.tidy(e,t)}function el(e){ha(e).forEach((e=>e.dispose()))}function tl(e){return ya.keep(e)}function nl(e){return ya.time(e)}function sl(e){return ya.setBackend(e)}function rl(){return ya.ready()}function al(){return ya.backendName}function il(e){ya.removeBackend(e)}function ol(e){return ya.findBackend(e)}function ll(e){return ya.findBackendFactory(e)}function ul(e,t,n=1){return ya.registerBackend(e,t,n)}function cl(){return ya.backend}function hl(e,t){He().setPlatform(e,t)}Yr=Ko;const pl=Aa({add_:function(e,t){let n=Ca(e,"a","add"),s=Ca(t,"b","add");[n,s]=la(n,s);const r={a:n,b:s};return ya.runKernel(Qe,r)}}),dl=Aa({floorDiv_:function(e,t){let n=Ca(e,"a","floorDiv"),s=Ca(t,"b","floorDiv");[n,s]=la(n,s);const r={a:n,b:s};return ya.runKernel(rn,r)}}),fl=Aa({div_:function(e,t){let n=Ca(e,"a","div"),s=Ca(t,"b","div");if([n,s]=la(n,s),"int32"===n.dtype&&"int32"===s.dtype)return dl(n,s);const r={a:n,b:s};return ya.runKernel(Ht,r,{})}}),ml=Aa({mul_:function(e,t){let n=Ca(e,"a","mul"),s=Ca(t,"b","mul");[n,s]=la(n,s);const r={a:n,b:s};return ya.runKernel(Un,r)}}),gl=Aa({sqrt_:function(e){const t={x:Ca(e,"x","sqrt","float32")};return ya.runKernel(Ts,t)}}),yl=Aa({square_:function(e){const t=Ca(e,"x","square");return ya.runKernel("Square",{x:t},{})}}),bl=Aa({zerosLike_:function(e){const t={x:Ca(e,"x","zerosLike")};return ya.runKernel(Qs,t)}});function xl(e){return se(_e(e),(()=>"The f passed in grad(f) must be a function")),(t,n)=>{const s=Ca(t,"x","tf.grad","string_or_numeric"),r=null!=n?Ca(n,"dy","tf.grad"):null;return ya.tidy((()=>{const{value:t,grads:n}=ya.gradients((()=>e(s)),[s],r);return null!=r&&re(t.shape,r.shape,"The shape of dy passed in grad(f)(x, dy) must match the shape returned by f(x)"),Nl(n),n[0]}))}}function vl(e){return se(_e(e),(()=>"The f passed in grads(f) must be a function")),(t,n)=>{se(Array.isArray(t),(()=>"The args passed in grads(f)(args) must be an array of `Tensor`s or `TensorLike`s"));const s=$a(t,"args","tf.grads","string_or_numeric"),r=null!=n?Ca(n,"dy","tf.grads"):null;return ya.tidy((()=>{const{value:t,grads:n}=ya.gradients((()=>e(...s)),s,r);return null!=r&&re(t.shape,r.shape,"The shape of dy passed in grads(f)([x1,...], dy) must match the shape returned by f([x1,...])"),Nl(n),n}))}}function wl(e){return se(_e(e),(()=>"The f passed in valueAndGrad(f) must be a function")),(t,n)=>{se(t instanceof Zr,(()=>"The x passed in valueAndGrad(f)(x) must be a tensor")),se(null==n||n instanceof Zr,(()=>"The dy passed in valueAndGrad(f)(x, dy) must be a tensor"));const{grads:s,value:r}=ya.gradients((()=>e(t)),[t],n);return Nl(s),{grad:s[0],value:r}}}function kl(e){return se(_e(e),(()=>"The f passed in valueAndGrads(f) must be a function")),(t,n)=>{se(Array.isArray(t)&&t.every((e=>e instanceof Zr)),(()=>"The args passed in valueAndGrads(f)(args) must be array of tensors")),se(null==n||n instanceof Zr,(()=>"The dy passed in valueAndGrads(f)(args, dy) must be a tensor"));const s=ya.gradients((()=>e(...t)),t,n);return null!=n&&re(s.value.shape,n.shape,"The shape of dy passed in valueAndGrads(f)([x1,...], dy) must match the shape returned by f([x1,...])"),Nl(s.grads),s}}function Il(e,t){se(_e(e),(()=>"The f passed in variableGrads(f) must be a function")),se(null==t||Array.isArray(t)&&t.every((e=>e instanceof Qr)),(()=>"The varList passed in variableGrads(f, varList) must be an array of variables"));const n=null!=t;if(!n){t=[];for(const e in ya.registeredVariables)t.push(ya.registeredVariables[e])}const s=n?t.filter((e=>!e.trainable)):null,r=t.length;t=t.filter((e=>e.trainable)),se(t.length>0,(()=>`variableGrads() expects at least one of the input variables to be trainable, but none of the ${r} variables is trainable.`));const{value:a,grads:i}=ya.gradients(e,t,null,!0);se(i.some((e=>null!=e)),(()=>"Cannot find a connection between any variable and the result of the loss function y=f(x). Please make sure the operations that use variables are inside the function f passed to minimize().")),se(0===a.rank,(()=>`The f passed in variableGrads(f) must return a scalar, but it returned a rank-${a.rank} tensor`));const o={};return t.forEach(((e,t)=>{null!=i[t]&&(o[e.name]=i[t])})),null!=s&&s.forEach((e=>o[e.name]=null)),{value:a,grads:o}}function Sl(e){return ya.customGrad(e)}function Nl(e){if(e.filter((e=>null==e)).length>0)throw new Error("Cannot compute gradient of y=f(x) with respect to x. Make sure that\n    the f you passed encloses all operations that lead from x to y.")}function Tl(e,t){if((Se(e)&&"string"!==t||Array.isArray(e))&&"complex64"!==t)throw new Error("Error creating a new Scalar: value must be a primitive (number|boolean|string)");if("string"===t&&Se(e)&&!(e instanceof Uint8Array))throw new Error("When making a scalar from encoded string, the value must be `Uint8Array`.");return Ra(e,[],[],t)}class Cl extends Ao{minimize(e,t=!1,n){const{value:s,grads:r}=this.computeGradients(e,n);if(null!=n){const e=n.map((e=>({name:e.name,tensor:r[e.name]})));this.applyGradients(e)}else this.applyGradients(r);return el(r),t?s:(s.dispose(),null)}get iterations(){return null==this.iterations_&&(this.iterations_=0),this.iterations_}incrementIterations(){this.iterations_=this.iterations+1}computeGradients(e,t){return Il(e,t)}dispose(){null!=this.iterations_&&el(this.iterations_)}async saveIterations(){return null==this.iterations_&&(this.iterations_=0),{name:"iter",tensor:Tl(this.iterations_,"int32")}}async getWeights(){throw new Error("getWeights() is not implemented for this optimizer yet.")}async setWeights(e){throw new Error(`setWeights() is not implemented for this optimizer class ${this.getClassName()}`)}async extractIterations(e){return this.iterations_=(await e[0].tensor.data())[0],e.slice(1)}}Object.defineProperty(Cl,Symbol.hasInstance,{value:e=>null!=e.minimize&&null!=e.computeGradients&&null!=e.applyGradients});class $l extends Cl{constructor(e,t,n=null){super(),this.learningRate=e,this.rho=t,this.epsilon=n,this.accumulatedGrads=[],this.accumulatedUpdates=[],null==n&&(this.epsilon=ya.backend.epsilon())}applyGradients(e){(Array.isArray(e)?e.map((e=>e.name)):Object.keys(e)).forEach(((t,n)=>{const s=ya.registeredVariables[t];null==this.accumulatedGrads[n]&&(this.accumulatedGrads[n]={originalName:`${t}/accum_grad`,variable:Qo((()=>bl(s).variable(!1)))}),null==this.accumulatedUpdates[n]&&(this.accumulatedUpdates[n]={originalName:`${t}/accum_var`,variable:Qo((()=>bl(s).variable(!1)))});const r=Array.isArray(e)?e[n].tensor:e[t];if(null==r)return;const a=this.accumulatedGrads[n].variable,i=this.accumulatedUpdates[n].variable;Qo((()=>{const e=pl(ml(a,this.rho),ml(yl(r),1-this.rho)),t=ml(fl(gl(pl(i,this.epsilon)),gl(pl(a,this.epsilon))),r),n=pl(ml(i,this.rho),ml(yl(t),1-this.rho));a.assign(e),i.assign(n);const o=pl(ml(t,-this.learningRate),s);s.assign(o)}))})),this.incrementIterations()}dispose(){null!=this.accumulatedUpdates&&(el(this.accumulatedGrads.map((e=>e.variable))),el(this.accumulatedUpdates.map((e=>e.variable))))}async getWeights(){const e=[...this.accumulatedGrads,...this.accumulatedUpdates];return[await this.saveIterations()].concat(e.map((e=>({name:e.originalName,tensor:e.variable}))))}async setWeights(e){const t=(e=await this.extractIterations(e)).length/2;this.accumulatedGrads=e.slice(0,t).map((e=>({originalName:e.name,variable:e.tensor.variable(!1)}))),this.accumulatedUpdates=e.slice(t,2*t).map((e=>({originalName:e.name,variable:e.tensor.variable(!1)})))}getConfig(){return{learningRate:this.learningRate,rho:this.rho,epsilon:this.epsilon}}static fromConfig(e,t){return new e(t.learningRate,t.rho,t.epsilon)}}function El(e,t,n){const s={shape:e,value:t,dtype:n};return ya.runKernel(tn,{},s)}$l.className="Adadelta",Ro($l);class Al extends Cl{constructor(e,t=.1){super(),this.learningRate=e,this.initialAccumulatorValue=t,this.accumulatedGrads=[]}applyGradients(e){(Array.isArray(e)?e.map((e=>e.name)):Object.keys(e)).forEach(((t,n)=>{const s=ya.registeredVariables[t];if(null==this.accumulatedGrads[n]){const e=!1;this.accumulatedGrads[n]={originalName:`${t}/accumulator`,variable:Qo((()=>El(s.shape,this.initialAccumulatorValue).variable(e)))}}const r=Array.isArray(e)?e[n].tensor:e[t];if(null==r)return;const a=this.accumulatedGrads[n].variable;Qo((()=>{const e=pl(a,yl(r));a.assign(e);const t=pl(ml(fl(r,gl(pl(e,ya.backend.epsilon()))),-this.learningRate),s);s.assign(t)}))})),this.incrementIterations()}dispose(){null!=this.accumulatedGrads&&el(this.accumulatedGrads.map((e=>e.variable)))}async getWeights(){return[await this.saveIterations()].concat(this.accumulatedGrads.map((e=>({name:e.originalName,tensor:e.variable}))))}async setWeights(e){e=await this.extractIterations(e),this.accumulatedGrads=e.map((e=>({originalName:e.name,variable:e.tensor.variable(!1)})))}getConfig(){return{learningRate:this.learningRate,initialAccumulatorValue:this.initialAccumulatorValue}}static fromConfig(e,t){return new e(t.learningRate,t.initialAccumulatorValue)}}Al.className="Adagrad",Ro(Al);const _l=Aa({pow_:function(e,t){let n=Ca(e,"base","pow"),s=Ca(t,"exp","pow");[n,s]=la(n,s);const r={a:n,b:s};return ya.runKernel(es,r)}}),Rl=Aa({sub_:function(e,t){let n=Ca(e,"a","sub"),s=Ca(t,"b","sub");[n,s]=la(n,s);const r={a:n,b:s};return ya.runKernel(Vs,r)}});class Fl extends Cl{constructor(e,t,n,s=null){super(),this.learningRate=e,this.beta1=t,this.beta2=n,this.epsilon=s,this.accumulatedFirstMoment=[],this.accumulatedSecondMoment=[],Qo((()=>{this.accBeta1=Tl(t).variable(),this.accBeta2=Tl(n).variable()})),null==s&&(this.epsilon=ya.backend.epsilon())}applyGradients(e){const t=Array.isArray(e)?e.map((e=>e.name)):Object.keys(e);Qo((()=>{const n=Rl(1,this.accBeta1),s=Rl(1,this.accBeta2);t.forEach(((t,r)=>{const a=ya.registeredVariables[t];null==this.accumulatedFirstMoment[r]&&(this.accumulatedFirstMoment[r]={originalName:`${t}/m`,variable:Qo((()=>bl(a).variable(!1)))}),null==this.accumulatedSecondMoment[r]&&(this.accumulatedSecondMoment[r]={originalName:`${t}/v`,variable:Qo((()=>bl(a).variable(!1)))});const i=Array.isArray(e)?e[r].tensor:e[t];if(null==i)return;const o=this.accumulatedFirstMoment[r].variable,l=this.accumulatedSecondMoment[r].variable,u=pl(ml(o,this.beta1),ml(i,1-this.beta1)),c=pl(ml(l,this.beta2),ml(yl(i),1-this.beta2)),h=fl(u,n),p=fl(c,s);o.assign(u),l.assign(c);const d=pl(ml(fl(h,pl(gl(p),this.epsilon)),-this.learningRate),a);a.assign(d)})),this.accBeta1.assign(ml(this.accBeta1,this.beta1)),this.accBeta2.assign(ml(this.accBeta2,this.beta2))})),this.incrementIterations()}dispose(){this.accBeta1.dispose(),this.accBeta2.dispose(),null!=this.accumulatedFirstMoment&&el(this.accumulatedFirstMoment.map((e=>e.variable))),null!=this.accumulatedSecondMoment&&el(this.accumulatedSecondMoment.map((e=>e.variable)))}async getWeights(){const e=[...this.accumulatedFirstMoment,...this.accumulatedSecondMoment];return[await this.saveIterations()].concat(e.map((e=>({name:e.originalName,tensor:e.variable}))))}async setWeights(e){e=await this.extractIterations(e),Qo((()=>{this.accBeta1.assign(_l(this.beta1,this.iterations_+1)),this.accBeta2.assign(_l(this.beta2,this.iterations_+1))}));const t=e.length/2;this.accumulatedFirstMoment=e.slice(0,t).map((e=>({originalName:e.name,variable:e.tensor.variable(!1)}))),this.accumulatedSecondMoment=e.slice(t,2*t).map((e=>({originalName:e.name,variable:e.tensor.variable(!1)})))}getConfig(){return{learningRate:this.learningRate,beta1:this.beta1,beta2:this.beta2,epsilon:this.epsilon}}static fromConfig(e,t){return new e(t.learningRate,t.beta1,t.beta2,t.epsilon)}}Fl.className="Adam",Ro(Fl);const Dl=Aa({abs_:function(e){const t=Ca(e,"x","abs");if("complex64"===t.dtype){const e={x:t};return ya.runKernel(It,e)}{const e={x:t};return ya.runKernel(Ye,e)}}}),Ol=Aa({maximum_:function(e,t){let n=Ca(e,"a","maximum"),s=Ca(t,"b","maximum");[n,s]=la(n,s),"bool"===n.dtype&&(n=Ei(n,"int32"),s=Ei(s,"int32")),to(n.shape,s.shape);const r={a:n,b:s};return ya.runKernel(_n,r)}});class Ml extends Cl{constructor(e,t,n,s=null,r=0){super(),this.learningRate=e,this.beta1=t,this.beta2=n,this.epsilon=s,this.decay=r,this.accumulatedFirstMoment=[],this.accumulatedWeightedInfNorm=[],Qo((()=>{this.iteration=Tl(0).variable(),this.accBeta1=Tl(t).variable()})),null==s&&(this.epsilon=ya.backend.epsilon())}applyGradients(e){const t=Array.isArray(e)?e.map((e=>e.name)):Object.keys(e);Qo((()=>{const n=Rl(1,this.accBeta1),s=fl(-this.learningRate,pl(ml(this.iteration,this.decay),1));t.forEach(((t,r)=>{const a=ya.registeredVariables[t];null==this.accumulatedFirstMoment[r]&&(this.accumulatedFirstMoment[r]={originalName:`${t}/m`,variable:bl(a).variable(!1)}),null==this.accumulatedWeightedInfNorm[r]&&(this.accumulatedWeightedInfNorm[r]={originalName:`${t}/v`,variable:bl(a).variable(!1)});const i=Array.isArray(e)?e[r].tensor:e[t];if(null==i)return;const o=this.accumulatedFirstMoment[r].variable,l=this.accumulatedWeightedInfNorm[r].variable,u=pl(ml(o,this.beta1),ml(i,1-this.beta1)),c=ml(l,this.beta2),h=Dl(i),p=Ol(c,h);o.assign(u),l.assign(p);const d=pl(ml(fl(s,n),fl(u,pl(p,this.epsilon))),a);a.assign(d)})),this.iteration.assign(pl(this.iteration,1)),this.accBeta1.assign(ml(this.accBeta1,this.beta1))})),this.incrementIterations()}dispose(){this.accBeta1.dispose(),this.iteration.dispose(),null!=this.accumulatedFirstMoment&&el(this.accumulatedFirstMoment.map((e=>e.variable))),null!=this.accumulatedWeightedInfNorm&&el(this.accumulatedWeightedInfNorm.map((e=>e.variable)))}async getWeights(){throw new Error("getWeights() is not implemented for Adamax yet.")}async setWeights(e){throw new Error("setWeights() is not implemented for Adamax yet.")}getConfig(){return{learningRate:this.learningRate,beta1:this.beta1,beta2:this.beta2,epsilon:this.epsilon,decay:this.decay}}static fromConfig(e,t){return new e(t.learningRate,t.beta1,t.beta2,t.epsilon,t.decay)}}Ml.className="Adamax",Ro(Ml);class Ll extends Cl{constructor(e){super(),this.learningRate=e,this.setLearningRate(e)}applyGradients(e){(Array.isArray(e)?e.map((e=>e.name)):Object.keys(e)).forEach(((t,n)=>{const s=Array.isArray(e)?e[n].tensor:e[t];if(null==s)return;const r=ya.registeredVariables[t];Qo((()=>{const e=pl(ml(this.c,s),r);r.assign(e)}))})),this.incrementIterations()}setLearningRate(e){this.learningRate=e,null!=this.c&&this.c.dispose(),this.c=tl(Tl(-e))}dispose(){this.c.dispose()}async getWeights(){return[await this.saveIterations()]}async setWeights(e){if(0!==(e=await this.extractIterations(e)).length)throw new Error("SGD optimizer does not have settable weights.")}getConfig(){return{learningRate:this.learningRate}}static fromConfig(e,t){return new e(t.learningRate)}}Ll.className="SGD",Ro(Ll);class zl extends Ll{constructor(e,t,n=!1){super(e),this.learningRate=e,this.momentum=t,this.useNesterov=n,this.accumulations=[],this.m=Tl(this.momentum)}applyGradients(e){(Array.isArray(e)?e.map((e=>e.name)):Object.keys(e)).forEach(((t,n)=>{const s=ya.registeredVariables[t];if(null==this.accumulations[n]){const e=!1;this.accumulations[n]={originalName:`${t}/momentum`,variable:Qo((()=>bl(s).variable(e)))}}const r=this.accumulations[n].variable,a=Array.isArray(e)?e[n].tensor:e[t];null!=a&&Qo((()=>{let e;const t=pl(ml(this.m,r),a);e=this.useNesterov?pl(ml(this.c,pl(a,ml(t,this.m))),s):pl(ml(this.c,t),s),r.assign(t),s.assign(e)}))})),this.incrementIterations()}dispose(){this.m.dispose(),null!=this.accumulations&&el(this.accumulations.map((e=>e.variable)))}setMomentum(e){this.momentum=e}async getWeights(){return[await this.saveIterations()].concat(this.accumulations.map((e=>({name:e.originalName,tensor:e.variable}))))}async setWeights(e){e=await this.extractIterations(e),this.accumulations=e.map((e=>({originalName:e.name,variable:e.tensor.variable(!1)})))}getConfig(){return{learningRate:this.learningRate,momentum:this.momentum,useNesterov:this.useNesterov}}static fromConfig(e,t){return new e(t.learningRate,t.momentum,t.useNesterov)}}zl.className="Momentum",Ro(zl);class Pl extends Cl{constructor(e,t=.9,n=0,s=null,r=!1){if(super(),this.learningRate=e,this.decay=t,this.momentum=n,this.epsilon=s,this.accumulatedMeanSquares=[],this.accumulatedMoments=[],this.accumulatedMeanGrads=[],this.centered=r,null==s&&(this.epsilon=ya.backend.epsilon()),null==e)throw new Error("learningRate for RMSPropOptimizer must be defined.")}applyGradients(e){(Array.isArray(e)?e.map((e=>e.name)):Object.keys(e)).forEach(((t,n)=>{const s=ya.registeredVariables[t],r=!1;null==this.accumulatedMeanSquares[n]&&(this.accumulatedMeanSquares[n]={originalName:`${t}/rms`,variable:Qo((()=>bl(s).variable(r)))}),null==this.accumulatedMoments[n]&&(this.accumulatedMoments[n]={originalName:`${t}/momentum`,variable:Qo((()=>bl(s).variable(r)))}),null==this.accumulatedMeanGrads[n]&&this.centered&&(this.accumulatedMeanGrads[n]={originalName:`${t}/mg`,variable:Qo((()=>bl(s).variable(r)))});const a=Array.isArray(e)?e[n].tensor:e[t];if(null==a)return;const i=this.accumulatedMeanSquares[n].variable,o=this.accumulatedMoments[n].variable;Qo((()=>{const e=pl(ml(i,this.decay),ml(yl(a),1-this.decay));if(this.centered){const t=this.accumulatedMeanGrads[n].variable,r=pl(ml(t,this.decay),ml(a,1-this.decay)),l=fl(ml(a,this.learningRate),gl(Rl(e,pl(yl(r),this.epsilon)))),u=pl(ml(o,this.momentum),l);i.assign(e),t.assign(r),o.assign(u);const c=Rl(s,u);s.assign(c)}else{const e=pl(ml(i,this.decay),ml(yl(a),1-this.decay)),t=pl(ml(o,this.momentum),fl(ml(a,this.learningRate),gl(pl(e,this.epsilon))));i.assign(e),o.assign(t);const n=Rl(s,t);s.assign(n)}}))})),this.incrementIterations()}dispose(){null!=this.accumulatedMeanSquares&&el(this.accumulatedMeanSquares.map((e=>e.variable))),null!=this.accumulatedMeanGrads&&this.centered&&el(this.accumulatedMeanGrads.map((e=>e.variable))),null!=this.accumulatedMoments&&el(this.accumulatedMoments.map((e=>e.variable)))}async getWeights(){const e=[...this.accumulatedMeanSquares,...this.accumulatedMoments];return this.centered&&e.push(...this.accumulatedMeanGrads),[await this.saveIterations()].concat(e.map((e=>({name:e.originalName,tensor:e.variable}))))}async setWeights(e){e=await this.extractIterations(e);const t=this.centered?e.length/3:e.length/2,n=!1;this.accumulatedMeanSquares=e.slice(0,t).map((e=>({originalName:e.name,variable:e.tensor.variable(n)}))),this.accumulatedMoments=e.slice(t,2*t).map((e=>({originalName:e.name,variable:e.tensor.variable(n)}))),this.centered&&(this.accumulatedMeanGrads=e.slice(2*t,3*t).map((e=>({originalName:e.name,variable:e.tensor.variable(n)}))))}getConfig(){return{learningRate:this.learningRate,decay:this.decay,momentum:this.momentum,epsilon:this.epsilon,centered:this.centered}}static fromConfig(e,t){return new e(t.learningRate,t.decay,t.momentum,t.epsilon,t.centered)}}Pl.className="RMSProp",Ro(Pl);class Bl{static sgd(e){return new Ll(e)}static momentum(e,t,n=!1){return new zl(e,t,n)}static rmsprop(e,t=.9,n=0,s=null,r=!1){return new Pl(e,t,n,s,r)}static adam(e=.001,t=.9,n=.999,s=null){return new Fl(e,t,n,s)}static adadelta(e=.001,t=.95,n=null){return new $l(e,t,n)}static adamax(e=.002,t=.9,n=.999,s=null,r=0){return new Ml(e,t,n,s,r)}static adagrad(e,t=.1){return new Al(e,t)}}const Wl=Aa({acos_:function(e){const t={x:Ca(e,"x","acos")};return ya.runKernel(Ze,t)}}),Vl=Aa({acosh_:function(e){const t={x:Ca(e,"x","acosh")};return ya.runKernel(Je,t)}}),Ul=Aa({addN_:function(e){se(Array.isArray(e),(()=>"The argument passed to tf.addN() must be a list of tensors")),se(e.length>=1,(()=>`Must pass at least one tensor to tf.addN(), but got ${e.length}`));const t=e.map(((e,t)=>Ca(e,`tensors${t}`,"addN"))),n=t[0];t.forEach((e=>{if(e.dtype!==n.dtype)throw new Error("All tensors passed to tf.addN() must have the same dtype")})),t.forEach((e=>{if(!ue(e.shape,n.shape))throw new Error("All tensors passed to tf.addN() must have the same shape")}));const s=t;return ya.runKernel(et,s)}}),Gl=Aa({all_:function(e,t=null,n=!1){const s={x:Ca(e,"x","all","bool")},r={axis:t,keepDims:n};return ya.runKernel(tt,s,r)}}),Hl=Aa({any_:function(e,t=null,n=!1){const s={x:Ca(e,"x","any","bool")},r={axis:t,keepDims:n};return ya.runKernel(nt,s,r)}}),jl=Aa({argMax_:function(e,t=0){const n={x:Ca(e,"x","argMax")},s={axis:t};return ya.runKernel(st,n,s)}}),ql=Aa({argMin_:function(e,t=0){const n={x:Ca(e,"x","argMin")},s={axis:t};return ya.runKernel(rt,n,s)}}),Kl=Aa({asin_:function(e){const t={x:Ca(e,"x","asin")};return ya.runKernel(at,t)}}),Xl=Aa({asinh_:function(e){const t={x:Ca(e,"x","asinh")};return ya.runKernel(it,t)}}),Yl=Aa({atan_:function(e){const t={x:Ca(e,"x","atan")};return ya.runKernel(ot,t)}}),Zl=Aa({atan2_:function(e,t){let n=Ca(e,"a","atan2"),s=Ca(t,"b","atan2");[n,s]=la(n,s);const r={a:n,b:s};return ya.runKernel(ut,r)}}),Jl=Aa({atanh_:function(e){const t={x:Ca(e,"x","atanh")};return ya.runKernel(lt,t)}});function Ql(e,t,n,s,r="NHWC",a){return nu(e,[...t,e[3]],n,a,s,null,null,hu(r))}function eu(e,t,n,s,r,a,i="channelsLast"){const[o,l]=au(t);let u;if("channelsLast"===i)u=[o,l,e[3],e[3]];else{if("channelsFirst"!==i)throw new Error(`Unknown dataFormat ${i}`);u=[o,l,e[1],e[1]]}return nu(e,u,n,s,r,a,!1,i)}function tu(e,t,n,s,r,a,i="NDHWC"){const[o,l,u]=iu(t);let c,h;if("NDHWC"===i)h="channelsLast",c=[o,l,u,e[4],e[4]];else{if("NCDHW"!==i)throw new Error(`Unknown dataFormat ${i}`);h="channelsFirst",c=[o,l,u,e[1],e[1]]}return su(e,c,n,s,r,!1,h,a)}function nu(e,t,n,s,r,a,i=!1,o="channelsLast"){let[l,u,c,h]=[-1,-1,-1,-1];if("channelsLast"===o)[l,u,c,h]=e;else{if("channelsFirst"!==o)throw new Error(`Unknown dataFormat ${o}`);[l,h,u,c]=e}const[p,d,,f]=t,[m,g]=au(n),[y,b]=au(s),x=ou(p,y),v=ou(d,b),{padInfo:w,outHeight:k,outWidth:I}=function(e,t,n,s,r,a,i,o,l){let u,c,h;if("number"==typeof e){u={top:e,bottom:e,left:e,right:e,type:0===e?"VALID":"NUMBER"};const r=function(e,t,n,s,r){null==s&&(s=ru(e,t,n));const a=e[1];return[lu((e[0]-t+2*s)/n+1,r),lu((a-t+2*s)/n+1,r)]}([t,n],a,s,e,o);c=r[0],h=r[1]}else if("same"===e){c=Math.ceil(t/s),h=Math.ceil(n/r);const e=Math.max(0,(c-1)*s+a-t),o=Math.max(0,(h-1)*r+i-n),l=Math.floor(e/2),p=e-l,d=Math.floor(o/2);u={top:l,bottom:p,left:d,right:o-d,type:"SAME"}}else if("valid"===e)u={top:0,bottom:0,left:0,right:0,type:"VALID"},c=Math.ceil((t-a+1)/s),h=Math.ceil((n-i+1)/r);else{if("object"!=typeof e)throw Error(`Unknown padding parameter: ${e}`);{const p="channelsLast"===l?e[1][0]:e[2][0],d="channelsLast"===l?e[1][1]:e[2][1],f="channelsLast"===l?e[2][0]:e[3][0],m="channelsLast"===l?e[2][1]:e[3][1];u={top:p,bottom:d,left:f,right:m,type:0===p&&0===d&&0===f&&0===m?"VALID":"EXPLICIT"},c=lu((t-a+p+d)/s+1,o),h=lu((n-i+f+m)/r+1,o)}}return{padInfo:u,outHeight:c,outWidth:h}}(r,u,c,m,g,x,v,a,o),S=i?f*h:f;let N;return"channelsFirst"===o?N=[l,S,k,I]:"channelsLast"===o&&(N=[l,k,I,S]),{batchSize:l,dataFormat:o,inHeight:u,inWidth:c,inChannels:h,outHeight:k,outWidth:I,outChannels:S,padInfo:w,strideHeight:m,strideWidth:g,filterHeight:p,filterWidth:d,effectiveFilterHeight:x,effectiveFilterWidth:v,dilationHeight:y,dilationWidth:b,inShape:e,outShape:N,filterShape:t}}function su(e,t,n,s,r,a=!1,i="channelsLast",o){let[l,u,c,h,p]=[-1,-1,-1,-1,-1];if("channelsLast"===i)[l,u,c,h,p]=e;else{if("channelsFirst"!==i)throw new Error(`Unknown dataFormat ${i}`);[l,p,u,c,h]=e}const[d,f,m,,g]=t,[y,b,x]=iu(n),[v,w,k]=iu(s),I=ou(d,v),S=ou(f,w),N=ou(m,k),{padInfo:T,outDepth:C,outHeight:$,outWidth:E}=function(e,t,n,s,r,a,i,o,l,u,c){let h,p,d,f;if("number"==typeof e){h={top:e,bottom:e,left:e,right:e,front:e,back:e,type:0===e?"VALID":"NUMBER"};const a=function(e,t,n,s,r,a){null==r&&(r=ru(e,t,s));const i=e[1],o=e[2];return[lu((e[0]-t+2*r)/s+1,a),lu((i-t+2*r)/s+1,a),lu((o-t+2*r)/s+1,a),1]}([t,n,s,1],o,0,r,e,c);p=a[0],d=a[1],f=a[2]}else if("same"===e){p=Math.ceil(t/r),d=Math.ceil(n/a),f=Math.ceil(s/i);const e=(p-1)*r+o-t,c=(d-1)*a+l-n,m=(f-1)*i+u-s,g=Math.floor(e/2),y=e-g,b=Math.floor(c/2),x=c-b,v=Math.floor(m/2);h={top:b,bottom:x,left:v,right:m-v,front:g,back:y,type:"SAME"}}else{if("valid"!==e)throw Error(`Unknown padding parameter: ${e}`);h={top:0,bottom:0,left:0,right:0,front:0,back:0,type:"VALID"},p=Math.ceil((t-o+1)/r),d=Math.ceil((n-l+1)/a),f=Math.ceil((s-u+1)/i)}return{padInfo:h,outDepth:p,outHeight:d,outWidth:f}}(r,u,c,h,y,b,x,I,S,N,o),A=a?g*p:g;let _;return"channelsFirst"===i?_=[l,A,C,$,E]:"channelsLast"===i&&(_=[l,C,$,E,A]),{batchSize:l,dataFormat:i,inDepth:u,inHeight:c,inWidth:h,inChannels:p,outDepth:C,outHeight:$,outWidth:E,outChannels:A,padInfo:T,strideDepth:y,strideHeight:b,strideWidth:x,filterDepth:d,filterHeight:f,filterWidth:m,effectiveFilterDepth:I,effectiveFilterHeight:S,effectiveFilterWidth:N,dilationDepth:v,dilationHeight:w,dilationWidth:k,inShape:e,outShape:_,filterShape:t}}function ru(e,t,n,s=1){const r=ou(t,s);return Math.floor((e[0]*(n-1)-n+r)/2)}function au(e){return"number"==typeof e?[e,e,e]:2===e.length?[e[0],e[1],1]:e}function iu(e){return"number"==typeof e?[e,e,e]:e}function ou(e,t){return t<=1?e:e+(e-1)*(t-1)}function lu(e,t){if(!t)return Math.trunc(e);switch(t){case"round":return Math.round(e);case"ceil":return Math.ceil(e);case"floor":return Math.floor(e);default:throw new Error(`Unknown roundingMode ${t}`)}}function uu(e){const[t,n,s]=au(e);return 1===t&&1===n&&1===s}function cu(e,t){return uu(e)||uu(t)}function hu(e){if("NHWC"===e)return"channelsLast";if("NCHW"===e)return"channelsFirst";throw new Error(`Unknown dataFormat ${e}`)}function pu(e,t,n){if(null!=n){if("string"==typeof t)throw Error(`Error in ${e}: pad must be an integer when using dimRoundingMode ${n} but got pad ${t}.`);if("number"==typeof t)se(ce(t),(()=>`Error in ${e}: pad must be an integer when using dimRoundingMode ${n} but got pad ${t}.`));else{if("object"!=typeof t)throw Error(`Error in ${e}: Unknown padding parameter: ${t}`);t.forEach((t=>{t.forEach((t=>{se(ce(t),(()=>`Error in ${e}: pad must be an integer when using dimRoundingMode ${n} but got pad ${t}.`))}))}))}}}const du=Aa({reshape_:function(e,t){const n={x:Ca(e,"x","reshape","string_or_numeric")},s={shape:t};return ya.runKernel(os,n,s)}}),fu=Aa({avgPool_:function(e,t,n,s,r){const a=Ca(e,"x","avgPool","float32");se(cu(n,1),(()=>`Error in avgPool: Either strides or dilations must be 1. Got strides ${n} and dilations '1'`));let i=a,o=!1;3===a.rank&&(o=!0,i=du(a,[1,a.shape[0],a.shape[1],a.shape[2]])),se(4===i.rank,(()=>`Error in avgPool: x must be rank 4 but got rank ${i.rank}.`)),pu("avgPool",s,r);const l={x:i},u={filterSize:t,strides:n,pad:s,dimRoundingMode:r};let c=ya.runKernel(ct,l,u);return c=Ei(c,a.dtype),o?du(c,[c.shape[1],c.shape[2],c.shape[3]]):c}}),mu=Aa({avgPool3d_:function(e,t,n,s,r,a="NDHWC"){const i=Ca(e,"x","avgPool3d","float32");let o=i,l=!1;4===i.rank&&(l=!0,o=du(i,[1,i.shape[0],i.shape[1],i.shape[2],i.shape[3]])),se(5===o.rank,(()=>`Error in avgPool3d: x must be rank 5 but got rank ${o.rank}.`)),se("NDHWC"===a,(()=>`Error in avgPool3d: Only NDHWC is currently supported, but got dataFormat of ${a}`)),pu("avgPool3d",s,r);const u={x:o},c={filterSize:t,strides:n,pad:s,dimRoundingMode:r,dataFormat:a};let h=ya.runKernel(pt,u,c);return h=Ei(h,o.dtype),l?du(h,[h.shape[1],h.shape[2],h.shape[3],h.shape[4]]):h}}),gu=Aa({concat_:function(e,t=0){se(e.length>=1,(()=>"Pass at least one tensor to concat"));const n=$a(e,"tensors","concat","string_or_numeric");if("complex64"===n[0].dtype&&n.forEach((e=>{if("complex64"!==e.dtype)throw new Error(`Cannot concatenate complex64 tensors with a tensor\n          with dtype ${e.dtype}. `)})),1===n.length)return Ai(n[0]);const s=n,r={axis:t};return ya.runKernel(St,s,r)}}),yu=Aa({sigmoid_:function(e){const t={x:Ca(e,"x","sigmoid","float32")};return ya.runKernel(Ss,t)}}),bu=Aa({slice_:function(e,t,n){const s=Ca(e,"x","slice","string_or_numeric");if(0===s.rank)throw new Error("Slicing scalar is not possible");const r={x:s},a={begin:t,size:n};return ya.runKernel(vs,r,a)}}),xu=Aa({tanh_:function(e){const t={x:Ca(e,"x","tanh","float32")};return ya.runKernel(Gs,t)}}),vu=Aa({basicLSTMCell_:function(e,t,n,s,r,a){const i=Ca(e,"forgetBias","basicLSTMCell"),o=Ca(t,"lstmKernel","basicLSTMCell"),l=Ca(n,"lstmBias","basicLSTMCell"),u=Ca(s,"data","basicLSTMCell"),c=Ca(r,"c","basicLSTMCell"),h=Ca(a,"h","basicLSTMCell"),p=gu([u,h],1),d=Xi(p,o),f=pl(d,l),m=f.shape[0],g=f.shape[1]/4,y=[m,g],b=bu(f,[0,0],y),x=bu(f,[0,g],y),v=bu(f,[0,2*g],y),w=bu(f,[0,3*g],y),k=pl(ml(yu(b),xu(x)),ml(c,yu(pl(i,v))));return[k,ml(xu(k),yu(w))]}}),wu=Aa({batchToSpaceND_:function(e,t,n){const s=Ca(e,"x","batchToSpaceND"),r=t.reduce(((e,t)=>e*t));se(s.rank>=1+t.length,(()=>`input rank is ${s.rank} but should be > than blockShape.length ${t.length}`)),se(n.length===t.length,(()=>`crops.length is ${n.length} but should be equal to blockShape.length  ${t.length}`)),se(s.shape[0]%r==0,(()=>`input tensor batch is ${s.shape[0]} but is not divisible by the product of the elements of blockShape ${t.join(" * ")} === ${r}`));const a={x:s},i={blockShape:t,crops:n};return ya.runKernel(mt,a,i)}}),ku=Aa({batchNorm_:function(e,t,n,s,r,a){null==a&&(a=.001);const i=Ca(e,"x","batchNorm"),o=Ca(t,"mean","batchNorm"),l=Ca(n,"variance","batchNorm");let u,c;null!=r&&(u=Ca(r,"scale","batchNorm")),null!=s&&(c=Ca(s,"offset","batchNorm")),se(o.rank===l.rank,(()=>"Batch normalization gradient requires mean and variance to have equal ranks.")),se(null==c||o.rank===c.rank,(()=>"Batch normalization gradient requires mean and offset to have equal ranks.")),se(null==u||o.rank===u.rank,(()=>"Batch normalization gradient requires mean and scale to have equal ranks."));const h=function(e){let t;return t=0===e.rank||1===e.rank?du(e,[1,1,1,e.size]):2===e.rank?du(e,[1,1,e.shape[0],e.shape[1]]):3===e.rank?du(e,[1,e.shape[0],e.shape[1],e.shape[2]]):e,t}(i),p={x:h,scale:u,offset:c,mean:o,variance:l},d={varianceEpsilon:a},f=ya.runKernel(an,p,d);return du(f,i.shape)}}),Iu=Aa({batchNorm2d_:function(e,t,n,s,r,a){const i=Ca(e,"x","batchNorm"),o=Ca(t,"mean","batchNorm"),l=Ca(n,"variance","batchNorm");let u,c;return null!=r&&(u=Ca(r,"scale","batchNorm")),null!=s&&(c=Ca(s,"offset","batchNorm")),se(2===i.rank,(()=>`Error in batchNorm2D: x must be rank 2 but got rank ${i.rank}.`)),se(2===o.rank||1===o.rank,(()=>`Error in batchNorm2D: mean must be rank 2 or rank 1 but got rank ${o.rank}.`)),se(2===l.rank||1===l.rank,(()=>`Error in batchNorm2D: variance must be rank 2 or rank 1 but got rank ${l.rank}.`)),null!=u&&se(2===u.rank||1===u.rank,(()=>`Error in batchNorm2D: scale must be rank 2 or rank 1 but got rank ${u.rank}.`)),null!=c&&se(2===c.rank||1===c.rank,(()=>`Error in batchNorm2D: offset must be rank 2 or rank 1 but got rank ${c.rank}.`)),ku(i,o,l,c,u,a)}}),Su=Aa({batchNorm3d_:function(e,t,n,s,r,a){const i=Ca(e,"x","batchNorm"),o=Ca(t,"mean","batchNorm"),l=Ca(n,"variance","batchNorm");let u,c;return null!=r&&(u=Ca(r,"scale","batchNorm")),null!=s&&(c=Ca(s,"offset","batchNorm")),se(3===i.rank,(()=>`Error in batchNorm3D: x must be rank 3 but got rank ${i.rank}.`)),se(3===o.rank||1===o.rank,(()=>`Error in batchNorm3D: mean must be rank 3 or rank 1 but got rank ${o.rank}.`)),se(3===l.rank||1===l.rank,(()=>`Error in batchNorm3D: variance must be rank 3 or rank 1 but got rank ${l.rank}.`)),null!=u&&se(3===u.rank||1===u.rank,(()=>`Error in batchNorm3D: scale must be rank 3 or rank 1 but got rank ${u.rank}.`)),null!=c&&se(3===c.rank||1===c.rank,(()=>`Error in batchNorm3D: offset must be rank 3 or rank 1 but got rank ${c.rank}.`)),ku(i,o,l,c,u,a)}}),Nu=Aa({batchNorm4d_:function(e,t,n,s,r,a){const i=Ca(e,"x","batchNorm"),o=Ca(t,"mean","batchNorm"),l=Ca(n,"variance","batchNorm");let u,c;return null!=r&&(u=Ca(r,"scale","batchNorm")),null!=s&&(c=Ca(s,"offset","batchNorm")),se(4===i.rank,(()=>`Error in batchNorm4D: x must be rank 4 but got rank ${i.rank}.`)),se(4===o.rank||1===o.rank,(()=>`Error in batchNorm4D: mean must be rank 4 or rank 1 but got rank ${o.rank}.`)),se(4===l.rank||1===l.rank,(()=>`Error in batchNorm4D: variance must be rank 4 or rank 1 but got rank ${l.rank}.`)),null!=u&&se(4===u.rank||1===u.rank,(()=>`Error in batchNorm4D: scale must be rank 4 or rank 1 but got rank ${u.rank}.`)),null!=c&&se(4===c.rank||1===c.rank,(()=>`Error in batchNorm4D: offset must be rank 4 or rank 1 but got rank ${c.rank}.`)),ku(i,o,l,c,u,a)}}),Tu=Aa({bincount_:function(e,t,n){const s=Ca(e,"x","bincount"),r=Ca(t,"weights","bincount");se("int32"===s.dtype,(()=>`Error in bincount: input dtype must be int32, but got ${s.dtype}`)),se(n>=0,(()=>`size must be non-negative, but got ${n}.`)),se(r.size===s.size||0===r.size,(()=>`Error in bincount: weights must have the same size as input or0-length, but got input shape: ${s.shape}, weights shape: ${r.shape}.`));const a={x:s,weights:r},i={size:n};return ya.runKernel(gt,a,i)}}),Cu=Aa({broadcastArgs_:function(e,t){const n=Ca(e,"s0","broadcastArgs","int32"),s=Ca(t,"s1","broadcastArgs","int32");if(1!==n.rank)throw new Error(`broadcastArgs(): first input must be a vector (rank=1). Has rank ${n.rank}`);if(1!==s.rank)throw new Error(`broadcastArgs(): second input must be a vector (rank=1). Has rank ${s.rank}`);const r={s0:n,s1:s};return ya.runKernel(bt,r)}}),$u=Aa({broadcastTo_:function(e,t){let n=Ca(e,"broadcastTo","x");const s=n.shape;if(t.some((e=>!(e>0)||e%1!=0)))throw new Error(`broadcastTo(): Invalid broadcast shape [${t}].`);if(t.length<n.rank)throw new Error(`broadcastTo(): shape.length=${t.length} < input.rank=${n.rank}.`);if(t.length>n.rank){const e=n.shape.slice();for(;e.length<t.length;)e.unshift(1);n=du(n,e)}const r=n.shape,a=Array.from(t);for(let e=t.length-1;e>=0;e--)if(r[e]===t[e])a[e]=1;else if(1!==n.shape[e])throw new Error(`broadcastTo(): [${s}] cannot be broadcast to [${t}].`);if(0===a.map(((e,t)=>e>1?t:-1)).filter((e=>e>=0)).length)return Ai(n);const i={x:n},o={reps:a};return ya.runKernel(Hs,i,o)}}),Eu=Aa({ceil_:function(e){const t={x:Ca(e,"x","ceil","float32")};return ya.runKernel(vt,t)}}),Au=Aa({clipByValue_:function(e,t,n){const s=Ca(e,"x","clipByValue");se(t<=n,(()=>`Error in clip: min (${t}) must be less than or equal to max (${n}).`));const r={x:s},a={clipValueMin:t,clipValueMax:n};return ya.runKernel(wt,r,a)}}),_u=Aa({concat1d_:function(e){return gu(e,0)}}),Ru=Aa({concat2d_:function(e,t){return gu(e,t)}}),Fu=Aa({concat3d_:function(e,t){return gu(e,t)}}),Du=Aa({concat4d_:function(e,t){return gu(e,t)}}),Ou=Aa({conv2d_:function(e,t,n,s,r="NHWC",a=[1,1],i){const o=Ca(e,"x","conv2d","float32"),l=Ca(t,"filter","conv2d","float32");let u=o,c=!1;3===o.rank&&(c=!0,u=du(o,[1,o.shape[0],o.shape[1],o.shape[2]])),se(4===u.rank,(()=>`Error in conv2d: input must be rank 4, but got rank ${u.rank}.`)),se(4===l.rank,(()=>`Error in conv2d: filter must be rank 4, but got rank ${l.rank}.`)),pu("conv2d",s,i);const h="NHWC"===r?u.shape[3]:u.shape[1];se(h===l.shape[2],(()=>`Error in conv2d: depth of input (${h}) must match input depth for filter ${l.shape[2]}.`)),se(cu(n,a),(()=>`Error in conv2D: Either strides or dilations must be 1. Got strides ${n} and dilations '${a}'`));const p={x:u,filter:l},d={strides:n,pad:s,dataFormat:r,dilations:a,dimRoundingMode:i},f=ya.runKernel(Nt,p,d);return c?du(f,[f.shape[1],f.shape[2],f.shape[3]]):f}}),Mu=Aa({conv1d_:function(e,t,n,s,r="NWC",a=1,i){const o=Ca(e,"x","conv1d"),l=Ca(t,"filter","conv1d");let u=o,c=!1;2===o.rank&&(c=!0,u=du(o,[1,o.shape[0],o.shape[1]])),se(3===u.rank,(()=>`Error in conv1d: input must be rank 3, but got rank ${u.rank}.`)),se(3===l.rank,(()=>`Error in conv1d: filter must be rank 3, but got rank ${l.rank}.`)),pu("conv1d",s,i),se(u.shape[2]===l.shape[1],(()=>`Error in conv1d: depth of input (${u.shape[2]}) must match input depth for filter ${l.shape[1]}.`)),se(cu(n,a),(()=>`Error in conv1D: Either stride or dilation must be 1. Got stride ${n} and dilation '${a}'`)),se("NWC"===r,(()=>`Error in conv1d: got dataFormat of ${r} but only NWC is currently supported.`));const h=du(l,[1,l.shape[0],l.shape[1],l.shape[2]]),p=du(u,[u.shape[0],1,u.shape[1],u.shape[2]]),d=Ou(p,h,[1,n],s,"NHWC",[1,a],i);return du(d,c?[d.shape[2],d.shape[3]]:[d.shape[0],d.shape[2],d.shape[3]])}}),Lu=Aa({conv2DBackpropInput_:function(e,t,n,s,r,a="NHWC",i){se(e.length===t.rank,(()=>`Length of inShape (${e.length}) and rank of dy (${t.rank}) must match`));let o=e,l=t,u=!1;3===t.rank&&(u=!0,l=du(t,[1,t.shape[0],t.shape[1],t.shape[2]]),o=[1,e[0],e[1],e[2]]),se(4===o.length,(()=>`Error in conv2dDerInput: inShape must be length 4, but got length ${o.length}.`)),se(4===l.rank,(()=>`Error in conv2dDerInput: dy must be rank 4, but got rank ${l.rank}`)),se(4===n.rank,(()=>`Error in conv2dDerInput: filter must be rank 4, but got rank ${n.rank}`));const c="NHWC"===a?o[3]:o[1],h="NHWC"===a?l.shape[3]:l.shape[1];se(c===n.shape[2],(()=>`Error in conv2dDerInput: depth of input (${c}) must match input depth for filter ${n.shape[2]}.`)),se(h===n.shape[3],(()=>`Error in conv2dDerInput: depth of output (${h}) must match output depth for filter ${n.shape[3]}.`)),pu("conv2dDerInput",r,i);const p={dy:l,filter:n},d={strides:s,pad:r,dataFormat:a,dimRoundingMode:i,inputShape:o},f=ya.runKernel(Ct,p,d);return u?du(f,[f.shape[1],f.shape[2],f.shape[3]]):f}}),zu=Aa({conv2dTranspose_:function(e,t,n,s,r,a){const i=Ca(e,"x","conv2dTranspose"),o=Ca(t,"filter","conv2dTranspose");return Lu(n,i,o,s,r,"NHWC",a)}}),Pu=Aa({conv3d_:function(e,t,n,s,r="NDHWC",a=[1,1,1]){const i=Ca(e,"x","conv3d"),o=Ca(t,"filter","conv3d");let l=i,u=!1;4===i.rank&&(u=!0,l=du(i,[1,i.shape[0],i.shape[1],i.shape[2],i.shape[3]])),se(5===l.rank,(()=>`Error in conv3d: input must be rank 5, but got rank ${l.rank}.`)),se(5===o.rank,(()=>`Error in conv3d: filter must be rank 5, but got rank ${o.rank}.`)),se(l.shape[4]===o.shape[3],(()=>`Error in conv3d: depth of input (${l.shape[4]}) must match input depth for filter ${o.shape[3]}.`)),se(cu(n,a),(()=>`Error in conv3D: Either strides or dilations must be 1. Got strides ${n} and dilations '${a}'`)),se("NDHWC"===r,(()=>`Error in conv3d: got dataFormat of ${r} but only NDHWC is currently supported.`));const c={x:l,filter:o},h={strides:n,pad:s,dataFormat:r,dilations:a},p=ya.runKernel($t,c,h);return u?du(p,[p.shape[1],p.shape[2],p.shape[3],p.shape[4]]):p}}),Bu=Aa({conv3DBackpropInput_:function(e,t,n,s,r){se(e.length===t.rank,(()=>`Length of inShape (${e.length}) and rank of dy (${t.rank}) must match`));let a=e,i=t,o=!1;4===t.rank&&(o=!0,i=du(t,[1,t.shape[0],t.shape[1],t.shape[2],t.shape[3]]),a=[1,e[0],e[1],e[2],e[3]]);const l=a[4],u=i.shape[4];se(5===a.length,(()=>`Error in conv3dDerInput: inShape must be length 5, but got length ${a.length}.`)),se(5===i.rank,(()=>`Error in conv3dDerInput: dy must be rank 5, but got rank ${i.rank}`)),se(5===n.rank,(()=>`Error in conv3dDerInput: filter must be rank 5, but got rank ${n.rank}`)),se(l===n.shape[3],(()=>`Error in conv3dDerInput: depth of input (${l}) must match input depth for filter ${n.shape[3]}.`)),se(u===n.shape[4],(()=>`Error in conv3dDerInput: depth of output (${u}) must match output depth for filter ${n.shape[4]}.`));const c={dy:i,filter:n},h={pad:r,strides:s,inputShape:a},p=ya.runKernel(At,c,h);return o?du(p,[p.shape[1],p.shape[2],p.shape[3],p.shape[4]]):p}}),Wu=Aa({conv3dTranspose_:function(e,t,n,s,r){const a=Ca(e,"x","conv3dTranspose"),i=Ca(t,"filter","conv3dTranspose");return Bu(n,a,i,s,r)}}),Vu=Aa({cos_:function(e){const t={x:Ca(e,"x","cos","float32")};return ya.runKernel(_t,t)}}),Uu=Aa({cosh_:function(e){const t={x:Ca(e,"x","cosh","float32")};return ya.runKernel(Rt,t)}}),Gu=Aa({cumprod_:function(e,t=0,n=!1,s=!1){const r={x:Ca(e,"x","cumprod")},a={axis:t,exclusive:n,reverse:s};return ya.runKernel(Ft,r,a)}}),Hu=Aa({cumsum_:function(e,t=0,n=!1,s=!1){const r={x:Ca(e,"x","cumsum")},a={axis:t,exclusive:n,reverse:s};return ya.runKernel(Dt,r,a)}}),ju=Aa({denseBincount_:function(e,t,n,s=!1){const r=Ca(e,"x","denseBincount"),a=Ca(t,"weights","denseBincount");se("int32"===r.dtype,(()=>`Error in denseBincount: input dtype must be int32, but got ${r.dtype}`)),se(r.rank<=2,(()=>`Error in denseBincount: input must be at most rank 2, but got rank ${r.rank}.`)),se(n>=0,(()=>`size must be non-negative, but got ${n}.`)),se(a.size===r.size||0===a.size,(()=>`Error in denseBincount: weights must have the same shape as x or 0-length, but got x shape: ${r.shape}, weights shape: ${a.shape}.`));const i={x:r,weights:a},o={size:n,binaryOutput:s};return ya.runKernel(Mt,i,o)}}),qu=Aa({depthToSpace_:function(e,t,n="NHWC"){const s=Ca(e,"x","depthToSpace","float32"),r="NHWC"===n?s.shape[1]:s.shape[2],a="NHWC"===n?s.shape[2]:s.shape[3],i="NHWC"===n?s.shape[3]:s.shape[1];se(t>1,(()=>`blockSize should be > 1 for depthToSpace, but was: ${t}`)),se(r*t>=0,(()=>`Negative dimension size caused by overflow when multiplying\n    ${r} and ${t}  for depthToSpace with input shape\n    ${s.shape}`)),se(a*t>=0,(()=>`Negative dimension size caused by overflow when multiplying\n    ${a} and ${t} for depthToSpace with input shape\n        ${s.shape}`)),se(i%(t*t)==0,(()=>`Dimension size must be evenly divisible by ${t*t} but is ${i} for depthToSpace with input shape ${s.shape}`));const o={x:s},l={blockSize:t,dataFormat:n};return ya.runKernel(Lt,o,l)}}),Ku=Aa({depthwiseConv2d_:function(e,t,n,s,r="NHWC",a=[1,1],i){const o=Ca(e,"x","depthwiseConv2d","float32"),l=Ca(t,"filter","depthwiseConv2d","float32");let u=o,c=!1;3===o.rank&&(c=!0,u=du(o,[1,o.shape[0],o.shape[1],o.shape[2]])),se(4===u.rank,(()=>`Error in depthwiseConv2d: input must be rank 4, but got rank ${u.rank}.`)),se(4===l.rank,(()=>`Error in depthwiseConv2d: filter must be rank 4, but got rank ${l.rank}.`)),se(u.shape[3]===l.shape[2],(()=>`Error in depthwiseConv2d: number of input channels (${u.shape[3]}) must match the inChannels dimension in filter ${l.shape[2]}.`)),pu("depthwiseConv2d",s,i);const h={x:u,filter:l},p={strides:n,pad:s,dataFormat:r,dilations:a,dimRoundingMode:i},d=ya.runKernel(zt,h,p);return c?du(d,[d.shape[1],d.shape[2],d.shape[3]]):d}}),Xu=Aa({diag_:function(e){const t={x:Ca(e,"x","diag")};return ya.runKernel(Wt,t)}}),Yu=Aa({dilation2d_:function(e,t,n,s,r=[1,1],a="NHWC"){const i=Ca(e,"x","dilation2d"),o=Ca(t,"filter","dilation2d");se(3===i.rank||4===i.rank,(()=>`Error in dilation2d: input must be rank 3 or 4, but got rank ${i.rank}.`)),se(3===o.rank,(()=>`Error in dilation2d: filter must be rank 3, but got rank ${o.rank}.`)),se("NHWC"===a,(()=>`Error in dilation2d: Only NHWC is currently supported, but got dataFormat of ${a}`));let l=i,u=!1;3===i.rank&&(l=du(i,[1,i.shape[0],i.shape[1],i.shape[2]]),u=!0);const c={x:l,filter:o},h={strides:n,pad:s,dilations:r},p=ya.runKernel(Vt,c,h);return u?du(p,[p.shape[1],p.shape[2],p.shape[3]]):p}}),Zu=Aa({equal_:function(e,t){let n=Ca(e,"a","equal","string_or_numeric"),s=Ca(t,"b","equal","string_or_numeric");[n,s]=la(n,s),to(n.shape,s.shape);const r={a:n,b:s};return ya.runKernel(Yt,r)}}),Ju=Aa({where_:function(e,t,n){const s=Ca(t,"a","where"),r=Ca(n,"b","where"),a=Ca(e,"condition","where","bool"),i=to(to(a.shape,s.shape),r.shape),o={condition:$u(a,i),t:$u(s,i),e:$u(r,i)};return ya.runKernel(bs,o)}}),Qu=Aa({divNoNan_:function(e,t){let n=Ca(e,"a","div"),s=Ca(t,"b","div");[n,s]=la(n,s);const r=fl(n,s),a=bl(r),i=Zu(s,a);return Ju(i,a,r)}}),ec=Aa({dot_:function(e,t){const n=Ca(e,"t1","dot"),s=Ca(t,"t2","dot");se(!(1!==n.rank&&2!==n.rank||1!==s.rank&&2!==s.rank),(()=>`Error in dot: inputs must all be rank 1 or 2, but got ranks ${n.rank} and ${s.rank}.`));const r=1===n.rank?n.size:n.shape[1],a=1===s.rank?s.size:s.shape[0];if(se(r===a,(()=>`Error in dot: inner dimensions of inputs must match, but got ${r} and ${a}.`)),1===n.rank&&1===s.rank){const e=du(n,[1,-1]),t=du(s,[-1,1]),r=Xi(e,t);return du(r,[])}if(1===n.rank&&2===s.rank){const e=du(n,[1,-1]),t=du(s,[s.shape[0],s.shape[1]]),r=Xi(e,t);return du(r,[r.size])}if(2===n.rank&&1===s.rank){const e=du(s,[-1,1]),t=Xi(n,e);return du(t,[t.size])}{const e=du(s,[s.shape[0],s.shape[1]]);return Xi(n,e)}}}),tc=Aa({einsum_:function(e,...t){const n=t.map(((e,t)=>Ca(e,`tensors${t}`,"einsum"))),s={equation:e};return ya.runKernel(jt,n,s)}}),nc=Aa({elu_:function(e){const t={x:Ca(e,"x","elu","float32")};return ya.runKernel(qt,t)}}),sc=Aa({erf_:function(e){let t=Ca(e,"x","erf");se("int32"===t.dtype||"float32"===t.dtype,(()=>"Input dtype must be `int32` or `float32`.")),"int32"===t.dtype&&(t=Ei(t,"float32"));const n={x:t};return ya.runKernel(Xt,n)}});function rc(e,t){for(let n=0;n<e.length;++n)if(e[e.length-n-1]!==t-1-n)return!1;return!0}function ac(e,t,n){const s=e.length+t.length,r=[];let a=0,i=0;for(let o=0;o<s;o++)-1===n.indexOf(o)?r.push(e[a++]):r.push(t[i++]);return r}function ic(e,t){const n=[],s=e.length;for(let r=0;r<s;r++)-1===t.indexOf(r)&&n.push(e[r]);return[n,t.map((t=>e[t]))]}function oc(e,t){return ac(e,t.map((e=>1)),t)}function lc(e,t,n){se(rc(t,n),(()=>`${e} supports only inner-most axes for now. Got axes ${t} and rank-${n} input.`))}function uc(e,t){if(rc(e,t))return null;const n=[];for(let s=0;s<t;++s)-1===e.indexOf(s)&&n.push(s);return e.forEach((e=>n.push(e))),n}function cc(e){return e.map(((e,t)=>[t,e])).sort(((e,t)=>e[1]-t[1])).map((e=>e[0]))}function hc(e,t){const n=[];for(let s=t-e;s<t;++s)n.push(s);return n}const pc=Aa({max_:function(e,t=null,n=!1){const s={x:Ca(e,"x","max")},r={reductionIndices:t,keepDims:n};return ya.runKernel(An,s,r)}}),dc=Aa({min_:function(e,t=null,n=!1){const s={x:Ca(e,"x","min")},r={axis:t,keepDims:n};return ya.runKernel(zn,s,r)}}),fc=Aa({sum_:function(e,t=null,n=!1){let s=Ca(e,"x","sum");"bool"===s.dtype&&(s=Ei(s,"int32"));const r={x:s},a={axis:t,keepDims:n};return ya.runKernel(Cs,r,a)}});function mc(e,t,n=null){if(0===e.rank)return Dl(e);if(1!==e.rank&&null===n)return mc(du(e,[-1]),t,n);if(1===e.rank||"number"==typeof n||Array.isArray(n)&&1===n.length){if(1===t)return fc(Dl(e),n);if(t===1/0)return pc(Dl(e),n);if(t===-1/0)return dc(Dl(e),n);if("euclidean"===t||2===t)return gl(fc(_l(Dl(e),Tl(2,"int32")),n));throw new Error(`Error in norm: invalid ord value: ${t}`)}if(Array.isArray(n)&&2===n.length){if(1===t)return pc(fc(Dl(e),n[0]),n[1]-1);if(t===1/0)return pc(fc(Dl(e),n[1]),n[0]);if(t===-1/0)return dc(fc(Dl(e),n[1]),n[0]);if("fro"===t||"euclidean"===t)return gl(fc(yl(e),n));throw new Error(`Error in norm: invalid ord value: ${t}`)}throw new Error(`Error in norm: invalid axis: ${n}`)}const gc=Aa({norm_:function(e,t="euclidean",n=null,s=!1){const r=mc(e=Ca(e,"x","norm"),t,n);let a=r.shape;if(s){const t=ye(n,e.shape);a=oc(r.shape,t)}return du(r,a)}}),yc=Aa({euclideanNorm_:function(e,t=null,n=!1){return gc(e,"euclidean",t,n)}}),bc=Aa({exp_:function(e){const t={x:Ca(e,"x","exp")};return ya.runKernel(Zt,t)}}),xc=Aa({expandDims_:function(e,t=0){const n=Ca(e,"x","expandDims","string_or_numeric");se(t<=n.rank,(()=>"Axis must be <= rank of the tensor"));const s={input:n},r={dim:t};return ya.runKernel(Jt,s,r)}}),vc=Aa({expm1_:function(e){const t={x:Ca(e,"x","expm1")};return ya.runKernel(Qt,t)}}),wc=Aa({tile_:function(e,t){const n=Ca(e,"x","tile","string_or_numeric");se(n.rank===t.length,(()=>`Error in transpose: rank of input ${n.rank} must match length of reps ${t}.`));const s={x:n},r={reps:t};return ya.runKernel(Hs,s,r)}}),kc=Aa({eye_:function(e,t,n,s="float32"){null==t&&(t=e);const r=$i([e,t],s),a=e<=t?e:t;for(let e=0;e<a;++e)r.set(1,e,e);const i=du(r.toTensor(),[e,t]);if(null==n)return i;if(1===n.length)return wc(xc(i,0),[n[0],1,1]);if(2===n.length)return wc(xc(xc(i,0),0),[n[0],n[1],1,1]);if(3===n.length)return wc(xc(xc(xc(i,0),0),0),[n[0],n[1],n[2],1,1]);throw new Error(`eye() currently supports only 1D and 2D batchShapes, but received ${n.length}D.`)}}),Ic=Aa({floor_:function(e){const t={x:Ca(e,"x","floor","float32")};return ya.runKernel(sn,t)}}),Sc=Aa({gather_:function(e,t,n=0,s=0){const r={x:Ca(e,"x","gather"),indices:Ca(t,"indices","gather","int32")},a={axis:n,batchDims:s};return ya.runKernel(on,r,a)}}),Nc=Aa({greater_:function(e,t){let n=Ca(e,"a","greater","string_or_numeric"),s=Ca(t,"b","greater","string_or_numeric");[n,s]=la(n,s),to(n.shape,s.shape);const r={a:n,b:s};return ya.runKernel(un,r)}}),Tc=Aa({greaterEqual_:function(e,t){let n=Ca(e,"a","greaterEqual","string_or_numeric"),s=Ca(t,"b","greaterEqual","string_or_numeric");[n,s]=la(n,s),to(n.shape,s.shape);const r={a:n,b:s};return ya.runKernel(cn,r)}}),Cc=Aa({imag_:function(e){const t={input:Ca(e,"input","imag")};return ya.runKernel(dn,t)}}),$c=Aa({isFinite_:function(e){const t={x:Ca(e,"x","isFinite")};return ya.runKernel(fn,t)}}),Ec=Aa({isInf_:function(e){const t={x:Ca(e,"x","isInf")};return ya.runKernel(mn,t)}}),Ac=Aa({isNaN_:function(e){const t={x:Ca(e,"x","isNaN")};return ya.runKernel(gn,t)}}),_c=Aa({leakyRelu_:function(e,t=.2){const n={x:Ca(e,"x","leakyRelu")},s={alpha:t};return ya.runKernel(yn,n,s)}}),Rc=Aa({less_:function(e,t){let n=Ca(e,"a","less","string_or_numeric"),s=Ca(t,"b","less","string_or_numeric");[n,s]=la(n,s),to(n.shape,s.shape);const r={a:n,b:s};return ya.runKernel(bn,r)}}),Fc=Aa({lessEqual_:function(e,t){let n=Ca(e,"a","lessEqual","string_or_numeric"),s=Ca(t,"b","lessEqual","string_or_numeric");[n,s]=la(n,s),to(n.shape,s.shape);const r={a:n,b:s};return ya.runKernel(xn,r)}});function Dc(e,t,n){if(n<=0)throw new Error("The number of values should be positive.");const s={start:e,stop:t,num:n};return ya.runKernel(vn,{},s)}const Oc=Aa({localResponseNormalization_:function(e,t=5,n=1,s=1,r=.5){const a=Ca(e,"x","localResponseNormalization");se(4===a.rank||3===a.rank,(()=>`Error in localResponseNormalization: x must be rank 3 or 4 but got\n               rank ${a.rank}.`)),se(ce(t),(()=>`Error in localResponseNormalization: depthRadius must be an integer but got depthRadius ${t}.`));let i=a,o=!1;3===a.rank&&(o=!0,i=du(a,[1,a.shape[0],a.shape[1],a.shape[2]]));const l={x:i},u={depthRadius:t,bias:n,alpha:s,beta:r},c=ya.runKernel($n,l,u);return o?du(c,[c.shape[1],c.shape[2],c.shape[3]]):c}}),Mc=Aa({log_:function(e){const t={x:Ca(e,"x","log","float32")};return ya.runKernel(wn,t)}}),Lc=Aa({log1p_:function(e){const t={x:Ca(e,"x","log1p")};return ya.runKernel(kn,t)}}),zc=Aa({neg_:function(e){const t={x:Ca(e,"x","neg")};return ya.runKernel(Gn,t)}}),Pc=Aa({softplus_:function(e){const t={x:Ca(e,"x","softplus")};return ya.runKernel(Ns,t)}}),Bc=Aa({logSigmoid_:function(e){const t=Ca(e,"x","logSigmoid"),n=Sl((e=>({value:zc(Pc(zc(e))),gradFunc:t=>ml(t,yu(zc(e)))})));return n(t)}}),Wc=Aa({logSoftmax_:function(e,t=-1){const n=Ca(e,"logits","logSoftmax");if(-1===t&&(t=n.rank-1),t!==n.rank-1)throw Error(`Log Softmax along a non-last dimension is not yet supported. Logits was rank ${n.rank} and axis was ${t}`);const s=Sl(((e,n)=>{const s=pc(e,t,!0),r=Rl(e,s),a=Rl(Ei(r,"float32"),Mc(fc(bc(r),t,!0)));return n([a]),{value:a,gradFunc:(e,n)=>{const[s]=n,r=bc(s);return Rl(e,ml(fc(e,t,!0),r))}}}));return s(n)}}),Vc=Aa({logSumExp_:function(e,t=null,n=!1){const s=Ca(e,"x","logSumExp"),r=ye(t,s.shape),a=pc(s,r,!0),i=Rl(s,a),o=bc(i),l=fc(o,r),u=Mc(l),c=pl(du(a,u.shape),u);if(n){const e=oc(c.shape,r);return du(c,e)}return c}}),Uc=Aa({logicalAnd_:function(e,t){const n=Ca(e,"a","logicalAnd","bool"),s=Ca(t,"b","logicalAnd","bool");to(n.shape,s.shape);const r={a:n,b:s};return ya.runKernel(In,r)}}),Gc=Aa({logicalNot_:function(e){const t={x:Ca(e,"x","logicalNot","bool")};return ya.runKernel(Sn,t)}}),Hc=Aa({logicalOr_:function(e,t){const n=Ca(e,"a","logicalOr","bool"),s=Ca(t,"b","logicalOr","bool");to(n.shape,s.shape);const r={a:n,b:s};return ya.runKernel(Nn,r)}}),jc=Aa({logicalXor_:function(e,t){const n=Ca(e,"a","logicalXor","bool"),s=Ca(t,"b","logicalXor","bool");return to(n.shape,s.shape),Uc(Hc(e,t),Gc(Uc(e,t)))}}),qc=2147483648,Kc=Aa({searchSorted_:function(e,t,n="left"){const s=Ca(e,"sortedSequence","searchSorted"),r=Ca(t,"values","searchSorted"),a=s.shape[s.shape.length-1],i=r.shape[r.shape.length-1],o=du(s,[-1,a]),l=du(r,[-1,i]);if(o.rank<2)throw new Error("Sorted input argument must be at least 2-dimensional");if(o.shape[0]!==l.shape[0])throw new Error("Leading dimension of 'sortedSequence' and 'values' must match.");if(oe(l.shape)>=qc)throw new Error("values tensor size must less than 2147483648");if(o.shape[1]>=qc)throw new Error(`trailing dim_size must less than 2147483648 for int32 output type, was ${o.shape[1]}`);const u={sortedSequence:o,values:l},c={side:n};return ya.runKernel(ys,u,c)}});function Xc(e,t){return Kc(e,t,"left")}const Yc=Aa({maxPool_:function(e,t,n,s,r){const a=Ca(e,"x","maxPool");let i=a,o=!1;3===a.rank&&(o=!0,i=du(a,[1,a.shape[0],a.shape[1],a.shape[2]])),se(4===i.rank,(()=>`Error in maxPool: input must be rank 4 but got rank ${i.rank}.`)),se(cu(n,1),(()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${n} and dilations '1'`)),pu("maxPool",s,r);const l={x:i},u={filterSize:t,strides:n,pad:s,dimRoundingMode:r},c=ya.runKernel(Rn,l,u);return o?du(c,[c.shape[1],c.shape[2],c.shape[3]]):c}}),Zc=Aa({maxPool3d_:function(e,t=[1,1,1],n,s,r,a="NDHWC"){const i=Ca(e,"x","maxPool3d");let o=i,l=!1;4===i.rank&&(l=!0,o=du(i,[1,i.shape[0],i.shape[1],i.shape[2],i.shape[3]])),se(5===o.rank,(()=>`Error in maxPool3d: x must be rank 5 but got rank ${o.rank}.`)),se("NDHWC"===a,(()=>`Error in maxPool3d: Only NDHWC is currently supported, but got dataFormat of ${a}`)),pu("maxPool3d",s,r);const u={x:o},c={filterSize:t,strides:n,pad:s,dimRoundingMode:r,dataFormat:a},h=ya.runKernel(Dn,u,c);return l?du(h,[h.shape[1],h.shape[2],h.shape[3],h.shape[4]]):h}}),Jc=Aa({maxPoolWithArgmax_:function(e,t,n,s,r=!1){const a={x:Ca(e,"x","maxPoolWithArgmax")},i={filterSize:t,strides:n,pad:s,includeBatchInIndex:r},o=ya.runKernel(Mn,a,i);return{result:o[0],indexes:o[1]}}}),Qc=Aa({mean_:function(e,t=null,n=!1){const s={x:Ca(e,"x","mean")},r={axis:t,keepDims:n};return ya.runKernel(Ln,s,r)}});function eh(e,t="float32"){if("complex64"===t){const t=eh(e,"float32"),n=eh(e,"float32");return _a(t,n)}const n=Le(oe(e),t);return ya.makeTensor(n,e,t)}function th(e,t="float32"){if("complex64"===t){const t=th(e,"float32"),n=eh(e,"float32");return _a(t,n)}const n=Me(oe(e),t);return ya.makeTensor(n,e,t)}function nh(e,t,{indexing:n="xy"}={}){if("xy"!==n&&"ij"!==n)throw new TypeError(`${n} is not a valid third argument to meshgrid`);if(void 0===e)return[];let s=Ca(e,"x","meshgrid",e instanceof Zr?e.dtype:"float32");if(void 0===t)return[s];let r=Ca(t,"y","meshgrid",t instanceof Zr?t.dtype:"float32");const a=oe(s.shape),i=oe(r.shape);return"xy"===n?(s=du(s,[1,-1]),r=du(r,[-1,1]),[Xi(th([i,1],s.dtype),s),Xi(r,th([1,a],r.dtype))]):(s=du(s,[-1,1]),r=du(r,[1,-1]),[Xi(s,th([1,i],s.dtype)),Xi(th([a,1],r.dtype),r)])}const sh=Aa({minimum_:function(e,t){let n=Ca(e,"a","minimum"),s=Ca(t,"b","minimum");[n,s]=la(n,s),"bool"===n.dtype&&(n=Ei(n,"int32"),s=Ei(s,"int32")),to(n.shape,s.shape);const r={a:n,b:s};return ya.runKernel(Pn,r)}}),rh=Aa({mirrorPad_:function(e,t,n){se("reflect"===n||"symmetric"===n,(()=>`Invalid mode. Mode must be either reflect or symmetric. Got ${n}.`));const s=Ca(e,"x","mirrorPad");if(0===s.rank)throw new Error("mirrorPad(scalar) is not defined. Pass non-scalar to mirrorPad");se(t.length===s.rank,(()=>`Padding doesn't match input. Must be ${s.rank}. Got ${t.length}.`));const r="reflect"===n?1:0;for(let e=0;e<s.rank;e++)se(2===t[e].length,(()=>"Invalid number of paddings. Must be length of 2 each.")),se(t[e][0]>=0&&t[e][0]<=s.shape[e]-r&&t[e][1]>=0&&t[e][1]<=s.shape[e]-r,(()=>`Padding in dimension ${e} cannot be greater than or equal to ${s.shape[e]-r} or less than 0 for input of shape ${s.shape}`));const a={paddings:t,mode:n},i={x:s};return ya.runKernel(Bn,i,a)}}),ah=Aa({mod_:function(e,t){let n=Ca(e,"a","mod"),s=Ca(t,"b","mod");[n,s]=la(n,s);const r={a:n,b:s};return ya.runKernel(Wn,r)}}),ih=Aa({moments_:function(e,t=null,n=!1){const s=ye(t,(e=Ca(e,"x","moments")).shape),r=Qc(e,s,n);let a=r.shape;n||(a=oc(r.shape,s));const i=yl(Rl(Ei(e,"float32"),du(r,a)));return{mean:r,variance:Qc(i,s,n)}}}),oh=Aa({multiRNNCell_:function(e,t,n,s){const r=Ca(t,"data","multiRNNCell"),a=$a(n,"c","multiRNNCell"),i=$a(s,"h","multiRNNCell");let o=r;const l=[];for(let t=0;t<e.length;t++){const n=e[t](o,a[t],i[t]);l.push(n[0]),l.push(n[1]),o=n[1]}const u=[],c=[];for(let e=0;e<l.length;e+=2)u.push(l[e]),c.push(l[e+1]);return[u,c]}}),lh=Aa({multinomial_:function(e,t,n,s=!1){const r=Ca(e,"logits","multinomial"),a=r.size,i=r.rank;if(a<2)throw new Error(`Error in multinomial: you need at least 2 outcomes, but got ${a}.`);if(i>2)throw new Error(`Rank of probabilities must be 1 or 2, but is ${i}`);n=n||Math.random();const o={logits:1===i?du(r,[1,-1]):r},l={numSamples:t,seed:n,normalized:s},u=ya.runKernel(Vn,o,l);return 1===i?du(u,[u.size]):u}}),uh=Aa({notEqual_:function(e,t){let n=Ca(e,"a","notEqual","string_or_numeric"),s=Ca(t,"b","notEqual","string_or_numeric");[n,s]=la(n,s),to(n.shape,s.shape);const r={a:n,b:s};return ya.runKernel(Hn,r)}}),ch=Aa({onesLike_:function(e){const t={x:Ca(e,"x","onesLike")};return ya.runKernel(Xn,t)}}),hh=Aa({outerProduct_:function(e,t){const n=Ca(e,"v1","outerProduct"),s=Ca(t,"v2","outerProduct");se(1===n.rank&&1===s.rank,(()=>`Error in outerProduct: inputs must be rank 1, but got ranks ${n.rank} and ${s.rank}.`));const r=du(n,[-1,1]),a=du(s,[1,-1]);return Xi(r,a)}}),ph=Aa({pad_:function(e,t,n=0){const s=Ca(e,"x","pad");if(0===s.rank)throw new Error("pad(scalar) is not defined. Pass non-scalar to pad");const r={paddings:t,constantValue:n},a={x:s};return ya.runKernel(Jn,a,r)}}),dh=Aa({pad1d_:function(e,t,n=0){return se(2===t.length,(()=>"Invalid number of paddings. Must be length of 2.")),ph(e,[t],n)}}),fh=Aa({pad2d_:function(e,t,n=0){return se(2===t.length&&2===t[0].length&&2===t[1].length,(()=>"Invalid number of paddings. Must be length of 2 each.")),ph(e,t,n)}}),mh=Aa({pad3d_:function(e,t,n=0){return se(3===t.length&&2===t[0].length&&2===t[1].length&&2===t[2].length,(()=>"Invalid number of paddings. Must be length of 2 each.")),ph(e,t,n)}}),gh=Aa({pad4d_:function(e,t,n=0){return se(4===t.length&&2===t[0].length&&2===t[1].length&&2===t[2].length&&2===t[3].length,(()=>"Invalid number of paddings. Must be length of 2 each.")),ph(e,t,n)}}),yh=Aa({spaceToBatchND_:function(e,t,n){const s=Ca(e,"x","spaceToBatchND");se(s.rank>=1+t.length,(()=>`input rank ${s.rank} should be > than [blockShape] ${t.length}`)),se(n.length===t.length,(()=>`paddings.shape[0] ${n.length} must be equal to [blockShape] ${t.length}`)),se(s.shape.reduce(((e,s,r)=>r>0&&r<=t.length?e&&(s+n[r-1][0]+n[r-1][1])%t[r-1]==0:e),!0),(()=>`input spatial dimensions ${s.shape.slice(1)} with paddings ${n.toString()} must be divisible by blockShapes ${t.toString()}`));const r={x:s},a={blockShape:t,paddings:n};return ya.runKernel($s,r,a)}}),bh=Aa({pool_:function(e,t,n,s,r,a,i){null==r&&(r=[1,1]),null==a&&(a=1),0===s&&(s="valid");const o=Ca(e,"x","maxPool");let l=o,u=!1;3===o.rank&&(u=!0,l=du(o,[1,o.shape[0],o.shape[1],o.shape[2]])),se(cu(a,r),(()=>`Error in pool: Either strides or dilations must be 1. Got strides ${a} and dilations '${r}'`));const c=eu(l.shape,t,a,r,s),h=[c.dilationHeight,c.dilationWidth];let p;p="same"===s?function(e,t){const n=e.map(((e,n)=>e+(e-1)*(t[n]-1))).map((e=>e-1)),s=n.map((e=>Math.floor(e/2))),r=n.map(((e,t)=>e-s[t]));return n.map(((e,t)=>[s[t],r[t]]))}([c.filterHeight,c.filterWidth],h):[[0,0],[0,0]];const d=1===h[0]&&1===h[1],[f,m]=function(e,t,n){const s=n.map((e=>e[0])),r=n.map((e=>e[1])),a=e.concat(s,r),i=t.map(((e,t)=>(e-a[t]%e)%e)),o=r.map(((e,t)=>e+i[t]));return[t.map(((e,t)=>[s[t],o[t]])),t.map(((e,t)=>[0,i[t]]))]}([c.inHeight,c.inWidth],h,p),g=d?s:"valid",y=d?l:yh(l,h,f),b=("avg"===n?()=>fu(y,t,a,g,i):()=>Yc(y,t,a,g,i))(),x=d?b:wu(b,h,m);return u?du(x,[x.shape[1],x.shape[2],x.shape[3]]):x}}),xh=Aa({prelu_:function(e,t){const n={x:Ca(e,"x","prelu"),alpha:Ca(t,"alpha","prelu")};return ya.runKernel(ts,n)}}),vh=Aa({prod_:function(e,t=null,n=!1){let s=Ca(e,"x","prod");"bool"===s.dtype&&(s=Ei(s,"int32"));const r={x:s},a={axis:t,keepDims:n};return ya.runKernel(ns,r,a)}}),wh=Aa({rand_:function(e,t,n){const s=oe(e);let r=null;if(null==n||"float32"===n)r=new Float32Array(s);else if("int32"===n)r=new Int32Array(s);else{if("bool"!==n)throw new Error(`Unknown data type ${n}`);r=new Uint8Array(s)}for(let e=0;e<s;e++)r[e]=t();return ya.makeTensor(r,e,n)}});var kh=n(129);class Ih{constructor(e,t,n,s,r){this.mean=e,this.stdDev=t,this.dtype=n,this.nextVal=NaN,this.truncated=s,this.truncated&&(this.upper=this.mean+2*this.stdDev,this.lower=this.mean-2*this.stdDev);const a=r||Math.random();this.random=kh.alea(a.toString())}nextValue(){if(!isNaN(this.nextVal)){const e=this.nextVal;return this.nextVal=NaN,e}let e,t,n=!1;for(;!n;){let s,r,a;do{s=2*this.random()-1,r=2*this.random()-1,a=s*s+r*r}while(a>=1||0===a);const i=Math.sqrt(-2*Math.log(a)/a);e=this.mean+this.stdDev*s*i,t=this.mean+this.stdDev*r*i,this.truncated&&!this.isValidTruncated(e)||(n=!0)}return this.truncated&&!this.isValidTruncated(t)||(this.nextVal=this.convertValue(t)),this.convertValue(e)}convertValue(e){return null==this.dtype||"float32"===this.dtype?e:Math.round(e)}isValidTruncated(e){return e<=this.upper&&e>=this.lower}}class Sh{constructor(e,t,n,s){this.alpha=e,this.beta=1/t,this.dtype=n;const r=s||Math.random();this.randu=kh.alea(r.toString()),this.randn=new Ih(0,1,n,!1,this.randu()),this.d=e<1?e+2/3:e-1/3,this.c=1/Math.sqrt(9*this.d)}nextValue(){let e,t,n,s,r,a;for(;;){do{s=this.randn.nextValue(),a=1+this.c*s}while(a<=0);if(a*=a*a,e=s*s,t=1-.331*e*e,n=.5*e+this.d*(1-a+Math.log(a)),r=this.randu(),r<t||Math.log(r)<n)break}return a=1/this.beta*this.d*a,this.alpha<1&&(a*=Math.pow(this.randu(),1/this.alpha)),this.convertValue(a)}convertValue(e){return"float32"===this.dtype?e:Math.round(e)}}class Nh{constructor(e=0,t=1,n,s){if(this.canReturnFloat=()=>null==this.dtype||"float32"===this.dtype,this.min=e,this.range=t-e,this.dtype=n,null==s&&(s=Math.random()),"number"==typeof s&&(s=s.toString()),!this.canReturnFloat()&&this.range<=1)throw new Error(`The difference between ${e} - ${t} <= 1 and dtype is not float`);this.random=kh.alea(s)}convertValue(e){return this.canReturnFloat()?e:Math.round(e)}nextValue(){return this.convertValue(this.min+this.range*this.random())}}const Th=Aa({randomGamma_:function(e,t,n=1,s="float32",r){if(null==n&&(n=1),null==s&&(s="float32"),"float32"!==s&&"int32"!==s)throw new Error(`Unsupported data type ${s}`);const a=new Sh(t,n,s,r),i=$i(e,s);for(let e=0;e<i.values.length;e++)i.values[e]=a.nextValue();return i.toTensor()}}),Ch=Aa({randomNormal_:function(e,t=0,n=1,s,r){if(null!=s&&"bool"===s)throw new Error(`Unsupported data type ${s}`);const a=new Ih(t,n,s,!1,r),i=$i(e,s);for(let e=0;e<i.values.length;e++)i.values[e]=a.nextValue();return i.toTensor()}}),$h=Aa({randomUniform_:function(e,t=0,n=1,s="float32",r){const a=$i(e,s),i=new Nh(t,n,null,r);for(let e=0;e<a.values.length;e++)a.values[e]=i.nextValue();return a.toTensor()}});function Eh(e,t,n=1,s="float32"){if(0===n)throw new Error("Cannot have a step of zero");const r={start:e,stop:t,step:n,dtype:s};return ya.runKernel(ss,{},r)}const Ah=Aa({real_:function(e){const t={input:Ca(e,"input","real")};return ya.runKernel(rs,t)}}),_h=Aa({reciprocal_:function(e){const t={x:Ca(e,"x","reciprocal")};return ya.runKernel(as,t)}}),Rh=Aa({relu_:function(e){const t={x:Ca(e,"x","relu")};return ya.runKernel(is,t)}}),Fh=Aa({relu6_:function(e){const t={x:Ca(e,"x","relu6")};return ya.runKernel(ps,t)}}),Dh=Aa({reverse_:function(e,t){const n={x:Ca(e,"x","reverse")},s={dims:t};return ya.runKernel(ds,n,s)}}),Oh=Aa({reverse1d_:function(e){const t=Ca(e,"x","reverse");return se(1===t.rank,(()=>`Error in reverse1D: x must be rank 1 but got rank ${t.rank}.`)),Dh(t,0)}}),Mh=Aa({reverse2d_:function(e,t){const n=Ca(e,"x","reverse");return se(2===n.rank,(()=>`Error in reverse2D: x must be rank 2 but got rank ${n.rank}.`)),Dh(n,t)}}),Lh=Aa({reverse3d_:function(e,t){const n=Ca(e,"x","reverse");return se(3===n.rank,(()=>`Error in reverse3D: x must be rank 3 but got rank ${n.rank}.`)),Dh(n,t)}}),zh=Aa({reverse4d_:function(e,t){const n=Ca(e,"x","reverse");return se(4===n.rank,(()=>`Error in reverse4D: x must be rank 4 but got rank ${n.rank}.`)),Dh(n,t)}}),Ph=Aa({round_:function(e){const t={x:Ca(e,"x","round")};return ya.runKernel(fs,t)}}),Bh=Aa({rsqrt_:function(e){const t={x:Ca(e,"x","rsqrt","float32")};return ya.runKernel(ms,t)}}),Wh=Aa({selu_:function(e){const t={x:Ca(e,"x","selu")};return ya.runKernel(xs,t)}}),Vh=Aa({separableConv2d_:function(e,t,n,s,r,a=[1,1],i="NHWC"){const o=Ca(e,"x","separableConv2d"),l=Ca(t,"depthwiseFilter","separableConv2d"),u=Ca(n,"pointwiseFilter","separableConv2d");let c=o,h=!1;if(3===o.rank&&(h=!0,c=du(o,[1,o.shape[0],o.shape[1],o.shape[2]])),"NCHW"===i)throw new Error("separableConv2d currently does not support dataFormat NCHW; only NHWC is supported");se(4===c.rank,(()=>`Error in separableConv2d: input must be rank 4, but got rank ${c.rank}.`)),se(4===l.rank,(()=>`Error in separableConv2d: depthwise filter must be rank 4, but got rank ${l.rank}.`)),se(4===u.rank,(()=>`Error in separableConv2d: pointwise filter must be rank 4, but got rank ${l.rank}.`)),se(1===u.shape[0],(()=>`Error in separableConv2d: the first dimension of pointwise filter  must be 1, but got ${u.shape[0]}.`)),se(1===u.shape[1],(()=>`Error in separableConv2d: the second dimension of pointwise filter must be 1, but got ${u.shape[1]}.`));const p=l.shape[2],d=l.shape[3];se(u.shape[2]===p*d,(()=>`Error in separableConv2d: the third dimension of pointwise filter must be ${p*d}, but got ${u.shape[2]}.`));const f=Ku(c,l,s,r,i,a),m=Ou(f,u,1,"valid",i);return h?du(m,[m.shape[1],m.shape[2],m.shape[3]]):m}}),Uh=async function(e,t){const n=Ca(e,"x","setdiff1d"),s=Ca(t,"y","setdiff1d");se(n.dtype===s.dtype,(()=>`x and y should have the same dtype, but got x (${n.dtype}) and y (${s.dtype}).`)),se(1===n.rank,(()=>`x should be 1D tensor, but got x (${n.shape}).`)),se(1===s.rank,(()=>`y should be 1D tensor, but got y (${s.shape}).`));const r=await n.data(),a=await s.data(),i=new Set(a);let o=0;for(let e=0;e<r.length;e++)i.has(r[e])||o++;const l=new qr([o],n.dtype),u=new qr([o],"int32");for(let e=0,t=0;e<r.length;e++)i.has(r[e])||(l.values[t]=r[e],u.values[t]=e,t++);return[l.toTensor(),u.toTensor()]},Gh=Aa({sign_:function(e){const t={x:Ca(e,"x","sign")};return ya.runKernel(Is,t)}}),Hh=Aa({sin_:function(e){const t={x:Ca(e,"x","sin","float32")};return ya.runKernel(ws,t)}}),jh=Aa({sinh_:function(e){const t={x:Ca(e,"x","sinh")};return ya.runKernel(ks,t)}}),qh=Aa({slice1d_:function(e,t,n){const s=Ca(e,"x","slice1d");return se(1===s.rank,(()=>`slice1d expects a rank-1 tensor, but got a rank-${s.rank} tensor`)),bu(s,[t],[n])}}),Kh=Aa({slice2d_:function(e,t,n){const s=Ca(e,"x","slice2d");return se(2===s.rank,(()=>`slice2d expects a rank-2 tensor, but got a rank-${s.rank} tensor`)),bu(s,t,n)}}),Xh=Aa({slice3d_:function(e,t,n){const s=Ca(e,"x","slice3d");return se(3===s.rank,(()=>`slice3d expects a rank-3 tensor, but got a rank-${s.rank} tensor`)),bu(s,t,n)}}),Yh=Aa({slice4d_:function(e,t,n){const s=Ca(e,"x","slice4d");return se(4===s.rank,(()=>`slice4d expects a rank-4 tensor, but got a rank-${s.rank} tensor`)),bu(s,t,n)}}),Zh=Aa({softmax_:function(e,t=-1){const n=Ca(e,"logits","softmax","float32");if(-1===t&&(t=n.rank-1),t!==n.rank-1)throw Error(`Softmax along a non-last dimension is not yet supported. Logits was rank ${n.rank} and dim was ${t}`);const s={logits:n},r={dim:t};return ya.runKernel(As,s,r)}}),Jh=Aa({fft_:function(e){se("complex64"===e.dtype,(()=>`The dtype for tf.spectral.fft() must be complex64 but got ${e.dtype}.`));const t={input:e};return ya.runKernel(en,t)}}),Qh=Aa({ifft_:function(e){se("complex64"===e.dtype,(()=>`The dtype for tf.spectral.ifft() must be complex64 but got ${e.dtype}.`));const t={input:e};return ya.runKernel(pn,t)}}),ep=Aa({irfft_:function(e){const t=e.shape[e.shape.length-1],n=e.size/t;let s;if(t<=2){const r=du(e,[n,t]);s=Qh(r)}else{const r=[n,2*(t-1)],a=du(Ah(e),[n,t]),i=du(Cc(e),[n,t]),o=Dh(bu(a,[0,1],[n,t-2]),1),l=ml(Dh(bu(i,[0,1],[n,t-2]),1),Tl(-1)),u=gu([a,o],1),c=gu([i,l],1),h=du(_a(u,c),[r[0],r[1]]);s=Qh(h)}if(s=Ah(s),3===e.rank&&0!==e.shape[0]){const t=s,n=e.shape[0];s=du(s,[n,s.shape[0]/n,s.shape[1]]),t.dispose()}return s}}),tp=Aa({split_:function(e,t,n=0){const s={x:Ca(e,"x","split")},r={numOrSizeSplits:t,axis:n};return ya.runKernel(Es,s,r)}}),np=Aa({rfft_:function(e,t){se("float32"===e.dtype,(()=>`The dtype for rfft() must be real value but got ${e.dtype}`));let n=e.shape[e.shape.length-1];const s=e.size/n;let r;if(null!=t&&t<n){const s=e.shape.map((e=>0)),a=e.shape.map((e=>e));a[e.shape.length-1]=t,r=bu(e,s,a),n=t}else if(null!=t&&t>n){const s=e.shape.map((e=>e));s[e.shape.length-1]=t-n,r=gu([e,eh(s)],e.shape.length-1),n=t}else r=e;const a=bl(r),i=du(_a(r,a),[s,n]),o=Jh(i),l=Math.floor(n/2)+1,u=Ah(o),c=Cc(o),h=tp(u,[l,n-l],u.shape.length-1),p=tp(c,[l,n-l],c.shape.length-1),d=r.shape.slice();return d[r.shape.length-1]=l,du(_a(h[0],p[0]),d)}}),sp=Aa({squaredDifference_:function(e,t){let n=Ca(e,"a","squaredDifference"),s=Ca(t,"b","squaredDifference");[n,s]=la(n,s),to(n.shape,s.shape);const r={a:n,b:s};return ya.runKernel(Ms,r,{})}}),rp=Aa({squeeze_:function(e,t){const n=Ca(e,"x","squeeze");return du(n,be(n.shape,t).newShape)}}),ap=Aa({stack_:function(e,t=0){const n=$a(e,"tensors","stack","string_or_numeric");se(n.length>=1,(()=>"Pass at least one tensor to tf.stack")),n.length>0&&se(t<=n[0].rank,(()=>"Axis must be <= rank of the tensor"));const s=n,r={axis:t};return ya.runKernel(Zn,s,r)}}),ip=Aa({step_:function(e,t=0){const n={x:Ca(e,"x","step")},s={alpha:t};return ya.runKernel(er,n,s)}}),op=Aa({stridedSlice_:function(e,t,n,s,r=0,a=0,i=0,o=0,l=0){const u={x:Ca(e,"x","stridedSlice","string_or_numeric")},c={begin:t,end:n,strides:s,beginMask:r,endMask:a,ellipsisMask:i,newAxisMask:o,shrinkAxisMask:l};return ya.runKernel(zs,u,c)}}),lp=Aa({tan_:function(e){const t={x:Ca(e,"x","tan","float32")};return ya.runKernel(Us,t)}});function up(e,t){ae(e);const n=Sa(e,t);if(1!==n.length)throw new Error("tensor1d() requires values to be a flat/TypedArray");return Ra(e,null,n,t)}function cp(e,t,n){if(ae(e),null!=t&&2!==t.length)throw new Error("tensor2d() requires shape to have two numbers");const s=Sa(e,n);if(2!==s.length&&1!==s.length)throw new Error("tensor2d() requires values to be number[][] or flat/TypedArray");if(1===s.length&&null==t)throw new Error("tensor2d() requires shape to be provided when `values` are a flat/TypedArray");return Ra(e,t,s,n)}function hp(e,t,n){if(ae(e),null!=t&&4!==t.length)throw new Error("tensor4d() requires shape to have four numbers");const s=Sa(e,n);if(4!==s.length&&1!==s.length)throw new Error("tensor4d() requires values to be number[][][][] or flat/TypedArray");if(1===s.length&&null==t)throw new Error("tensor4d() requires shape to be provided when `values` are a flat array");return Ra(e,t,s,n)}function pp(e,t,n){if(ae(e),null!=t&&5!==t.length)throw new Error("tensor5d() requires shape to have five numbers");const s=Sa(e,n);if(5!==s.length&&1!==s.length)throw new Error("tensor5d() requires values to be number[][][][][] or flat/TypedArray");if(1===s.length&&null==t)throw new Error("tensor5d() requires shape to be provided when `values` are a flat array");return Ra(e,t,s,n)}function dp(e,t,n){if(ae(e),null!=t&&6!==t.length)throw new Error("tensor6d() requires shape to have six numbers");const s=Sa(e,n);if(6!==s.length&&1!==s.length)throw new Error("tensor6d() requires values to be number[][][][][][] or flat/TypedArray");if(1===s.length&&null==t)throw new Error("tensor6d() requires shape to be provided when `values` are a flat array");return Ra(e,t=t||s,s,n)}const fp=Aa({topk_:function(e,t=1,n=!0){const s=Ca(e,"x","topk");if(0===s.rank)throw new Error("topk() expects the input to be of rank 1 or higher");const r=s.shape[s.shape.length-1];if(t<0)throw new Error(`'k' passed to topk() must be >= 0 but got ${t}`);if(t>r)throw new Error(`'k' passed to topk() must be <= the last dimension (${r}) but got ${t}`);const a={x:s},i={k:t,sorted:n},[o,l]=ya.runKernel(js,a,i);return{values:o,indices:l}}}),mp=Aa({truncatedNormal_:function(e,t=0,n=1,s,r){if(null!=s&&"bool"===s)throw new Error("Unsupported data type $ { dtype }");const a=new Ih(t,n,s,!0,r),i=$i(e,s);for(let e=0;e<i.values.length;e++)i.values[e]=a.nextValue();return i.toTensor()}}),gp=Aa({unique_:function(e,t=0){const n=Ca(e,"x","unique","string_or_numeric");se(n.rank>0,(()=>"The input tensor must be at least 1D"));const s={x:n},r={axis:t},[a,i]=ya.runKernel(Xs,s,r);return{values:a,indices:i}}}),yp=Aa({unsortedSegmentSum_:function(e,t,n){const s=Ca(e,"x","unsortedSegmentSum"),r=Ca(t,"segmentIds","unsortedSegmentSum","int32");se(ce(n),(()=>"numSegments must be of dtype int"));const a={x:s,segmentIds:r},i={numSegments:n};return ya.runKernel(Zs,a,i)}}),bp=Aa({unstack_:function(e,t=0){const n=Ca(e,"x","unstack","string_or_numeric");se(t>=-n.shape.length&&t<n.shape.length,(()=>`Axis = ${t} is not in [-${n.shape.length}, ${n.shape.length})`));const s={value:n},r={axis:t};return ya.runKernel(Ys,s,r)}});function xp(e,t){return Kc(e,t,"right")}function vp(e,t=!0,n,s){return ya.makeVariable(e,t,n,s)}function wp(e,t){const n=[];for(let e=0;e<t.length;e++)t[e]&&n.push(e);const s=$i(e,"int32"),r=$i([n.length,e.length],"int32");for(let t=0;t<n.length;t++){const a=s.indexToLoc(n[t]),i=t*e.length;r.values.set(a,i)}return r.toTensor()}const kp=async function(e){const t=Ca(e,"condition","whereAsync","bool"),n=await t.data(),s=wp(t.shape,n);return e!==t&&t.dispose(),s},Ip=async function(e,t,n){const s=Ca(e,"tensor","boolMask"),r=Ca(t,"mask","boolMask","bool"),a=null==n?0:n,i=r.rank,o=s.shape;se(i>0,(()=>"mask cannot be scalar")),re(o.slice(a,a+i),r.shape,"mask's shape must match the first K dimensions of tensor's shape,");let l=1;for(let e=a;e<a+i;e++)l*=o[e];const u=o.slice(0,a).concat([l],o.slice(a+i)),c=du(s,u),h=du(r,[-1]),p=await kp(h),d=rp(p,[1]),f=Sc(c,d,a);return e!==s&&s.dispose(),t!==r&&r.dispose(),d.dispose(),c.dispose(),h.dispose(),p.dispose(),f},Sp=Aa({movingAverage_:function(e,t,n,s,r=!0){const a=Ca(e,"v","movingAverage"),i=Ca(t,"x","movingAverage"),o=Ca(n,"decay","movingAverage");ua(a,i),se(ue(a.shape,i.shape),(()=>"Shape mismatch in v and x"));const l=Tl(1),u=Rl(l,o);let c=ml(Rl(i,a),u);if(r){se(null!=s,(()=>"When using zeroDebias: true, step is required."));const e=Ca(s,"step","movingAverage");c=fl(c,Rl(l,_l(o,e)))}return pl(a,c)}}),Np=Aa({scatterND_:function(e,t,n){const s=Ca(e,"indices","scatterND","int32"),r=Ca(t,"updates","scatterND");co(r,s,n);const a={indices:s,updates:r},i={shape:n};return ya.runKernel(gs,a,i)}}),Tp=Aa({sparseToDense_:function(e,t,n,s=0){const r=Ca(e,"sparseIndices","sparseToDense","int32"),a=Ca(t,"sparseValues","sparseToDense","string_or_numeric"),i=Ca(s,"defaultValue","sparseToDense",a.dtype);!function(e,t,n,s){if("int32"!==e.dtype)throw new Error(`tf.sparseToDense() expects the indices to be int32 type, but the dtype was ${e.dtype}.`);if(e.rank>2)throw new Error(`sparseIndices should be a scalar, vector, or matrix, but got shape ${e.shape}.`);const r=e.rank>0?e.shape[0]:1,a=e.rank>1?e.shape[1]:1;if(n.length!==a)throw new Error(`outputShape has incorrect number of elements:, ${n.length}, should be: ${a}.`);const i=t.size;if(0!==t.rank&&(1!==t.rank||i!==r))throw new Error(`sparseValues has incorrect shape ${t.shape}, should be [] or [${r}]`);if(t.dtype!==s.dtype)throw new Error("sparseValues.dtype must match defaultValues.dtype")}(r,a,n,i);const o={sparseIndices:r,sparseValues:a,defaultValue:i},l={outputShape:n};return ya.runKernel(Os,o,l)}}),Cp=Aa({gatherND_:function(e,t){const n=Ca(t,"indices","gatherND","int32"),s={params:Ca(e,"x","gatherND","string_or_numeric"),indices:n};return ya.runKernel(ln,s)}}),$p=Aa({dropout_:function(e,t,n,s){const r=Ca(e,"x","dropout");if(se("float32"===r.dtype,(()=>`x has to be a floating point tensor since it's going to be scaled, but got a ${r.dtype} tensor instead.`)),se(t>=0&&t<1,(()=>`rate must be a float in the range [0, 1), but got ${t}.`)),0===t)return e instanceof Zr?r.clone():r;const a=function(e,t){if(null==t)return e.shape.slice();if(ue(e.shape,t))return t;if(e.shape.length===t.length){const n=[];for(let s=0;s<e.shape.length;s++)null==t[s]&&null!=e.shape[s]?n.push(e.shape[s]):n.push(t[s]);return n}return t}(r,n),i=1-t,o=fl(Ic(pl($h(a,0,1,"float32",s),i)),i);return ml(r,o)}});function Ep(e){return Math.floor(Math.pow(2,Math.ceil(Math.log(e)/Math.log(2))))}function Ap(e,t,n){const s=1-e%2,r=new Float32Array(e);for(let a=0;a<e;++a){const i=2*Math.PI*a/(e+s-1);r[a]=t-n*Math.cos(i)}return up(r,"float32")}const _p=async function(e,t,n=1){const s=Ca(e,"predictions","inTopK"),r=Ca(t,"targets","inTopK");se(s.rank>1,(()=>`inTopK() expects the predictions to be of rank 2 or higher, but got ${s.rank}`)),se(s.rank-1===r.rank,(()=>`predictions rank should be 1 larger than targets rank, but got predictions rank ${s.rank} and targets rank ${r.rank}`)),re(s.shape.slice(0,s.shape.length-1),r.shape,"predictions's shape should be align with the targets' shape, except the last dimension.");const a=s.shape[s.shape.length-1];se(n>0&&n<=a,(()=>`'k' passed to inTopK() must be > 0 && <= the predictions last dimension (${a}), but got ${n}`));const i=await s.data(),o=await r.data(),[l,u]=[i.length/a,a],c=xe("bool",l);for(let e=0;e<l;e++){const t=e*u,s=i.subarray(t,t+u),r=[];for(let e=0;e<s.length;e++)r.push({value:s[e],index:e});r.sort(((e,t)=>t.value-e.value)),c[e]=0;for(let t=0;t<n;t++)if(r[t].index===o[e]){c[e]=1;break}}return e!==s&&s.dispose(),t!==r&&r.dispose(),Fa(c,r.shape,"bool")},Rp=Aa({conv2DBackpropFilter_:function(e,t,n,s,r,a="NHWC",i){let o=e;3===e.rank&&(o=du(e,[1,e.shape[0],e.shape[1],e.shape[2]]));let l=t;3===l.rank&&(l=du(t,[1,t.shape[0],t.shape[1],t.shape[2]])),se(4===o.rank,(()=>`Error in conv2dDerFilter: input must be rank 4, but got shape ${o.shape}.`)),se(4===l.rank,(()=>`Error in conv2dDerFilter: dy must be rank 4, but got shape ${l.shape}.`)),se(4===n.length,(()=>`Error in conv2dDerFilter: filterShape must be length 4, but got ${n}.`));const u="NHWC"===a?o.shape[3]:o.shape[1],c="NHWC"===a?l.shape[3]:l.shape[1];se(u===n[2],(()=>`Error in conv2dDerFilter: depth of input ${u}) must match input depth in filter (${n[2]}.`)),se(c===n[3],(()=>`Error in conv2dDerFilter: depth of dy (${c}) must match output depth for filter (${n[3]}).`)),pu("conv2dDerFilter",r,i);const h={x:o,dy:l},p={strides:s,pad:r,dataFormat:a,dimRoundingMode:i,filterShape:n};return ya.runKernel(Tt,h,p)}});function Fp(e,t,n){if(null==n||"linear"===n)return e;if("relu"===n)return ml(e,ip(t));throw new Error(`Cannot compute gradient for fused activation ${n}.`)}function Dp(e,t){let n=t;const s=eo(e.shape,t.shape);return s.length>0&&(n=fc(n,s)),du(n,e.shape)}function Op(e,t,n,s){if("linear"===t)return e;if("relu"===t)return Rh(e);if("elu"===t)return nc(e);if("relu6"===t)return Fh(e);if("prelu"===t)return xh(e,n);if("leakyrelu"===t)return _c(e,s);if("sigmoid"===t)return yu(e);throw new Error(`Unknown fused activation ${t}.`)}const Mp=(e,t)=>!(e>0)||"linear"===t,Lp=Aa({fusedConv2d_:function({x:e,filter:t,strides:n,pad:s,dataFormat:r="NHWC",dilations:a=[1,1],dimRoundingMode:i,bias:o,activation:l="linear",preluActivationWeights:u,leakyreluAlpha:c}){if(l=l||"linear",!1===Mp(ya.state.gradientDepth,l)){let h=Ou(e,t,n,s,r,a,i);return null!=o&&(h=pl(h,o)),Op(h,l,u,c)}const h=Ca(e,"x","conv2d","float32"),p=Ca(t,"filter","conv2d","float32");let d=h,f=!1;3===h.rank&&(f=!0,d=du(h,[1,h.shape[0],h.shape[1],h.shape[2]])),se(4===d.rank,(()=>`Error in fused conv2d: input must be rank 4, but got rank ${d.rank}.`)),se(4===p.rank,(()=>`Error in fused conv2d: filter must be rank 4, but got rank ${p.rank}.`)),pu("fused conv2d",s,i),se(d.shape[3]===p.shape[2],(()=>`Error in conv2d: depth of input (${d.shape[3]}) must match input depth for filter ${p.shape[2]}.`)),se(cu(n,a),(()=>`Error in conv2D: Either strides or dilations must be 1. Got strides ${n} and dilations '${a}'`)),se("NHWC"===r,(()=>`Error in conv2d: got dataFormat of ${r} but only NHWC is currently supported.`));const m=nu(d.shape,p.shape,n,a,s,i);let g,y;null!=o&&(g=Ca(o,"bias","fused conv2d"),[g]=la(g,h),"NHWC"===r?to(m.outShape,g.shape):(se(g.shape.length<=1,(()=>`Error in fused conv2d: only supports scalar or 1-D Tensor bias for NCHW format but got the bias of rank-${g.shape.length}.`)),se(0===g.shape.length||g.shape[0]===m.outChannels||1===g.shape[0],(()=>`Error in fused conv2d: bias shape (${g.shape}) is not compatible with the number of output channels (${m.outChannels})`)))),null!=u&&(y=Ca(u,"prelu weights","fused conv2d"));const b=(e,t)=>{const[r,i,o,u]=t,c=Fp(e,o,l);se(uu(a),(()=>`Error in gradient of fused conv2D: dilation rates greater than 1 are not yet supported in gradients. Got dilations '${a}'`));const h=[Lu(i.shape,c,r,n,s),Rp(i,c,r.shape,n,s)];if(null!=u){const e=Dp(u,c);h.push(e)}return h},x={x:d,filter:p,bias:g,preluActivationWeights:y},v={strides:n,pad:s,dataFormat:r,dilations:a,dimRoundingMode:i,activation:l,leakyreluAlpha:c};if(null==o){const e=Sl(((e,t,n)=>{let s=ya.runKernel(rr,x,v);return n([t,e,s]),f&&(s=du(s,[s.shape[1],s.shape[2],s.shape[3]])),{value:s,gradFunc:b}}));return e(d,p)}{const e=Sl(((e,t,n,s)=>{let r=ya.runKernel(rr,x,v);return s([t,e,r,n]),f&&(r=du(r,[r.shape[1],r.shape[2],r.shape[3]])),{value:r,gradFunc:b}}));return e(d,p,g)}}}),zp=Aa({depthwiseConv2dNativeBackpropFilter_:function(e,t,n,s,r,a=[1,1],i){let o=e;3===e.rank&&(o=du(e,[1,e.shape[0],e.shape[1],e.shape[2]]));let l=t;3===l.rank&&(l=du(t,[1,t.shape[0],t.shape[1],t.shape[2]]));const u={x:o,dy:l},c={strides:s,pad:r,dimRoundingMode:i,dilations:a,filterShape:n};return ya.runKernel(Pt,u,c)}}),Pp=Aa({depthwiseConv2dNativeBackpropInput_:function(e,t,n,s,r,a=[1,1],i){let o=t,l=!1;3===t.rank&&(l=!0,o=du(t,[1,t.shape[0],t.shape[1],t.shape[2]]));const u={dy:o,filter:n},c={strides:s,pad:r,dimRoundingMode:i,dilations:a,inputShape:e},h=ya.runKernel(Bt,u,c);return l?du(h,[h.shape[1],h.shape[2],h.shape[3]]):h}}),Bp=Aa({fusedDepthwiseConv2d_:function({x:e,filter:t,strides:n,pad:s,dataFormat:r="NHWC",dilations:a=[1,1],dimRoundingMode:i,bias:o,activation:l="linear",preluActivationWeights:u,leakyreluAlpha:c}){if(!1===Mp(ya.state.gradientDepth,l)){let h=Ku(e,t,n,s,r,a,i);return null!=o&&(h=pl(h,o)),Op(h,l,u,c)}const h=Ca(e,"x","depthwiseConv2d","float32"),p=Ca(t,"filter","depthwiseConv2d","float32");let d=h,f=!1;3===h.rank&&(f=!0,d=du(h,[1,h.shape[0],h.shape[1],h.shape[2]])),se(4===d.rank,(()=>`Error in fused depthwiseConv2d: input must be rank 4, but got rank ${d.rank}.`)),se(4===p.rank,(()=>`Error in fused depthwiseConv2d: filter must be rank 4, but got rank ${p.rank}.`)),se(d.shape[3]===p.shape[2],(()=>`Error in fused depthwiseConv2d: number of input channels (${d.shape[3]}) must match the inChannels dimension in filter ${p.shape[2]}.`)),null==a&&(a=[1,1]),se(cu(n,a),(()=>`Error in fused depthwiseConv2d: Either strides or dilations must be 1. Got strides ${n} and dilations '${a}'`)),pu("fused depthwiseConv2d",s,i);const m=nu(d.shape,p.shape,n,a,s,i,!0);let g,y;null!=o&&(g=Ca(o,"bias","fused conv2d"),[g]=la(g,h),to(m.outShape,g.shape)),null!=u&&(y=Ca(u,"prelu weights","fused depthwiseConv2d"));const b=(e,t)=>{se(uu(a),(()=>`Error in gradient of fused depthwiseConv2d: dilation rates greater than 1 are not yet supported. Got dilations '${a}'`));const[r,o,u,c]=t,h=Fp(e,u,l),p=Pp(o.shape,h,r,n,s,a,i),d=zp(o,h,r.shape,n,s,a,i);return null!=c?[p,d,Dp(g,h)]:[p,d]},x={x:d,filter:p,bias:g,preluActivationWeights:y},v={strides:n,pad:s,dataFormat:r,dilations:a,dimRoundingMode:i,activation:l,leakyreluAlpha:c};if(null==o){const e=Sl(((e,t,n)=>{let s=ya.runKernel(ar,x,v);return n([t,e,s]),f&&(s=du(s,[s.shape[1],s.shape[2],s.shape[3]])),{value:s,gradFunc:b}}));return e(d,p)}{const e=Sl(((e,t,n,s)=>{let r=ya.runKernel(ar,x,v);return s([t,e,r,n]),f&&(r=du(r,[r.shape[1],r.shape[2],r.shape[3]])),{value:r,gradFunc:b}}));return e(d,p,g)}}}),Wp=Aa({fusedMatMul_:function({a:e,b:t,transposeA:n=!1,transposeB:s=!1,bias:r,activation:a="linear",preluActivationWeights:i,leakyreluAlpha:o}){if(!1===Mp(ya.state.gradientDepth,a)){let l=Xi(e,t,n,s);return null!=r&&(l=pl(l,r)),Op(l,a,i,o)}let l=Ca(e,"a","fused matMul"),u=Ca(t,"b","fused matMul");[l,u]=la(l,u);const c=n?l.shape[l.rank-2]:l.shape[l.rank-1],h=s?u.shape[u.rank-1]:u.shape[u.rank-2],p=n?l.shape[l.rank-1]:l.shape[l.rank-2],d=s?u.shape[u.rank-2]:u.shape[u.rank-1],f=l.shape.slice(0,-2),m=u.shape.slice(0,-2),g=oe(f),y=oe(m);se(c===h,(()=>`Error in fused matMul: inner shapes (${c}) and (${h}) of Tensors with shapes ${l.shape} and ${u.shape} and transposeA=${n} and transposeB=${s} must match.`));const b=to(l.shape.slice(0,-2),u.shape.slice(0,-2)).concat([p,d]),x=du(l,n?[g,c,p]:[g,p,c]),v=du(u,s?[y,d,h]:[y,h,d]);let w,k;null!=r&&(w=Ca(r,"bias","fused matMul"),[w]=la(w,l),to(b,w.shape)),null!=i&&(k=Ca(i,"prelu weights","fused matMul"));const I=(e,t)=>{const[i,o,l,u]=t,c=Fp(du(e,l.shape),l,a);let h,p;return n||s?!n&&s?(h=Xi(c,o,!1,!1),p=Xi(c,i,!0,!1)):n&&!s?(h=Xi(o,c,!1,!0),p=Xi(i,c,!1,!1)):(h=Xi(o,c,!0,!0),p=Xi(c,i,!0,!0)):(h=Xi(c,o,!1,!0),p=Xi(i,c,!0,!1)),null!=r?[h,p,Dp(u,c)]:[h,p]},S={a:x,b:v,bias:w,preluActivationWeights:k},N={transposeA:n,transposeB:s,activation:a,leakyreluAlpha:o};if(null==r){const e=Sl(((e,t,n)=>{const s=ya.runKernel(sr,S,N);return n([e,t,s]),{value:du(s,b),gradFunc:I}}));return e(x,v)}{const e=Sl(((e,t,n,s)=>{const r=ya.runKernel(sr,S,N);return s([e,t,r,n]),{value:du(r,b),gradFunc:I}}));return e(x,v,w)}}}),Vp=Aa({hammingWindow_:function(e){return Ap(e,.54,.46)}}),Up=Aa({hannWindow_:function(e){return Ap(e,.5,.5)}}),Gp=Aa({frame_:function(e,t,n,s=!1,r=0){let a=0;const i=[];for(;a+t<=e.size;)i.push(bu(e,a,t)),a+=n;if(s)for(;a<e.size;){const s=a+t-e.size,o=gu([bu(e,a,t-s),El([s],r)]);i.push(o),a+=n}return 0===i.length?cp([],[0,t]):du(gu(i),[i.length,t])}}),Hp=Aa({stft_:function(e,t,n,s,r=Up){null==s&&(s=Ep(t));const a=Gp(e,t,n),i=ml(a,r(t));return np(i,s)}}),jp=Aa({cropAndResize_:function(e,t,n,s,r="bilinear",a=0){const i=Ca(e,"image","cropAndResize"),o=Ca(t,"boxes","cropAndResize","float32"),l=Ca(n,"boxInd","cropAndResize","int32"),u=o.shape[0];se(4===i.rank,(()=>`Error in cropAndResize: image must be rank 4,but got rank ${i.rank}.`)),se(2===o.rank&&4===o.shape[1],(()=>`Error in cropAndResize: boxes must be have size [${u},4] but had shape ${o.shape}.`)),se(1===l.rank&&l.shape[0]===u,(()=>`Error in cropAndResize: boxInd must be have size [${u}] but had shape ${o.shape}.`)),se(2===s.length,(()=>`Error in cropAndResize: cropSize must be of length 2, but got length ${s.length}.`)),se(s[0]>=1&&s[1]>=1,(()=>`cropSize must be atleast [1,1], but was ${s}`)),se("bilinear"===r||"nearest"===r,(()=>`method must be bilinear or nearest, but was ${r}`));const c={image:i,boxes:o,boxInd:l},h={method:r,extrapolationValue:a,cropSize:s};return ya.runKernel(Ot,c,h)}}),qp=Aa({flipLeftRight_:function(e){const t=Ca(e,"image","flipLeftRight","float32");se(4===t.rank,(()=>`Error in flipLeftRight: image must be rank 4,but got rank ${t.rank}.`));const n={image:t};return ya.runKernel(nn,n,{})}}),Kp=Aa({grayscaleToRGB_:function(e){const t=Ca(e,"image","grayscaleToRGB"),n=t.rank-1,s=t.shape[n];se(t.rank>=2,(()=>`Error in grayscaleToRGB: images must be at least rank 2, but got rank ${t.rank}.`)),se(1===s,(()=>`Error in grayscaleToRGB: last dimension of a grayscale image should be size 1, but got size ${s}.`));const r=new Array(t.rank);return r.fill(1,0,n),r[n]=3,wc(t,r)}}),Xp=Aa({rotateWithOffset_:function(e,t,n=0,s=.5){const r=Ca(e,"image","rotateWithOffset","float32");se(4===r.rank,(()=>`Error in rotateWithOffset: image must be rank 4,but got rank ${r.rank}.`));const a={image:r},i={radians:t,fillValue:n,center:s};return ya.runKernel(nr,a,i)}});function Yp(e,t,n,s,r,a){null==s&&(s=.5),null==r&&(r=Number.NEGATIVE_INFINITY),null==a&&(a=0);const i=e.shape[0];return n=Math.min(n,i),se(0<=s&&s<=1,(()=>`iouThreshold must be in [0, 1], but was '${s}'`)),se(2===e.rank,(()=>`boxes must be a 2D tensor, but was of rank '${e.rank}'`)),se(4===e.shape[1],(()=>`boxes must have 4 columns, but 2nd dimension was ${e.shape[1]}`)),se(1===t.rank,(()=>"scores must be a 1D tensor")),se(t.shape[0]===i,(()=>`scores has incompatible shape with boxes. Expected ${i}, but was ${t.shape[0]}`)),se(0<=a&&a<=1,(()=>`softNmsSigma must be in [0, 1], but was '${a}'`)),{maxOutputSize:n,iouThreshold:s,scoreThreshold:r,softNmsSigma:a}}const Zp=Aa({nonMaxSuppression_:function(e,t,n,s=.5,r=Number.NEGATIVE_INFINITY){const a=Ca(e,"boxes","nonMaxSuppression","float32"),i=Ca(t,"scores","nonMaxSuppression","float32"),o=Yp(a,i,n,s,r),l={maxOutputSize:n=o.maxOutputSize,iouThreshold:s=o.iouThreshold,scoreThreshold:r=o.scoreThreshold};return ya.runKernel(jn,{boxes:a,scores:i},l)}});function Jp(e,t,n){const s=function(e,t,n){return function(e,t,n){let s=0,r=e.length,a=0,i=!1;for(;s<r;){a=s+(r-s>>>1);const o=n(t,e[a]);o>0?s=a+1:(r=a,i=!o)}return i?s:-s-1}(e,t,n||Qp)}(e,t,n),r=s<0?-(s+1):s;e.splice(r,0,t)}function Qp(e,t){return e>t?1:e<t?-1:0}function ed(e,t,n,s,r){return sd(e,t,n,s,r,0)}function td(e,t,n,s,r,a){return sd(e,t,n,s,r,0,!1,a,!0)}function nd(e,t,n,s,r,a){return sd(e,t,n,s,r,a,!0)}function sd(e,t,n,s,r,a,i=!1,o=!1,l=!1){const u=[];for(let e=0;e<t.length;e++)t[e]>r&&u.push({score:t[e],boxIndex:e,suppressBeginIndex:0});u.sort(id);const c=a>0?-.5/a:0,h=[],p=[];for(;h.length<n&&u.length>0;){const t=u.pop(),{score:n,boxIndex:a,suppressBeginIndex:i}=t;if(n<r)break;let o=!1;for(let n=h.length-1;n>=i;--n){const i=rd(e,a,h[n]);if(i>=s){o=!0;break}if(t.score=t.score*ad(s,c,i),t.score<=r)break}t.suppressBeginIndex=h.length,o||(t.score===n?(h.push(a),p.push(t.score)):t.score>r&&Jp(u,t,id))}const d=h.length,f=n-d;o&&f>0&&(h.push(...new Array(f).fill(0)),p.push(...new Array(f).fill(0)));const m={selectedIndices:h};return i&&(m.selectedScores=p),l&&(m.validOutputs=d),m}function rd(e,t,n){const s=e.subarray(4*t,4*t+4),r=e.subarray(4*n,4*n+4),a=Math.min(s[0],s[2]),i=Math.min(s[1],s[3]),o=Math.max(s[0],s[2]),l=Math.max(s[1],s[3]),u=Math.min(r[0],r[2]),c=Math.min(r[1],r[3]),h=Math.max(r[0],r[2]),p=Math.max(r[1],r[3]),d=(o-a)*(l-i),f=(h-u)*(p-c);if(d<=0||f<=0)return 0;const m=Math.max(a,u),g=Math.max(i,c),y=Math.min(o,h),b=Math.min(l,p),x=Math.max(y-m,0)*Math.max(b-g,0);return x/(d+f-x)}function ad(e,t,n){const s=Math.exp(t*n*n);return n<=e?s:0}function id(e,t){return e.score-t.score||e.score===t.score&&t.boxIndex-e.boxIndex}const od=Aa({nonMaxSuppressionWithScore_:function(e,t,n,s=.5,r=Number.NEGATIVE_INFINITY,a=0){const i=Ca(e,"boxes","nonMaxSuppression"),o=Ca(t,"scores","nonMaxSuppression"),l=Yp(i,o,n,s,r,a),u={boxes:i,scores:o},c={maxOutputSize:n=l.maxOutputSize,iouThreshold:s=l.iouThreshold,scoreThreshold:r=l.scoreThreshold,softNmsSigma:a=l.softNmsSigma},h=ya.runKernel(Kn,u,c);return{selectedIndices:h[0],selectedScores:h[1]}}}),ld=Aa({nonMaxSuppressionPadded_:function(e,t,n,s=.5,r=Number.NEGATIVE_INFINITY,a=!1){const i=Ca(e,"boxes","nonMaxSuppression"),o=Ca(t,"scores","nonMaxSuppression"),l=Yp(i,o,n,s,r,null),u={boxes:i,scores:o},c={maxOutputSize:l.maxOutputSize,iouThreshold:l.iouThreshold,scoreThreshold:l.scoreThreshold,padToMaxOutputSize:a},h=ya.runKernel(qn,u,c);return{selectedIndices:h[0],validOutputs:h[1]}}}),ud=Aa({resizeBilinear_:function(e,t,n=!1,s=!1){const r=Ca(e,"images","resizeBilinear");se(3===r.rank||4===r.rank,(()=>`Error in resizeBilinear: x must be rank 3 or 4, but got rank ${r.rank}.`)),se(2===t.length,(()=>`Error in resizeBilinear: new shape must 2D, but got shape ${t}.`)),se(!1===s||!1===n,(()=>"Error in resizeBilinear: If halfPixelCenters is true, alignCorners must be false."));let a=r,i=!1;3===r.rank&&(i=!0,a=du(r,[1,r.shape[0],r.shape[1],r.shape[2]]));const[]=t,o={images:a},l={alignCorners:n,halfPixelCenters:s,size:t},u=ya.runKernel(cs,o,l);return i?du(u,[u.shape[1],u.shape[2],u.shape[3]]):u}}),cd=Aa({resizeNearestNeighbor_:function(e,t,n=!1,s=!1){const r=Ca(e,"images","resizeNearestNeighbor");se(3===r.rank||4===r.rank,(()=>`Error in resizeNearestNeighbor: x must be rank 3 or 4, but got rank ${r.rank}.`)),se(2===t.length,(()=>`Error in resizeNearestNeighbor: new shape must 2D, but got shape ${t}.`)),se("float32"===r.dtype||"int32"===r.dtype,(()=>"`images` must have `int32` or `float32` as dtype")),se(!1===s||!1===n,(()=>"Error in resizeNearestNeighbor: If halfPixelCenters is true, alignCorners must be false."));let a=r,i=!1;3===r.rank&&(i=!0,a=du(r,[1,r.shape[0],r.shape[1],r.shape[2]]));const[]=t,o={images:a},l={alignCorners:n,halfPixelCenters:s,size:t},u=ya.runKernel(ls,o,l);return i?du(u,[u.shape[1],u.shape[2],u.shape[3]]):u}}),hd=Aa({threshold_:function(e,t="binary",n=!1,s=.5){const r=Ca(e,"image","threshold"),a=r.shape[0]*r.shape[1];let i,o,l,u,c=ml(up([s]),255);if(se(3===r.rank,(()=>`Error in threshold: image must be rank 3,but got rank ${r.rank}.`)),se(3===r.shape[2]||1===r.shape[2],(()=>`Error in threshold: image color channel must be equal to 3 or 1but got ${r.shape[2]}.`)),se("int32"===r.dtype||"float32"===r.dtype,(()=>`Error in dtype: image dtype must be int32 or float32,but got dtype ${r.dtype}.`)),se("otsu"===t||"binary"===t,(()=>`Method must be binary or otsu, but was ${t}`)),3===r.shape[2]){[i,o,l]=tp(r,[1,1,1],-1);const e=ml(i,.2989),t=ml(o,.587),n=ml(l,.114);u=pl(pl(e,t),n)}else u=e;"otsu"===t&&(c=function(e,t){let n,s,r,a,i,o,l=up([-1]),u=up([0]),c=up([0]);for(let h=0;h<e.size-1;h++){n=bu(e,0,h+1),s=bu(e,h+1),i=fl(fc(n),t),o=fl(fc(s),t);const p=fc(ml(n,Eh(0,n.size)));r=fl(p,fc(n));const d=El(s.shape,n.size),f=pl(Eh(0,s.size),d),m=ml(s,f);a=fl(fc(m),fc(s));const g=Rl(r,a),y=Rl(r,a),b=ml(i,o);c=ml(ml(b,g),y);const x=Nc(c,u);u=Ju(x,c,u),l=Ju(x,up([h]),l)}return l}(Tu(Ei(Ph(u),"int32"),Fa([]),256),a));const h=n?Fc(u,c):Nc(u,c);return Ei(ml(h,255),"int32")}}),pd=Aa({transform_:function(e,t,n="nearest",s="constant",r=0,a){const i=Ca(e,"image","transform","float32"),o=Ca(t,"transforms","transform","float32");se(4===i.rank,(()=>`Error in transform: image must be rank 4,but got rank ${i.rank}.`)),se(2===o.rank&&(o.shape[0]===i.shape[0]||1===o.shape[0])&&8===o.shape[1],(()=>"Error in transform: Input transform should be batch x 8 or 1 x 8")),se(null==a||2===a.length,(()=>`Error in transform: outputShape must be [height, width] or null, but got ${a}.`));const l={image:i,transforms:o},u={interpolation:n,fillMode:s,fillValue:r,outputShape:a};return ya.runKernel(qs,l,u)}}),dd=Aa({bandPart_:function(e,t,n){se(t%1==0,(()=>`bandPart(): numLower must be an integer, got ${t}.`)),se(n%1==0,(()=>`bandPart(): numUpper must be an integer, got ${n}.`));const s=Ca(e,"a","bandPart");se(s.rank>=2,(()=>`bandPart(): Rank must be at least 2, got ${s.rank}.`));const r=s.shape,[a,i]=s.shape.slice(-2);if(!(t<=a))throw new Error(`bandPart(): numLower (${t}) must not be greater than the number of rows (${a}).`);if(!(n<=i))throw new Error(`bandPart(): numUpper (${n}) must not be greater than the number of columns (${i}).`);t<0&&(t=a),n<0&&(n=i);const o=du(Eh(0,a,1,"int32"),[-1,1]),l=Eh(0,i,1,"int32"),u=Rl(o,l),c=Uc(Fc(u,Tl(+t,"int32")),Tc(u,Tl(-n,"int32"))),h=eh([a,i],s.dtype);return du(ap(bp(du(s,[-1,a,i])).map((e=>Ju(c,e,h)))),r)}}),fd=Aa({gramSchmidt_:function(e){let t;if(Array.isArray(e)){t=!1,se(null!=e&&e.length>0,(()=>"Gram-Schmidt process: input must not be null, undefined, or empty"));const n=e[0].shape[0];for(let t=1;t<e.length;++t)se(e[t].shape[0]===n,(()=>`Gram-Schmidt: Non-unique lengths found in the input vectors: (${e[t].shape[0]} vs. ${n})`))}else t=!0,e=tp(e,e.shape[0],0).map((e=>rp(e,[0])));se(e.length<=e[0].shape[0],(()=>`Gram-Schmidt: Number of vectors (${e.length}) exceeds number of dimensions (${e[0].shape[0]}).`));const n=[],s=e;for(let t=0;t<e.length;++t)n.push(ya.tidy((()=>{let e=s[t];if(t>0)for(let s=0;s<t;++s){const t=ml(fc(ml(n[s],e)),n[s]);e=Rl(e,t)}return fl(e,gc(e,"euclidean"))})));return t?ap(n,0):n}});function md(e,t=!1){return ya.tidy((()=>{se(2===e.shape.length,(()=>`qr2d() requires a 2D Tensor, but got a ${e.shape.length}D Tensor.`));const n=e.shape[0],s=e.shape[1];let r=kc(n),a=Ai(e);const i=cp([[1]],[1,1]);let o=Ai(i);const l=n>=s?s:n;for(let e=0;e<l;++e){const t=a,l=o,u=r;[o,a,r]=ya.tidy((()=>{const t=bu(a,[e,e],[n-e,1]),l=gc(t),u=bu(a,[e,e],[1,1]),c=Ju(Nc(u,0),cp([[-1]]),cp([[1]])),h=Rl(u,ml(c,l)),p=fl(t,h);o=1===p.shape[0]?Ai(i):gu([i,bu(p,[1,0],[p.shape[0]-1,p.shape[1]])],0);const d=zc(fl(Xi(c,h),l)),f=bu(a,[e,0],[n-e,s]),m=ml(d,o),g=Zi(o);if(0===e)a=Rl(f,Xi(m,Xi(g,f)));else{const t=Rl(f,Xi(m,Xi(g,f)));a=gu([bu(a,[0,0],[e,s]),t],0)}const y=Zi(m),b=bu(r,[0,e],[n,r.shape[1]-e]);if(0===e)r=Rl(b,Xi(Xi(b,o),y));else{const t=Rl(b,Xi(Xi(b,o),y));r=gu([bu(r,[0,0],[n,e]),t],1)}return[o,a,r]})),el([t,l,u])}return!t&&n>s&&(r=bu(r,[0,0],[n,s]),a=bu(a,[0,0],[s,s])),[r,a]}))}const gd=Aa({qr_:function(e,t=!1){if(se(e.rank>=2,(()=>`qr() requires input tensor to have a rank >= 2, but got rank ${e.rank}`)),2===e.rank)return md(e,t);{const n=e.shape.slice(0,e.shape.length-2).reduce(((e,t)=>e*t)),s=bp(du(e,[n,e.shape[e.shape.length-2],e.shape[e.shape.length-1]]),0),r=[],a=[];return s.forEach((e=>{const[n,s]=md(e,t);r.push(n),a.push(s)})),[du(ap(r,0),e.shape),du(ap(a,0),e.shape)]}}});var yd;!function(e){e[e.NONE=0]="NONE",e[e.MEAN=1]="MEAN",e[e.SUM=2]="SUM",e[e.SUM_BY_NONZERO_WEIGHTS=3]="SUM_BY_NONZERO_WEIGHTS"}(yd||(yd={}));const bd=Aa({computeWeightedLoss_:function(e,t,n=yd.SUM_BY_NONZERO_WEIGHTS){const s=Ca(e,"losses","computeWeightedLoss");let r=null;null!=t&&(r=Ca(t,"weights","computeWeightedLoss"));const a=null==r?s:ml(s,r);if(n===yd.NONE)return a;if(n===yd.SUM)return fc(a);if(n===yd.MEAN){if(null==r)return Qc(a);{const e=s.size/r.size,t=fl(fc(a),fc(r));return e>1?fl(t,Tl(e)):t}}if(n===yd.SUM_BY_NONZERO_WEIGHTS){if(null==r)return fl(fc(a),Tl(s.size));{const e=ml(r,th(s.shape)),t=Ei(fc(uh(e,Tl(0))),"float32");return fl(fc(a),t)}}throw Error(`Unknown reduction: ${n}`)}}),xd=Aa({absoluteDifference_:function(e,t,n,s=yd.SUM_BY_NONZERO_WEIGHTS){const r=Ca(e,"labels","absoluteDifference"),a=Ca(t,"predictions","absoluteDifference");let i=null;null!=n&&(i=Ca(n,"weights","absoluteDifference")),re(r.shape,a.shape,"Error in absoluteDifference: ");const o=Dl(Rl(r,a));return bd(o,i,s)}}),vd=Aa({cosineDistance_:function(e,t,n,s,r=yd.SUM_BY_NONZERO_WEIGHTS){const a=Ca(e,"labels","cosineDistance"),i=Ca(t,"predictions","cosineDistance");let o=null;null!=s&&(o=Ca(s,"weights","cosineDistance")),re(a.shape,i.shape,"Error in cosineDistance: ");const l=Tl(1),u=Rl(l,fc(ml(a,i),n,!0));return bd(u,o,r)}}),wd=Aa({hingeLoss_:function(e,t,n,s=yd.SUM_BY_NONZERO_WEIGHTS){let r=Ca(e,"labels","hingeLoss");const a=Ca(t,"predictions","hingeLoss");let i=null;null!=n&&(i=Ca(n,"weights","hingeLoss")),re(r.shape,a.shape,"Error in hingeLoss: ");const o=Tl(1);r=Rl(ml(Tl(2),r),o);const l=Rh(Rl(o,ml(r,a)));return bd(l,i,s)}}),kd=Aa({huberLoss_:function(e,t,n,s=1,r=yd.SUM_BY_NONZERO_WEIGHTS){const a=Ca(e,"labels","huberLoss"),i=Ca(t,"predictions","huberLoss");let o=null;null!=n&&(o=Ca(n,"weights","huberLoss")),re(a.shape,i.shape,"Error in huberLoss: ");const l=Tl(s),u=Dl(Rl(i,a)),c=sh(u,l),h=Rl(u,c),p=pl(ml(Tl(.5),yl(c)),ml(l,h));return bd(p,o,r)}}),Id=Aa({logLoss_:function(e,t,n,s=1e-7,r=yd.SUM_BY_NONZERO_WEIGHTS){const a=Ca(e,"labels","logLoss"),i=Ca(t,"predictions","logLoss");let o=null;null!=n&&(o=Ca(n,"weights","logLoss")),re(a.shape,i.shape,"Error in logLoss: ");const l=Tl(1),u=Tl(s),c=zc(ml(a,Mc(pl(i,u)))),h=ml(Rl(l,a),Mc(pl(Rl(l,i),u))),p=Rl(c,h);return bd(p,o,r)}}),Sd=Aa({meanSquaredError_:function(e,t,n,s=yd.SUM_BY_NONZERO_WEIGHTS){const r=Ca(e,"labels","meanSquaredError"),a=Ca(t,"predictions","meanSquaredError");let i=null;null!=n&&(i=Ca(n,"weights","meanSquaredError")),re(r.shape,a.shape,"Error in meanSquaredError: ");const o=sp(r,a);return bd(o,i,s)}}),Nd=Aa({sigmoidCrossEntropy_:function(e,t,n,s=0,r=yd.SUM_BY_NONZERO_WEIGHTS){let a=Ca(e,"multiClassLabels","sigmoidCrossEntropy");const i=Ca(t,"logits","sigmoidCrossEntropy");let o=null;if(null!=n&&(o=Ca(n,"weights","sigmoidCrossEntropy")),re(a.shape,i.shape,"Error in sigmoidCrossEntropy: "),s>0){const e=Tl(s),t=Tl(1),n=Tl(.5);a=pl(ml(a,Rl(t,e)),ml(n,e))}const l=function(e,t){const n=Ca(e,"labels","sigmoidCrossEntropyWithLogits"),s=Ca(t,"logits","sigmoidCrossEntropyWithLogits");re(n.shape,s.shape,"Error in sigmoidCrossEntropyWithLogits: ");const r=Rh(s),a=ml(s,n),i=Lc(bc(zc(Dl(s))));return pl(Rl(r,a),i)}(a,i);return bd(l,o,r)}}),Td=Aa({softmaxCrossEntropy_:function(e,t,n,s=0,r=yd.SUM_BY_NONZERO_WEIGHTS){let a=Ca(e,"onehotLabels","softmaxCrossEntropy");const i=Ca(t,"logits","softmaxCrossEntropy");let o=null;if(null!=n&&(o=Ca(n,"weights","softmaxCrossEntropy")),re(a.shape,i.shape,"Error in softmaxCrossEntropy: "),s>0){const e=Tl(s),t=Tl(1),n=Tl(a.shape[1]);a=pl(ml(a,Rl(t,e)),fl(e,n))}const l=function(e,t,n=-1){if(-1===n&&(n=t.rank-1),n!==t.rank-1)throw Error(`Softmax cross entropy along a non-last dimension is not yet supported. Labels / logits was rank ${t.rank} and dim was ${n}`);const s=Sl(((e,t,s)=>{const r=Vc(t,[n],!0),a=Rl(Ei(t,"float32"),r);s([e,a]);const i=zc(ml(a,e));return{value:fc(i,[n]),gradFunc:(e,t)=>{const[s,r]=t,a=oc(e.shape,[n]);return[ml(du(e,a),Rl(Ei(s,"float32"),bc(r))),ml(du(e,a),Rl(bc(r),Ei(s,"float32")))]}}}));return s(e,t)}(a,i);return bd(l,o,r)}}),Cd=Aa({sparseFillEmptyRows_:function(e,t,n,s){const r=Ca(e,"indices","sparseFillEmptyRows","int32"),a=Ca(t,"values","sparseFillEmptyRows"),i=Ca(n,"denseShape","sparseFillEmptyRows","int32"),o=Ca(s,"defaultValue","sparseFillEmptyRows",a.dtype);if(2!==r.rank)throw new Error(`Indices should be Tensor2D but received shape\n        ${r.shape}`);if(1!==a.rank)throw new Error(`Values should be Tensor1D but received shape ${a.shape}`);if(1!==i.rank)throw new Error(`Dense shape should be Tensor1D but received shape ${i.shape}`);if(0!==o.rank)throw new Error(`Default value should be a scalar but received shape ${o.shape}`);const l={indices:r,values:a,denseShape:i,defaultValue:o},u=ya.runKernel(_s,l);return{outputIndices:u[0],outputValues:u[1],emptyRowIndicator:u[2],reverseIndexMap:u[3]}}}),$d=Aa({sparseReshape_:function(e,t,n){const s=Ca(e,"inputIndices","sparseReshape","int32"),r=Ca(t,"inputShape","sparseReshape","int32"),a=Ca(n,"newShape","sparseReshape","int32");if(2!==s.rank)throw new Error(`Input indices should be Tensor2D but received shape\n        ${s.shape}`);if(1!==r.rank)throw new Error(`Input shape should be Tensor1D but received shape ${r.shape}`);if(1!==a.rank)throw new Error(`New shape should be Tensor1D but received shape ${a.shape}`);const i={inputIndices:s,inputShape:r,newShape:a},o=ya.runKernel(Rs,i);return{outputIndices:o[0],outputShape:o[1]}}}),Ed=Aa({sparseSegmentMean_:function(e,t,n){const s=Ca(e,"data","sparseSegmentMean"),r=Ca(t,"indices","sparseSegmentMean","int32"),a=Ca(n,"segmentIds","sparseSegmentMean","int32");if(s.rank<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(1!==r.rank)throw new Error(`Indices should be Tensor1D but received shape\n          ${r.shape}`);if(1!==a.rank)throw new Error(`Segment ids should be Tensor1D but received shape\n          ${a.shape}`);const i={data:s,indices:r,segmentIds:a};return ya.runKernel(Fs,i)}}),Ad=Aa({sparseSegmentSum_:function(e,t,n){const s=Ca(e,"data","sparseSegmentSum"),r=Ca(t,"indices","sparseSegmentSum","int32"),a=Ca(n,"segmentIds","sparseSegmentSum","int32");if(s.rank<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(1!==r.rank)throw new Error(`Indices should be Tensor1D but received shape\n         ${r.shape}`);if(1!==a.rank)throw new Error(`Segment ids should be Tensor1D but received shape\n         ${a.shape}`);const i={data:s,indices:r,segmentIds:a};return ya.runKernel(Ds,i)}}),_d=Aa({stringNGrams_:function(e,t,n,s,r,a,i,o){const l=Ca(e,"data","stringNGrams","string");if("string"!==l.dtype)throw new Error("Data must be of datatype string");if(1!==l.shape.length)throw new Error(`Data must be a vector, saw: ${l.shape}`);const u=Ca(t,"dataSplits","stringNGrams");if("int32"!==u.dtype)throw new Error("Data splits must be of datatype int32");const c={separator:n,nGramWidths:s,leftPad:r,rightPad:a,padWidth:i,preserveShortSequences:o},h={data:l,dataSplits:u},p=ya.runKernel(Ps,h,c);return{nGrams:p[0],nGramsSplits:p[1]}}}),Rd=Aa({stringSplit_:function(e,t,n=!0){const s=Ca(e,"input","stringSplit","string"),r=Ca(t,"delimiter","stringSplit","string");if(1!==s.rank)throw new Error(`Input should be Tensor1D but received shape ${s.shape}`);if(0!==r.rank)throw new Error(`Delimiter should be a scalar but received shape ${r.shape}`);const a={skipEmpty:n},i={input:s,delimiter:r},o=ya.runKernel(Bs,i,a);return{indices:o[0],values:o[1],shape:o[2]}}}),Fd=Aa({stringToHashBucketFast_:function(e,t){const n=Ca(e,"input","stringToHashBucketFast","string"),s={numBuckets:t};if(t<=0)throw new Error("Number of buckets must be at least 1");const r={input:n};return ya.runKernel(Ws,r,s)}}),Dd={fft:Jh,ifft:Qh,rfft:np,irfft:ep},Od={hammingWindow:Vp,hannWindow:Up,frame:Gp,stft:Hp},Md={flipLeftRight:qp,grayscaleToRGB:Kp,resizeNearestNeighbor:cd,resizeBilinear:ud,rotateWithOffset:Xp,cropAndResize:jp,nonMaxSuppression:Zp,nonMaxSuppressionAsync:async function(e,t,n,s=.5,r=Number.NEGATIVE_INFINITY){const a=Ca(e,"boxes","nonMaxSuppressionAsync"),i=Ca(t,"scores","nonMaxSuppressionAsync"),o=Yp(a,i,n,s,r);n=o.maxOutputSize,s=o.iouThreshold,r=o.scoreThreshold;const l=await Promise.all([a.data(),i.data()]),u=l[0],c=l[1],{selectedIndices:h}=ed(u,c,n,s,r);return a!==e&&a.dispose(),i!==t&&i.dispose(),up(h,"int32")},nonMaxSuppressionWithScore:od,nonMaxSuppressionWithScoreAsync:async function(e,t,n,s=.5,r=Number.NEGATIVE_INFINITY,a=0){const i=Ca(e,"boxes","nonMaxSuppressionAsync"),o=Ca(t,"scores","nonMaxSuppressionAsync"),l=Yp(i,o,n,s,r,a);n=l.maxOutputSize,s=l.iouThreshold,r=l.scoreThreshold,a=l.softNmsSigma;const u=await Promise.all([i.data(),o.data()]),c=u[0],h=u[1],{selectedIndices:p,selectedScores:d}=nd(c,h,n,s,r,a);return i!==e&&i.dispose(),o!==t&&o.dispose(),{selectedIndices:up(p,"int32"),selectedScores:up(d)}},nonMaxSuppressionPadded:ld,nonMaxSuppressionPaddedAsync:async function(e,t,n,s=.5,r=Number.NEGATIVE_INFINITY,a=!1){const i=Ca(e,"boxes","nonMaxSuppressionAsync"),o=Ca(t,"scores","nonMaxSuppressionAsync"),l=Yp(i,o,n,s,r,null),u=l.maxOutputSize,c=l.iouThreshold,h=l.scoreThreshold,[p,d]=await Promise.all([i.data(),o.data()]),{selectedIndices:f,validOutputs:m}=td(p,d,u,c,h,a);return i!==e&&i.dispose(),o!==t&&o.dispose(),{selectedIndices:up(f,"int32"),validOutputs:Tl(m,"int32")}},threshold:hd,transform:pd},Ld={bandPart:dd,gramSchmidt:fd,qr:gd},zd={absoluteDifference:xd,computeWeightedLoss:bd,cosineDistance:vd,hingeLoss:wd,huberLoss:kd,logLoss:Id,meanSquaredError:Sd,sigmoidCrossEntropy:Nd,softmaxCrossEntropy:Td},Pd={sparseFillEmptyRows:Cd,sparseReshape:$d,sparseSegmentMean:Ed,sparseSegmentSum:Ad},Bd={stringNGrams:_d,stringSplit:Rd,stringToHashBucketFast:Fd},Wd={sgd:Bl.sgd,momentum:Bl.momentum,adadelta:Bl.adadelta,adagrad:Bl.adagrad,rmsprop:Bl.rmsprop,adamax:Bl.adamax,adam:Bl.adam},Vd="undefined"!=typeof requestAnimationFrame?requestAnimationFrame:"undefined"!=typeof setImmediate?setImmediate:e=>e();function Ud(){return new Promise((e=>Vd((()=>e()))))}function Gd(e,t){const n=e[0].length;e.forEach(((e,t)=>{se(e.length===n,(()=>`Error in concat${n}D: rank of tensors[${t}] must be the same as the rank of the rest (${n})`))})),se(t>=0&&t<n,(()=>`Error in concat${n}D: axis must be between 0 and ${n-1}.`));const s=e[0];e.forEach(((e,r)=>{for(let a=0;a<n;a++)se(a===t||e[a]===s[a],(()=>`Error in concat${n}D: Shape of tensors[${r}] (${e}) does not match the shape of the rest (${s}) along the non-concatenated axis ${r}.`))}))}function Hd(e,t){const n=e[0].slice();for(let s=1;s<e.length;s++)n[t]+=e[s][t];return n}const jd=30;function qd(e){return e<=jd?e:Re(e,Math.floor(Math.sqrt(e)))}function Kd(e,t,n){return[n*("number"==typeof e?e:e[0]),t*("number"==typeof e?e:e[1])]}function Xd(e,t,n,s=!0){let r=[];if(s)r=r.concat(t.slice(0)),r.push(e[0]/n),r=r.concat(e.slice(1));else{r=r.concat(e[0]);const n=t.length;for(let s=0;s<n;++s)r=r.concat([e[s+1]/t[s],t[s]]);r=r.concat(e.slice(n+1))}return r}function Yd(e,t,n=!0){const s=[];if(n){s.push(t);for(let n=t+1;n<e;++n)n<=2*t?(s.push(n),s.push(n-(t+1))):s.push(n)}else{const n=[],r=[];for(let s=1;s<e;++s)s>=2*t+1||s%2==1?r.push(s):n.push(s);s.push(...n),s.push(0),s.push(...r)}return s}function Zd(e,t,n,s=!0){const r=[];s?r.push(e[0]/n):r.push(e[0]*n);for(let n=1;n<e.length;++n)n<=t.length?s?r.push(t[n-1]*e[n]):r.push(e[n]/t[n-1]):r.push(e[n]);return r}function Jd(e,t){const n=[0];for(let s=0;s<t;++s)n.push(e[s][0]);return n}function Qd(e,t,n){const s=e.slice(0,1);for(let r=0;r<n;++r)s.push(e[r+1]-t[r][0]-t[r][1]);return s}const ef=1.7580993408473768,tf=1.0507009873554805,nf=.3275911,sf=.254829592,rf=-.284496736,af=1.421413741,of=-1.453152027,lf=1.061405429;function uf(e,t){if(e.length!==t.length)throw new Error(`Cannot merge real and imag arrays of different lengths. real:${e.length}, imag: ${t.length}.`);const n=new Float32Array(2*e.length);for(let s=0;s<n.length;s+=2)n[s]=e[s/2],n[s+1]=t[s/2];return n}function cf(e){const t=new Float32Array(e.length/2),n=new Float32Array(e.length/2);for(let s=0;s<e.length;s+=2)t[s/2]=e[s],n[s/2]=e[s+1];return{real:t,imag:n}}function hf(e){const t=Math.ceil(e.length/4),n=new Float32Array(t),s=new Float32Array(t);for(let t=0;t<e.length;t+=4)n[Math.floor(t/4)]=e[t],s[Math.floor(t/4)]=e[t+1];return{real:n,imag:s}}function pf(e){const t=Math.floor(e.length/4),n=new Float32Array(t),s=new Float32Array(t);for(let t=2;t<e.length;t+=4)n[Math.floor(t/4)]=e[t],s[Math.floor(t/4)]=e[t+1];return{real:n,imag:s}}function df(e,t){return{real:e[2*t],imag:e[2*t+1]}}function ff(e,t,n,s){e[2*s]=t,e[2*s+1]=n}function mf(e,t){const n=new Float32Array(e/2),s=new Float32Array(e/2);for(let r=0;r<Math.ceil(e/2);r++){const a=(t?2:-2)*Math.PI*(r/e);n[r]=Math.cos(a),s[r]=Math.sin(a)}return{real:n,imag:s}}function gf(e,t,n){const s=(n?2:-2)*Math.PI*(e/t);return{real:Math.cos(s),imag:Math.sin(s)}}const yf=/->/g;function bf(e,t){const n=((e=e.replace(/\s/g,"")).length-e.replace(yf,"").length)/"->".length;if(n<1)throw new Error("Equations without an arrow are not supported.");if(n>1)throw new Error('Equation must contain exactly one arrow ("->").');const[s,r]=e.split("->");se(-1===s.indexOf("..."),(()=>'The ellipsis notation ("...") is not supported yet.'));const a=s.split(","),i=a.length;if(t!==i)throw new Error(`Expected ${i} input tensors, received ${t}`);if(i>2)throw new Error("Support for more than 2 input tensors is not implemented yet.");const o=[];for(let e=0;e<r.length;++e){const t=r[e];if(!a.some((e=>-1!==e.indexOf(t))))throw new Error(`Output subscripts contain the label ${t} not present in the input subscripts.`);-1===o.indexOf(t)&&o.push(t)}for(let e=0;e<s.length;++e){const t=s[e];-1===o.indexOf(t)&&","!==t&&o.push(t)}const l=new Array(a.length);for(let e=0;e<i;++e){if(new Set(a[e].split("")).size!==a[e].length)throw new Error(`Found duplicate axes in input component ${a[e]}. Support for duplicate axes in input is not implemented yet.`);l[e]=[];for(let t=0;t<a[e].length;++t)l[e].push(o.indexOf(a[e][t]))}const u=o.length,c=[];for(let e=r.length;e<u;++e)c.push(e);return{allDims:o,summedDims:c,idDims:l}}function xf(e,t){let n=new Array(e);n.fill(-1);for(let e=0;e<t.length;++e)n[t[e]]=e;const s=[];for(let t=0;t<e;++t)-1===n[t]&&s.push(t);return n=n.filter((e=>-1!==e)),{permutationIndices:n,expandDims:s}}function vf(e,t,n){const s=new Array(e);for(let e=0;e<n.length;++e){const r=n[e].shape;for(let n=0;n<t[e].length;++n)void 0===s[t[e][n]]?s[t[e][n]]=r[n]:se(s[t[e][n]]===r[n],(()=>`Expected dimension ${s[t[e][n]]} at axis ${n} of input shaped ${JSON.stringify(r)}, but got dimension ${r[n]}`))}}function wf(e,t){const n=e,s=[];let r=0;0===e.length&&n.push(-1),r=e.length+1;for(let e=0;e<r;++e)s.push([]);const a=[];for(let e=0;e<n.length;++e){const r=If(t,n[e]);for(const t of r)-1===a.indexOf(t)&&(s[e].push(t),a.push(t))}return{path:n,steps:s}}function kf(e){return e.every(((e,t)=>e===t))}function If(e,t){const n=[];for(let s=0;s<e.length;++s)0!==e[s].length&&-1===e[s].indexOf(t)&&-1!==t||n.push(s);return n}function Sf(e,t,n=0){let s=[];if("number"==typeof t)se(e.shape[n]%t==0,(()=>"Number of splits must evenly divide the axis.")),s=new Array(t).fill(e.shape[n]/t);else{const r=t.reduce(((e,t)=>(-1===t&&(e+=1),e)),0);se(r<=1,(()=>"There should be only one negative value in split array."));const a=t.indexOf(-1);if(-1!==a){const s=t.reduce(((e,t)=>t>0?e+t:e));t[a]=e.shape[n]-s}se(e.shape[n]===t.reduce(((e,t)=>e+t)),(()=>"The sum of sizes must match the size of the axis dimension.")),s=t}return s}function Nf(e){return`Received SparseTensor with denseShape[0] = 0 but\n  indices.shape[0] = ${e}`}function Tf(e,t){return`indices(${e}, 0) is invalid: ${t} < 0`}function Cf(e,t,n){return`indices(${e}, 0) is invalid: ${t} >= ${n}`}function $f(e,t){return`only one output dimension may be -1, not both ${e} and ${t}`}function Ef(e,t){return`size ${e} must be non-negative, not ${t}`}function Af(){return"reshape cannot infer the missing input size for an empty tensor unless all specified input sizes are non-zero"}function _f(e,t){return`Input to reshape is a SparseTensor with ${oe(e)}\n  dense values, but the requested shape requires a multiple of ${oe(t)}. inputShape=${e} outputShape= ${t}`}function Rf(e,t){return`Input to reshape is a tensor with ${oe(e)} dense values, but the requested shape has ${oe(t)}. inputShape=${e} outputShape=${t}`}function Ff(){return"segment ids must be >= 0"}function Df(){return"segment ids are not increasing"}function Of(e,t){return`Segment id ${e} out of range [0, ${t}), possibly because segmentIds input is not sorted.`}function Mf(e,t,n){return`Bad: indices[${e}] == ${t} out of range [0, ${n})`}function Lf(e,t){let n,s=!1;for(e<=jd?(n=e,s=!0):n=Re(e,Math.floor(Math.sqrt(e)));!s;)n>t||n===e?s=!0:n=Re(e,n+1);return n}function zf(e,t,n){const s=[],r=e.length;for(let a=0;a<r;a++)a!==t?s.push(e[a]):s.push(n);return s}function Pf(e,t,n,s){const r=t.shape.length,a=e.shape.length;if(0!==s&&(s<-r||s>r))throw new Error(`Expect batchDims in the range of [-${r}, ${r}], but got ${s}`);if(s<0&&(s+=r),s>a)throw new Error(`batchDims (${s}) must be less than rank(x) (\n    ${a}).`);if(n<s)throw new Error(`batchDims (${s}) must be less than or equal to axis (${n}).`);for(let n=0;n<s;++n)if(e.shape[n]!==t.shape[n])throw new Error(`x.shape[${n}]: ${e.shape[n]} should be equal to indices.shape[${n}]: ${t.shape[n]}.`);const i=e.shape[n],o=[];let l=1,u=1,c=1;for(let t=0;t<s;++t)o.push(e.shape[t]),l*=e.shape[t];for(let t=s;t<n;t++)o.push(e.shape[t]),u*=e.shape[t];for(let e=s;e<r;e++)o.push(t.shape[e]);for(let t=n+1;t<a;t++)o.push(e.shape[t]),c*=e.shape[t];return{batchSize:l,sliceSize:c,outerSize:u,dimSize:i,outputShape:o}}function Bf(e){try{return e.map((e=>zr(e)))}catch(e){throw new Error(`Failed to decode encoded string bytes into utf-8, error: ${e}`)}}function Wf(e){return e.map((e=>Lr(e)))}const Vf={kernelName:Ye,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>ml(e,ip(Ei(n,"float32"),-1))}}},Uf={kernelName:Ze,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>{const t=yl(Ei(n,"float32")),s=gl(Rl(Tl(1),t));return zc(fl(e,s))}}}},Gf={kernelName:Je,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>{const t=gl(Rl(yl(Ei(n,"float32")),1));return fl(e,t)}}}},Hf={kernelName:Qe,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,s]=t,r=to(n.shape,s.shape);return{a:()=>{let t=e;const s=eo(n.shape,r);return s.length>0&&(t=fc(t,s)),du(t,n.shape)},b:()=>{let t=e;const n=eo(s.shape,r);return n.length>0&&(t=fc(t,n)),du(t,s.shape)}}}},jf={kernelName:et,saveAllInputs:!0,gradFunc:(e,t)=>{const n={};return t.forEach(((t,s)=>{n[s]=()=>e.clone()})),n}},qf={kernelName:st,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>bl(n)}}},Kf={kernelName:rt,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>bl(n)}}},Xf={kernelName:at,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>fl(e,gl(Rl(Tl(1),yl(Ei(n,"float32")))))}}},Yf={kernelName:it,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>{const t=gl(pl(Tl(1),yl(Ei(n,"float32"))));return fl(e,t)}}}},Zf={kernelName:ut,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,s]=t,r=to(n.shape,s.shape);return{a:()=>{const t=pl(yl(n),yl(s));let a=ml(e,fl(s,t));const i=eo(n.shape,r);return i.length>0&&(a=fc(a,i)),du(a,n.shape)},b:()=>{const t=pl(yl(n),yl(s));let a=zc(ml(e,fl(n,t)));const i=eo(s.shape,r);return i.length>0&&(a=fc(a,i)),du(a,s.shape)}}}},Jf={kernelName:ot,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>fl(e,pl(yl(Ei(n,"float32")),1))}}},Qf={kernelName:lt,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>fl(e,Rl(Tl(1),yl(Ei(n,"float32"))))}}},em=Aa({avgPool3dGrad_:function(e,t,n,s,r,a){const i=Ca(e,"dy","avgPool3dGrad"),o=Ca(t,"input","avgPool3dGrad");let l=i,u=o,c=!1;4===o.rank&&(c=!0,l=du(i,[1,i.shape[0],i.shape[1],i.shape[2],i.shape[3]]),u=du(o,[1,o.shape[0],o.shape[1],o.shape[2],o.shape[3]])),se(5===l.rank,(()=>`Error in avgPool3dGrad: dy must be rank 5 but got rank ${l.rank}.`)),se(5===u.rank,(()=>`Error in avgPool3dGrad: input must be rank 5 but got rank ${u.rank}.`)),pu("avgPool3dGrad",r,a);const h={dy:l,input:u},p={filterSize:n,strides:s,pad:r,dimRoundingMode:a},d=ya.runKernel(dt,h,p);return c?du(d,[d.shape[1],d.shape[2],d.shape[3],d.shape[4]]):d}}),tm={kernelName:pt,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[s]=t,{filterSize:r,strides:a,pad:i,dimRoundingMode:o}=n;return{x:()=>em(e,s,r,a,i,o)}}},nm=Aa({avgPoolGrad_:function(e,t,n,s,r){const a=Ca(e,"dy","avgPoolGrad"),i=Ca(t,"input","avgPoolGrad");se(i.rank===a.rank,(()=>`Rank of input (${i.rank}) does not match rank of dy (${a.rank})`));let o=i,l=a,u=!1;3===i.rank&&(u=!0,o=du(i,[1,i.shape[0],i.shape[1],i.shape[2]]),l=du(a,[1,a.shape[0],a.shape[1],a.shape[2]])),se(4===l.rank,(()=>`Error in avgPoolGrad: dy must be rank 4 but got rank ${l.rank}.`)),se(4===o.rank,(()=>`Error in avgPoolGrad: input must be rank 4 but got rank ${o.rank}.`));const c={dy:l,input:o},h={filterSize:n,strides:s,pad:r},p=ya.runKernel(ht,c,h);return u?du(p,[p.shape[1],p.shape[2],p.shape[3]]):p}}),sm={kernelName:ct,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[s]=t,{filterSize:r,strides:a,pad:i}=n;return{x:()=>nm(e,s,r,a,i)}}},rm={kernelName:ft,inputsToSave:["a","b"],gradFunc:(e,t,n)=>{const[s,r]=t,{transposeA:a,transposeB:i}=n;return a||i?!a&&i?{a:()=>Xi(e,r,!1,!1),b:()=>Xi(e,s,!0,!1)}:a&&!i?{a:()=>Xi(r,e,!1,!0),b:()=>Xi(s,e,!1,!1)}:{a:()=>Xi(r,e,!0,!0),b:()=>Xi(e,s,!0,!0)}:{a:()=>Xi(e,r,!1,!0),b:()=>Xi(s,e,!0,!1)}}},am={kernelName:mt,gradFunc:(e,t,n)=>{const{blockShape:s,crops:r}=n;return{x:()=>yh(e,s,r)}}},im={kernelName:yt,gradFunc:(e,t,n)=>{const s=n,r=s.inputShape,a=s.shape,i=Array.from(a);for(let e=r.length-1;e>=0;e--)if(r[e]===a[e])i[e]=1;else if(1!==r[e])throw new Error(`broadcastTo(): [${r}] cannot be broadcast to [${a}].`);const o=[];for(let e=0;e<i.length;e++)i[e]>1&&o.push(e);return{x:()=>fc(e,o,!0)}}},om={kernelName:xt,gradFunc:e=>({x:()=>e.clone()})},lm={kernelName:vt,gradFunc:e=>({x:()=>bl(e)})},um={kernelName:wt,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[s]=t,{clipValueMin:r,clipValueMax:a}=n;return{x:()=>Ju(Uc(Tc(s,r),Fc(s,a)),e,bl(e))}}},cm={kernelName:It,inputsToSave:["x"],gradFunc:Vf.gradFunc},hm={kernelName:St,saveAllInputs:!0,gradFunc:(e,t,n)=>{const s=t.map((e=>e.shape)),{axis:r}=n,a=ye(r,t[0].shape)[0],i=s.map((e=>e[a]));return tp(e,i,a).map((e=>()=>e))}},pm={kernelName:Nt,inputsToSave:["x","filter"],gradFunc:(e,t,n)=>{const[s,r]=t,{dilations:a,strides:i,pad:o,dataFormat:l}=n;return se(uu(a),(()=>`Error in gradient of conv2D: dilation rates greater than 1 are not yet supported in gradients. Got dilations '${a}'`)),{x:()=>Lu(s.shape,e,r,i,o,l),filter:()=>Rp(s,e,r.shape,i,o,l)}}},dm={kernelName:Ct,inputsToSave:["dy","filter"],gradFunc:(e,t,n)=>{const[s,r]=t,{strides:a,pad:i,dataFormat:o,dimRoundingMode:l}=n;return{dy:()=>Ou(e,r,a,i,o,1,l),filter:()=>Rp(e,s,r.shape,a,i,o,l)}}},fm=Aa({conv3DBackpropFilter_:function(e,t,n,s,r){let a=e;4===e.rank&&(a=du(e,[1,e.shape[0],e.shape[1],e.shape[2],e.shape[3]]));let i=t;4===i.rank&&(i=du(t,[1,t.shape[0],t.shape[1],t.shape[2],t.shape[3]])),se(5===a.rank,(()=>`Error in conv3dDerFilter: input must be rank 5, but got shape ${a.shape}.`)),se(5===i.rank,(()=>`Error in conv3dDerFilter: dy must be rank 5, but got shape ${i.shape}.`)),se(5===n.length,(()=>`Error in conv3dDerFilter: filterShape must be length 5, but got ${n}.`)),se(a.shape[4]===n[3],(()=>`Error in conv3dDerFilter: depth of input ${a.shape[4]}) must match input depth in filter (${n[3]}.`)),se(i.shape[4]===n[4],(()=>`Error in conv3dDerFilter: depth of dy (${i.shape[4]}) must match output depth for filter (${n[4]}).`));const o={x:a,dy:i},l={strides:s,pad:r,filterShape:n};return ya.runKernel(Et,o,l)}}),mm={kernelName:$t,inputsToSave:["x","filter"],gradFunc:(e,t,n)=>{const{dilations:s,strides:r,pad:a}=n;se(uu(s),(()=>`Error in gradient of conv3D: dilation rates greater than 1 are not yet supported in gradients. Got dilations '${s}'`));const[i,o]=t;return{x:()=>Bu(i.shape,e,o,r,a),filter:()=>fm(i,e,o.shape,r,a)}}},gm={kernelName:_t,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>ml(zc(Hh(Ei(n,"float32"))),e)}}},ym={kernelName:Rt,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>ml(jh(Ei(n,"float32")),e)}}},bm={kernelName:Dt,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[s]=t,{axis:r,exclusive:a,reverse:i}=n;return{x:()=>{const t=uc([r],s.rank);let n=Hu(e,r,a,!i);return null!=t&&(n=Zi(n,t)),n}}}},xm={kernelName:zt,inputsToSave:["x","filter"],gradFunc:(e,t,n)=>{const{dilations:s,strides:r,pad:a,dimRoundingMode:i}=n,o=null==s?[1,1]:s;se(uu(o),(()=>`Error in gradient of depthwiseConv2dNative: dilation rates greater than 1 are not yet supported. Got dilations '${o}'`));const[l,u]=t;return se(4===l.rank,(()=>`Error in gradient of depthwiseConv2dNative: input must be rank 4, but got rank ${l.rank}.`)),se(4===u.rank,(()=>`Error in gradient of depthwiseConv2dNative: filter must be rank 4, but got rank ${u.rank}.`)),se(l.shape[3]===u.shape[2],(()=>`Error in gradient of depthwiseConv2d: number of input channels (${l.shape[3]}) must match the inChannels dimension in filter ${u.shape[2]}.`)),se(cu(r,o),(()=>`Error in gradient of depthwiseConv2d: Either strides or dilations must be  1. Got strides ${r} and dilations '${o}'.`)),pu("depthwiseConv2d",a,i),{x:()=>Pp(l.shape,e,u,r,a,o,i),filter:()=>zp(l,e,u.shape,r,a,o,i)}}},vm={kernelName:Vt,inputsToSave:["x","filter"],gradFunc:(e,t,n)=>{const[s,r]=t,a={x:s,filter:r,dy:e},i={x:s,filter:r,dy:e};return{x:()=>ya.runKernel(Ut,a,n),filter:()=>ya.runKernel(Gt,i,n)}}},wm={kernelName:qt,outputsToSave:[!0],gradFunc:(e,t)=>{const[n]=t,s={dy:e,y:n};return{x:()=>ya.runKernel(Kt,s)}}},km={kernelName:Xt,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t,s=ml(bc(zc(yl(n))),2/Math.sqrt(Math.PI));return{x:()=>ml(e,s)}}},Im={kernelName:Zt,outputsToSave:[!0],gradFunc:(e,t)=>{const[n]=t;return{x:()=>ml(e,n)}}},Sm={kernelName:Jt,inputsToSave:["input"],gradFunc:(e,t)=>{const[n]=t;return{input:()=>du(e,n.shape)}}},Nm={kernelName:Qt,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>ml(e,bc(n))}}},Tm={kernelName:sn,gradFunc:e=>({x:()=>bl(e)})},Cm={kernelName:rn,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,s]=t,r=to(n.shape,s.shape);return{a:()=>{const t=fl(e,Ei(s,"float32")),a=eo(n.shape,r);return a.length>0?du(fc(t,a),n.shape):t},b:()=>{let t=ml(e,Ei(n,"float32"));const a=eo(s.shape,r);a.length>0&&(t=du(fc(t,a),s.shape));const i=yl(s);return zc(fl(t,Ei(i,"float32")))}}}},$m={kernelName:an,inputsToSave:["x","mean","variance","scale"],gradFunc:(e,t,n)=>{const{varianceEpsilon:s}=n,[r,a,i,o]=t,l=null==o?Tl(1):o,u=eo(a.shape,r.shape),c=[];if(1===a.rank){for(let e=0;e<r.shape.length-1;++e)c.push(r.shape[e]);c.push(1)}const h=Rl(r,a),p=ml(e,l),d=Bh(pl(i,Tl(s))),f=ml(ml(ml(d,d),d),Tl(-.5));return{x:()=>1===a.rank?du(ml(ml(e,wc(du(d,[1,1,1,a.shape[0]]),c)),l),r.shape):du(ml(ml(e,d),l),r.shape),mean:()=>{let e=ml(ml(d,Tl(-1)),p);return 1===a.rank&&(e=fc(e,u)),du(e,a.shape)},variance:()=>{let e=ml(ml(f,h),p);return 1===a.rank&&(e=fc(e,u)),du(e,a.shape)},scale:()=>{const t=ml(h,d);let n=ml(e,t);return 1===a.rank&&(n=fc(n,u)),du(n,a.shape)},offset:()=>{let t=e;return 1===a.rank&&(t=fc(t,u)),du(t,a.shape)}}}},Em={kernelName:on,inputsToSave:["x","indices"],gradFunc:(e,t,n)=>{const[s,r]=t,{axis:a}=n,i=ye(a,s.shape)[0];return{x:()=>{const t=s.shape,n=r.size,o=t.slice(0,i),l=o.length,u=t.slice(a,t.length).slice(1),c=u.length,h=Am(0,l),p=Am(l+1,l+1+c),d=_m([o,[n],u]),f=du(e,d),m=du(r,[n]),g=_m([[l],h,p]),y=Zi(f,g);let b=yp(y,m,s.shape[i]);const x=cc(g);return b=Zi(b,x),b},indices:()=>r}}};function Am(e,t){const n=[];for(let s=e;s<t;++s)n.push(s);return n}function _m(e){const t=[];for(let n=0;n<e.length;++n)for(let s=0;s<e[n].length;++s)t.push(e[n][s]);return t}const Rm={kernelName:cn,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,s]=t;return{a:()=>bl(n),b:()=>bl(s)}}},Fm={kernelName:hn,gradFunc:e=>({x:()=>Ei(e,"float32")})},Dm={kernelName:fn,gradFunc:e=>({x:()=>bl(e)})},Om={kernelName:mn,gradFunc:e=>({x:()=>bl(e)})},Mm={kernelName:gn,gradFunc:e=>({x:()=>bl(e)})},Lm={kernelName:yn,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[s]=t,{alpha:r}=n,a=Nc(s,0);return{x:()=>Ju(a,e,ml(e,r))}}},zm={kernelName:kn,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>fl(e,pl(n,1))}}},Pm={kernelName:wn,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>fl(e,Ei(n,"float32"))}}},Bm={kernelName:Tn,inputsToSave:[],outputsToSave:[!0],gradFunc:(e,t,n)=>{const[s]=t,{axis:r}=n;return{logits:()=>{const t=bc(s);return Rl(e,ml(fc(e,r,!0),t))}}}},Wm=Aa({localResponseNormalizationBackprop_:function(e,t,n,s=5,r=1,a=1,i=.5){const o={x:e,y:t,dy:n},l={depthRadius:s,bias:r,alpha:a,beta:i};return ya.runKernel(En,o,l)}}),Vm={kernelName:$n,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(e,t,n)=>{const[s,r]=t,{depthRadius:a,bias:i,alpha:o,beta:l}=n;return{x:()=>Wm(s,r,e,a,i,o,l)}}};function Um(e,t,n,s){return t.rank<n.rank&&(t=du(t,oc(t.shape,s))),e.rank<n.rank&&(e=du(e,oc(e.shape,s))),{x:()=>ml(e,Ei(Zu(n,t),e.dtype))}}const Gm={kernelName:An,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(e,t,n)=>{const s=n,{reductionIndices:r}=s,a=t[0],i=Um(e,t[1],a,ye(r,a.shape));return{x:()=>i.x()}}},Hm={kernelName:_n,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,s]=t;return{a:()=>ml(e,Ei(Tc(n,s),"float32")),b:()=>ml(e,Ei(Rc(n,s),"float32"))}}},jm=Aa({maxPool3dGrad_:function(e,t,n,s,r,a,i){const o=Ca(e,"dy","maxPool3dGrad"),l=Ca(t,"input","maxPool3dGrad"),u=Ca(n,"output","maxPool3dGrad");let c=o,h=l,p=u,d=!1;4===l.rank&&(d=!0,c=du(o,[1,o.shape[0],o.shape[1],o.shape[2],o.shape[3]]),h=du(l,[1,l.shape[0],l.shape[1],l.shape[2],l.shape[3]]),p=du(u,[1,u.shape[0],u.shape[1],u.shape[2],u.shape[3]])),se(5===c.rank,(()=>`Error in maxPool3dGrad: dy must be rank 5 but got rank ${c.rank}.`)),se(5===h.rank,(()=>`Error in maxPool3dGrad: input must be rank 5 but got rank ${h.rank}.`)),se(5===p.rank,(()=>`Error in maxPool3dGrad: output must be rank 5 but got rank ${p.rank}.`)),pu("maxPool3dGrad",a,i);const f={dy:c,input:h,output:p},m={filterSize:s,strides:r,pad:a,dimRoundingMode:i},g=ya.runKernel(On,f,m);return d?du(g,[g.shape[1],g.shape[2],g.shape[3],g.shape[4]]):g}}),qm={kernelName:Dn,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(e,t,n)=>{const[s,r]=t,{filterSize:a,strides:i,pad:o,dimRoundingMode:l}=n;return{x:()=>jm(e,s,r,a,i,o,l)}}},Km=Aa({maxPoolGrad_:function(e,t,n,s,r,a,i){const o=Ca(e,"dy","maxPoolGrad"),l=Ca(t,"input","maxPoolGrad"),u=Ca(n,"output","maxPoolGrad");se(l.rank===o.rank,(()=>`Rank of input (${l.rank}) does not match rank of dy (${o.rank})`)),se(4===o.rank,(()=>`Error in maxPoolGrad: dy must be rank 4 but got rank ${o.rank}.`)),se(4===l.rank,(()=>`Error in maxPoolGrad: input must be rank 4 but got rank ${l.rank}.`)),pu("maxPoolGrad",a,i);const c={dy:o,input:l,output:u},h={filterSize:s,strides:r,pad:a,dimRoundingMode:i};return ya.runKernel(Fn,c,h)}}),Xm={kernelName:Rn,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(e,t,n)=>{const[s,r]=t,{filterSize:a,strides:i,pad:o}=n;return{x:()=>Km(e,s,r,a,i,o)}}},Ym={kernelName:Bn,inputsToSave:["x"],gradFunc:(e,t,n)=>{const s=t[0],{paddings:r}=n,a=r.map((e=>e[0]));return{x:()=>bu(e,a,s.shape)}}},Zm={kernelName:Jn,inputsToSave:["x"],gradFunc:(e,t,n)=>{const s=t[0],{paddings:r}=n,a=r.map((e=>e[0]));return{x:()=>bu(e,a,s.shape)}}},Jm={kernelName:es,inputsToSave:["a","b"],outputsToSave:[!0],gradFunc:(e,t)=>{const[n,s,r]=t,a=n,i=s,o=to(a.shape,i.shape);return{a:()=>{const t=Ei(i,"float32");let n=ml(e,ml(t,_l(a,Rl(t,Tl(1)))));const s=eo(a.shape,o);return s.length>0&&(n=fc(n,s)),du(n,a.shape)},b:()=>{const t=Nc(a,0),n=Ju(t,Mc(a),bl(a));let s=ml(e,ml(r,n));const l=eo(i.shape,o);return l.length>0&&(s=fc(s,l)),du(s,i.shape)}}}};const Qm={kernelName:xs,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>{const t=Nc(n,Tl(0)),s=Tl(ef),r=Tl(tf),a=ml(e,r),i=ml(ml(e,s),bc(Ei(n,"float32")));return Ju(t,a,i)}}}},eg={kernelName:$s,gradFunc:(e,t,n)=>{const{blockShape:s,paddings:r}=n;return{x:()=>wu(e,s,r)}}},tg={kernelName:Es,gradFunc:(e,t,n)=>{const{axis:s}=n;return{x:()=>gu(e,s)}}},ng=[Vf,Uf,Gf,Hf,jf,qf,Kf,Xf,Yf,Zf,Jf,Qf,tm,sm,rm,am,im,om,lm,um,cm,hm,dm,pm,mm,gm,ym,bm,xm,vm,{kernelName:Ht,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,s]=t,r=to(n.shape,s.shape);return{a:()=>{const t=fl(e,Ei(s,"float32")),a=eo(n.shape,r);return a.length>0?du(fc(t,a),n.shape):t},b:()=>{let t=ml(e,Ei(n,"float32"));const a=eo(s.shape,r);a.length>0&&(t=du(fc(t,a),s.shape));const i=yl(s);return zc(fl(t,Ei(i,"float32")))}}}},wm,km,Im,Sm,Nm,Cm,Tm,$m,Em,Rm,Fm,Dm,Om,Mm,Lm,zm,Pm,Bm,Vm,Gm,Gm,Hm,qm,Xm,{kernelName:Ln,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[s]=t,{axis:r}=n,a=ye(r,s.shape),i=oe(ic(s.shape,a)[1]);return{x:()=>{const t=s.shape.slice();a.forEach((e=>{t[e]=1}));const n=du(e,t);return fl(ml(n,th(s.shape,"float32")),i)}}}},{kernelName:zn,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(e,t,n)=>{const s=n,{axis:r}=s,[a,i]=t,o=Um(e,i,a,ye(r,a.shape));return{x:()=>o.x()}}},{kernelName:Pn,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,s]=t;return{a:()=>ml(e,Ei(Fc(n,s),"float32")),b:()=>ml(e,Ei(Nc(n,s),"float32"))}}},Ym,{kernelName:Wn,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,s]=t,r=to(n.shape,s.shape);return{a:()=>{const t=eo(n.shape,r);return t.length>0?du(fc(e,t),n.shape):e},b:()=>{const t=ml(e,zc(Ic(fl(n,s)))),a=eo(s.shape,r);return a.length>0?du(fc(t,a),s.shape):t}}}},{kernelName:Un,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,s]=t,r=to(n.shape,s.shape);return{a:()=>{const t=ml(e,Ei(s,"float32")),a=eo(n.shape,r);return a.length>0?du(fc(t,a),n.shape):t},b:()=>{const t=ml(e,Ei(n,"float32")),a=eo(s.shape,r);return a.length>0?du(fc(t,a),s.shape):t}}}},{kernelName:Gn,gradFunc:e=>({x:()=>zc(e)})},{kernelName:Yn,inputsToSave:["indices"],gradFunc:(e,t)=>{const n=t[0];return{indices:()=>eh(n.shape,"float32")}}},{kernelName:Xn,gradFunc:e=>({x:()=>bl(e)})},{kernelName:Zn,saveAllInputs:!0,gradFunc:(e,t,n)=>{const{axis:s}=n;return bp(e,s).map((e=>()=>e))}},Zm,Zm,Jm,{kernelName:ts,inputsToSave:["x","alpha"],gradFunc:(e,t)=>{const[n,s]=t,r=Nc(n,0);return{x:()=>Ju(r,e,ml(e,s)),alpha:()=>{let t=Ju(r,bl(e),ml(e,n));const a=eo(s.shape,e.shape);return a.length>0&&(t=fc(t,a)),du(t,s.shape)}}}},{kernelName:ns,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[s]=t,{axis:r}=n;let a=[];return a=null==r?s.shape.map(((e,t)=>t)):"number"==typeof r?[r]:r,{x:()=>function(e,t,n){const s=e.shape.length,r=s-n.length,a=uc(n,s);let i=e;null!=a&&(i=Zi(e,a));const o=i.shape.slice(),l=o.splice(s-n.length,n.length).reduce(((e,t)=>e*t),1);o.push(l);let u=function(e,t,n){const s=e.shape.slice();s[n]=1;const r=du(t,s),a=Gu(e,n,!0,!1),i=Gu(e,n,!0,!0),o=ml(a,i);return ml(r,o)}(i.reshape(o),t,r);if(u=u.reshape(i.shape),null!=a){const e=cc(a);u=Zi(u,e)}return u}(s,e,a)}}},{kernelName:as,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>fl(e,zc(yl(n)))}}},{kernelName:ps,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t,s=ml(Fc(n,6),ip(n));return{x:()=>ml(e,Ei(s,"float32"))}}},{kernelName:is,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>ml(e,Ei(ip(n),"float32"))}}},{kernelName:os,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>du(e,n.shape)}}},{kernelName:cs,inputsToSave:["images"],gradFunc:(e,t,n)=>{const[s]=t,r={dy:e,images:s};return{images:()=>ya.runKernel(hs,r,n)}}},{kernelName:ls,inputsToSave:["images"],gradFunc:(e,t,n)=>{const[s]=t,r={dy:e,images:s};return{images:()=>ya.runKernel(us,r,n)}}},{kernelName:ds,gradFunc:(e,t,n)=>{const{dims:s}=n,r=ye(s,e.shape);return{x:()=>Dh(e,r)}}},{kernelName:fs,gradFunc:e=>({x:()=>bl(e)})},{kernelName:ms,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>zc(fl(e,ml(_l(n,1.5),2)))}}},{kernelName:bs,inputsToSave:["condition"],gradFunc:(e,t)=>{const[n]=t;return{condition:()=>Ei(bl(n),"float32"),t:()=>ml(e,Ei(n,e.dtype)),e:()=>ml(e,Ei(Gc(n),e.dtype))}}},Qm,{kernelName:Ss,outputsToSave:[!0],gradFunc:(e,t)=>{const[n]=t;return{x:()=>ml(e,ml(n,Rl(Tl(1),n)))}}},{kernelName:Is,gradFunc:e=>({x:()=>bl(e)})},{kernelName:ws,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>ml(Vu(Ei(n,"float32")),e)}}},{kernelName:ks,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>ml(Uu(Ei(n,"float32")),e)}}},{kernelName:vs,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[s]=t,{begin:r,size:a}=n,i=s.shape,[o,l]=Co(s,r,a),u=[];for(let t=0;t<e.rank;t++)u.push([o[t],i[t]-o[t]-l[t]]);return{x:()=>ph(e,u)}}},{kernelName:As,outputsToSave:[!0],gradFunc:(e,t,n)=>{const[s]=t,{dim:r}=n,a=ml(e,s);return{logits:()=>Rl(a,ml(fc(a,[r],!0),s))}}},{kernelName:Ns,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>ml(e,yu(n))}}},eg,eg,tg,tg,{kernelName:Ts,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>fl(e,ml(gl(Ei(n,"float32")),2))}}},{kernelName:Ms,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,s]=t,r=Tl(2);return{a:()=>ml(e,ml(r,Rl(n,s))),b:()=>ml(e,ml(r,Rl(s,n)))}}},{kernelName:Ls,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>ml(e,ml(Ei(n,"float32"),2))}}},{kernelName:er,gradFunc:e=>({x:()=>bl(e)})},{kernelName:Vs,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,s]=t,r=to(n.shape,s.shape);return{a:()=>{let t=e;const s=eo(n.shape,r);return s.length>0&&(t=fc(t,s)),du(t,n.shape)},b:()=>{let t=e;const n=eo(s.shape,r);return n.length>0&&(t=fc(t,n)),du(zc(t),s.shape)}}}},{kernelName:Cs,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[s]=t,r=s.shape.slice(),{axis:a}=n;ye(a,s.shape).forEach((e=>{r[e]=1}));const i=du(e,r),o=ml(i,th(s.shape,"float32"));return{x:()=>o}}},{kernelName:Us,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>fl(e,yl(Vu(n)))}}},{kernelName:Gs,outputsToSave:[!0],gradFunc:(e,t)=>{const[n]=t;return{x:()=>ml(Rl(Tl(1),yl(n)),e)}}},{kernelName:Hs,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[s]=t,{reps:r}=n;return{x:()=>{let t=bl(s);if(1===s.rank)for(let n=0;n<r[0];++n)t=pl(t,bu(e,[n*s.shape[0]],[s.shape[0]]));else if(2===s.rank)for(let n=0;n<r[0];++n)for(let a=0;a<r[1];++a)t=pl(t,bu(e,[n*s.shape[0],a*s.shape[1]],[s.shape[0],s.shape[1]]));else if(3===s.rank)for(let n=0;n<r[0];++n)for(let a=0;a<r[1];++a)for(let i=0;i<r[2];++i)t=pl(t,bu(e,[n*s.shape[0],a*s.shape[1],i*s.shape[2]],[s.shape[0],s.shape[1],s.shape[2]]));else{if(4!==s.rank)throw new Error(`Gradient for tile operation is not implemented for rank-${s.rank} tensors yet.`);for(let n=0;n<r[0];++n)for(let a=0;a<r[1];++a)for(let i=0;i<r[2];++i)for(let o=0;o<r[3];++o)t=pl(t,bu(e,[n*s.shape[0],a*s.shape[1],i*s.shape[2],o*s.shape[3]],[s.shape[0],s.shape[1],s.shape[2],s.shape[3]]))}return t}}}},{kernelName:Ks,gradFunc:(e,t,n)=>{const s=n,{perm:r}=s,a=cc(r);return{x:()=>Zi(e,a)}}},{kernelName:Ys,gradFunc:(e,t,n)=>{const s=n,{axis:r}=s;return{value:()=>ap(e,r)}}},{kernelName:Zs,inputsToSave:["segmentIds"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>function(e,t){const n=Ol(t,bl(t)),s=Sc(e,n);let r=Tc(t,Tl(0,"int32"));const a=s.rank-r.rank;for(let e=0;e<a;++e)r=xc(r,e+1);r=Uc(r,th(s.shape,"bool"));const i=bl(s);return Ju(r,s,i)}(e,n)}}},{kernelName:Qs,gradFunc:e=>({x:()=>bl(e)})}];for(const e of ng)fr(e);Jr().prototype.abs=function(){return this.throwIfDisposed(),Dl(this)},Jr().prototype.acos=function(){return this.throwIfDisposed(),Wl(this)},Jr().prototype.acosh=function(){return this.throwIfDisposed(),Vl(this)},Jr().prototype.add=function(e){return this.throwIfDisposed(),pl(this,e)},Jr().prototype.all=function(e,t){return this.throwIfDisposed(),Gl(this,e,t)},Jr().prototype.any=function(e,t){return this.throwIfDisposed(),Hl(this,e,t)},Jr().prototype.argMax=function(e){return this.throwIfDisposed(),jl(this,e)},Jr().prototype.argMin=function(e){return this.throwIfDisposed(),ql(this,e)},Jr().prototype.asScalar=function(){return this.throwIfDisposed(),se(1===this.size,(()=>"The array must have only 1 element.")),du(this,[])},Jr().prototype.asType=function(e){return this.throwIfDisposed(),Ei(this,e)},Jr().prototype.as1D=function(){return this.throwIfDisposed(),du(this,[this.size])},Jr().prototype.as2D=function(e,t){return this.throwIfDisposed(),du(this,[e,t])},Jr().prototype.as3D=function(e,t,n){return this.throwIfDisposed(),du(this,[e,t,n])},Jr().prototype.as4D=function(e,t,n,s){return this.throwIfDisposed(),du(this,[e,t,n,s])},Jr().prototype.as5D=function(e,t,n,s,r){return this.throwIfDisposed(),du(this,[e,t,n,s,r])},Jr().prototype.asin=function(){return this.throwIfDisposed(),Kl(this)},Jr().prototype.asinh=function(){return this.throwIfDisposed(),Xl(this)},Jr().prototype.atan=function(){return this.throwIfDisposed(),Yl(this)},Jr().prototype.atan2=function(e){return this.throwIfDisposed(),Zl(this,e)},Jr().prototype.atanh=function(){return this.throwIfDisposed(),Jl(this)},Jr().prototype.avgPool=function(e,t,n,s){return this.throwIfDisposed(),fu(this,e,t,n,s)},Jr().prototype.batchToSpaceND=function(e,t){return this.throwIfDisposed(),wu(this,e,t)},Jr().prototype.batchNorm=function(e,t,n,s,r){return this.throwIfDisposed(),ku(this,e,t,n,s,r)},Jr().prototype.broadcastTo=function(e){return this.throwIfDisposed(),$u(this,e)},Jr().prototype.cast=function(e){return this.throwIfDisposed(),Ei(this,e)},Jr().prototype.ceil=function(){return this.throwIfDisposed(),Eu(this)},Jr().prototype.clipByValue=function(e,t){return this.throwIfDisposed(),Au(this,e,t)},Jr().prototype.concat=function(e,t){return this.throwIfDisposed(),e instanceof Zr&&(e=[e]),gu([this,...e],t)},Jr().prototype.conv1d=function(e,t,n,s,r,a){return this.throwIfDisposed(),Mu(this,e,t,n,s,r,a)},Jr().prototype.conv2dTranspose=function(e,t,n,s,r){return this.throwIfDisposed(),zu(this,e,t,n,s,r)},Jr().prototype.conv2d=function(e,t,n,s,r,a){return this.throwIfDisposed(),Ou(this,e,t,n,s,r,a)},Jr().prototype.cos=function(){return this.throwIfDisposed(),Vu(this)},Jr().prototype.cosh=function(){return this.throwIfDisposed(),Uu(this)},Jr().prototype.cumprod=function(e,t,n){return this.throwIfDisposed(),Gu(this,e,t,n)},Jr().prototype.cumsum=function(e,t,n){return this.throwIfDisposed(),Hu(this,e,t,n)},Jr().prototype.depthToSpace=function(e,t){return this.throwIfDisposed(),qu(this,e,t)},Jr().prototype.depthwiseConv2d=function(e,t,n,s,r,a){return this.throwIfDisposed(),Ku(this,e,t,n,s,r,a)},Jr().prototype.dilation2d=function(e,t,n,s,r){return this.throwIfDisposed(),Yu(this,e,t,n,s,r)},Jr().prototype.divNoNan=function(e){return this.throwIfDisposed(),Qu(this,e)},Jr().prototype.div=function(e){return this.throwIfDisposed(),fl(this,e)},Jr().prototype.dot=function(e){return this.throwIfDisposed(),ec(this,e)},Jr().prototype.elu=function(){return this.throwIfDisposed(),nc(this)},Jr().prototype.equal=function(e){return this.throwIfDisposed(),Zu(this,e)},Jr().prototype.erf=function(){return this.throwIfDisposed(),sc(this)},Jr().prototype.euclideanNorm=function(e,t){return this.throwIfDisposed(),yc(this,e,t)},Jr().prototype.exp=function(){return this.throwIfDisposed(),bc(this)},Jr().prototype.expandDims=function(e){return this.throwIfDisposed(),xc(this,e)},Jr().prototype.expm1=function(){return this.throwIfDisposed(),vc(this)},Jr().prototype.fft=function(){return this.throwIfDisposed(),Jh(this)},Jr().prototype.flatten=function(){return this.throwIfDisposed(),du(this,[this.size])},Jr().prototype.floor=function(){return this.throwIfDisposed(),Ic(this)},Jr().prototype.floorDiv=function(e){return this.throwIfDisposed(),dl(this,e)},Jr().prototype.gather=function(e,t){return this.throwIfDisposed(),Sc(this,e,t)},Jr().prototype.greaterEqual=function(e){return this.throwIfDisposed(),Tc(this,e)},Jr().prototype.greater=function(e){return this.throwIfDisposed(),Nc(this,e)},Jr().prototype.ifft=function(){return this.throwIfDisposed(),Qh(this)},Jr().prototype.irfft=function(){return this.throwIfDisposed(),ep(this)},Jr().prototype.isFinite=function(){return this.throwIfDisposed(),$c(this)},Jr().prototype.isInf=function(){return this.throwIfDisposed(),Ec(this)},Jr().prototype.isNaN=function(){return this.throwIfDisposed(),Ac(this)},Jr().prototype.leakyRelu=function(e){return this.throwIfDisposed(),_c(this,e)},Jr().prototype.lessEqual=function(e){return this.throwIfDisposed(),Fc(this,e)},Jr().prototype.less=function(e){return this.throwIfDisposed(),Rc(this,e)},Jr().prototype.localResponseNormalization=function(e,t,n,s){return this.throwIfDisposed(),Oc(this,e,t,n,s)},Jr().prototype.logSigmoid=function(){return this.throwIfDisposed(),Bc(this)},Jr().prototype.logSoftmax=function(e){return this.throwIfDisposed(),Wc(this,e)},Jr().prototype.logSumExp=function(e,t){return this.throwIfDisposed(),Vc(this,e,t)},Jr().prototype.log=function(){return this.throwIfDisposed(),Mc(this)},Jr().prototype.log1p=function(){return this.throwIfDisposed(),Lc(this)},Jr().prototype.logicalAnd=function(e){return this.throwIfDisposed(),Uc(this,e)},Jr().prototype.logicalNot=function(){return this.throwIfDisposed(),Gc(this)},Jr().prototype.logicalOr=function(e){return this.throwIfDisposed(),Hc(this,e)},Jr().prototype.logicalXor=function(e){return this.throwIfDisposed(),jc(this,e)},Jr().prototype.matMul=function(e,t,n){return this.throwIfDisposed(),Xi(this,e,t,n)},Jr().prototype.maxPool=function(e,t,n,s){return this.throwIfDisposed(),Yc(this,e,t,n,s)},Jr().prototype.max=function(e,t){return this.throwIfDisposed(),pc(this,e,t)},Jr().prototype.maximum=function(e){return this.throwIfDisposed(),Ol(this,e)},Jr().prototype.mean=function(e,t){return this.throwIfDisposed(),Qc(this,e,t)},Jr().prototype.min=function(e,t){return this.throwIfDisposed(),dc(this,e,t)},Jr().prototype.minimum=function(e){return this.throwIfDisposed(),sh(this,e)},Jr().prototype.mirrorPad=function(e,t){return this.throwIfDisposed(),rh(this,e,t)},Jr().prototype.mod=function(e){return this.throwIfDisposed(),ah(this,e)},Jr().prototype.mul=function(e){return this.throwIfDisposed(),ml(this,e)},Jr().prototype.neg=function(){return this.throwIfDisposed(),zc(this)},Jr().prototype.norm=function(e,t,n){return this.throwIfDisposed(),gc(this,e,t,n)},Jr().prototype.notEqual=function(e){return this.throwIfDisposed(),uh(this,e)},Jr().prototype.oneHot=function(e,t=1,n=0){return this.throwIfDisposed(),Yi(this,e,t,n)},Jr().prototype.onesLike=function(){return this.throwIfDisposed(),ch(this)},Jr().prototype.pad=function(e,t){return this.throwIfDisposed(),ph(this,e,t)},Jr().prototype.pool=function(e,t,n,s,r,a){return this.throwIfDisposed(),bh(this,e,t,n,s,r,a)},Jr().prototype.pow=function(e){return this.throwIfDisposed(),_l(this,e)},Jr().prototype.prelu=function(e){return this.throwIfDisposed(),xh(this,e)},Jr().prototype.prod=function(e,t){return this.throwIfDisposed(),vh(this,e,t)},Jr().prototype.reciprocal=function(){return this.throwIfDisposed(),_h(this)},Jr().prototype.relu=function(){return this.throwIfDisposed(),Rh(this)},Jr().prototype.relu6=function(){return this.throwIfDisposed(),Fh(this)},Jr().prototype.reshapeAs=function(e){return this.throwIfDisposed(),du(this,e.shape)},Jr().prototype.reshape=function(e){return this.throwIfDisposed(),du(this,e)},Jr().prototype.resizeBilinear=function(e,t,n){return this.throwIfDisposed(),ud(this,e,t,n)},Jr().prototype.resizeNearestNeighbor=function(e,t,n){return this.throwIfDisposed(),cd(this,e,t,n)},Jr().prototype.reverse=function(e){return this.throwIfDisposed(),Dh(this,e)},Jr().prototype.rfft=function(){return this.throwIfDisposed(),np(this)},Jr().prototype.round=function(){return this.throwIfDisposed(),Ph(this)},Jr().prototype.rsqrt=function(){return this.throwIfDisposed(),Bh(this)},Jr().prototype.selu=function(){return this.throwIfDisposed(),Wh(this)},Jr().prototype.separableConv2d=function(e,t,n,s,r,a){return this.throwIfDisposed(),Vh(this,e,t,n,s,r,a)},Jr().prototype.sigmoid=function(){return this.throwIfDisposed(),yu(this)},Jr().prototype.sign=function(){return this.throwIfDisposed(),Gh(this)},Jr().prototype.sin=function(){return this.throwIfDisposed(),Hh(this)},Jr().prototype.sinh=function(){return this.throwIfDisposed(),jh(this)},Jr().prototype.slice=function(e,t){return this.throwIfDisposed(),bu(this,e,t)},Jr().prototype.softmax=function(e){return this.throwIfDisposed(),Zh(this,e)},Jr().prototype.softplus=function(){return this.throwIfDisposed(),Pc(this)},Jr().prototype.spaceToBatchND=function(e,t){return this.throwIfDisposed(),yh(this,e,t)},Jr().prototype.split=function(e,t){return this.throwIfDisposed(),tp(this,e,t)},Jr().prototype.sqrt=function(){return this.throwIfDisposed(),gl(this)},Jr().prototype.square=function(){return this.throwIfDisposed(),yl(this)},Jr().prototype.squaredDifference=function(e){return this.throwIfDisposed(),sp(this,e)},Jr().prototype.squeeze=function(e){return this.throwIfDisposed(),rp(this,e)},Jr().prototype.stack=function(e,t){this.throwIfDisposed();const n=e instanceof Zr?[this,e]:[this,...e];return ap(n,t)},Jr().prototype.step=function(e){return this.throwIfDisposed(),ip(this,e)},Jr().prototype.stridedSlice=function(e,t,n,s,r,a,i,o){return this.throwIfDisposed(),op(this,e,t,n,s,r,a,i,o)},Jr().prototype.sub=function(e){return this.throwIfDisposed(),Rl(this,e)},Jr().prototype.sum=function(e,t){return this.throwIfDisposed(),fc(this,e,t)},Jr().prototype.tan=function(){return this.throwIfDisposed(),lp(this)},Jr().prototype.tanh=function(){return this.throwIfDisposed(),xu(this)},Jr().prototype.tile=function(e){return this.throwIfDisposed(),wc(this,e)},Jr().prototype.toBool=function(){return this.throwIfDisposed(),Ei(this,"bool")},Jr().prototype.toFloat=function(){return this.throwIfDisposed(),Ei(this,"float32")},Jr().prototype.toInt=function(){return this.throwIfDisposed(),Ei(this,"int32")},Jr().prototype.topk=function(e,t){return this.throwIfDisposed(),fp(this,e,t)},Jr().prototype.transpose=function(e){return this.throwIfDisposed(),Zi(this,e)},Jr().prototype.unique=function(e){return this.throwIfDisposed(),gp(this,e)},Jr().prototype.unsortedSegmentSum=function(e,t){return this.throwIfDisposed(),yp(this,e,t)},Jr().prototype.unstack=function(e){return this.throwIfDisposed(),bp(this,e)},Jr().prototype.where=function(e,t){return this.throwIfDisposed(),Ju(e,this,t)},Jr().prototype.zerosLike=function(){return this.throwIfDisposed(),bl(this)};class sg extends Error{constructor(e){super(e),Object.setPrototypeOf(this,sg.prototype)}}class rg extends Error{constructor(e){super(e),Object.setPrototypeOf(this,rg.prototype)}}class ag extends Error{constructor(e){super(e),Object.setPrototypeOf(this,ag.prototype)}}class ig extends Error{constructor(e){super(e),Object.setPrototypeOf(this,ig.prototype)}}class og extends Error{constructor(e){super(e),Object.setPrototypeOf(this,og.prototype)}}Error;class lg{constructor(e){this.maxEntries=e||100,this.cache=new Map}get(e){let t;return this.cache.has(e)&&(t=this.cache.get(e),this.cache.delete(e),this.cache.set(e,t)),t}put(e,t){if(this.cache.has(e))this.cache.delete(e);else if(this.cache.size>=this.maxEntries){const e=this.cache.keys().next().value;this.cache.delete(e)}this.cache.set(e,t)}getMaxEntries(){return this.maxEntries}setMaxEntries(e){if(e<0)throw new Error(`The maxEntries of LRU caches must be at least 0, but got ${e}.`);if(this.maxEntries>e)for(let t=0;t<this.maxEntries-e;t++){const e=this.cache.keys().next().value;this.cache.delete(e)}this.maxEntries=e}}function ug(e,t){if(Array.isArray(e)){let n=[];for(let s=0;s<t;s++)n=n.concat(e);return n}{const n=new Array(t);return n.fill(e),n}}function cg(e,t){if(!e)throw new og(t)}function hg(e,t){let n=0;for(const s of e)s===t&&n++;return n}function pg(e){return 1===e.length?e[0]:e}function dg(e){return Array.isArray(e)?e:[e]}function fg(e){const t=e.replace(/(.)([A-Z][a-z0-9]+)/g,"$1_$2").replace(/([a-z])([A-Z])/g,"$1_$2").toLowerCase();return"_"!==t[0]?t:"private"+t}function mg(e){return e.length<=1||-1===e.indexOf("_")?e:e.replace(/[_]+(\w|$)/g,((e,t)=>t.toUpperCase()))}let gg={};function yg(e){if(null==e)return null;const t={};return t.className=e.getClassName(),t.config=e.getConfig(),t}function bg(e){if(null!=e&&"object"==typeof e)if(Array.isArray(e))e.forEach((e=>bg(e)));else{const t=Object.keys(e);for(const n of t){const t=e[n];null!=t&&"object"==typeof t&&(Array.isArray(t)||"ndarray"!==t.type||"number"!=typeof t.value?bg(t):e[n]=t.value)}}}function xg(e,t={},n={},s="object",r=!1){if("string"==typeof e){const r=e;let a;if(r in n)a=n[r];else if(r in gg)a=gg[r];else if(a=t[r],null==a)throw new ag(`Unknown ${s}: ${e}. This may be due to one of the following reasons:\n1. The ${s} is defined in Python, in which case it needs to be ported to TensorFlow.js or your JavaScript code.\n2. The custom ${s} is defined in JavaScript, but is not registered properly with tf.serialization.registerClass().`);return a}{const a=e;if(null==a.className||null==a.config)throw new ag(`${s}: Improper config format: ${JSON.stringify(a)}.\n'className' and 'config' must set.`);const i=a.className;let o,l;if(i in n?[o,l]=n[i]:i in gg?[o,l]=gg.className:i in t&&([o,l]=t[i]),null==o)throw new ag(`Unknown ${s}: ${i}. This may be due to one of the following reasons:\n1. The ${s} is defined in Python, in which case it needs to be ported to TensorFlow.js or your JavaScript code.\n2. The custom ${s} is defined in JavaScript, but is not registered properly with tf.serialization.registerClass().`);if(null!=l){const e={};for(const t of Object.keys(gg))e[t]=gg[t];for(const t of Object.keys(n))e[t]=n[t];a.config.customObjects=e;const t=Object.assign({},gg);for(const e of Object.keys(n))gg[e]=n[e];bg(a.config);const s=l(o,a.config,n,r);return gg=Object.assign({},t),s}{const e=Object.assign({},gg);for(const e of Object.keys(n))gg[e]=n[e];const t=new o(a.config);return gg=Object.assign({},e),t}}}function vg(e,t){return-1*function(e,t){return e<t?-1:e>t?1:0}(e,t)}function wg(e){if(null==e)return e;const t=[];for(const n of e)-1===t.indexOf(n)&&t.push(n);return t}function kg(e){if(null==e)throw new ag(`Invalid value in obj: ${JSON.stringify(e)}`);for(const t in e)if(e.hasOwnProperty(t))return!1;return!0}function Ig(e,t,n){if(null!=n&&e.indexOf(n)<0)throw new ag(`${n} is not a valid ${t}.  Valid values are ${e} or null/undefined.`)}function Sg(e,t,n=0,s=1/0){return cg(n>=0),cg(s>=n),Array.isArray(e)&&e.length>=n&&e.length<=s&&e.every((e=>typeof e===t))}function Ng(e,t){Array.isArray(e)?(se(e.length>0,(()=>`${t} is unexpectedly an empty array.`)),e.forEach(((e,n)=>Ng(e,`element ${n+1} of ${t}`)))):se(Number.isInteger(e)&&e>0,(()=>`Expected ${t} to be a positive integer, but got ${Tg(e)}.`))}function Tg(e){return null===e?"null":Array.isArray(e)?"["+e.map((e=>Tg(e))).join(",")+"]":"string"==typeof e?`"${e}"`:`${e}`}function Cg(e){return"relu"===e?"relu":"linear"===e?"linear":"elu"===e?"elu":null}let $g=0;function Eg(){return $g++}const Ag={};function _g(e=""){return e in Ag||(Ag[e]=0),Ag[e]+=1,e+Ag[e].toString()}const Rg=["channelsFirst","channelsLast"],Fg=["nearest","bilinear"],Dg=["valid","same","causal"],Og=["max","avg"],Mg=["sum","mul","concat","ave"],Lg=new Map;function zg(e){Ig(Rg,"DataFormat",e)}function Pg(e){Ig(Dg,"PaddingMode",e)}function Bg(e){Ig(Og,"PoolMode",e)}const Wg=[];function Vg(e,t){Wg.push(e);try{const e=t();return Wg.pop(),e}catch(e){throw Wg.pop(),e}}function Ug(e){if(!jg(e))throw new Error("Not a valid tensor name: '"+e+"'");return(0===Wg.length?"":Wg.join("/")+"/")+e}function Gg(e){if(!jg(e))throw new Error("Not a valid tensor name: '"+e+"'");Lg.has(e)||Lg.set(e,0);const t=Lg.get(e);if(Lg.set(e,Lg.get(e)+1),t>0){const n=`${e}_${t}`;return Lg.set(n,1),n}return e}const Hg=new RegExp(/^[A-Za-z0-9][-A-Za-z0-9\._\/]*$/);function jg(e){return!!e.match(Hg)}function qg(e,t,n){null==t&&(t=0),null==n&&(n=e.length);let s=1;for(let r=t;r<n;++r)s*=e[r];return s}function Kg(e){if(0===e.length)return Number.NaN;let t=Number.POSITIVE_INFINITY;for(let n=0;n<e.length;n++){const s=e[n];s<t&&(t=s)}return t}function Xg(e){if(0===e.length)return Number.NaN;let t=Number.NEGATIVE_INFINITY;for(let n=0;n<e.length;n++){const s=e[n];s>t&&(t=s)}return t}function Yg(e,t){if(t<e)throw new ag(`end (${t}) < begin (${e}) is forbidden.`);const n=[];for(let s=e;s<t;++s)n.push(s);return n}let Zg;function Jg(){return null==Zg&&(Zg=cl().epsilon()),Zg}function Qg(e,t){return Ei(e,t)}function ey(e,t=-1){const n=e.shape.slice();return t<0&&(t=n.length+t+1),n.splice(t,0,1),du(e,n)}function ty(e,t,n){return Qo((()=>{switch(e.rank){case 1:return qh(e,t,n);case 2:return Kh(e,[t,0],[n,e.shape[1]]);case 3:return Xh(e,[t,0,0],[n,e.shape[1],e.shape[2]]);case 4:return Yh(e,[t,0,0,0],[n,e.shape[1],e.shape[2],e.shape[3]]);case 5:return bu(e,[t,0,0,0,0],[n,e.shape[1],e.shape[2],e.shape[3],e.shape[4]]);case 6:return bu(e,[t,0,0,0,0,0],[n,e.shape[1],e.shape[2],e.shape[3],e.shape[4],e.shape[5]]);default:throw new ag(`sliceAlongFirstAxis() received an unsupported tensor rank: ${e.rank}`)}}))}function ny(e,t,n){return Qo((()=>{switch(e.rank){case 1:return qh(e,t,n);case 2:return Kh(e,[0,t],[e.shape[0],n]);case 3:return Xh(e,[0,0,t],[e.shape[0],e.shape[1],n]);case 4:return Yh(e,[0,0,0,t],[e.shape[0],e.shape[1],e.shape[2],n]);default:throw new ag(`sliceAlongLastAxis() received an unsupported tensor rank: ${e.rank}`)}}))}function sy(e,t,n,s){return Qo((()=>{switch(e.rank){case 1:return qh(e,t,n);case 2:switch(s){case 1:return ty(e,t,n);case 2:return ny(e,t,n);default:throw new ag(`The axis is not within the rank of the tensor ${s}`)}case 3:switch(s){case 1:return ty(e,t,n);case 2:return Xh(e,[0,t,0],[e.shape[0],n,e.shape[2]]);case 3:return ny(e,t,n);default:throw new ag(`The axis is not within the rank of the tensor ${s}`)}case 4:switch(s){case 1:return ty(e,t,n);case 2:return Yh(e,[0,t,0,0],[e.shape[0],n,e.shape[2],e.shape[3]]);case 3:return Yh(e,[0,0,t,0],[e.shape[0],e.shape[1],n,e.shape[3]]);case 4:return ny(e,t,n);default:throw new ag(`The axis is not within the rank of the tensor ${s}`)}default:throw new ag(`sliceAlongLastAxis() received an unsupported tensor rank: ${e.rank}`)}}))}function ry(e,t=-1){let n;return t<0&&(n=e[0].rank,t=0!==n?n:0),t===e[0].rank&&(t=-1),gu(e,t)}function ay(e,t){switch(e.rank){case 1:return _u([e,t]);case 2:return Ru([e,t],0);case 3:return Fu([e,t],0);case 4:return Du([e,t],0);default:throw new ag(`concatAlongFirstAxis() received an unsupported tensor rank: ${e.rank}`)}}function iy(e,t){if(Array.isArray(t)||(t=[t]),e.rank!==t.length)throw new ag(`The length of input n (${t.length}) does not match the number of dimensions in input x (${e.rank})`);return wc(e,t)}function oy(e,t=0,n=1,s,r){return Ch(e,t,n,s,r)}function ly(e,t,n,s){if(e.rank<2||t.rank<2)throw new ig(`dot requires both inputs to be rank >= 2 but got x shape = ${e.shape} and y shape = ${t.shape}`);if(t.rank>=3&&e.shape.slice(-1)[0]!==t.shape.slice(-2)[0])throw new ig(`If rank y >= 3, then the second last dim of y must equal the last dim of x but got x shape = ${e.shape} and  y shape = ${t.shape}`);if(2===e.rank&&2===t.rank)return Wp({a:e,b:t,transposeA:!1,transposeB:!1,bias:s?hy(e.rank,s,"channelsLast"):null,activation:n});{const r=e.shape.slice(),a=r.pop();e=du(e,[-1,a]);const i=t.shape.slice(),o=i.pop(),l=i.pop(),u=[...i,o],c=Array.from({length:t.rank},((e,n)=>0===n?t.rank-2:n<=t.rank-2?n-1:n));t=du(Zi(t,c),[l,-1]);const h=[...r,...u];return du(Wp({a:e,b:t,transposeA:!1,transposeB:!1,bias:s?hy(e.rank,s,"channelsLast"):null,activation:n}),h)}}function uy(e,t,n){return Qo((()=>(t=Array.isArray(t)?up(t,"int32"):Ei(t,"int32"),Sc(e,t,n))))}function cy(e){return ml(e,e)}function hy(e,t,n){const s=t.shape;if(1!==t.rank&&t.rank!==e)throw new ag(`Unexpected bias dimensions: ${t.rank}; expected it to be 1 or ${e}`);if(5===e){if("channelsFirst"===n)return 1===s.length?du(t,[1,s[0],1,1,1]):du(t,[1,s[3],s[0],s[1],s[2]]);if("channelsLast"===n)return 1===s.length?du(t,[1,1,1,1,s[0]]):du(t,[1].concat(s))}else if(4===e){if("channelsFirst"===n)return 1===s.length?du(t,[1,s[0],1,1]):du(t,[1,s[2],s[0],s[1]]);if("channelsLast"===n)return 1===s.length?du(t,[1,1,1,s[0]]):du(t,[1].concat(s))}else if(3===e){if("channelsFirst"===n)return 1===s.length?du(t,[1,s[0],1]):du(t,[1,s[1],s[0]]);if("channelsLast"===n)return 1===s.length?du(t,[1,1,s[0]]):du(t,[1].concat(s))}else if(e<3)return t;throw new ag(`Unsupported input rank by biasAdd: ${t.rank}`)}function py(e,t,n){return Qo((()=>(null==n&&(n="channelsLast"),zg(n),pl(e,hy(e.rank,t,n)))))}function dy(e,t,n,s){return Qo((()=>$p(e,t,n,s)))}function fy(e,t,n=!1){return n?e():t()}const my=["fanIn","fanOut","fanAvg"],gy=["normal","uniform","truncatedNormal"];class yy extends Ao{fromConfigUsesCustomObjects(){return!1}getConfig(){return{}}}class by extends yy{apply(e,t){return eh(e,t)}}by.className="Zeros",Ro(by);class xy extends yy{apply(e,t){return th(e,t)}}xy.className="Ones",Ro(xy);class vy extends yy{constructor(e){if(super(),"object"!=typeof e)throw new ag(`Expected argument of type ConstantConfig but got ${e}`);if(void 0===e.value)throw new ag(`config must have value set but got ${e}`);this.value=e.value}apply(e,t){return Qo((()=>ml(Tl(this.value),th(e,t))))}getConfig(){return{value:this.value}}}vy.className="Constant",Ro(vy);class wy extends yy{constructor(e){super(),this.DEFAULT_MINVAL=-.05,this.DEFAULT_MAXVAL=.05,this.minval=e.minval||this.DEFAULT_MINVAL,this.maxval=e.maxval||this.DEFAULT_MAXVAL,this.seed=e.seed}apply(e,t){return $h(e,this.minval,this.maxval,t)}getConfig(){return{minval:this.minval,maxval:this.maxval,seed:this.seed}}}wy.className="RandomUniform",Ro(wy);class ky extends yy{constructor(e){super(),this.DEFAULT_MEAN=0,this.DEFAULT_STDDEV=.05,this.mean=e.mean||this.DEFAULT_MEAN,this.stddev=e.stddev||this.DEFAULT_STDDEV,this.seed=e.seed}apply(e,t){if("float32"!==(t=t||"float32")&&"int32"!==t)throw new ig(`randomNormal does not support dType ${t}.`);return oy(e,this.mean,this.stddev,t,this.seed)}getConfig(){return{mean:this.mean,stddev:this.stddev,seed:this.seed}}}ky.className="RandomNormal",Ro(ky);class Iy extends yy{constructor(e){super(),this.DEFAULT_MEAN=0,this.DEFAULT_STDDEV=.05,this.mean=e.mean||this.DEFAULT_MEAN,this.stddev=e.stddev||this.DEFAULT_STDDEV,this.seed=e.seed}apply(e,t){if("float32"!==(t=t||"float32")&&"int32"!==t)throw new ig(`truncatedNormal does not support dType ${t}.`);return mp(e,this.mean,this.stddev,t,this.seed)}getConfig(){return{mean:this.mean,stddev:this.stddev,seed:this.seed}}}Iy.className="TruncatedNormal",Ro(Iy);class Sy extends yy{constructor(e){super(),this.gain=null!=e.gain?e.gain:1}apply(e,t){return Qo((()=>{if(2!==e.length||e[0]!==e[1])throw new ag("Identity matrix initializer can only be used for 2D square matrices.");return ml(this.gain,kc(e[0]))}))}getConfig(){return{gain:this.gain}}}Sy.className="Identity",Ro(Sy);class Ny extends yy{constructor(e){if(super(),e.scale<0)throw new ag(`scale must be a positive float. Got: ${e.scale}`);var t;this.scale=null==e.scale?1:e.scale,this.mode=null==e.mode?"fanIn":e.mode,t=this.mode,Ig(my,"FanMode",t),this.distribution=null==e.distribution?"normal":e.distribution,function(e){Ig(gy,"Distribution",e)}(this.distribution),this.seed=e.seed}apply(e,t){const n=function(e,t="channelsLast"){let n,s;if(zg(t),2===e.length)n=e[0],s=e[1];else if(-1!==[3,4,5].indexOf(e.length)){if("channelsFirst"===t){const t=qg(e,2);n=e[1]*t,s=e[0]*t}else if("channelsLast"===t){const t=qg(e,0,e.length-2);n=e[e.length-2]*t,s=e[e.length-1]*t}}else{const t=qg(e);n=Math.sqrt(t),s=Math.sqrt(t)}return[n,s]}(e),s=n[0],r=n[1];let a=this.scale;if("fanIn"===this.mode?a/=Math.max(1,s):"fanOut"===this.mode?a/=Math.max(1,r):a/=Math.max(1,(s+r)/2),"normal"===this.distribution){const n=Math.sqrt(a);if("float32"!==(t=t||"float32")&&"int32"!==t)throw new ig(`${this.getClassName()} does not support dType ${t}.`);return mp(e,0,n,t,this.seed)}{const n=Math.sqrt(3*a);return $h(e,-n,n,t)}}getConfig(){return{scale:this.scale,mode:this.mode,distribution:this.distribution,seed:this.seed}}}Ny.className="VarianceScaling",Ro(Ny);class Ty extends Ny{constructor(e){super({scale:1,mode:"fanAvg",distribution:"uniform",seed:null==e?null:e.seed})}getClassName(){return Ny.className}}Ty.className="GlorotUniform",Ro(Ty);class Cy extends Ny{constructor(e){super({scale:1,mode:"fanAvg",distribution:"normal",seed:null==e?null:e.seed})}getClassName(){return Ny.className}}Cy.className="GlorotNormal",Ro(Cy);class $y extends Ny{constructor(e){super({scale:2,mode:"fanIn",distribution:"normal",seed:null==e?null:e.seed})}getClassName(){return Ny.className}}$y.className="HeNormal",Ro($y);class Ey extends Ny{constructor(e){super({scale:2,mode:"fanIn",distribution:"uniform",seed:null==e?null:e.seed})}getClassName(){return Ny.className}}Ey.className="HeUniform",Ro(Ey);class Ay extends Ny{constructor(e){super({scale:1,mode:"fanIn",distribution:"normal",seed:null==e?null:e.seed})}getClassName(){return Ny.className}}Ay.className="LeCunNormal",Ro(Ay);class _y extends Ny{constructor(e){super({scale:1,mode:"fanIn",distribution:"uniform",seed:null==e?null:e.seed})}getClassName(){return Ny.className}}_y.className="LeCunNormal",Ro(_y);class Ry extends yy{constructor(e){if(super(),this.DEFAULT_GAIN=1,this.gain=null==e.gain?this.DEFAULT_GAIN:e.gain,this.seed=e.seed,null!=this.seed)throw new ig("Random seed is not implemented for Orthogonal Initializer yet.")}apply(e,t){return Qo((()=>{if(e.length<2)throw new ig("Shape must be at least 2D.");e[0]*e[1]>2e3&&console.warn(`Orthogonal initializer is being called on a matrix with more than 2000 (${e[0]*e[1]}) elements: Slowness may result.`);const t=oy(e[0]>e[1]?[e[1],e[0]]:e,0,1,"float32");let n=Ld.gramSchmidt(t);return e[0]>e[1]&&(n=Zi(n)),ml(this.gain,n)}))}getConfig(){return{gain:this.gain,seed:this.seed}}}Ry.className="Orthogonal",Ro(Ry);const Fy={constant:"Constant",glorotNormal:"GlorotNormal",glorotUniform:"GlorotUniform",heNormal:"HeNormal",heUniform:"HeUniform",identity:"Identity",leCunNormal:"LeCunNormal",leCunUniform:"LeCunUniform",ones:"Ones",orthogonal:"Orthogonal",randomNormal:"RandomNormal",randomUniform:"RandomUniform",truncatedNormal:"TruncatedNormal",varianceScaling:"VarianceScaling",zeros:"Zeros"};function Dy(e,t={}){return xg(e,_o.getMap().classNameMap,t,"initializer")}function Oy(e){return yg(e)}function My(e){if("string"==typeof e){const t=e in Fy?Fy[e]:e;if("GlorotNormal"===t)return new Cy;if("GlorotUniform"===t)return new Ty;if("HeNormal"===t)return new $y;if("HeUniform"===t)return new Ey;if("LeCunNormal"===t)return new Ay;if("LeCunUniform"===t)return new _y;{const e={};return e.className=t,e.config={},Dy(e)}}return e instanceof yy?e:Dy(e)}function Ly(e){return Array.isArray(e)&&Array.isArray(e[0])}function zy(e){return 0===e.length?[]:Array.isArray(e[0])?e:[e]}function Py(e){let t;if(Array.isArray(e)){if(1!==e.length)throw new ag(`Expected Tensor length to be 1; got ${e.length}`);t=e[0]}else t=e;return t}function By(e){if(Array.isArray(e)&&Array.isArray(e[0])){if(1===e.length)return e[0];throw new ag(`Expected exactly 1 Shape; got ${e.length}`)}return e}function Wy(e){let t=0;for(const n of e)0===n.shape.length?t+=1:t+=n.shape.reduce(((e,t)=>e*t));return t}class Vy{constructor(e,t="float32",n="Variable",s=!0,r=null){this.dtype=null==t?"float32":t,this.shape=e.shape,this.id=Eg(),n=null==n?"Variable":n,this.originalName=Ug(n),this.name=Gg(this.originalName),this.trainable_=s,this.constraint=r,this.val=vp(e,this.trainable_,this.name,this.dtype)}read(){return this.assertNotDisposed(),this.val}write(e){return this.assertNotDisposed(),function(e,t){if(e.shape.toString()!==t.shape.toString())throw new Error("Shape mismatch: "+JSON.stringify(e.shape)+" vs. "+JSON.stringify(t.shape))}(this.val,e),this.val.id!==e.id&&(this.val.assign(e),null!=this.constraint&&this.val.assign(this.constraint.apply(this.val))),this}dispose(){this.assertNotDisposed(),this.val.dispose()}assertNotDisposed(){if(this.val.isDisposed)throw new Error(`LayersVariable ${this.name} is already disposed.`)}get trainable(){return this.trainable_}set trainable(e){this.trainable_=e,this.val.trainable=e}}function Uy(e){return e.map((e=>e.read()))}function Gy(e){e.forEach((e=>{e[0].write(e[1])}))}class Hy{constructor(e){this.dtype=e.dtype,this.shape=e.shape,null!=e.shape?this.ndim=e.shape.length:this.ndim=e.ndim,this.maxNDim=e.maxNDim,this.minNDim=e.minNDim,this.axes=e.axes||{}}}class jy{constructor(e,t,n,s,r,a,i){this.dtype=e,this.shape=t,this.sourceLayer=n,this.inputs=s,this.callArgs=r,this.outputTensorIndex=i,this.id=Eg(),null!=a&&(this.originalName=Ug(a),this.name=Gg(this.originalName)),this.rank=t.length}}let qy=0;class Ky{constructor(e,t){this.callArgs=t,this.id=qy++,this.outboundLayer=e.outboundLayer,this.inboundLayers=e.inboundLayers,this.nodeIndices=e.nodeIndices,this.tensorIndices=e.tensorIndices,this.inputTensors=e.inputTensors,this.outputTensors=e.outputTensors,this.inputMasks=e.inputMasks,this.outputMasks=e.outputMasks,this.inputShapes=e.inputShapes,this.outputShapes=e.outputShapes;for(const t of e.inboundLayers)null!=t&&t.outboundNodes.push(this);e.outboundLayer.inboundNodes.push(this)}getConfig(){const e=[];for(const t of this.inboundLayers)null!=t?e.push(t.name):e.push(null);return{outboundLayer:this.outboundLayer?this.outboundLayer.name:null,inboundLayers:e,nodeIndices:this.nodeIndices,tensorIndices:this.tensorIndices}}}let Xy=0;class Yy extends Ao{constructor(e={}){super(),this._callHook=null,this._addedWeightNames=[],this._stateful=!1,this.id=Xy++,this.activityRegularizer=null,this.inputSpec=null,this.supportsMasking=!1,this._trainableWeights=[],this._nonTrainableWeights=[],this._losses=[],this._updates=[],this._built=!1,this.inboundNodes=[],this.outboundNodes=[];let t=e.name;if(!t){const e=this.getClassName();t=fg(e)+"_"+_g(e)}if(this.name=t,this.trainable_=null==e.trainable||e.trainable,null!=e.inputShape||null!=e.batchInputShape){let t;if(null!=e.batchInputShape)t=e.batchInputShape;else if(null!=e.inputShape){let n=null;null!=e.batchSize&&(n=e.batchSize),t=[n].concat(e.inputShape)}this.batchInputShape=t;let n=e.dtype;null==n&&(n=e.inputDType),null==n&&(n="float32"),this.dtype=n}null!=e.weights?this.initialWeights=e.weights:this.initialWeights=null,this._refCount=null,this.fastWeightInitDuringBuild=!1}static nodeKey(e,t){return e.name+"_ib-"+t.toString()}getNodeAtIndex(e,t){if(0===this.inboundNodes.length)throw new rg(`The layer has never been called and thus has no defined ${t}.`);if(this.inboundNodes.length<=e)throw new ag(`Asked to get ${t} at node ${e}, but the layer has only ${this.inboundNodes.length} inbound nodes.`);return this.inboundNodes[e]}getInputAt(e){return pg(this.getNodeAtIndex(e,"input").inputTensors)}getOutputAt(e){return pg(this.getNodeAtIndex(e,"output").outputTensors)}get input(){if(this.inboundNodes.length>1)throw new sg(`Layer ${this.name} has multiple inbound nodes, hence the notion of "layer input" is ill-defined. Use \`getInputAt(nodeIndex)\` instead.`);if(0===this.inboundNodes.length)throw new sg(`Layer ${this.name} is not connected, no input to return.`);return pg(this.getNodeAtIndex(0,"input").inputTensors)}get output(){if(0===this.inboundNodes.length)throw new sg(`Layer ${this.name} has no inbound nodes.`);if(this.inboundNodes.length>1)throw new sg(`Layer ${this.name} has multiple inbound nodes, hence the notion of "layer output" is ill-defined. Use \`getOutputAt(nodeIndex)\` instead.`);return pg(this.getNodeAtIndex(0,"output").outputTensors)}get losses(){return this._losses}calculateLosses(){return this.losses.map((e=>e()))}get updates(){return this._updates}get built(){return this._built}set built(e){this._built=e}get trainable(){return this.trainable_}set trainable(e){this._trainableWeights.forEach((t=>t.trainable=e)),this.trainable_=e}get trainableWeights(){return this.trainable_?this._trainableWeights.filter((e=>e.trainable)):[]}set trainableWeights(e){this._trainableWeights=e}get nonTrainableWeights(){return this.trainable?this._trainableWeights.filter((e=>!e.trainable)).concat(this._nonTrainableWeights):this._trainableWeights.concat(this._nonTrainableWeights)}set nonTrainableWeights(e){this._nonTrainableWeights=e}get weights(){return this.trainableWeights.concat(this.nonTrainableWeights)}get stateful(){return this._stateful}resetStates(){if(!this.stateful)throw new Error("Cannot call the resetStates() method of a non-stateful Layer object.")}assertInputCompatibility(e){if(e=dg(e),null==this.inputSpec||0===this.inputSpec.length)return;const t=dg(this.inputSpec);if(e.length!==t.length)throw new ag(`Layer ${this.name} expects ${t.length} inputs, but it received ${e.length} input tensors. Input received: ${e}`);for(let n=0;n<e.length;n++){const s=e[n],r=t[n];if(null==r)continue;const a=s.rank;if(null!=r.ndim&&a!==r.ndim)throw new ag(`Input ${n} is incompatible with layer ${this.name}: expected ndim=${r.ndim}, found ndim=${a}`);if(null!=r.maxNDim&&a>r.maxNDim)throw new ag(`Input ${n} is incompatible with layer ${this.name}: expected max_ndim=${r.maxNDim}, found ndim=${a}`);if(null!=r.minNDim&&a<r.minNDim)throw new ag(`Input ${n} is incompatible with layer ${this.name}: expected min_ndim=${r.minNDim}, found ndim=${a}.`);if(null!=r.dtype&&s.dtype!==r.dtype)throw new ag(`Input ${n} is incompatible with layer ${this.name} : expected dtype=${r.dtype}, found dtype=${s.dtype}.`);if(r.axes){const e=s.shape;for(const t in r.axes){const s=Number(t),a=r.axes[t],i=s>=0?e[s]:e[e.length+s];if(null!=a&&-1===[a,null].indexOf(i))throw new ag(`Input ${n} is incompatible with layer ${this.name}: expected axis ${s} of input shape to have value ${a} but got shape ${e}.`)}}if(null!=r.shape)for(let e=0;e<r.shape.length;++e){const t=r.shape[e],a=s.shape[e];if(null!=t&&null!=a&&t!==a)throw new ag(`Input ${n} is incompatible with layer ${this.name}: expected shape=${r.shape}, found shape=${s.shape}.`)}}}call(e,t){return e}invokeCallHook(e,t){null!=this._callHook&&this._callHook(e,t)}setCallHook(e){this._callHook=e}clearCallHook(){this._callHook=null}apply(e,t){t=t||{},this.assertNotDisposed();const n=dg(e);let s=!0;for(const e of n)if(!(e instanceof jy)){s=!1;break}let r=!0;for(const e of n)if(e instanceof jy){r=!1;break}if(s===r)throw new ag("Arguments to apply() must be all SymbolicTensors or all Tensors");return Vg(this.name,(()=>{if(!this.built){this.assertInputCompatibility(e);const t=[];for(const n of dg(e))t.push(n.shape);this.build(pg(t)),this.built=!0,this.initialWeights&&this.setWeights(this.initialWeights),null===this._refCount&&r&&(this._refCount=1)}if(this.assertInputCompatibility(e),r){let s=this.call(e,t);const r=dg(s),a=[];for(let e of r)-1!==n.indexOf(e)&&(e=e.clone()),a.push(e);if(s=pg(a),null!=this.activityRegularizer)throw new ig("Layer invocation in the presence of activity regularizer(s) is not supported yet.");return s}{const n=function(e){e=dg(e);const t=[];for(const n of e)t.push(n.shape);return pg(t)}(e),s=this.computeOutputShape(n);let r;const a="float32";if(this.warnOnIncompatibleInputShape(Array.isArray(e)?n[0]:n),r=null!=s&&s.length>0&&Array.isArray(s[0])?s.map(((n,s)=>new jy(a,n,this,dg(e),t,this.name,s))):new jy(a,s,this,dg(e),t,this.name),this.addInboundNode(e,r,null,null,n,s,t),this._refCount++,null!=this.activityRegularizer)throw new ig("Layer invocation in the presence of activity regularizer(s) is not supported yet.");return r}}))}warnOnIncompatibleInputShape(e){if(null!=this.batchInputShape)if(e.length!==this.batchInputShape.length)console.warn(`The rank of the input tensor provided (shape: ${JSON.stringify(e)}) does not match that of the batchInputShape (${JSON.stringify(this.batchInputShape)}) of the layer ${this.name}`);else{let t=!1;this.batchInputShape.forEach(((n,s)=>{null!=n&&null!=e[s]&&e[s]!==n&&(t=!0)})),t&&console.warn(`The shape of the input tensor (${JSON.stringify(e)}) does not match the expectation of layer ${this.name}: ${JSON.stringify(this.batchInputShape)}`)}}get outputShape(){if(null==this.inboundNodes||0===this.inboundNodes.length)throw new sg(`The layer ${this.name} has never been called and thus has no defined output shape.`);const e=[];for(const t of this.inboundNodes){const n=JSON.stringify(t.outputShapes);-1===e.indexOf(n)&&e.push(n)}if(1===e.length){const e=this.inboundNodes[0].outputShapes;return Array.isArray(e)&&Array.isArray(e[0])&&1===e.length?e[0]:e}throw new sg(`The layer ${this.name} has multiple inbound nodes with different output shapes. Hence the notion of "output shape" is ill-defined for the layer.`)}countParams(){if(!this.built)throw new rg(`You tried to call countParams() on ${this.name}, but the layer is not built yet. Build it first by calling build(batchInputShape).`);return Wy(this.weights)}build(e){this.built=!0}getWeights(e=!1){return Uy(e?this.trainableWeights:this.weights)}setWeights(e){Qo((()=>{const t=this.weights;if(t.length!==e.length)throw new ag(`You called setWeights(weights) on layer "${this.name}" with a weight list of length ${e.length}, but the layer was expecting ${t.length} weights. Provided weights: ${e}...`);if(0===t.length)return;const n=[],s=Uy(t);for(let r=0;r<s.length;++r){const a=s[r],i=t[r],o=e[r];if(!ue(a.shape,o.shape))throw new ag(`Layer weight shape ${a.shape} not compatible with provided weight shape ${o.shape}`);n.push([i,o])}Gy(n)}))}addWeight(e,t,n,s,r,a,i,o){if(-1!==this._addedWeightNames.indexOf(e))throw new ag(`Duplicate weight name ${e} for layer ${this.name}`);this._addedWeightNames.push(e),null==n&&(n="float32"),this.fastWeightInitDuringBuild&&(s=null!=o?o():My("zeros"));const l=s.apply(t,n),u=new Vy(l,n,e,a,i);return l.dispose(),null!=r&&this.addLoss((()=>r.apply(u.read()))),null==a&&(a=!0),a?this._trainableWeights.push(u):this._nonTrainableWeights.push(u),u}setFastWeightInitDuringBuild(e){this.fastWeightInitDuringBuild=e}addLoss(e){null==e||Array.isArray(e)&&0===e.length||(e=dg(e),void 0!==this._losses&&null!==this._losses&&this.losses.push(...e))}computeOutputShape(e){return e}computeMask(e,t){if(!this.supportsMasking){if(null!=t){if(!Array.isArray(t))throw new TypeError(`Layer ${this.name} does not support masking, but was passed an inputMask.`);t.forEach((e=>{if(null!=e)throw new TypeError(`Layer ${this.name} does not support masking, but was passed an inputMask.`)}))}return null}return t}addInboundNode(e,t,n,s,r,a,i=null){const o=dg(e);t=dg(t),n=dg(n),s=dg(s),r=zy(r),a=zy(a);const l=[],u=[],c=[];for(const e of o)l.push(e.sourceLayer),u.push(e.nodeIndex),c.push(e.tensorIndex);new Ky({outboundLayer:this,inboundLayers:l,nodeIndices:u,tensorIndices:c,inputTensors:o,outputTensors:t,inputMasks:n,outputMasks:s,inputShapes:r,outputShapes:a},i);for(let e=0;e<t.length;e++)t[e].sourceLayer=this,t[e].nodeIndex=this.inboundNodes.length-1,t[e].tensorIndex=e}getConfig(){const e={name:this.name,trainable:this.trainable};return null!=this.batchInputShape&&(e.batchInputShape=this.batchInputShape),null!=this.dtype&&(e.dtype=this.dtype),e}disposeWeights(){return this.weights.forEach((e=>e.dispose())),this.weights.length}assertNotDisposed(){if(0===this._refCount)throw new Error(`Layer '${this.name}' is already disposed.`)}dispose(){if(!this.built)throw new Error(`Cannot dispose Layer ${this.name} because it has not been built yet.`);if(null===this._refCount)throw new Error(`Cannot dispose Layer ${this.name} because it has not been used yet.`);this.assertNotDisposed();let e=0;return 0==--this._refCount&&(e=this.disposeWeights()),{refCountAfterDispose:this._refCount,numDisposedVariables:e}}}function Zy(e,t,n){if((null==t||null!=n&&n>0)&&(t=e.sourceLayer,n=e.nodeIndex),0===t.inboundNodes.length)return[e];{const e=t.inboundNodes[n];if(0===e.inboundLayers.length)return e.inputTensors;{const t=[];for(let n=0;n<e.inboundLayers.length;n++){const s=Zy(e.inputTensors[n],e.inboundLayers[n],e.nodeIndices[n]);for(const e of s)-1===t.indexOf(e)&&t.push(e)}return t}}}class Jy extends Yy{constructor(e){if(super({dtype:e.dtype,name:null!=e.name?e.name:_g("input").toString()}),null==e.batchSize&&(e.batchSize=null),null==e.sparse&&(e.sparse=!1),this.trainable=!1,this.built=!0,this.sparse=e.sparse,null!=e.inputShape&&null!=e.batchInputShape)throw new ag("Only provide the inputShape OR batchInputShape argument to inputLayer, not both at the same time.");let t=e.batchInputShape;if(null==t){if(null==e.inputShape)throw new ag("An InputLayer should be passed either a `batchInputShape` or an `inputShape`.");t=[e.batchSize].concat(e.inputShape)}else if(null!=e.batchSize)throw new ag("Cannot specify batchSize if batchInputShape is specified when creating an InputLayer.");const n=e.dtype||"float32";this.batchInputShape=t,this.dtype=n,this.inputSpec=[{shape:t}];const s=new jy(this.dtype,this.batchInputShape,this,[],{},this.name);s.nodeIndex=0,s.tensorIndex=0,new Ky({outboundLayer:this,inboundLayers:[],nodeIndices:[],tensorIndices:[],inputTensors:[s],outputTensors:[s],inputMasks:[null],outputMasks:[null],inputShapes:[t],outputShapes:[t]})}apply(e,t){throw new ag(`Cannot pass any input to an InputLayer's apply() method. InputLayer name: ${this.name}`)}dispose(){return{refCountAfterDispose:this._refCount,numDisposedVariables:0}}getConfig(){return{batchInputShape:this.batchInputShape,dtype:this.dtype,sparse:this.sparse,name:this.name}}}function Qy(e){if(null==e.batchShape&&null==e.shape)throw new Error("Please provide to Input either a `shape` or a `batchShape` argument. Note that `shape` does not include the batch dimension.");if(null!=e.batchShape&&null!=e.shape)throw new ag("Please provide either a `shape` or `batchShape` argument to Input, but not both.");let t=e.batchShape;null!=e.shape&&null==t&&(t=[null].concat(e.shape));let n=e.dtype;return null==n&&(n="float32"),new Jy({batchInputShape:t,name:e.name,dtype:n,sparse:e.sparse}).inboundNodes[0].outputTensors[0]}Jy.className="InputLayer",Ro(Jy);class eb{constructor(e){if(this.id2Value={},this.id2Mask={},this.name2Id={},e instanceof eb)for(const t in e.id2Value)this.id2Value[t]=e.id2Value[t],t in e.id2Mask&&(this.id2Mask[t]=e.id2Mask[t]);else{if(null==e)return;for(const t of e)this.add(t.key,t.value)}}add(e,t,n){if(null!=this.id2Value[e.id])throw new ag(`Duplicate key: name=${e.name}, id=${e.id}`);return this.id2Value[e.id]=function(e,t){if(null==e.dtype||e.dtype===t.dtype)return t;try{return Ei(t,e.dtype)}catch(n){throw new ag(`The dtype of the feed (${t.dtype}) can not be cast to the dtype of the key '${e.name}' (${e.dtype}).`)}}(e,t),this.name2Id[e.name]=e.id,null!=n&&(this.id2Mask[e.id]=n),this}addFeed(e){this.add(e.key,e.value)}hasKey(e){return null!=this.id2Value[e.id]}names(){return Object.keys(this.name2Id)}getValue(e){if(e instanceof jy){if(null==this.id2Value[e.id])throw new ag(`Nonexistent key: ${e.name}`);return this.id2Value[e.id]}{const t=this.name2Id[e];if(null==t)throw new ag(`Feed dict has no SymbolicTensor name: ${e}`);return this.id2Value[t]}}getMask(e){if(e instanceof jy){if(null==this.id2Value[e.id])throw new ag(`Nonexistent key: ${e.name}`);return this.id2Mask[e.id]}{const t=this.name2Id[e];if(null==t)throw new ag(`Feed dict has no SymbolicTensor name: ${e}`);return this.id2Mask[t]}}disposeMasks(){null!=this.id2Mask&&el(this.id2Mask)}}const tb=new lg,nb=new lg;function sb(e,t,n,s){const r=null!=n&&n.training,a=Array.isArray(e),i=a?e:[e],o=i.map((e=>e.name)),l=[],u=t.names();for(const e of o)-1!==u.indexOf(e)?l.push(t.getValue(e)):l.push(null);null!=s&&(s.maxNumTensors=-1/0,s.minNumTensors=1/0);const c=o.join(",")+"|"+t.names().sort().join(",");let h,p=tb.get(c);if(null==p){const e=function(e,t){se(null!=e&&e.length>0,(()=>"Expected at least one fetch, got none"));let n=[],s={};if(1===e.length){const r=ab(e[0],t);n=r.sorted,s=r.recipientMap}else{const r=new Set;for(const a of e){const{sorted:e,recipientMap:i}=ab(a,t);for(const t of e)r.has(t.name)||(n.push(t),r.add(t.name));for(const e in i)null==s[e]&&(s[e]=new Set),i[e].forEach((t=>s[e].add(t)))}}return{sorted:n,recipientCounts:rb(s)}}(i,t);p=e.sorted,h=e.recipientCounts,tb.put(c,p),nb.put(c,h)}h={},r||Object.assign(h,nb.get(c));const d=new eb(t);for(let e=0;e<p.length;++e){if(null!=s){const e=Zo().numTensors;e>s.maxNumTensors&&(s.maxNumTensors=e),e<s.minNumTensors&&(s.minNumTensors=e)}const a=p[e],i=a.sourceLayer;if(i instanceof Jy)continue;const u=[],c=[],f=[];let m=!1;for(const e of a.inputs){const n=d.getValue(e),s=d.getMask(e);u.push(n),c.push(s),null!=s&&(m=!0),r||(h[e.name]--,0!==h[e.name]||t.hasKey(e)||-1!==o.indexOf(e.name)||n.isDisposed||!0===e.sourceLayer.stateful||f.push(n))}m&&((n=n||{}).mask=c[0]);const g=dg(i.apply(u,n));let y=null;i.supportsMasking&&(y=i.computeMask(u,c));const b=ib(a),x=Array.isArray(b)?b:[b];for(let e=0;e<x.length;++e){d.hasKey(x[e])||d.add(x[e],g[e],Array.isArray(y)?y[0]:y);const t=o.indexOf(x[e].name);-1!==t&&(l[t]=g[e])}r||el(f)}return d.disposeMasks(),a?l:l[0]}function rb(e){const t={};for(const n in e)t[n]=e[n].size;return t}function ab(e,t){const n=new Set,s=[],r={};for(const e of t.names())n.add(e);const a=[],i=[];for(a.push(e);a.length>0;){const e=a[a.length-1];if(n.has(e.name)){a.pop();continue}const t=i[i.length-1]===a.length-1;if(0===e.inputs.length||t)a.pop(),s.push(e),n.add(e.name),t&&i.pop();else{i.push(a.length-1);for(const t of e.inputs)null==r[t.name]&&(r[t.name]=new Set),r[t.name].add(e.name),n.has(t.name)||a.push(t)}}return{sorted:s,recipientMap:r}}function ib(e){let t;if(1===e.sourceLayer.inboundNodes.length)t=e.sourceLayer.output;else{let n=null;for(let t=0;t<e.sourceLayer.inboundNodes.length;++t)for(const s of e.sourceLayer.inboundNodes[t].outputTensors)if(s.id===e.id){n=t;break}t=e.sourceLayer.getOutputAt(n)}return t}function ob(e,t){return Qo((()=>gl(fc(ml(e,e),t,!0))))}He().registerFlag("TOPOLOGICAL_SORT_CACHE_MAX_ENTRIES",(()=>100),(function(e){null!=tb&&tb.setMaxEntries(e),null!=nb&&nb.setMaxEntries(e)}));class lb extends Ao{getConfig(){return{}}}class ub extends lb{constructor(e){super(),this.defaultMaxValue=2,this.defaultAxis=0,this.maxValue=null!=e.maxValue?e.maxValue:this.defaultMaxValue,this.axis=null!=e.axis?e.axis:this.defaultAxis}apply(e){return Qo((()=>{const t=ob(e,this.axis),n=Au(t,0,this.maxValue);return ml(e,fl(n,pl(Jg(),t)))}))}getConfig(){return{maxValue:this.maxValue,axis:this.axis}}}ub.className="MaxNorm",Ro(ub);class cb extends lb{constructor(e){super(),this.defaultAxis=0,this.axis=null!=e.axis?e.axis:this.defaultAxis}apply(e){return Qo((()=>fl(e,pl(Jg(),ob(e,this.axis)))))}getConfig(){return{axis:this.axis}}}cb.className="UnitNorm",Ro(cb);class hb extends lb{apply(e){return Rh(e)}}hb.className="NonNeg",Ro(hb);class pb extends lb{constructor(e){super(),this.defaultMinValue=0,this.defaultMaxValue=1,this.defaultRate=1,this.defaultAxis=0,this.minValue=null!=e.minValue?e.minValue:this.defaultMinValue,this.maxValue=null!=e.maxValue?e.maxValue:this.defaultMaxValue,this.rate=null!=e.rate?e.rate:this.defaultRate,this.axis=null!=e.axis?e.axis:this.defaultAxis}apply(e){return Qo((()=>{const t=ob(e,this.axis),n=pl(ml(this.rate,Au(t,this.minValue,this.maxValue)),ml(1-this.rate,t));return ml(e,fl(n,pl(Jg(),t)))}))}getConfig(){return{minValue:this.minValue,maxValue:this.maxValue,rate:this.rate,axis:this.axis}}}pb.className="MinMaxNorm",Ro(pb);const db={maxNorm:"MaxNorm",minMaxNorm:"MinMaxNorm",nonNeg:"NonNeg",unitNorm:"UnitNorm"};function fb(e){return yg(e)}function mb(e,t={}){return xg(e,_o.getMap().classNameMap,t,"constraint")}function gb(e){return null==e?null:"string"==typeof e?mb({className:e in db?db[e]:e,config:{}}):e instanceof lb?e:mb(e)}function yb(e){return new ub(e)}function bb(e){return new cb(e)}function xb(){return new hb}function vb(e){return new pb(e)}function wb(){return new by}function kb(){return new xy}function Ib(e){return new vy(e)}function Sb(e){return new wy(e)}function Nb(e){return new ky(e)}function Tb(e){return new Iy(e)}function Cb(e){return new Sy(e)}function $b(e){return new Ny(e)}function Eb(e){return new Ty(e)}function Ab(e){return new Cy(e)}function _b(e){return new $y(e)}function Rb(e){return new Ey(e)}function Fb(e){return new Ay(e)}function Db(e){return new _y(e)}function Ob(e){return new Ry(e)}async function Mb(e){if(null==e)return;const t=[],n=[],s=[];for(const r in e){const a=e[r];if("number"!=typeof a){const e=a;t.push(e.data()),n.push(r),s.push(e)}}if(t.length>0){const r=await Promise.all(t);for(let t=0;t<r.length;++t)e[n[t]]=r[t][0];el(s)}}function Lb(e){if(null!=e)for(const t in e){const n=e[t];"number"!=typeof n&&n.dispose()}}var zb;!function(e){e[e.SILENT=0]="SILENT",e[e.VERBOSE=1]="VERBOSE"}(zb||(zb={}));class Pb{constructor(){this.validationData=null}setParams(e){this.params=e}async onEpochBegin(e,t){}async onEpochEnd(e,t){}async onBatchBegin(e,t){}async onBatchEnd(e,t){}async onTrainBegin(e){}async onTrainEnd(e){}setModel(e){}}class Bb{constructor(e,t=10){null==e&&(e=[]),this.callbacks=e,this.queueLength=t}append(e){this.callbacks.push(e)}setParams(e){for(const t of this.callbacks)t.setParams(e)}setModel(e){for(const t of this.callbacks)t.setModel(e)}async onEpochBegin(e,t){null==t&&(t={});for(const n of this.callbacks)await n.onEpochBegin(e,t)}async onEpochEnd(e,t){null==t&&(t={});for(const n of this.callbacks)await n.onEpochEnd(e,t)}async onBatchBegin(e,t){null==t&&(t={});for(const n of this.callbacks)await n.onBatchBegin(e,t)}async onBatchEnd(e,t){null==t&&(t={});for(const n of this.callbacks)await n.onBatchEnd(e,t)}async onTrainBegin(e){null==e&&(e={});for(const t of this.callbacks)await t.onTrainBegin(e)}async onTrainEnd(e){null==e&&(e={});for(const t of this.callbacks)await t.onTrainEnd(e)}}class Wb extends Pb{constructor(){super()}async onEpochBegin(e){this.seen=0,this.totals={}}async onBatchEnd(e,t){null==t&&(t={});const n=null==t.size?0:t.size;this.seen+=n;for(const e in t){const s=t[e];if("number"==typeof s)this.totals.hasOwnProperty(e)||(this.totals[e]=0),this.totals[e]=this.totals[e]+s*n;else{let t;e in this.totals?t=this.totals[e]:this.totals[e]=0;const r=Qo((()=>pl(this.totals[e],ml(s,n))));this.totals[e]=r,null!=t&&t.dispose()}}}async onEpochEnd(e,t){if(null!=t)for(const e of this.params.metrics)null!=this.totals[e]&&("number"==typeof this.totals[e]?t[e]=this.totals[e]/this.seen:Qo((()=>{const n=ml(fl(1,this.seen),this.totals[e]);t[e]=n,this.totals[e].dispose(),tl(t[e])})))}}class Vb extends Pb{async onTrainBegin(e){this.epoch=[],this.history={}}async onEpochEnd(e,t){null==t&&(t={}),this.epoch.push(e);for(const e in t)null==this.history[e]&&(this.history[e]=[]),this.history[e].push(t[e])}async syncData(){const e=[],t=[],n=[];for(const s in this.history){const r=this.history[s];for(let a=0;a<r.length;++a)if("number"!=typeof r[a]){const i=r[a];e.push(i.data()),t.push(s),n.push(a)}}const s=await Promise.all(e);for(let e=0;e<s.length;++e)this.history[t[e]][n[e]].dispose(),this.history[t[e]][n[e]]=s[e][0]}}class Ub extends Pb{constructor(e,t){if(super(),this.currentEpoch=0,this.nowFunc=e.nowFunc,this.nextFrameFunc=e.nextFrameFunc||Ud,this.yieldEvery=t||"auto","auto"===this.yieldEvery&&(this.yieldEvery=125),"never"===this.yieldEvery&&null!=e.onYield)throw new Error("yieldEvery is `never` but you provided an `onYield` callback. Either change `yieldEvery` or remove the callback");Ee(this.yieldEvery)&&(this.maybeWait=function(e,t,n){let s,r=null!=n?n():Or();return(...a)=>{const i=null!=n?n():Or();return i-r<t||(r=i,s=e(...a)),s}}(this.maybeWait.bind(this),this.yieldEvery,this.nowFunc)),this.trainBegin=e.onTrainBegin,this.trainEnd=e.onTrainEnd,this.epochBegin=e.onEpochBegin,this.epochEnd=e.onEpochEnd,this.batchBegin=e.onBatchBegin,this.batchEnd=e.onBatchEnd,this.yield=e.onYield}async maybeWait(e,t,n){const s=[];null!=this.yield&&(await Mb(n),s.push(this.yield(e,t,n))),s.push(this.nextFrameFunc()),await Promise.all(s)}async onEpochBegin(e,t){this.currentEpoch=e,null!=this.epochBegin&&(await Mb(t),await this.epochBegin(e,t))}async onEpochEnd(e,t){const n=[];null!=this.epochEnd&&(await Mb(t),n.push(this.epochEnd(e,t))),"epoch"===this.yieldEvery&&n.push(this.nextFrameFunc()),await Promise.all(n)}async onBatchBegin(e,t){null!=this.batchBegin&&(await Mb(t),await this.batchBegin(e,t))}async onBatchEnd(e,t){const n=[];null!=this.batchEnd&&(await Mb(t),n.push(this.batchEnd(e,t))),"batch"===this.yieldEvery?n.push(this.nextFrameFunc()):Ee(this.yieldEvery)&&n.push(this.maybeWait(this.currentEpoch,e,t)),await Promise.all(n)}async onTrainBegin(e){null!=this.trainBegin&&(await Mb(e),await this.trainBegin(e))}async onTrainEnd(e){null!=this.trainEnd&&(await Mb(e),await this.trainEnd(e))}}function Gb(e,t){return null==e&&(e={}),e instanceof Pb?[e]:Array.isArray(e)&&e[0]instanceof Pb?e:dg(e).map((e=>new Ub(e,t)))}class Hb{constructor(){}static registerCallbackConstructor(e,t){se(e>=0&&Number.isInteger(e),(()=>`Verbosity level is expected to be an integer >= 0, but got ${e}`)),Hb.checkForDuplicate(t),null==Hb.constructors[e]&&(Hb.constructors[e]=[]),Hb.constructors[e].push(t)}static checkForDuplicate(e){for(const t in Hb.constructors)Hb.constructors[+t].forEach((t=>{if(t===e)throw new ag("Duplicate callback constructor.")}))}static clear(){Hb.constructors={}}static createCallbacks(e){const t=[];for(const n in Hb.constructors){const s=+n;e>=s&&t.push(...Hb.constructors[s])}return t.map((e=>new e))}}function jb(e,t,n,s,r,a,i,o,l){const u=new Vb,c=[new Wb,...Hb.createCallbacks(t)];null!=e&&c.push(...e),c.push(u);const h=new Bb(c);return h.setParams({epochs:n,initialEpoch:s,samples:r,steps:a,batchSize:i,verbose:t,doValidation:o,metrics:l}),{callbackList:h,history:u}}function qb(e,t={},n=!1){return xg(e,_o.getMap().classNameMap,t,"layer",n)}function Kb(e,t){return Qo((()=>{"float32"!==e.dtype&&(e=Ei(e,"float32"));const n=fc(cy(e),t,!0),s=El(n.shape,Jg()),r=gl(Ol(n,s));return fl(e,r)}))}function Xb(e,t){return Qo((()=>Qc(cy(Rl(t,e)),-1)))}function Yb(e,t){return Qo((()=>Qc(Dl(Rl(t,e)),-1)))}function Zb(e,t){return Qo((()=>{const n=Rl(e,t),s=Au(Dl(e),Jg(),Number.MAX_VALUE),r=Dl(fl(n,s));return ml(100,Qc(r,-1))}))}function Jb(e,t,n=!1){return Qo((()=>{if(n)t=Zh(t);else{const e=fc(t,t.shape.length-1,!0);t=fl(t,e)}return t=Au(t,Jg(),1-Jg()),zc(fc(ml(Ei(e,"float32"),Mc(t)),t.shape.length-1))}))}function Qb(e,t,n=!1){return Qo((()=>{const s=Ei(Ic(function(e){const t=[qg(e.shape)];return du(e,t)}(e)),"int32"),r=(t=Au(t,Jg(),1-Jg())).shape;return Jb(du(Yi(s,r[r.length-1]),r),t,n)}))}function ex(e,t){return Qo((()=>{let n;return n=Au(t,Jg(),1-Jg()),n=Mc(fl(n,Rl(1,n))),Qc(function(e,t){if(!ue(e.shape,t.shape))throw new ag(`logits and labels must have the same shape, but got shapes ${JSON.stringify(e.shape)} and ${JSON.stringify(t.shape)}`);return Qo((()=>{const n=Rh(t),s=zc(Dl(t));return pl(Rl(n,ml(t,e)),Lc(bc(s)))}))}(e,n),-1)}))}function tx(e,t){return Qo((()=>{const n=Kb(e,-1),s=Kb(t,-1),r=ml(n,s);return zc(fc(r,-1))}))}Hb.constructors={};const nx={meanSquaredError:Xb,meanAbsoluteError:Yb,meanAbsolutePercentageError:Zb,meanSquaredLogarithmicError:function(e,t){return Qo((()=>{const n=Au(t,Jg(),Number.MAX_VALUE),s=Mc(pl(1,n)),r=Au(e,Jg(),Number.MAX_VALUE),a=Mc(pl(1,r));return Qc(cy(Rl(s,a)),-1)}))},squaredHinge:function(e,t){return Qo((()=>{const n=Ol(0,Rl(1,ml(e,t)));return Qc(cy(n),-1)}))},hinge:function(e,t){return Qo((()=>{const n=Ol(0,Rl(1,ml(e,t)));return Qc(n,-1)}))},categoricalHinge:function(e,t){return Qo((()=>{const n=fc(ml(e,t),-1),s=pc(ml(Rl(1,e),t),-1);return Ol(0,pl(1,Rl(s,n)))}))},logcosh:function(e,t){return Qo((()=>{const n=Math.log(2),s=Rl(t,e),r=Rl(pl(s,Pc(ml(-2,s))),n);return Qc(r,-1)}))},categoricalCrossentropy:Jb,sparseCategoricalCrossentropy:Qb,binaryCrossentropy:ex,kullbackLeiblerDivergence:function(e,t){return Qo((()=>{const n=Au(e,Jg(),1),s=Au(t,Jg(),1);return fc(ml(e,Mc(fl(n,s))),-1)}))},poisson:function(e,t){return Qo((()=>{const n=Mc(pl(Jg(),t));return Qc(Rl(t,ml(e,n)),-1)}))},cosineProximity:tx};function sx(e){if("string"==typeof e){if(e in nx)return nx[e];let t=`Unknown loss ${e}`;throw e.toLowerCase().includes("softmaxcrossentropy")&&(t=`Unknown loss ${e}. Use "categoricalCrossentropy" as the string name for tf.losses.softmaxCrossEntropy`),new ag(t)}return e}function rx(e,t){return Qo((()=>{const n=ml(.5,ch(t)),s=Qg(Nc(t,n),e.dtype);return Qc(Zu(e,s),-1)}))}function ax(e,t){return Qo((()=>Qg(Zu(jl(e,-1),jl(t,-1)),"float32")))}function ix(e,t){return Qo((()=>Ei(fc(Uc(Zu(e,1),Zu(t,1))),"float32")))}function ox(e,t){return Qo((()=>{const n=ix(e,t),s=function(e,t){return Qo((()=>Ei(fc(Uc(Zu(e,0),Zu(t,1))),"float32")))}(e,t),r=pl(n,s);return Ei(Ju(Nc(r,0),fl(n,r),0),"float32")}))}function lx(e,t){return ex(e,t)}function ux(e,t){return e.rank===t.rank&&(e=rp(e,[e.rank-1])),(t=jl(t,-1)).dtype!==e.dtype&&(t=Ei(t,e.dtype)),Ei(Zu(e,t),"float32")}const cx=Jb,hx=Qb,px={binaryAccuracy:rx,categoricalAccuracy:ax,precision:ox,categoricalCrossentropy:cx,sparseCategoricalCrossentropy:hx,mse:Xb,MSE:Xb,mae:Yb,MAE:Yb,mape:Zb,MAPE:Zb,cosine:tx};function dx(e){if("string"==typeof e&&e in px)return px[e];if("string"!=typeof e&&null!=e)return e;throw new ag(`Unknown metric ${e}`)}function fx(e){if(cg(null!==e,`Unknown LossOrMetricFn ${e}`),"string"==typeof e)return e;{let t;for(const n of Object.keys(nx))if(nx[n]===e){t=n;break}if(void 0!==t)return t;for(const n of Object.keys(px))if(px[n]===e){t=n;break}return void 0!==t?t:e.name}}function mx(e,t,n=!1){if(null==e||"object"!=typeof e||Object.getPrototypeOf(e)!==Object.prototype||!gx(e))throw new Error("User-defined metadata is expected to be a JSON object, but is not.");if(n){const n=JSON.stringify(e);n.length>1048576&&console.warn(`User-defined metadata of model "${t}" is too large in size (length=${n.length} when serialized). It is not recommended to store such large objects in user-defined metadata. Please make sure its serialized length is <= 1048576.`)}}function gx(e){if(null===e)return!0;if("object"==typeof e){if(Object.getPrototypeOf(e)===Object.prototype){const t=Object.keys(e);for(const n of t){if("string"!=typeof n)return!1;if(!gx(e[n]))return!1}return!0}if(Array.isArray(e)){for(const t of e)if(!gx(t))return!1;return!0}return!1}{const t=typeof e;return"string"===t||"number"===t||"boolean"===t}}function yx(e,t,n=console.log){let s="";for(let n=0;n<e.length;++n)n>0&&(s=s.slice(0,s.length-1)+" "),s+=e[n],s=s.slice(0,t[n]),s+=" ".repeat(t[n]-s.length);n(s)}function bx(e,t,n){let s,r;try{r=e.inboundNodes.map((e=>JSON.stringify(e.inputShapes))).join(",")}catch(e){r="multiple"}try{s=JSON.stringify(e.outputShape)}catch(e){s="multiple"}yx([`${e.name} (${e.getClassName()})`,r,s,e.countParams().toString()],t,n)}function xx(e,t,n,s){let r,a;try{a=e.inboundNodes.map((e=>JSON.stringify(e.inputShapes))).join(",")}catch(e){a="multiple"}try{r=JSON.stringify(e.outputShape)}catch(e){r="multiple"}const i=[];for(const t of e.inboundNodes)if(!(null!=n&&n.length>0&&-1===n.indexOf(t)))for(let e=0;e<t.inboundLayers.length;++e){const n=t.inboundLayers[e].name,s=t.nodeIndices[e],r=t.tensorIndices[e];i.push(`${n}[${s}][${r}]`)}const o=e.name,l=e.getClassName(),u=0===i.length?"":i[0];yx([`${o} (${l})`,a,r,e.countParams().toString(),u],t,s);for(let e=1;e<i.length;++e)yx(["","","","",i[e]],t,s)}function vx(e,t,n){return("inboundNodes"===e||"outputLayers"===e||"inputLayers"===e)&&0===t&&"string"==typeof n}function wx(e,t){if(null===e)return null;if("string"==typeof e)return mg(e);if("number"==typeof e||"boolean"==typeof e)return e;if(e instanceof Array){const n=[],s=e.length;for(let r=0;r<s;++r){const s=e[r];vx(t,r,s)?n.push(s):n.push(wx(s,t))}return n}{const t={};for(const n of Object.keys(e)){const s=e[n];if("name"===n&&"string"==typeof s)t[n]=s;else{const e=mg(n);t[e]=wx(s,e)}}return t}}function kx(e,t){if(null==e)return null;if("string"==typeof e)return fg(e);if("number"==typeof e||"boolean"==typeof e)return e;if(e instanceof Array){const n=[],s=e.length;for(let r=0;r<s;++r){const s=e[r];vx(t,r,s)?n.push(s):n.push(kx(s,t))}return n}{const t={};for(const n of Object.keys(e)){const s=e[n];t[fg(n)]="name"!==n&&"className"!==n||"string"!=typeof s?kx(s,n):s}return t}}const Ix="3.17.0";class Sx extends Yy{constructor(e){if(super({}),this.containerNodes=new Set,this.name=e.name,null==this.name){const e=this.getClassName().toLowerCase();this.name=_g(e)}if(this.supportsMasking=!1,this.trainable_=!0,Array.isArray(e.inputs)?this.inputs=e.inputs.slice():this.inputs=[e.inputs],Array.isArray(e.outputs)?this.outputs=e.outputs.slice():this.outputs=[e.outputs],wg(this.inputs).length!==this.inputs.length)throw new ag(`The list of inputs passed to the model is redundant. All inputs should only appear once. Found: ${this.inputs.map((e=>e.name))}`);wg(this.outputs).length!==this.outputs.length&&console.warn(`The list of outputs passed to the model is redundant. All outputs should only appear once. Found: ${this.outputs.map((e=>e.name))}`),this.inputLayers=[],this.inputLayersNodeIndices=[],this.inputLayersTensorIndices=[],this.outputLayers=[],this.outputLayersNodeIndices=[],this.outputLayersTensorIndices=[],this.layers=[],this.internalContainerRefs=[];for(const e of this.outputs){const t=e.sourceLayer,n=e.nodeIndex,s=e.tensorIndex;this.outputLayers.push(t),this.outputLayersNodeIndices.push(n),this.outputLayersTensorIndices.push(s)}for(const e of this.inputs){const t=e.sourceLayer,n=e.nodeIndex,s=e.tensorIndex;cg(0===n,"input layer has >1 nodes"),cg(0===s,"input layer has >1 tensors"),this.inputLayers.push(t),this.inputLayersNodeIndices.push(n),this.inputLayersTensorIndices.push(s)}this.inputNames=[],this.outputNames=[],this.feedInputShapes=[],this.feedInputNames=[],this.feedOutputNames=[];for(let t=0;t<this.inputLayers.length;t++){const n=this.inputLayers[t];if(!(n instanceof Jy))throw new TypeError(`Input layers to a LayersModel must be InputLayer objects. Received inputs: ${e.inputs}. Input ${t} (0-based) originates from layer type ${n.getClassName()}.`);this.inputNames.push(n.name),this.feedInputShapes.push(n.batchInputShape),this.feedInputNames.push(n.name)}for(const e of this.outputLayers)this.outputNames.push(e.name);this.internalInputShapes=this.inputs.map((e=>e.shape)),this.internalOutputShapes=this.outputs.map((e=>e.shape));const t={},n={},s={},r={},a={},i=[],o=(e,t,n,s,r,l)=>{null!=s&&null!=r&&null!=l||(s=e.sourceLayer,r=e.nodeIndex,l=e.tensorIndex);const u=s.inboundNodes[r];if(-1!==n.indexOf(u))throw new rg(`The tensor ${e.name} at layer "${s.name}" is part of a cycle.`);if(-1!==t.indexOf(u))return;this.containerNodes.add(Sx.nodeKey(s,r)),s.id in a||(a[s.id]=Object.keys(a).length),-1===n.indexOf(u)&&n.push(u);const c=u.inboundLayers.length;for(let e=0;e<c;e++){const s=u.inputTensors[e],r=u.inboundLayers[e],a=u.nodeIndices[e],i=u.tensorIndices[e];o(s,t,n,r,a,i)}for(t.push(u);n.indexOf(u)>=0;)n.splice(n.indexOf(u),1);i.push(u)},l=[],u=[];for(const e of this.outputs)o(e,l,u);const c=i.slice().reverse();for(const e of c){n[e.id]=e,e.id in t||(t[e.id]=0);let a=t[e.id];const i=null==s[e.outboundLayer.id]?0:s[e.outboundLayer.id];a=Math.max(a,i),s[e.outboundLayer.id]=a,r[e.outboundLayer.id]=e.outboundLayer,t[e.id]=a;for(let s=0;s<e.inboundLayers.length;s++){const r=e.inboundLayers[s],i=e.nodeIndices[s],o=r.inboundNodes[i],l=null==t[o.id]?0:t[o.id];t[o.id]=Math.max(a+1,l),n[o.id]=o}}const h={};for(const e in t){const s=t[e];s in h||(h[s]=[]),h[s].push(n[e])}const p={};for(const e in s){const t=s[e];t in p||(p[t]=[]),p[t].push(r[e])}let d=Object.keys(p).map((e=>parseInt(e,10))).sort(vg);this.layers=[];for(const e of d){const t=p[e];t.sort(((e,t)=>{const n=a[e.id],s=a[t.id];return n<s?-1:n>s?1:0}));for(const e of t)e instanceof Sx&&this.internalContainerRefs.push(e),this.layers.push(e)}this.layersByDepth=p,d=Object.keys(h).map((e=>parseInt(e,10))).sort(vg);const f=this.inputs.slice(),m=[];for(const e of d)for(const t of h[e]){const e=t.outboundLayer;if(null!=e){for(const n of t.inputTensors)if(-1===f.indexOf(n))throw new rg(`Graph disconnected: cannot obtain value for tensor ${n} at layer "${e.name}". The following previous layers were accessed without issue: ${m}`);for(const e of t.outputTensors)f.push(e);m.push(e.name)}}this.nodesByDepth=h;const g=this.layers.map((e=>e.name));for(const e of g){const t=g.filter((t=>t===e)).length;if(1!==t)throw new rg(`The name "${e}" is used ${t} times in the model. All layer names should be unique. Layer names: `+JSON.stringify(g))}this.outboundNodes=[],this.inboundNodes=[],new Ky({outboundLayer:this,inboundLayers:[],nodeIndices:[],tensorIndices:[],inputTensors:this.inputs,outputTensors:this.outputs,inputMasks:this.inputs.map((e=>null)),outputMasks:this.outputs.map((e=>null)),inputShapes:this.inputs.map((e=>e.shape)),outputShapes:this.outputs.map((e=>e.shape))}),this.built=!0,this._refCount=1}assertNotDisposed(){if(0===this._refCount)throw new Error(`Container '${this.name}' is already disposed.`)}dispose(){this.assertNotDisposed();const e={refCountAfterDispose:null,numDisposedVariables:0};if(0==--this._refCount){for(const t of this.layers)e.numDisposedVariables+=t.dispose().numDisposedVariables;for(const t of this.internalContainerRefs)e.numDisposedVariables+=t.dispose().numDisposedVariables}return e.refCountAfterDispose=this._refCount,e}get trainable(){return this.trainable_}set trainable(e){this.layers.forEach((t=>{t._trainableWeights.forEach((t=>t.trainable=e))})),this.trainable_=e}get trainableWeights(){if(this._trainableWeights.length>0)throw new ag("Container instance unexpectedly contains _trainableWeights.The trainable weights of a Container are a union of the trainable weights of its consituent Layers. Its own _trainableWeights must remain an empty Array.");if(!this.trainable)return[];let e=[];for(const t of this.layers)e=e.concat(t.trainableWeights);return e}get nonTrainableWeights(){const e=[];for(const t of this.layers)e.push(...t.nonTrainableWeights);if(!this.trainable){const t=[];for(const e of this.layers)t.push(...e.trainableWeights);return t.concat(e)}return e}get weights(){return this.trainableWeights.concat(this.nonTrainableWeights)}loadWeights(e,t=!0){const n={};let s=0;for(const e of this.layers)for(const t of e.weights){if(null!=n[t.originalName])throw new ag(`Duplicate weight name: ${t.originalName}`);n[t.originalName]=t,s++}const r=[];for(const s in e){let a=s;if(null==n[s]){const e=s.split("/");a=e.slice(0,-2).concat([e[e.length-1]]).join("/")}if(null!=n[a])r.push([n[a],e[s]]);else if(t)throw new ag(`Provided weight data has no target variable: ${s}`);delete n[a]}if(t){const e=[];for(const t in n)e.push(t);if(e.length>0)throw new ag(`${e.length} of ${s} weights are not set: ${e}`)}Gy(r)}updatedConfig(){const e=this.getConfig(),t={};return t.className=this.getClassName(),t.config=e,t.kerasVersion=`tfjs-layers ${Ix}`,t.backend="TensorFlow.js",t}toJSON(e,t=!0){const n=kx(this.updatedConfig());return t?JSON.stringify(n):n}call(e,t){return Qo((()=>{e=dg(e);const n=new eb;for(let t=0;t<this.inputs.length;++t)n.add(this.inputs[t],e[t]);return sb(this.outputs,n,t)}))}computeMask(e,t){return Qo((()=>{let n;return e=dg(e),n=null==t?ug(null,e.length):dg(t),this.runInternalGraph(e,n)[1]}))}computeOutputShape(e){const t=zy(e);if(t.length!==this.inputLayers.length)throw new ag(`Invalid inputShape argument ${e}: model has ${this.inputLayers.length} tensor inputs.`);const n={};for(let e=0;e<t.length;e++){const s=this.inputLayers[e],r=t[e];n[s.name+"_0_0"]=r}const s=Object.keys(this.nodesByDepth).map((e=>parseInt(e,10))).sort(vg);if(s.length>1)for(const e of s){const t=this.nodesByDepth[e];for(const e of t){const t=e.outboundLayer;if(-1!==this.inputLayers.map((e=>e.id)).indexOf(t.id))continue;const s=[];for(let t=0;t<e.inboundLayers.length;t++){const r=e.inboundLayers[t],a=e.nodeIndices[t],i=e.tensorIndices[t],o=n[`${r.name}_${a}_${i}`];s.push(o)}const r=zy(t.computeOutputShape(pg(s))),a=t.inboundNodes.indexOf(e);for(let e=0;e<r.length;e++)n[`${t.name}_${a}_${e}`]=r[e]}}const r=[],a=[];for(let e=0;e<this.outputLayers.length;e++){const t=this.outputLayers[e],n=this.outputLayersNodeIndices[e],s=this.outputLayersTensorIndices[e],r=`${t.name}_${n}_${s}`;a.push(r)}for(let e=0;e<a.length;e++){const t=a[e];cg(t in n),r.push(n[t])}return pg(r)}runInternalGraph(e,t){null==t&&(t=ug(null,e.length));const n={};for(let s=0;s<this.inputs.length;++s){const r=this.inputs[s],a=e[s],i=t[s];n[r.id]=[a,i]}const s=Object.keys(this.nodesByDepth).map((e=>parseInt(e,10))).sort(vg);for(const e of s){const t=this.nodesByDepth[e];for(const e of t){const t=e.outboundLayer,s=e.inputTensors,r=e.outputTensors,a=new Array;for(const e of s)e.id in n&&a.push(n[e.id]);if(a.length===s.length){let s,i,o,l,u={};if(null!=e.callArgs&&(u=e.callArgs),1===a.length){const[e,n]=a[0];null==u.mask&&(u.mask=n),o=dg(t.call(e,u)),l=dg(t.computeMask(e,n)),s=[e],i=[n]}else s=a.map((e=>e[0])),i=a.map((e=>e[1])),null==u.mask&&(u.mask=i),o=dg(t.call(s,u)),l=dg(t.computeMask(s,i));if(t.activityRegularizer)throw new ig("LayersModel invocation with concrete Tensor value(s) in the presence of activity regularizer(s) is not supported yet.");for(let e=0;e<r.length;++e){const t=r[e],s=o[e],a=l[e];n[t.id]=[s,a]}}}}const r=[],a=[],i=[];for(const e of this.outputs){cg(e.id in n,`Could not compute output ${e.name} : ${e.id}`);const[t,s]=n[e.id];i.push(t.shape),r.push(t),a.push(s)}return[r,a,i]}buildNodeConversionMap(e){const t={};let n;for(const e of this.layers){n=e instanceof Sx?1:0;for(let s=0;s<e.inboundNodes.length;s++){const r=Sx.nodeKey(e,s);this.containerNodes.has(r)&&(t[r]=n,n+=1)}}return t}getLayer(e,t){if(null!=t){if(this.layers.length<=t)throw new ag(`Was asked to retrieve layer at index ${t}, but model only has ${this.layers.length} layer(s).`);return this.layers[t]}if(null==e)throw new ag("Provide either a layer name or layer index");for(const t of this.layers)if(t.name===e)return t;throw new ag(`No such layer: ${e}`)}calculateLosses(){return Qo((()=>{const e=[];for(const t of this.layers)for(let n=0;n<t.inboundNodes.length;++n){const s=Sx.nodeKey(t,n);this.containerNodes.has(s)&&e.push(...t.calculateLosses())}return e}))}getConfig(){const e={name:this.name},t=this.buildNodeConversionMap(this.layers),n=[];for(const e of this.layers){const s=e.getClassName(),r=e.getConfig(),a=[];for(let n=0;n<e.inboundNodes.length;n++){const s=e.inboundNodes[n],r=Sx.nodeKey(e,n);let i={};if(this.containerNodes.has(r)){if(s.callArgs)try{JSON.stringify(s.callArgs),i=s.callArgs}catch(t){console.warn(`Layer ${e.name} was passed non-serializable keyword arguments: ${s.callArgs}. They will not be included in the serialized model (and thus will be missing at deserialization time).`),i={}}if(s.inboundLayers.length>0){const e=[];for(let n=0;n<s.inboundLayers.length;n++){const r=s.inboundLayers[n],a=s.nodeIndices[n],o=s.tensorIndices[n];let l=t[Sx.nodeKey(r,a)];null==l&&(l=0),e.push([r.name,l,o,i])}a.push(e)}}}const i={};i.name=e.name,i.className=s,i.config=r,i.inboundNodes=a,n.push(i)}e.layers=n;const s=[];for(let e=0;e<this.inputLayers.length;e++){const n=this.inputLayers[e],r=this.inputLayersNodeIndices[e],a=Sx.nodeKey(n,r);if(!this.containerNodes.has(a))continue;let i=t[a];null==i&&(i=0);const o=this.inputLayersTensorIndices[e];s.push([n.name,i,o])}e.inputLayers=s;const r=[];for(let e=0;e<this.outputLayers.length;e++){const n=this.outputLayers[e],s=this.outputLayersNodeIndices[e],a=Sx.nodeKey(n,s);if(!this.containerNodes.has(a))continue;let i=t[a];null==i&&(i=0);const o=this.outputLayersTensorIndices[e];r.push([n.name,i,o])}return e.outputLayers=r,e}static fromConfig(e,t,n={},s=!1){const r={},a={};function i(e,t){e.name in a?a[e.name].push(t):a[e.name]=[t]}function o(e,t){const n=[];let s;for(const a of t){const o=a[0],l=a[1],u=a[2];if(s=null==a[3]?{}:a[3],!(o in r))return void i(e,t);const c=r[o];if(c.inboundNodes.length<=l)return void i(e,t);const h=c.inboundNodes[l];n.push(h.outputTensors[u])}n.length>0&&e.apply(pg(n),s)}function l(e){const n=e.name,a=qb(e,null!=t.customObjects?t.customObjects:{});a.setFastWeightInitDuringBuild(s),r[n]=a,e.inboundNodes.forEach((e=>{if(!(e instanceof Array))throw new ag(`Corrupted configuration, expected array for nodeData: ${e}`);i(a,e)}))}const u=t.name,c=t.layers;for(const e of c)l(e);for(;!kg(a);)for(const e of c){const t=r[e.name];if(t.name in a){const e=a[t.name];delete a[t.name];for(const n of e)o(t,n)}}const h=[],p=[],d=t.inputLayers;for(const e of d){const t=e[0],n=e[1],s=e[2];cg(t in r);const a=r[t].inboundNodes[n].outputTensors;h.push(a[s])}const f=t.outputLayers;for(const e of f){const t=e[0],n=e[1],s=e[2];cg(t in r);const a=r[t].inboundNodes[n].outputTensors;p.push(a[s])}return new e({inputs:h,outputs:p,name:u})}get stateful(){if(this._stateful)throw new ag("Container instance unexpectedly has _stateful = true. The statefulness of a Container is determined by the Layers it contains. Its _stateful property must remain the default false.");for(const e of this.layers)if(e.stateful)return!0;return!1}resetStates(){Qo((()=>{this.layers.forEach((e=>{e.stateful&&e.resetStates()}))}))}}function Nx(e,t){return function(e,t,n){const s=t.length;if(null==e||Array.isArray(e)&&0===e.length)return t.map((e=>null));if(1===s)return Array.isArray(e)&&1===e.length?e:"object"==typeof e&&t[0]in e?[e[t[0]]]:[e];if(Array.isArray(e)){if(e.length!==s)throw new Error(`Provided ${n} is an array of ${e.length} element(s), but the model has ${s} outputs. Make sure a set of weights is provided for each model output.`);return e}if("object"==typeof e&&Object.keys(e).length>0&&"object"==typeof e[Object.keys(e)[0]]){const n=[];return t.forEach((t=>{t in e?n.push(e[t]):n.push(null)})),n}throw new Error(`The model has multiple (${s}) outputs, so ${n} must be either an array with ${s} elements or an object with ${t} keys. Provided ${n} not understood: ${JSON.stringify(e)}`)}(e,t,"classWeight")}async function Tx(e,t,n,s){if(null!=t||null!=s)throw new Error("Support sampleWeight is not implemented yet");if(null!=n){const t=Qo((()=>{if(1===e.shape.length)return Ai(e);if(2===e.shape.length){if(e.shape[1]>1)return jl(e,1);if(1===e.shape[1])return du(e,[e.shape[0]]);throw new Error(`Encountered unexpected last-dimension size (${e.shape[1]}) during handling of class weights. The size is expected to be >= 1.`)}throw new Error(`Unexpected rank of target (y) tensor (${e.rank}) during handling of class weights. The rank is expected to be 1 or 2.`)})),s=Array.from(await t.data());el(t);const r=[];return s.forEach((e=>{if(null==n[e])throw new Error(`classWeight must contain all classes in the training data. The class ${e} exists in the data but not in classWeight`);r.push(n[e])})),up(r,"float32")}return null}function Cx(e,t){return ml(e,t)}function $x(e,t){let n,s;const r=t;n=r.xs,s=r.ys,se(null!=n&&null!=s,(()=>`A Dataset iterator for fitDataset() is expected to generate objects of the form \`{xs: xVal, ys: yVal}\`, where the two values may be \`tf.Tensor\`, an array of Tensors, or a map of string to Tensor.  The provided Dataset instead generates ${t}`));const a=Ex("input",e.inputNames,n),i=Ex("output",e.outputNames,s),o=a[0].shape[0];se(a.length===e.inputs.length,(()=>`LayersModel has ${e.inputs.length} inputs, but the dataset provides ${a.length} inputs.  (Expected input keys: ${JSON.stringify(e.inputNames)})`)),se(i.length===e.outputs.length,(()=>`LayersModel has ${e.outputs.length} outputs, but the dataset provides ${i.length} outputs.  (Expected output keys: ${JSON.stringify(e.outputNames)})`));for(let t=0;t<a.length;t++)se(a[t].shape[0]===o,(()=>`Batch size mismatch: input ${e.inputNames[t]} has ${a[t].shape[0]}; expected  ${o} based on input ${e.inputNames[0]}.`));for(let t=0;t<i.length;t++)se(i[t].shape[0]===o,(()=>`Batch size mismatch: output ${e.outputNames[t]} has ${i[t].shape[0]}; expected  ${o} based on input ${e.inputNames[0]}.`));return{xs:a,ys:i}}function Ex(e,t,n){if(n instanceof Zr)return[n];if(Array.isArray(n))return se(n.length===t.length,(()=>`Received an array of ${n.length} Tensors, but expected ${t.length} to match the ${e} keys ${t}.`)),n;{const s=[];for(const r of t){if(null==n[r])throw new ag(`The feature data generated by the dataset lacks the required ${e} key '${r}'.`);s.push(n[r])}return s}}function Ax(e){return"function"==typeof e.iterator}function _x(e){se(e>0&&Number.isInteger(e),(()=>`batchSize is required to be a positive integer, but got ${e}`))}function Rx(e,t,n){return null==e?[null]:Array.isArray(e)?e.map((e=>ty(e,t,n-t))):ty(e,t,n-t)}function Fx(e,t){return Qo((()=>null==e?null:Array.isArray(e)?e.map((e=>Fx(e,t))):uy(e,"int32"===t.dtype?t:Ei(t,"int32"))))}function Dx(e,t){const n=[];let s=0,r=null;for(;s<e;)r=s+t,r>=e&&(r=e),n.push([s,r]),s=r;return n}function Ox(e){const t=[];e instanceof Zr&&(e=[e]);for(let n=0;n<e.length;++n){const s=e[n];if(1===s.rank)t.push(ey(s,1));else{if(0===s.rank)throw new Error("Expected tensor to be at least 1D, but received a 0D tensor (scalar).");t.push(s)}}return t}function Mx(e,t){if(null==e)return;const n=[];if(t instanceof Zr)n.push(t.id);else if(Array.isArray(t))t.forEach((e=>n.push(e.id)));else if(null!=t)for(const e in t){const s=t[e];n.push(s.id)}const s=[];if(e instanceof Zr)-1===n.indexOf(e.id)&&s.push(e);else if(Array.isArray(e))e.forEach((e=>{-1===n.indexOf(e.id)&&s.push(e)}));else if(null!=e)for(const t in e){const r=e[t];-1===n.indexOf(r.id)&&s.push(r)}s.forEach((e=>{e.isDisposed||e.dispose()}))}function Lx(e){return Array.isArray(e)}function zx(e){return!function(e){return e instanceof Zr}(e)&&!Lx(e)}function Px(e,t,n,s=!0,r=""){if(null==t||0===t.length){if(null!=e){let t=!1;if(Lx(e)&&e.length>0)t=!0;else if(zx(e)){for(const n in e)if(e.hasOwnProperty(n)){t=!0;break}}else t=!0;if(t)throw new ag(`Error when checking model ${r} expected no data, but got ${e}`)}return[]}if(null==e)return t.map((e=>null));let a;if(zx(e)){a=[];for(const n of t){if(null==e[n])throw new ag(`No data provided for "${n}". Need data for each key in: ${t}`);a.push(e[n])}}else if(Lx(e)){if(e.length!==t.length)throw new ag(`Error when checking model ${r}: the Array of Tensors that you are passing to your model is not the size the model expected. Expected to see ${t.length} Tensor(s), but instead got the following list of Tensor(s): ${e}`);a=e}else{if(t.length>1)throw new ag(`The model ${r} expects ${t.length} Tensor(s), but only received one Tensor. Found: Tensor with shape ${e.shape}`);a=[e]}if(a=Ox(a),null!=n)for(let e=0;e<t.length;++e){if(null==n[e])continue;const i=a[e];if(i.shape.length!==n[e].length)throw new ag(`Error when checking ${r}: expected ${t[e]} to have ${n[e].length} dimension(s). but got array with shape ${i.shape}`);for(let t=0;t<n[e].length;++t){if(0===t&&!s)continue;const a=i.shape[t],o=n[e][t];if(null!=o&&o>=0&&a!==o)throw new ag(`${r} expected a batch of elements where each example has shape [${n[e].slice(1,n[e].length)}] (i.e.,tensor shape [*,${n[e].slice(1,n[e].length)}]) but the ${r} received an input with ${i.shape[0]} examples, each with shape [${i.shape.slice(1,i.shape.length)}] (tensor shape [${i.shape}])`)}}return a}function Bx(e,t,n,s=!0,r=""){let a;if(Array.isArray(e)){if(e.length!==t.length)throw new ag(`Error when checking model ${r}: the Array of Tensors that you are passing to your model is not the size the the model expected. Expected to see ${t.length} Tensor(s), but instead got ${e.length} Tensors(s).`);a=e}else{if(t.length>1)throw new ag(`The model expects ${t.length} ${r} Tensors, but only received one Tensor. Found: array with shape ${JSON.stringify(e.shape)}.`);a=[e]}if(null!=n)for(let e=0;e<t.length;++e){if(null==n[e])continue;const i=a[e];if(i.shape.length!==n[e].length)throw new ag(`Error when checking ${r}: expected ${t[e]} to have ${n[e].length} dimension(s), but got array with shape ${JSON.stringify(i.shape)}`);for(let a=0;a<n[e].length;++a){if(0===a&&!s)continue;const o=i.shape[a],l=n[e][a];if(null!=l&&l!==o)throw new ag(`Error when checking ${r}: expected ${t[e]} to have shape ${JSON.stringify(n[e])} but got array with shape ${JSON.stringify(i.shape)}.`)}}}class Wx extends Sx{constructor(e){super(e),this.isTraining=!1}summary(e,t,n=console.log){if(!this.built)throw new ag("This model has never been called, thus its weights have not been created yet. So no summary can be displayed. Build the model first (e.g., by calling it on some test data).");!function(e,t,n,s=console.log){const r=function(e){let t=!0;const n=[],s=[];for(const t in e.nodesByDepth)n.push(e.nodesByDepth[t]);for(const e of n){if(e.length>1||1===e.length&&e[0].inboundLayers.length>1){t=!1;break}s.push(...e)}if(t)for(const n of e.layers){let e=!1;for(const r of n.inboundNodes)if(-1!==s.indexOf(r)){if(e){t=!1;break}e=!0}if(!t)break}return t}(e),a=["Layer (type)","Input Shape","Output shape","Param #"];let i;if(r?(t=t||90,n=n||[.32,.61,.89,1]):(t=t||115,n=n||[.24,.48,.7,.8,1]),n[n.length-1]<=1&&(n=n.map((e=>Math.floor(t*e)))),!r){a.push("Receives inputs"),i=[];for(const t in e.nodesByDepth)i.push(...e.nodesByDepth[t])}s("_".repeat(t)),yx(a,n,s),s("=".repeat(t));const o=e.layers;for(let e=0;e<o.length;++e)r?bx(o[e],n,s):xx(o[e],n,i,s),s((e===o.length-1?"=":"_").repeat(t));e.checkTrainableWeightsConsistency();const l=function(e){let t;return t=null!=e.collectedTrainableWeights?Wy(e.collectedTrainableWeights):Wy(e.trainableWeights),t}(e),u=Wy(e.nonTrainableWeights);s(`Total params: ${l+u}`),s(`Trainable params: ${l}`),s(`Non-trainable params: ${u}`),s("_".repeat(t))}(this,e,t,n)}compile(e){if(null==e.loss&&(e.loss=[]),this.loss=e.loss,"string"==typeof e.optimizer)this.optimizer_=function(e){const t={Adagrad:()=>Wd.adagrad(.01),Adadelta:()=>Wd.adadelta(1,.95,Jg()),Adam:()=>Wd.adam(.001,.9,.999,Jg()),Adamax:()=>Wd.adamax(.002,.9,.999,Jg(),0),RMSProp:()=>Wd.rmsprop(.001,.9,0,Jg()),SGD:()=>Wd.sgd(.01)};if(t.adagrad=t.Adagrad,t.adadelta=t.Adadelta,t.adam=t.Adam,t.adamax=t.Adamax,t.rmsprop=t.RMSProp,t.sgd=t.SGD,e in t)return t[e]();throw new ag(`Unknown Optimizer ${e}`)}(e.optimizer),this.isOptimizerOwned=!0;else{if(!(e.optimizer instanceof Cl))throw new ag("User-defined optimizer must be an instance of tf.Optimizer.");this.optimizer_=e.optimizer,this.isOptimizerOwned=!1}let t=[];if(Array.isArray(e.loss)||"string"==typeof e.loss||"function"==typeof e.loss)if(Array.isArray(e.loss)){if(e.loss.length!==this.outputs.length)throw new ag(`When passing an Array as loss, it should have one entry per model output. The model has ${this.outputs.length} output(s), but you passed loss=${e.loss}.`);const n=e.loss;t=n.map((e=>sx(e)))}else{const n=sx(e.loss);this.outputs.forEach((e=>{t.push(n)}))}else{e.loss=e.loss;for(const t in e.loss)if(-1===this.outputNames.indexOf(t))throw new ag(`Unknown entry in loss dictionary: "${t}". Only expected the following keys: ${this.outputNames}`);for(const n of this.outputNames)null==e.loss[n]&&console.warn(`Output "${n}" is missing from loss dictionary. We assume this was done on purpose, and we will not be expecting data to be passed to ${n} during training`),t.push(sx(e.loss[n]))}this.lossFunctions=t,this.feedOutputNames=[],this.feedOutputShapes=[],this.feedLossFns=[];for(let e=0;e<this.outputs.length;++e){const t=this.internalOutputShapes[e],n=this.outputNames[e];this.feedOutputNames.push(n),this.feedOutputShapes.push(t),this.feedLossFns.push(this.lossFunctions[e])}const n=[];this.metrics=e.metrics,this.metricsNames=["loss"],this.metricsTensors=[],Vg("loss",(()=>{for(let e=0;e<this.outputs.length;++e){if(-1!==n.indexOf(e))continue;const t=this.lossFunctions[e];this.outputs.length>1&&(this.metricsTensors.push([t,e]),this.metricsNames.push(this.outputNames[e]+"_loss"))}}));const s=function(e,t){if(null==e||Array.isArray(e)&&0===e.length)return t.map((e=>[]));let n;if("string"==typeof e||"function"==typeof e)n=[e];else{if(!Array.isArray(e)&&"object"!=typeof e)throw new TypeError(`Type of metrics argument not understood. Expected an string,function, Array, or Object, found: ${e}`);n=e}if(Array.isArray(n))return t.map((e=>n));{const e=[];for(const s of t){let t=n.hasOwnProperty(s)?n[s]:[];Array.isArray(t)||(t=[t]),e.push(t)}return e}}(e.metrics,this.outputNames),r=(e,t,n)=>{this.outputNames.length>1&&(t=this.outputNames[e]+"_"+t),this.metricsNames.push(t),this.metricsTensors.push([n,e])};Vg("metric",(()=>{for(let e=0;e<this.outputs.length;++e)-1===n.indexOf(e)&&(t=>{let n,s,a;for(const i of t){if("string"==typeof i&&-1!==["accuracy","acc","crossentropy","ce"].indexOf(i)){const t=this.internalOutputShapes[e];let r;1===t[t.length-1]||this.lossFunctions[e]===ex?-1!==["accuracy","acc"].indexOf(i)?s=rx:-1!==["crossentropy","ce"].indexOf(i)&&(s=lx):this.lossFunctions[e]===Qb?-1!==["accuracy","acc"].indexOf(i)?s=ux:-1!==["crossentropy","ce"].indexOf(i)&&(s=hx):-1!==["accuracy","acc"].indexOf(i)?s=ax:-1!==["crossentropy","ce"].indexOf(i)&&(s=cx),-1!==["accuracy","acc"].indexOf(i)?r="acc":-1!==["crossentropy","ce"].indexOf(i)&&(r="ce"),a=s,n=""+r}else{const e=dx(i);a=e,n=""+fx(i)}let t;Vg(n,(()=>{t=a})),r(e,n,t)}})(s[e])})),this.collectedTrainableWeights=this.trainableWeights}checkTrainableWeightsConsistency(){null!=this.collectedTrainableWeights&&this.trainableWeights.length!==this.collectedTrainableWeights.length&&console.warn("Discrepancy between trainableweights and collected trainable weights. Did you set `model.trainable` without calling `model.compile()` afterwards?")}evaluate(e,t,n={}){const s=null==n.batchSize?32:n.batchSize;_x(s);const r=this.standardizeUserDataXY(e,t,!0,s);try{const a=r[0].concat(r[1]);this.makeTestFunction();const i=this.testFunction;return pg(this.testLoop(i,a,s,n.verbose,n.steps))}finally{Mx(r[0],e),Mx(r[1],t)}}async evaluateDataset(e,t){return this.makeTestFunction(),async function(e,t,n){const s=null!=(n=n||{}).batches,r=e.testFunction;let a=[];if(n.verbose>0)throw new ig("Verbose mode is not implemented yet.");se(!s||n.batches>0&&Number.isInteger(n.batches),(()=>`Test loop expects \`batches\` to be a positive integer, but received ${JSON.stringify(n.batches)}`));const i="function"==typeof t.next?t:await t.iterator();let o=0,l=0;for(;!s||l<n.batches;){const t=await i.next();if(a=Qo((()=>{if(t.value){const{xs:n,ys:s}=$x(e,t.value),i=n.concat(s),u=Qo((()=>r(i)));if(el(i),0===l)for(let e=0;e<u.length;++e)a.push(Tl(0));const c=i[0].shape[0];for(let e=0;e<u.length;++e){const t=u[e],n=a[e];a[e]=Qo((()=>pl(a[e],ml(c,t)))),l>0&&el(n)}el(u),o+=c,++l}return a})),t.done){s&&console.warn(`Your dataset iterator ran out of data during evaluateDataset(). Interrupting evalution. Make sure that your dataset can generate at least \`batches\` batches (in this case, ${n.batches} batches). You may need to use the repeat() function when building your dataset.`);break}}for(let e=0;e<a.length;++e){const t=a[e];a[e]=fl(a[e],o),el(t)}return pg(a)}(this,e,t)}checkNumSamples(e,t,n,s="steps"){let r;if(null!=n){if(r=null,null!=t)throw new ag(`If ${s} is set, batchSize must be null or undefined.Got batchSize = ${t}`)}else{if(null==e)throw new ag(`Either the input data should have a defined shape, or ${s} shoud be specified.`);r=Array.isArray(e)?e[0].shape[0]:e.shape[0]}return r}execute(e,t){if(Array.isArray(t)&&0===t.length)throw new ag("`outputs` is an empty Array, which is not allowed.");const n=Array.isArray(t),s=n?t:[t],r=this.retrieveSymbolicTensors(s),a=new eb;if(e instanceof Zr&&(e=[e]),Array.isArray(e)){if(e.length!==this.inputs.length)throw new ag(`The number of inputs provided (${e.length}) does not match the number of inputs of this model (${this.inputs.length}).`);for(let t=0;t<this.inputs.length;++t)a.add(this.inputs[t],e[t])}else for(const t of this.inputs){const n=e[t.name];if(null==n)throw new ag(`No value is provided for the model's input ${t.name}`);a.add(t,n)}const i=sb(r,a);return n?i:i[0]}retrieveSymbolicTensors(e){const t=ug(null,e.length);let n=e.length;for(const s of this.layers){const r=Array.isArray(s.output)?s.output:[s.output],a=r.map((e=>e.name));for(let s=0;s<e.length;++s){const i=a.indexOf(e[s]);if(-1!==i&&(t[s]=r[i],n--),0===n)break}if(0===n)break}if(n>0){const n=[];throw t.forEach(((t,s)=>{null==t&&n.push(e[s])})),new ag(`Cannot find SymbolicTensors for output name(s): ${JSON.stringify(n)}`)}return t}predictLoop(e,t=32,n=!1){return Qo((()=>{const s=this.checkNumSamples(e);if(n)throw new ig("Verbose predictLoop() is not implemented yet.");const r=Dx(s,t),a=this.outputs.map((e=>[]));for(let t=0;t<r.length;++t)Qo((()=>{const n=r[t][0],s=r[t][1],a=Rx(e,n,s),i=[];if(Array.isArray(a))for(let e=0;e<a.length;++e)i.push({key:this.inputs[e],value:a[e]});else i.push({key:this.inputs[0],value:a});const o=new eb(i);return sb(this.outputs,o)})).forEach(((e,t)=>a[t].push(e)));return pg(a.map((e=>gu(e,0))))}))}predict(e,t={}){const n=Ox(e);Bx(n,this.inputNames,this.feedInputShapes,!1);try{const s=null==t.batchSize?32:t.batchSize;return _x(s),this.predictLoop(n,s)}finally{Mx(n,e)}}predictOnBatch(e){Bx(e,this.inputNames,this.feedInputShapes,!0);const t=(Array.isArray(e)?e[0]:e).shape[0];return this.predictLoop(e,t)}standardizeUserDataXY(e,t,n=!0,s){if(null==this.optimizer_)throw new rg("You must compile a model before training/testing. Use LayersModel.compile(modelCompileArgs).");const r=[];for(let e=0;e<this.feedOutputShapes.length;++e){const t=this.feedOutputShapes[e];this.feedLossFns[e]===Qb?r.push(t.slice(0,t.length-1).concat([1])):r.push(t)}if(function(e,t,n){const s=wg(e.map((e=>e.shape[0])));s.sort();const r=wg(t.map((e=>e.shape[0])));if(r.sort(),s.length>1)throw new ag(`All input Tensors (x) should have the same number of samples. Got array shapes: ${JSON.stringify(e.map((e=>e.shape)))}`);if(r.length>1)throw new ag(`All target Tensors (y) should have the same number of samples. Got array shapes: ${JSON.stringify(t.map((e=>e.shape)))}`);if(s.length>0&&r.length>0&&!ue(s,r))throw new ag(`Input Tensors should have the same number of samples as target Tensors. Found ${s[0]} input sample(s) and ${r[0]} target sample(s).`)}(e=Px(e,this.feedInputNames,this.feedInputShapes,!1,"input"),t=Px(t,this.feedOutputNames,r,!1,"target")),function(e,t,n){const s=[Xb,ex,Jb];for(let r=0;r<e.length;++r){const a=e[r],i=t[r],o=n[r];if(null!=i){if(i===Jb&&1===a.shape[a.shape.length-1])throw new ag(`You are passing a target array of shape ${a.shape} while using a loss 'categorical_crossentropy'. 'categorical_crossentropy'expects targets to be binary matrices (1s and 0s) of shape [samples, classes].`);if(-1!==s.indexOf(i)){const e=a.shape.slice(1),t=o.slice(1);for(let n=0;n<e.length;++n){const s=e[n],r=t[n];if(null!=r&&s!==r)throw new ag(`A target Tensor with shape ${a.shape} was passed for an output of shape ${o}, while using a loss function that expects targets to have the same shape as the output.`)}}}}}(t,this.feedLossFns,this.feedOutputShapes),this.stateful&&null!=s&&s>0&&e[0].shape[0]%s!=0)throw new ag(`In a stateful network, you should only pass inputs with a number of samples that is divisible by the batch size ${s}. Found: ${e[0].shape[0]} sample(s).`);return[e,t]}async standardizeUserData(e,t,n,s,r=!0,a){const[i,o]=this.standardizeUserDataXY(e,t,r,a);if(null!=n)throw new Error("sample weight is not supported yet.");let l=null;if(null!=s){const e=Nx(s,this.outputNames);l=[];for(let t=0;t<e.length;++t)l.push(await Tx(o[t],null,e[t]))}return[i,o,l]}testLoop(e,t,n,s=0,r){return Qo((()=>{const a=this.checkNumSamples(t,n,r,"steps"),i=[];if(s>0)throw new ig("Verbose mode is not implemented yet.");if(null!=r)throw new ig("steps mode in testLoop() is not implemented yet");{const s=Dx(a,n),r=up(Yg(0,a));for(let n=0;n<s.length;++n){const a=s[n][0],o=s[n][1],l=ty(r,a,o-a),u=Fx(t,l),c=e(u);if(0===n)for(let e=0;e<c.length;++e)i.push(Tl(0));for(let e=0;e<c.length;++e){const t=c[e];i[e]=pl(i[e],ml(o-a,t))}}for(let e=0;e<i.length;++e)i[e]=fl(i[e],a)}return i}))}getDedupedMetricsNames(){const e=this.metricsNames,t=[];for(let n=0;n<e.length;++n){const s=e[n];let r=s;hg(e,s)>1&&(r+=`_${hg(e.slice(0,n),s)}`),t.push(r)}return t}makeTrainFunction(){return e=>{const t=[],n=e.slice(0,this.inputs.length),s=e.slice(this.inputs.length,this.inputs.length+this.outputs.length),r=e.slice(this.inputs.length+this.outputs.length,this.inputs.length+2*this.outputs.length),a=[],i=this.collectedTrainableWeights.map((e=>e.read()));return[this.optimizer_.minimize((()=>{const e=[];for(let t=0;t<this.inputs.length;++t)e.push({key:this.inputs[t],value:n[t]});const i=new eb(e),o=sb(this.outputs,i,{training:!0});let l;for(let e=0;e<this.lossFunctions.length;++e){let n=(0,this.lossFunctions[e])(s[e],o[e]);null!=r[e]&&(n=Cx(n,r[e]));const a=Qc(n);t.push(a),l=0===e?n:pl(l,n)}for(let e=0;e<this.metricsTensors.length;++e){let n;if(this.outputs.length>1&&e<this.outputs.length)n=t[e];else{const t=this.metricsTensors[e][0],r=this.metricsTensors[e][1];n=Qc(t(s[r],o[r]))}tl(n),a.push(n)}return l=Qc(l),this.calculateLosses().forEach((e=>{l=pl(l,e)})),l}),!0,i)].concat(a)}}makeTestFunction(){this.testFunction=e=>Qo((()=>{const t=[];let n;const s=e.slice(0,this.inputs.length),r=e.slice(this.inputs.length,this.inputs.length+this.outputs.length),a=[];for(let e=0;e<this.inputs.length;++e)a.push({key:this.inputs[e],value:s[e]});const i=new eb(a),o=sb(this.outputs,i);for(let e=0;e<this.lossFunctions.length;++e){const s=this.lossFunctions[e],a=Qc(s(r[e],o[e]));n=0===e?a:pl(n,a),t.push(n)}for(let e=0;e<this.metricsTensors.length;++e){const n=this.metricsTensors[e][0],s=this.metricsTensors[e][1],a=Qc(n(r[s],o[s]));t.push(a)}return t}))}async fit(e,t,n={}){return async function(e,t,n,s={}){if(e.isTraining)throw new Error("Cannot start training because another fit() call is ongoing.");let r,a,i,o,l,u,c,h,p;e.isTraining=!0;try{const d=null==s.batchSize?32:s.batchSize;_x(d);const f=!1,m=await e.standardizeUserData(t,n,s.sampleWeight,s.classWeight,f,d);r=m[0],a=m[1],p=m[2];let g,y=!1;if(null!=s.validationData&&s.validationData.length>0){if(y=!0,2!==s.validationData.length)throw 3===s.validationData.length?new ig("validationData including sample weights is not supported yet."):new ag(`When passing validation data, it must contain 2 (valX, valY) or 3 (valX, valY, valSampleWeight) items; ${s.validationData} is invalid.`);l=s.validationData[0],u=s.validationData[1];const t=!0,n=await e.standardizeUserData(l,u,null,null,t,d);c=n[0],h=n[1],g=c.concat(h)}else if(null!=s.validationSplit&&s.validationSplit>0&&s.validationSplit<1){y=!0;const e=Math.floor(r[0].shape[0]*(1-s.validationSplit)),t=r[0].shape[0];c=Rx(r,e,t),i=r,r=Rx(r,0,e),h=Rx(a,e,t),o=a,a=Rx(a,0,e),g=c.concat(h)}else null!=s.validationSteps&&(y=!0);const b=r.concat(a).concat(p);e.checkTrainableWeightsConsistency();const x=e.makeTrainFunction(),v=e.getDedupedMetricsNames();let w,k;y?(e.makeTestFunction(),w=e.testFunction,k=v.slice().concat(v.map((e=>"val_"+e)))):(w=null,g=[],k=v.slice());const I=Gb(s.callbacks,s.yieldEvery),S=await async function(e,t,n,s,r,a,i,o,l,u,c,h,p,d,f){null==r&&(r=32),null==a&&(a=1),null==c&&(c=!0),null==p&&(p=0);let m=!1;null!=l&&null!=u&&(m=!0);const g=e.checkNumSamples(n,r,d,"steps_per_epoch");let y;null!=g&&(y=Yg(0,g)),null==i&&(i=1);const{callbackList:b,history:x}=jb(o,i,a,p,g,d,r,m,h);b.setModel(e),e.history=x,await b.onTrainBegin(),e.stopTraining_=!1;for(let i=p;i<a;++i){await b.onEpochBegin(i);const a={};{if("batch"===c)throw new ig("batch shuffling is not implemneted yet");c&&X(y);const i=up(y),o=Dx(g,r);for(let c=0;c<o.length;++c){const h={};if(await b.onBatchBegin(c,h),Qo((()=>{const p=o[c][0],d=o[c][1],f=ty(i,p,d-p);h.batch=c,h.size=d-p;const g=Fx(n,f),y=t(g);for(let e=0;e<s.length;++e){const t=s[e],n=y[e];h[t]=n,tl(n)}if(c===o.length-1&&m){const t=e.testLoop(l,u,r);for(let e=0;e<s.length;++e){const n=s[e],r=t[e];tl(r),a["val_"+n]=r}}})),await b.onBatchEnd(c,h),Lb(h),e.stopTraining_)break}i.dispose()}if(await b.onEpochEnd(i,a),e.stopTraining_)break}return await b.onTrainEnd(),await e.history.syncData(),e.history}(e,x,b,v,d,s.epochs,s.verbose,I,w,g,s.shuffle,k,s.initialEpoch,null);return S}finally{e.isTraining=!1,Mx(r,t),Mx(a,n),Mx(i,t),Mx(o,n),Mx(c,l),Mx(h,u),null!=p&&el(p)}}(this,e,t,n)}async fitDataset(e,t){return async function(e,t,n){const s=null!=n.batchesPerEpoch;if(se(null!=e.optimizer,(()=>"You must compile a model before training/testing. Use LayersModel.compile(modelCompileConfig).")),se(null!=n,(()=>"For fitDataset(), the 2nd argument (config) is required, but it is not provided in this call.")),se(null!=n.epochs&&n.epochs>0&&Number.isInteger(n.epochs),(()=>`For fitDataset(), config.epochs is expected to be a positive integer, but got ${n.epochs}`)),se(!s||n.batchesPerEpoch>0&&Number.isInteger(n.batchesPerEpoch),(()=>`For fitDataset(), config.batchesPerEpoch is expected to be a positive integer if specified, but got ${n.batchesPerEpoch}`)),se(null==n.validationSplit,(()=>"`validationSplit` is not supported by `fitDataset()`. Use validationData instead.")),e.isTraining)throw new Error("Cannot start training because another fit() call is ongoing.");e.isTraining=!0;try{const r=null!=n.validationData;let a,i;if(r)if(Ax(n.validationData))se(null==n.validationBatches||n.validationBatches>0&&Number.isInteger(n.validationBatches),(()=>`For fitDataset() with dataset-based validation, config.validationBatches is expected not to be provided, or to be a positive integer, but got ${n.validationBatches}`));else{const e=function(e){if(3===e.length)throw new ig("Validation with sample weights is not implemented yet.");return{xs:e[0],ys:e[1]}}(n.validationData);a=e.xs,i=e.ys}const o=e.makeTrainFunction(),l=e.getDedupedMetricsNames();let u;u=r?l.slice().concat(l.map((e=>"val_"+e))):l.slice();const c=Gb(n.callbacks,n.yieldEvery),h=null==n.verbose?1:n.verbose,{callbackList:p,history:d}=jb(c,h,n.epochs,null,null,function(e,t){let n=null;return null!=t.batchesPerEpoch?n=t.batchesPerEpoch:Number.isFinite(e.size)&&(n=e.size),n}(t,n),null,r,u);p.setModel(e),e.history=d,await p.onTrainBegin(),e.stopTraining_=!1;let f=null==n.initialEpoch?0:n.initialEpoch,m=await t.iterator();for(;f<n.epochs;){const u={};await p.onEpochBegin(f);let c=0,h=0;for(s||(m=await t.iterator());!s||c<n.batchesPerEpoch;){const t=await m.next();if(s&&t.done){console.warn(`You provided \`batchesPerEpoch\` as ${n.batchesPerEpoch}, but your dataset iterator ran out of data after ${c} batches; interrupting training. Make sure that your dataset can generate at least \`batchesPerEpoch * epochs\` batches (in this case, `+n.batchesPerEpoch*n.epochs+" batches). You may need to use the repeat() function when building your dataset.");break}if(null!=t.value){const{xs:s,ys:r}=$x(e,t.value),a={};a.batch=h,a.size=s[0].shape[0],await p.onBatchBegin(h,a);const i=[];if(null!=n.classWeight){const t=Nx(n.classWeight,e.outputNames);for(let e=0;e<t.length;++e)i.push(await Tx(r[e],null,t[e]))}const u=s.concat(r).concat(i),d=o(u);el(u);for(let e=0;e<l.length;++e){const t=l[e],n=d[e];a[t]=n,tl(n)}await p.onBatchEnd(h,a),Lb(a),h++,c++}if(s?c>=n.batchesPerEpoch:t.done){if(r){let t;t=Ax(n.validationData)?dg(await e.evaluateDataset(n.validationData,{batches:n.validationBatches})):dg(e.evaluate(a,i,{batchSize:null==n.validationBatchSize?32:n.validationBatchSize,verbose:0}));for(let n=0;n<e.metricsNames.length;++n)u[`val_${e.metricsNames[n]}`]=t[n]}break}if(e.stopTraining_)break}if(await p.onEpochEnd(f,u),f++,e.stopTraining_)break}return await p.onTrainEnd(),await e.history.syncData(),e.history}finally{e.isTraining=!1}}(this,e,t)}async trainOnBatch(e,t){const n=await this.standardizeUserData(e,t),s=n[0],r=n[1],a=this.makeTrainFunction()(s.concat(r)),i=[];for(const e of a){const t=await e.data();i.push(t[0])}return el(a),Mx(n[0],e),Mx(n[1],t),pg(i)}getNamedWeights(e){const t=[],n=null!=e&&e.trainableOnly,s=n?this.trainableWeights:this.weights,r=this.getWeights(n);for(let e=0;e<s.length;++e)n&&!s[e].trainable||t.push({name:s[e].originalName,tensor:r[e]});return t}set stopTraining(e){this.stopTraining_=e}get stopTraining(){return this.stopTraining_}get optimizer(){return this.optimizer_}set optimizer(e){this.optimizer_!==e&&(this.optimizer_=e,this.isOptimizerOwned=!1)}dispose(){const e=super.dispose();if(0===e.refCountAfterDispose&&null!=this.optimizer&&this.isOptimizerOwned){const t=Zo().numTensors;this.optimizer_.dispose(),e.numDisposedVariables+=t-Zo().numTensors}return e}getLossIdentifiers(){let e;if("string"==typeof this.loss)e=fg(this.loss);else if(Array.isArray(this.loss)){for(const e of this.loss)if("string"!=typeof e)throw new Error("Serialization of non-string loss is not supported.");e=this.loss.map((e=>fg(e)))}else{const t=Object.keys(this.loss);e={};const n=this.loss;for(const s of t){if("string"!=typeof n[s])throw new Error("Serialization of non-string loss is not supported.");e[s]=fg(n[s])}}return e}getMetricIdentifiers(){if("string"==typeof this.metrics||"function"==typeof this.metrics)return[fg(fx(this.metrics))];if(Array.isArray(this.metrics))return this.metrics.map((e=>fg(fx(e))));{const e={};for(const t in this.metrics)e[t]=fg(fx(this.metrics[t]));return e}}getTrainingConfig(){return{loss:this.getLossIdentifiers(),metrics:this.getMetricIdentifiers(),optimizer_config:{class_name:this.optimizer.getClassName(),config:this.optimizer.getConfig()}}}loadTrainingConfig(e){if(null!=e.weighted_metrics)throw new Error("Loading weight_metrics is not supported yet.");if(null!=e.loss_weights)throw new Error("Loading loss_weights is not supported yet.");if(null!=e.sample_weight_mode)throw new Error("Loading sample_weight_mode is not supported yet.");const t=qb(wx(e.optimizer_config));let n,s;if("string"==typeof e.loss)n=mg(e.loss);else if(Array.isArray(e.loss))n=e.loss.map((e=>mg(e)));else if(null!=e.loss){n={};for(const t in e.loss)n[t]=mg(e.loss[t])}if(Array.isArray(e.metrics))s=e.metrics.map((e=>mg(e)));else if(null!=e.metrics){s={};for(const t in e.metrics)s[t]=mg(e.metrics[t])}this.compile({loss:n,metrics:s,optimizer:t})}async save(e,t){if("string"==typeof e){const t=Xa(e);if(0===t.length)throw new ag(`Cannot find any save handlers for URL '${e}'`);if(t.length>1)throw new ag(`Found more than one (${t.length}) save handlers for URL '${e}'`);e=t[0]}if(null==e.save)throw new ag("LayersModel.save() cannot proceed because the IOHandler provided does not have the `save` attribute defined.");const n=await Oa(this.getNamedWeights(t)),s={modelTopology:this.toJSON(null,!1),format:"layers-model",generatedBy:`TensorFlow.js tfjs-layers v${Ix}`,convertedBy:null};if(null!=t&&t.includeOptimizer&&null!=this.optimizer){s.trainingConfig=this.getTrainingConfig();const e="optimizer",{data:t,specs:r}=await Oa(await this.optimizer.getWeights(),e);n.specs.push(...r),n.data=Ba([n.data,t])}if(null!=this.userDefinedMetadata){const e=!0;mx(this.userDefinedMetadata,this.name,e),s.userDefinedMetadata=this.userDefinedMetadata}return s.weightData=n.data,s.weightSpecs=n.specs,e.save(s)}setUserDefinedMetadata(e){mx(e,this.name),this.userDefinedMetadata=e}getUserDefinedMetadata(){return this.userDefinedMetadata}}Wx.className="Model",Ro(Wx);class Vx extends Wx{}async function Ux(e,t){"modelTopology"in e||(e={modelTopology:e});let n=e.modelTopology;null!=n.model_config&&(n=n.model_config);const s=qb(wx(n),t);if(null!=e.weightsManifest){const t=await zi(e.weightsManifest,e.pathPrefix,s.weights.map((e=>e.originalName))),n={};for(const e of s.weights)n[e.originalName]=t[e.originalName];s.loadWeights(n),el(t)}return s}Vx.className="Functional",Ro(Vx);class Gx extends Wx{constructor(e){if(super({inputs:[],outputs:[]}),e=e||{},this.trainable=!0,this.built=!1,this.name=null!=e.name?e.name:_g("sequential_"),null!=e.layers)for(const t of e.layers)this.add(t)}checkShape(e){if(e.inboundNodes[0].outputTensors[0].shape.some((e=>e<0)))throw new ag(`Negative dimension size caused by adding layer ${e.name} with input shape [${e.inboundNodes[0].inputTensors[0].shape}]`)}add(e){const t=e instanceof Gx||e instanceof Wx;let n;if(t){if(n=e,1!==n.outputs.length)throw new ag("All layers in a Sequential model should have a single output tensor. For multi-output layers, use the functional API.");if(1!==n.inputs.length)throw new ag("All layers in a Sequential model should have a single input tensor. For multi-input layers, use the functional API.")}if(0===this.outputs.length){if(0===e.inboundNodes.length){if(null==e.batchInputShape)throw new ag("The first layer in a Sequential model must get an `inputShape` or `batchInputShape` argument.");const t=Qy({batchShape:e.batchInputShape,dtype:e.dtype,name:e.name+"_input"});e.apply(t)}if(t)this.outputs=n.outputs,this.inputs=n.inputs;else{if(1!==e.inboundNodes.length)throw new ag(`A layer added to a Sequential model must not already be connected somewhere else. LayersModel received layer ${e.name} which has ${e.inboundNodes.length} pre-existing inbound connections.`);if(1!==e.inboundNodes[0].outputTensors.length)throw new ag("All layers in a Sequential model should have a single output tensor. For multi-output layers, use the functional API.");this.checkShape(e),this.outputs=[e.inboundNodes[0].outputTensors[0]],this.inputs=Zy(this.outputs[0])}this.inboundNodes=[],new Ky({outboundLayer:this,inboundLayers:[],nodeIndices:[],tensorIndices:[],inputTensors:this.inputs,outputTensors:this.outputs,inputMasks:ug(null,this.inputs.length),outputMasks:[null],inputShapes:this.inputs.map((e=>e.shape)),outputShapes:this.outputs[0].shape})}else{const t=e.apply(this.outputs[0]);if(Array.isArray(t))throw new TypeError("All layers in a Sequential model should have a single output tensor. For multi-output layers, use the functional API.");this.checkShape(e),this.outputs=[t],this.inboundNodes[0].outputTensors=this.outputs,this.inboundNodes[0].outputShapes=[this.outputs[0].shape]}this.layers.push(e),this.built=!1}pop(){if(0===this.layers.length)throw new TypeError("There are no layers in the model.");if(this.layers.pop(),0===this.layers.length)this.outputs=[],this.inboundNodes=[],this.outboundNodes=[];else{const e=this.layers.length-1;this.layers[e].outboundNodes=[],this.outputs=[this.layers[e].output],this.inboundNodes[0].outputTensors=this.outputs,this.inboundNodes[0].outputShapes=[this.outputs[0].shape]}}call(e,t){return null==this.model&&this.build(),this.model.call(e,t)}build(e){if(By(e),0===this.inputs.length||0===this.outputs.length)throw new TypeError("Sequential model cannot be built: model is empty. Add some layers first.");this.model=new Wx({inputs:this.inputs,outputs:this.outputs[0],name:this.name+"_model"}),this.model.trainable=this.trainable,this.supportsMasking=this.model.supportsMasking,this.inputLayers=this.model.inputLayers,this.inputLayersNodeIndices=this.model.inputLayersNodeIndices,this.inputLayersTensorIndices=this.model.inputLayersTensorIndices,this.outputLayers=this.model.outputLayers,this.outputLayersNodeIndices=this.model.outputLayersNodeIndices,this.outputLayersTensorIndices=this.model.outputLayersTensorIndices,this.nodesByDepth=this.model.nodesByDepth,this.containerNodes=this.model.containerNodes,this.outputNames=this.model.outputNames,this.inputNames=this.model.inputNames,this.built=!0}countParams(){return this.built||this.build(),super.countParams()}summary(e,t,n=console.log){this.built||this.build(),super.summary(e,t,n)}setWeights(e){null==this.model&&this.build(),this.model.setWeights(e)}evaluate(e,t,n={}){if(!this.built)throw new rg("The model needs to be compiled before being used.");return this.model.evaluate(e,t,n)}async evaluateDataset(e,t){if(!this.built)throw new rg("The model needs to be compiled before being used.");return this.model.evaluateDataset(e,t)}predict(e,t={}){return null==this.model&&this.build(),this.model.predict(e,t)}predictOnBatch(e){return null==this.model&&this.build(),this.model.predictOnBatch(e)}compile(e){this.build(),this.model.compile(e),this.optimizer_=this.model.optimizer,this.isOptimizerOwned=this.model.isOptimizerOwned,this.loss=this.model.loss,this.metrics=this.model.metrics,this.metricsTensors=this.model.metricsTensors,this.metricsNames=this.model.metricsNames}get optimizer(){return null==this.model?void 0:this.model.optimizer}set optimizer(e){this.model.optimizer=e}async fit(e,t,n={}){if(!this.built)throw new rg("The model needs to be compiled before being used.");return this.model.fit(e,t,n)}async fitDataset(e,t){if(!this.built)throw new rg("The model needs to be compiled before being used.");return this.model.fitDataset(e,t)}async trainOnBatch(e,t){return this.model.trainOnBatch(e,t)}static fromConfig(e,t,n={},s=!1){let r,a={};if(t instanceof Array){if(null==t[0].className||"Merge"===t[0].className)throw new ag("Legacy serialization format not supported yet.");r=t}else se(null!=t.layers,(()=>"When the config data for a Sequential model is not an Array, it must be an Object that contains the 'layers' field.")),r=t.layers,delete t.layers,a=t;const i=new e(a);if(!(i instanceof Gx))throw new ig(`Sequential.fromConfig called on non-Sequential input: ${i}`);for(const e of r){const t=qb(e,void 0,s);s&&t.setFastWeightInitDuringBuild(!0),i.add(t)}return i}set stopTraining(e){if(null==this.model)throw new ag("Cannot set the stopTraining property of a sequential model before it is compiled.");this.model.stopTraining=e}get stopTraining(){if(null==this.model)throw new ag("Cannot get the stopTraining property of a sequential model before it is compiled.");return this.model.stopTraining}getConfig(){const e=[];for(const t of this.layers){const n={};n.className=t.getClassName(),n.config=t.getConfig(),e.push(n)}return{name:this.name,layers:e}}}function Hx(e){return new Wx(e)}function jx(e){return new Gx(e)}function qx(e,t){return null==t&&(t={}),async function(e,t){if(null==t&&(t={}),"string"==typeof e){const n=Ya(e,t);if(0===n.length)n.push(Gi(e,t));else if(n.length>1)throw new ag(`Found more than one (${n.length}) load handlers for URL '${e}'`);e=n[0]}return async function(e,t,n){if(null==n&&(n={}),null==e.load)throw new ag("Cannot proceed with model loading because the IOHandler provided does not have the `load` method implemented.");const s=await e.load();let r=s.modelTopology;null!=r.model_config&&(r=r.model_config);const a=null==n.strict||n.strict,i=null!=s.weightData&&null!=s.weightSpecs&&a,o=qb(wx(r),void 0,i),l=s.trainingConfig;if(null!=l&&o.loadTrainingConfig(l),null!=s.userDefinedMetadata&&o.setUserDefinedMetadata(s.userDefinedMetadata),null!=s.weightData){if(null==s.weightSpecs)throw new ag("LayersModel artifacts contains weight data, but not weight specs. Therefore loading of weights cannot proceed.");const{modelWeights:e,optimizerWeights:t}=function(e,t){const n=Ma(e,t),s={},r=[];return t.forEach((e=>{"optimizer"===e.group?r.push({name:e.name,tensor:n[e.name]}):s[e.name]=n[e.name]})),{modelWeights:s,optimizerWeights:r}}(s.weightData,s.weightSpecs);o.loadWeights(e,a),null!=o.optimizer&&t.length>0&&await o.optimizer.setWeights(t),el(e),el(t.map((e=>e.tensor)))}return o}(e,0,t)}(e,t)}function Kx(e){return Qy(e)}function Xx(e,t){Hb.registerCallbackConstructor(e,t)}Gx.className="Sequential",Ro(Gx);class Yx extends Ao{getConfig(){return{}}}class Zx extends Yx{apply(e,t=1){return function(e,t=1){if(1!==t)throw new ig(`Support for alpha values other than 1 (${t}) is not implemented yet.`);return nc(e)}(e,t)}}Zx.className="elu",Ro(Zx);class Jx extends Yx{apply(e){return Wh(e)}}Jx.className="selu",Ro(Jx);class Qx extends Yx{apply(e){return Rh(e)}}Qx.className="relu",Ro(Qx);class ev extends Yx{apply(e){return Qo((()=>sh(6,Rh(e))))}}ev.className="relu6",Ro(ev);class tv extends Yx{apply(e){return e}}tv.className="linear",Ro(tv);class nv extends Yx{apply(e){return yu(e)}}nv.className="sigmoid",Ro(nv);class sv extends Yx{apply(e){return function(e){return Qo((()=>{const t=pl(.5,ml(.2,e));return Au(t,0,1)}))}(e)}}sv.className="hardSigmoid",Ro(sv);class rv extends Yx{apply(e){return Pc(e)}}rv.className="softplus",Ro(rv);class av extends Yx{apply(e){return function(e){return Qo((()=>fl(e,pl(Dl(e),1))))}(e)}}av.className="softsign",Ro(av);class iv extends Yx{apply(e){return xu(e)}}iv.className="tanh",Ro(iv);class ov extends Yx{apply(e,t=-1){return Zh(e,t)}}ov.className="softmax",Ro(ov);class lv extends Yx{apply(e,t=-1){return Wc(e,t)}}lv.className="logSoftmax",Ro(lv);class uv extends Yx{apply(e,t=1){return Qo((()=>ml(yu(ml(e,t)),e)))}}uv.className="swish",Ro(uv);class cv extends Yx{apply(e){return Qo((()=>ml(e,xu(Pc(e)))))}}function hv(e){return e.getClassName()}function pv(e,t={}){return xg(e,_o.getMap().classNameMap,t,"activation")}function dv(e){if(null==e){return pv({className:"linear",config:{}})}if("string"==typeof e){const t={};return t.className=e,t.config={},pv(t)}return e instanceof Yx?e:pv(e)}function fv(e){if(null!=e&&"object"!=typeof e)throw new Error(`Argument to L1L2 regularizer's constructor is expected to be an object, but received: ${e}`)}cv.className="mish",Ro(cv);class mv extends Ao{}class gv extends mv{constructor(e){super(),fv(e),this.l1=null==e||null==e.l1?.01:e.l1,this.l2=null==e||null==e.l2?.01:e.l2,this.hasL1=0!==this.l1,this.hasL2=0!==this.l2}apply(e){return Qo((()=>{let t=eh([1]);return this.hasL1&&(t=pl(t,fc(ml(this.l1,Dl(e))))),this.hasL2&&(t=pl(t,fc(ml(this.l2,cy(e))))),du(t,[])}))}getConfig(){return{l1:this.l1,l2:this.l2}}static fromConfig(e,t){return new e({l1:t.l1,l2:t.l2})}}gv.className="L1L2",Ro(gv);const yv={l1l2:"L1L2"};function bv(e){return yg(e)}function xv(e,t={}){return xg(e,_o.getMap().classNameMap,t,"regularizer")}function vv(e){return null==e?null:"string"==typeof e?xv({className:e in yv?yv[e]:e,config:{}}):e instanceof mv?e:xv(e)}class wv extends Yy{constructor(e){super(null==e?{}:e),this.supportsMasking=!0,null!=e&&(this.maxValue=e.maxValue)}call(e,t){e=Py(e);let n=Rh(e);return null!=this.maxValue&&(n=Au(n,0,this.maxValue)),n}computeOutputShape(e){return e}getConfig(){const e={maxValue:this.maxValue},t=super.getConfig();return Object.assign(e,t),e}}wv.className="ReLU",Ro(wv);class kv extends Yy{constructor(e){super(null==e?{}:e),this.DEFAULT_ALPHA=.3,null==e&&(e={}),this.alpha=null==e.alpha?this.DEFAULT_ALPHA:e.alpha}call(e,t){const n=Py(e);return _c(n,this.alpha)}computeOutputShape(e){return e}getConfig(){const e={alpha:this.alpha},t=super.getConfig();return Object.assign(e,t),e}}kv.className="LeakyReLU",Ro(kv);class Iv extends Yy{constructor(e){if(super(null==e?{}:e),this.DEFAULT_ALPHA_INITIALIZER="zeros",null==e&&(e={}),this.supportsMasking=!0,this.alphaInitializer=My(e.alphaInitializer||this.DEFAULT_ALPHA_INITIALIZER),this.alphaRegularizer=vv(e.alphaRegularizer),this.alphaConstraint=gb(e.alphaConstraint),null==e.sharedAxes)this.sharedAxes=null;else if(Array.isArray(e.sharedAxes))this.sharedAxes=e.sharedAxes;else{if("number"!=typeof e.sharedAxes)throw new ag(`Expected sharedAxes to be a number or an array of numbers, but got ${e.sharedAxes}`);this.sharedAxes=[e.sharedAxes]}}build(e){const t=(e=By(e)).slice(1);if(null!=this.sharedAxes)for(const e of this.sharedAxes)t[e-1]=1;this.alpha=this.addWeight("alpha",t,"float32",this.alphaInitializer,this.alphaRegularizer,!0,this.alphaConstraint);const n={};if(null!=this.sharedAxes)for(let t=1;t<e.length;++t)n[t]=e[t];this.inputSpec=[new Hy({ndim:e.length,axes:n})],this.built=!0}call(e,t){return e=Py(e),xh(e,this.alpha.read())}getConfig(){const e={alphaInitializer:Oy(this.alphaInitializer),alphaRegularizer:bv(this.alphaRegularizer),alphaConstraint:fb(this.alphaConstraint),sharedAxes:this.sharedAxes},t=super.getConfig();return Object.assign(e,t),e}}Iv.className="PReLU",Ro(Iv);class Sv extends Yy{constructor(e){if(super(null==e?{}:e),this.DEFAULT_ALPHA=1,null==e&&(e={}),null!=e.alpha&&e.alpha!==this.DEFAULT_ALPHA)throw new ig(`Non-default alpha value (${e.alpha}) is not supported by the ELU layer yet.`);this.alpha=null==e.alpha?this.DEFAULT_ALPHA:e.alpha}call(e,t){const n=Py(e);return nc(n)}computeOutputShape(e){return e}getConfig(){const e={alpha:this.alpha},t=super.getConfig();return Object.assign(e,t),e}}Sv.className="ELU",Ro(Sv);class Nv extends Yy{constructor(e){super(null==e?{}:e),this.DEFAULT_THETA=1,null==e&&(e={}),this.theta=null==e.theta?this.DEFAULT_THETA:e.theta}call(e,t){const n=Py(e);return ml(n,Ei(Nc(n,this.theta),"float32"))}computeOutputShape(e){return e}getConfig(){const e={theta:this.theta},t=super.getConfig();return Object.assign(e,t),e}}Nv.className="ThresholdedReLU",Ro(Nv);class Tv extends Yy{constructor(e){super(null==e?{}:e),this.DEFAULT_AXIS=1,null==e&&(e={}),this.softmax=(new ov).apply,this.axis=null==e.axis?this.DEFAULT_AXIS:e.axis}call(e,t){const n=Py(e);return this.softmax(n,this.axis)}computeOutputShape(e){return e}getConfig(){const e={axis:this.axis},t=super.getConfig();return Object.assign(e,t),e}}function Cv(e,t,n){if("number"==typeof e)return ug(e,t);if(e.length!==t)throw new ag(`The ${n} argument must be an integer or tuple of ${t} integers. Received: ${e.length} elements.`);for(let r=0;r<t;++r){const a=e[r];if((s=a)!==parseInt(s.toString(),10))throw new ag(`The ${n} argument must be an integer or tuple of ${t} integers. Received: ${JSON.stringify(e)} including a non-integer number ${a}`)}return e;var s}function $v(e,t,n,s,r=1){if(null==e)return e;let a;return a="same"===n?e:e-(t+(t-1)*(r-1))+1,Math.floor((a+s-1)/s)}function Ev(e,t,n,s){if(null==e)return null;if("valid"===s)e=e*t+Xg([n-t,0]);else{if("same"!==s)throw new ag(`Unsupport padding mode: ${s}.`);e*=t}return e}function Av(e,t){return Qo((()=>(zg(t),"channelsFirst"===t?Zi(e,[0,2,3,1]):e)))}function _v(e,t){return Qo((()=>(zg(t),"channelsFirst"===t?Zi(e,[0,2,3,4,1]):e)))}function Rv(e,t,n,s=[1,1],r="valid",a,i,o=null){return Qo((()=>{if(null==a&&(a="channelsLast"),zg(a),3!==e.rank&&4!==e.rank)throw new ag(`conv2dWithBiasActivation expects input to be of rank 3 or 4, but received ${e.rank}.`);if(3!==t.rank&&4!==t.rank)throw new ag(`conv2dWithBiasActivation expects kernel to be of rank 3 or 4, but received ${e.rank}.`);let l=Av(e,a);if("causal"===r)throw new ig("The support for CAUSAL padding mode in conv1dWithBias is not implemented yet.");return l=Lp({x:l,filter:t,strides:s,pad:"same"===r?"same":"valid",dilations:i,dataFormat:"NHWC",bias:n,activation:o}),"channelsFirst"===a&&(l=Zi(l,[0,3,1,2])),l}))}Tv.className="Softmax",Ro(Tv);class Fv extends Yy{constructor(e,t){if(super(t),this.bias=null,this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_BIAS_INITIALIZER="zeros",Fv.verifyArgs(t),this.rank=e,Ng(this.rank,"rank"),1!==this.rank&&2!==this.rank&&3!==this.rank)throw new ig(`Convolution layer for rank other than 1, 2, or 3 (${this.rank}) is not implemented yet.`);if(this.kernelSize=Cv(t.kernelSize,e,"kernelSize"),this.strides=Cv(null==t.strides?1:t.strides,e,"strides"),this.padding=null==t.padding?"valid":t.padding,Pg(this.padding),this.dataFormat=null==t.dataFormat?"channelsLast":t.dataFormat,zg(this.dataFormat),this.activation=dv(t.activation),this.useBias=null==t.useBias||t.useBias,this.biasInitializer=My(t.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.biasConstraint=gb(t.biasConstraint),this.biasRegularizer=vv(t.biasRegularizer),this.activityRegularizer=vv(t.activityRegularizer),this.dilationRate=Cv(null==t.dilationRate?1:t.dilationRate,e,"dilationRate"),1===this.rank&&Array.isArray(this.dilationRate)&&1!==this.dilationRate.length)throw new ag(`dilationRate must be a number or an array of a single number for 1D convolution, but received ${JSON.stringify(this.dilationRate)}`);if(2===this.rank){if("number"==typeof this.dilationRate)this.dilationRate=[this.dilationRate,this.dilationRate];else if(2!==this.dilationRate.length)throw new ag(`dilationRate must be a number or array of two numbers for 2D convolution, but received ${JSON.stringify(this.dilationRate)}`)}else if(3===this.rank)if("number"==typeof this.dilationRate)this.dilationRate=[this.dilationRate,this.dilationRate,this.dilationRate];else if(3!==this.dilationRate.length)throw new ag(`dilationRate must be a number or array of three numbers for 3D convolution, but received ${JSON.stringify(this.dilationRate)}`)}static verifyArgs(e){if(cg("kernelSize"in e,"required key 'kernelSize' not in config"),"number"!=typeof e.kernelSize&&!Sg(e.kernelSize,"number",1,3))throw new ag(`BaseConv expects config.kernelSize to be number or number[] with length 1, 2, or 3, but received ${JSON.stringify(e.kernelSize)}.`)}getConfig(){const e={kernelSize:this.kernelSize,strides:this.strides,padding:this.padding,dataFormat:this.dataFormat,dilationRate:this.dilationRate,activation:hv(this.activation),useBias:this.useBias,biasInitializer:Oy(this.biasInitializer),biasRegularizer:bv(this.biasRegularizer),activityRegularizer:bv(this.activityRegularizer),biasConstraint:fb(this.biasConstraint)},t=super.getConfig();return Object.assign(e,t),e}}class Dv extends Fv{constructor(e,t){super(e,t),this.kernel=null,Dv.verifyArgs(t),this.filters=t.filters,Ng(this.filters,"filters"),this.kernelInitializer=My(t.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.kernelConstraint=gb(t.kernelConstraint),this.kernelRegularizer=vv(t.kernelRegularizer)}build(e){e=By(e);const t="channelsFirst"===this.dataFormat?1:e.length-1;if(null==e[t])throw new ag(`The channel dimension of the input should be defined. Found ${e[t]}`);const n=e[t],s=this.kernelSize.concat([n,this.filters]);this.kernel=this.addWeight("kernel",s,null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.filters],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint)),this.inputSpec=[{ndim:this.rank+2,axes:{[t]:n}}],this.built=!0}call(e,t){return Qo((()=>{let t;e=Py(e);const n=null==this.bias?null:this.bias.read(),s=Cg(this.activation.getClassName());if(null!=s&&2===this.rank)t=Rv(e,this.kernel.read(),n,this.strides,this.padding,this.dataFormat,this.dilationRate,s);else{if(1===this.rank)t=function(e,t,n,s=1,r="valid",a,i=1){return Qo((()=>{if(null==a&&(a="channelsLast"),zg(a),3!==e.shape.length)throw new ag(`The input of a conv1dWithBias operation should be 3, but is ${e.shape.length} instead.`);if(3!==t.shape.length)throw new ag(`The kernel for a conv1dWithBias operation should be 3, but is ${t.shape.length} instead`);if(null!=n&&1!==n.shape.length)throw new ag(`The bias for a conv1dWithBias operation should be 1, but is ${t.shape.length} instead`);if("channelsFirst"===a&&(e=Zi(e,[0,2,1])),"causal"===r)throw new ig("The support for CAUSAL padding mode in conv1dWithBias is not implemented yet.");let o=Mu(e,t,s,"same"===r?"same":"valid","NWC",i);return null!=n&&(o=py(o,n)),o}))}(e,this.kernel.read(),n,this.strides[0],this.padding,this.dataFormat,this.dilationRate[0]);else if(2===this.rank)t=Rv(e,this.kernel.read(),n,this.strides,this.padding,this.dataFormat,this.dilationRate);else{if(3!==this.rank)throw new ig("convolutions greater than 3D are not implemented yet.");t=function(e,t,n,s=[1,1,1],r="valid",a,i){return Qo((()=>{if(null==a&&(a="channelsLast"),zg(a),4!==e.rank&&5!==e.rank)throw new ag(`conv3dWithBias expects input to be of rank 4 or 5, but received ${e.rank}.`);if(4!==t.rank&&5!==t.rank)throw new ag(`conv3dWithBias expects kernel to be of rank 4 or 5, but received ${e.rank}.`);let o=_v(e,a);if("causal"===r)throw new ig("The support for CAUSAL padding mode in conv3dWithBias is not implemented yet.");return o=Pu(o,t,s,"same"===r?"same":"valid","NDHWC",i),null!=n&&(o=py(o,n)),"channelsFirst"===a&&(o=Zi(o,[0,4,1,2,3])),o}))}(e,this.kernel.read(),n,this.strides,this.padding,this.dataFormat,this.dilationRate)}null!=this.activation&&(t=this.activation.apply(t))}return t}))}computeOutputShape(e){e=By(e);const t=[],n="channelsLast"===this.dataFormat?e.slice(1,e.length-1):e.slice(2);for(let e=0;e<n.length;++e){const s=$v(n[e],this.kernelSize[e],this.padding,this.strides[e],"number"==typeof this.dilationRate?this.dilationRate:this.dilationRate[e]);t.push(s)}let s=[e[0]];return"channelsLast"===this.dataFormat?(s=s.concat(t),s.push(this.filters)):(s.push(this.filters),s=s.concat(t)),s}getConfig(){const e={filters:this.filters,kernelInitializer:Oy(this.kernelInitializer),kernelRegularizer:bv(this.kernelRegularizer),kernelConstraint:fb(this.kernelConstraint)},t=super.getConfig();return Object.assign(e,t),e}static verifyArgs(e){if(!("filters"in e)||"number"!=typeof e.filters||e.filters<1)throw new ag(`Convolution layer expected config.filters to be a 'number' > 0 but got ${JSON.stringify(e.filters)}`)}}class Ov extends Dv{constructor(e){super(2,e),Ov.verifyArgs(e)}getConfig(){const e=super.getConfig();return delete e.rank,e}static verifyArgs(e){if("number"!=typeof e.kernelSize&&!Sg(e.kernelSize,"number",1,2))throw new ag(`Conv2D expects config.kernelSize to be number or number[] with length 1 or 2, but received ${JSON.stringify(e.kernelSize)}.`)}}Ov.className="Conv2D",Ro(Ov);class Mv extends Dv{constructor(e){super(3,e),Mv.verifyArgs(e)}getConfig(){const e=super.getConfig();return delete e.rank,e}static verifyArgs(e){if("number"!=typeof e.kernelSize&&(!Array.isArray(e.kernelSize)||1!==e.kernelSize.length&&3!==e.kernelSize.length))throw new ag(`Conv3D expects config.kernelSize to be number or [number, number, number], but received ${JSON.stringify(e.kernelSize)}.`)}}Mv.className="Conv3D",Ro(Mv);class Lv extends Ov{constructor(e){if(super(e),this.inputSpec=[new Hy({ndim:4})],"same"!==this.padding&&"valid"!==this.padding)throw new ag(`Conv2DTranspose currently supports only padding modes 'same' and 'valid', but received padding mode ${this.padding}`)}build(e){if(4!==(e=By(e)).length)throw new ag("Input should have rank 4; Received input shape: "+JSON.stringify(e));const t="channelsFirst"===this.dataFormat?1:e.length-1;if(null==e[t])throw new ag("The channel dimension of the inputs should be defined. Found `None`.");const n=e[t],s=this.kernelSize.concat([this.filters,n]);this.kernel=this.addWeight("kernel",s,"float32",this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.filters],"float32",this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint)),this.inputSpec=[new Hy({ndim:4,axes:{[t]:n}})],this.built=!0}call(e,t){return Qo((()=>{let t=Py(e);if(4!==t.shape.length)throw new ag(`Conv2DTranspose.call() expects input tensor to be rank-4, but received a tensor of rank-${t.shape.length}`);const n=t.shape,s=n[0];let r,a;"channelsFirst"===this.dataFormat?(r=2,a=3):(r=1,a=2);const i=n[r],o=n[a],l=this.kernelSize[0],u=this.kernelSize[1],c=this.strides[0],h=this.strides[1],p=[s,Ev(i,c,l,this.padding),Ev(o,h,u,this.padding),this.filters];"channelsLast"!==this.dataFormat&&(t=Zi(t,[0,2,3,1]));let d=zu(t,this.kernel.read(),p,this.strides,this.padding);return"channelsLast"!==this.dataFormat&&(d=Zi(d,[0,3,1,2])),null!=this.bias&&(d=py(d,this.bias.read(),this.dataFormat)),null!=this.activation&&(d=this.activation.apply(d)),d}))}computeOutputShape(e){const t=(e=By(e)).slice();let n,s,r;"channelsFirst"===this.dataFormat?(n=1,s=2,r=3):(n=3,s=1,r=2);const a=this.kernelSize[0],i=this.kernelSize[1],o=this.strides[0],l=this.strides[1];return t[n]=this.filters,t[s]=Ev(t[s],o,a,this.padding),t[r]=Ev(t[r],l,i,this.padding),t}getConfig(){const e=super.getConfig();return delete e.dilationRate,e}}Lv.className="Conv2DTranspose",Ro(Lv);class zv extends Mv{constructor(e){if(super(e),this.inputSpec=[new Hy({ndim:5})],"same"!==this.padding&&"valid"!==this.padding)throw new ag(`Conv3DTranspose currently supports only padding modes 'same' and 'valid', but received padding mode ${this.padding}`)}build(e){if(5!==(e=By(e)).length)throw new ag("Input should have rank 5; Received input shape: "+JSON.stringify(e));const t="channelsFirst"===this.dataFormat?1:e.length-1;if(null==e[t])throw new ag("The channel dimension of the inputs should be defined. Found `None`.");const n=e[t],s=this.kernelSize.concat([this.filters,n]);this.kernel=this.addWeight("kernel",s,"float32",this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.filters],"float32",this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint)),this.inputSpec=[new Hy({ndim:5,axes:{[t]:n}})],this.built=!0}call(e,t){return Qo((()=>{let t=Py(e);if(5!==t.shape.length)throw new ag(`Conv3DTranspose.call() expects input tensor to be rank-4, but received a tensor of rank-${t.shape.length}`);const n=t.shape,s=n[0];let r,a,i;"channelsFirst"===this.dataFormat?(i=2,r=3,a=4):(i=1,r=2,a=3);const o=n[i],l=n[r],u=n[a],c=this.kernelSize[0],h=this.kernelSize[1],p=this.kernelSize[2],d=this.strides[0],f=this.strides[1],m=this.strides[2],g=[s,Ev(o,d,c,this.padding),Ev(l,f,h,this.padding),Ev(u,m,p,this.padding),this.filters];"channelsLast"!==this.dataFormat&&(t=Zi(t,[0,2,3,4,1]));let y=Wu(t,this.kernel.read(),g,this.strides,this.padding);return"channelsLast"!==this.dataFormat&&(y=Zi(y,[0,4,1,2,3])),null!==this.bias&&(y=py(y,this.bias.read(),this.dataFormat)),null!==this.activation&&(y=this.activation.apply(y)),y}))}computeOutputShape(e){const t=(e=By(e)).slice();let n,s,r,a;"channelsFirst"===this.dataFormat?(n=1,s=2,r=3,a=4):(n=4,s=1,r=2,a=3);const i=this.kernelSize[0],o=this.kernelSize[1],l=this.kernelSize[2],u=this.strides[0],c=this.strides[1],h=this.strides[2];return t[n]=this.filters,t[s]=Ev(t[s],u,i,this.padding),t[r]=Ev(t[r],c,o,this.padding),t[a]=Ev(t[a],h,l,this.padding),t}getConfig(){const e=super.getConfig();return delete e.dilationRate,e}}zv.className="Conv3DTranspose",Ro(zv);class Pv extends Dv{constructor(e,t){if(super(e,t),this.DEFAULT_DEPTHWISE_INITIALIZER="glorotUniform",this.DEFAULT_POINTWISE_INITIALIZER="glorotUniform",this.depthwiseKernel=null,this.pointwiseKernel=null,null==t.filters)throw new ag("The `filters` configuration field is required by SeparableConv, but is unspecified.");if(null!=t.kernelInitializer||null!=t.kernelRegularizer||null!=t.kernelConstraint)throw new ag("Fields kernelInitializer, kernelRegularizer and kernelConstraint are invalid for SeparableConv2D. Use depthwiseInitializer, depthwiseRegularizer, depthwiseConstraint, pointwiseInitializer, pointwiseRegularizer and pointwiseConstraint instead.");if(null!=t.padding&&"same"!==t.padding&&"valid"!==t.padding)throw new ag(`SeparableConv${this.rank}D supports only padding modes: 'same' and 'valid', but received ${JSON.stringify(t.padding)}`);this.depthMultiplier=null==t.depthMultiplier?1:t.depthMultiplier,this.depthwiseInitializer=My(t.depthwiseInitializer||this.DEFAULT_DEPTHWISE_INITIALIZER),this.depthwiseRegularizer=vv(t.depthwiseRegularizer),this.depthwiseConstraint=gb(t.depthwiseConstraint),this.pointwiseInitializer=My(t.depthwiseInitializer||this.DEFAULT_POINTWISE_INITIALIZER),this.pointwiseRegularizer=vv(t.pointwiseRegularizer),this.pointwiseConstraint=gb(t.pointwiseConstraint)}build(e){if((e=By(e)).length<this.rank+2)throw new ag(`Inputs to SeparableConv${this.rank}D should have rank ${this.rank+2}, but received input shape: ${JSON.stringify(e)}`);const t="channelsFirst"===this.dataFormat?1:e.length-1;if(null==e[t]||e[t]<0)throw new ag(`The channel dimension of the inputs should be defined, but found ${JSON.stringify(e[t])}`);const n=e[t],s=this.kernelSize.concat([n,this.depthMultiplier]),r=[];for(let e=0;e<this.rank;++e)r.push(1);r.push(n*this.depthMultiplier,this.filters);const a=!0;this.depthwiseKernel=this.addWeight("depthwise_kernel",s,"float32",this.depthwiseInitializer,this.depthwiseRegularizer,a,this.depthwiseConstraint),this.pointwiseKernel=this.addWeight("pointwise_kernel",r,"float32",this.pointwiseInitializer,this.pointwiseRegularizer,a,this.pointwiseConstraint),this.useBias?this.bias=this.addWeight("bias",[this.filters],"float32",this.biasInitializer,this.biasRegularizer,a,this.biasConstraint):this.bias=null,this.inputSpec=[new Hy({ndim:this.rank+2,axes:{[t]:n}})],this.built=!0}call(e,t){return Qo((()=>{let t;if(e=Py(e),1===this.rank)throw new ig("1D separable convolution is not implemented yet.");return 2===this.rank&&("channelsFirst"===this.dataFormat&&(e=Zi(e,[0,2,3,1])),t=Vh(e,this.depthwiseKernel.read(),this.pointwiseKernel.read(),this.strides,this.padding,this.dilationRate,"NHWC")),this.useBias&&(t=py(t,this.bias.read(),this.dataFormat)),null!=this.activation&&(t=this.activation.apply(t)),"channelsFirst"===this.dataFormat&&(t=Zi(t,[0,3,1,2])),t}))}getConfig(){const e=super.getConfig();return delete e.rank,delete e.kernelInitializer,delete e.kernelRegularizer,delete e.kernelConstraint,e.depthwiseInitializer=Oy(this.depthwiseInitializer),e.pointwiseInitializer=Oy(this.pointwiseInitializer),e.depthwiseRegularizer=bv(this.depthwiseRegularizer),e.pointwiseRegularizer=bv(this.pointwiseRegularizer),e.depthwiseConstraint=fb(this.depthwiseConstraint),e.pointwiseConstraint=fb(this.pointwiseConstraint),e}}Pv.className="SeparableConv";class Bv extends Pv{constructor(e){super(2,e)}}Bv.className="SeparableConv2D",Ro(Bv);class Wv extends Dv{constructor(e){super(1,e),Wv.verifyArgs(e),this.inputSpec=[{ndim:3}]}getConfig(){const e=super.getConfig();return delete e.rank,delete e.dataFormat,e}static verifyArgs(e){if("number"!=typeof e.kernelSize&&!Sg(e.kernelSize,"number",1,1))throw new ag(`Conv1D expects config.kernelSize to be number or number[] with length 1, but received ${JSON.stringify(e.kernelSize)}.`)}}Wv.className="Conv1D",Ro(Wv);class Vv extends Yy{constructor(e){super(e),"number"==typeof e.cropping?this.cropping=[[e.cropping,e.cropping],[e.cropping,e.cropping]]:"number"==typeof e.cropping[0]?this.cropping=[[e.cropping[0],e.cropping[0]],[e.cropping[1],e.cropping[1]]]:this.cropping=e.cropping,this.dataFormat=void 0===e.dataFormat?"channelsLast":e.dataFormat,this.inputSpec=[{ndim:4}]}computeOutputShape(e){return"channelsFirst"===this.dataFormat?[e[0],e[1],e[2]-this.cropping[0][0]-this.cropping[0][1],e[3]-this.cropping[1][0]-this.cropping[1][1]]:[e[0],e[1]-this.cropping[0][0]-this.cropping[0][1],e[2]-this.cropping[1][0]-this.cropping[1][1],e[3]]}call(e,t){return Qo((()=>{if(e=Py(e),"channelsLast"===this.dataFormat){const t=sy(e,this.cropping[0][0],e.shape[1]-this.cropping[0][0]-this.cropping[0][1],2);return sy(t,this.cropping[1][0],e.shape[2]-this.cropping[1][1]-this.cropping[1][0],3)}{const t=sy(e,this.cropping[0][0],e.shape[2]-this.cropping[0][0]-this.cropping[0][1],3);return sy(t,this.cropping[1][0],e.shape[3]-this.cropping[1][1]-this.cropping[1][0],4)}}))}getConfig(){const e={cropping:this.cropping,dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}}Vv.className="Cropping2D",Ro(Vv);class Uv extends Yy{constructor(e){var t;super(e),this.DEFAULT_SIZE=[2,2],this.inputSpec=[{ndim:4}],this.size=null==e.size?this.DEFAULT_SIZE:e.size,this.dataFormat=null==e.dataFormat?"channelsLast":e.dataFormat,zg(this.dataFormat),this.interpolation=null==e.interpolation?"nearest":e.interpolation,t=this.interpolation,Ig(Fg,"InterpolationFormat",t)}computeOutputShape(e){if("channelsFirst"===this.dataFormat){const t=null==e[2]?null:this.size[0]*e[2],n=null==e[3]?null:this.size[1]*e[3];return[e[0],e[1],t,n]}{const t=null==e[1]?null:this.size[0]*e[1],n=null==e[2]?null:this.size[1]*e[2];return[e[0],t,n,e[3]]}}call(e,t){return Qo((()=>{let t=Py(e);const n=t.shape;if("channelsFirst"===this.dataFormat){t=Zi(t,[0,2,3,1]);const e=this.size[0]*n[2],s=this.size[1]*n[3],r="nearest"===this.interpolation?Md.resizeNearestNeighbor(t,[e,s]):Md.resizeBilinear(t,[e,s]);return Zi(r,[0,3,1,2])}{const e=this.size[0]*n[1],s=this.size[1]*n[2];return"nearest"===this.interpolation?Md.resizeNearestNeighbor(t,[e,s]):Md.resizeBilinear(t,[e,s])}}))}getConfig(){const e={size:this.size,dataFormat:this.dataFormat,interpolation:this.interpolation},t=super.getConfig();return Object.assign(e,t),e}}Uv.className="UpSampling2D",Ro(Uv);class Gv extends Fv{constructor(e){super(2,e),this.depthwiseKernel=null,this.depthMultiplier=null==e.depthMultiplier?1:e.depthMultiplier,this.depthwiseInitializer=My(e.depthwiseInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.depthwiseConstraint=gb(e.depthwiseConstraint),this.depthwiseRegularizer=vv(e.depthwiseRegularizer)}build(e){if((e=By(e)).length<4)throw new ag(`Inputs to DepthwiseConv2D should have rank 4. Received input shape: ${JSON.stringify(e)}.`);const t="channelsFirst"===this.dataFormat?1:3;if(null==e[t]||e[t]<0)throw new ag(`The channel dimension of the inputs to DepthwiseConv2D should be defined, but is not (${e[t]}).`);const n=e[t],s=[this.kernelSize[0],this.kernelSize[1],n,this.depthMultiplier];this.depthwiseKernel=this.addWeight("depthwise_kernel",s,null,this.depthwiseInitializer,this.depthwiseRegularizer,!0,this.depthwiseConstraint),this.useBias?this.bias=this.addWeight("bias",[n*this.depthMultiplier],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint):this.bias=null,this.built=!0}call(e,t){return Qo((()=>{let t=function(e,t,n=[1,1],s="valid",r,a){return Qo((()=>{null==r&&(r="channelsLast"),zg(r);let i=Av(e,r);if(4!==e.rank)throw new ag(`Input for depthwiseConv2d is required to be 4-D, but is instead ${e.rank}-D`);if(4!==t.rank)throw new ag(`depthwiseKernel is required to be 4-D, but is instead ${t.rank}-D`);return i=Ku(i,t,n,"same"===s?"same":"valid","NHWC",a),"channelsFirst"===r&&(i=Zi(i,[0,3,1,2])),i}))}(e=Py(e),this.depthwiseKernel.read(),this.strides,this.padding,this.dataFormat,null);return this.useBias&&(t=py(t,this.bias.read(),this.dataFormat)),null!=this.activation&&(t=this.activation.apply(t)),t}))}computeOutputShape(e){e=By(e);const t="channelsFirst"===this.dataFormat?e[2]:e[1],n="channelsFirst"===this.dataFormat?e[3]:e[2],s="channelsFirst"===this.dataFormat?e[1]*this.depthMultiplier:e[3]*this.depthMultiplier,r=$v(t,this.kernelSize[0],this.padding,this.strides[0]),a=$v(n,this.kernelSize[1],this.padding,this.strides[1]);return"channelsFirst"===this.dataFormat?[e[0],s,r,a]:[e[0],r,a,s]}getConfig(){const e=super.getConfig();return e.depthMultiplier=this.depthMultiplier,e.depthwiseInitializer=Oy(this.depthwiseInitializer),e.depthwiseRegularizer=bv(this.depthwiseRegularizer),e.depthwiseConstraint=fb(this.depthwiseRegularizer),e}}function Hv(e,t,n,s){if(Array.isArray(e)){if(null!=t||null!=n)throw new ag("When inputs is an array, neither initialState or constants should be provided");null!=s&&(n=e.slice(e.length-s,e.length),e=e.slice(0,e.length-s)),e.length>1&&(t=e.slice(1,e.length)),e=e[0]}function r(e){return null==e||Array.isArray(e)?e:[e]}return{inputs:e,initialState:t=r(t),constants:n=r(n)}}function jv(e,t,n,s=!1,r,a,i=!1,o=!1){return Qo((()=>{const l=t.shape.length;if(l<3)throw new ag(`Input should be at least 3D, but is ${l}D.`);const u=[1,0].concat(Yg(2,l));if(t=Zi(t,u),null!=a)throw new ig("The rnn() functoin of the deeplearn.js backend does not support constants yet.");i&&console.warn("Backend rnn(): the unroll = true option is not applicable to the imperative deeplearn.js backend."),null!=r&&((r=Ei(Ei(r,"bool"),"float32")).rank===l-1&&(r=xc(r,-1)),r=Zi(r,u)),s&&(t=Dh(t,0),null!=r&&(r=Dh(r,0)));const c=[];let h,p=n;const d=t.shape[0],f=bp(t);let m,g;null!=r&&(m=bp(r));for(let t=0;t<d;++t){const n=f[t],s=Qo((()=>e(n,p)));if(null==r)h=s[0],p=s[1];else{const e=Qo((()=>{const e=m[t],n=Rl(ch(e),e);return{output:pl(ml(s[0],e),ml(p[0],n)),newStates:p.map(((t,r)=>pl(ml(s[1][r],e),ml(t,n))))}}));h=e.output,p=e.newStates}o&&c.push(h)}return o&&(g=ap(c,1)),[h,g,p]}))}Gv.className="DepthwiseConv2D",Ro(Gv);class qv extends Yy{constructor(e){let t;if(super(e),null==e.cell)throw new ag("cell property is missing for the constructor of RNN.");if(t=Array.isArray(e.cell)?new tw({cells:e.cell}):e.cell,null==t.stateSize)throw new ag("The RNN cell should have an attribute `stateSize` (tuple of integers, one integer per RNN state).");this.cell=t,this.returnSequences=null!=e.returnSequences&&e.returnSequences,this.returnState=null!=e.returnState&&e.returnState,this.goBackwards=null!=e.goBackwards&&e.goBackwards,this._stateful=null!=e.stateful&&e.stateful,this.unroll=null!=e.unroll&&e.unroll,this.supportsMasking=!0,this.inputSpec=[new Hy({ndim:3})],this.stateSpec=null,this.states_=null,this.numConstants=null,this.keptStates=[]}getStates(){return null==this.states_?Yg(0,Array.isArray(this.cell.stateSize)?this.cell.stateSize.length:1).map((e=>null)):this.states_}setStates(e){this.states_=e}computeOutputShape(e){Ly(e)&&(e=e[0]);let t=this.cell.stateSize;Array.isArray(t)||(t=[t]);const n=t[0];let s;if(s=this.returnSequences?[e[0],e[1],n]:[e[0],n],this.returnState){const n=[];for(const s of t)n.push([e[0],s]);return[s].concat(n)}return s}computeMask(e,t){return Qo((()=>{Array.isArray(t)&&(t=t[0]);const e=this.returnSequences?t:null;if(this.returnState){const t=this.states.map((e=>null));return[e].concat(t)}return e}))}get states(){if(null==this.states_){const e=Array.isArray(this.cell.stateSize)?this.cell.stateSize.length:1,t=[];for(let n=0;n<e;++n)t.push(null);return t}return this.states_}set states(e){this.states_=e}build(e){if(null!=this.numConstants)throw new ig("Constants support is not implemented in RNN yet.");Ly(e)&&(e=e[0]);const t=this.stateful?e[0]:null,n=e.slice(2);this.inputSpec[0]=new Hy({shape:[t,null,...n]});const s=[e[0]].concat(e.slice(2));let r;if(this.cell.build(s),r=Array.isArray(this.cell.stateSize)?this.cell.stateSize:[this.cell.stateSize],null!=this.stateSpec){if(!ue(this.stateSpec.map((e=>e.shape[e.shape.length-1])),r))throw new ag(`An initialState was passed that is not compatible with cell.stateSize. Received stateSpec=${this.stateSpec}; However cell.stateSize is ${this.cell.stateSize}`)}else this.stateSpec=r.map((e=>new Hy({shape:[null,e]})));this.stateful&&this.resetStates()}resetStates(e,t=!1){Qo((()=>{if(!this.stateful)throw new sg("Cannot call resetStates() on an RNN Layer that is not stateful.");const n=this.inputSpec[0].shape[0];if(null==n)throw new ag("If an RNN is stateful, it needs to know its batch size. Specify the batch size of your input tensors: \n- If using a Sequential model, specify the batch size by passing a `batchInputShape` option to your first layer.\n- If using the functional API, specify the batch size by passing a `batchShape` option to your Input layer.");if(null==this.states_)Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map((e=>eh([n,e]))):this.states_=[eh([n,this.cell.stateSize])];else if(null==e)el(this.states_),null!=this.keptStates&&(el(this.keptStates),this.keptStates=[]),Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map((e=>eh([n,e]))):this.states_[0]=eh([n,this.cell.stateSize]);else{if(Array.isArray(e)||(e=[e]),e.length!==this.states_.length)throw new ag(`Layer ${this.name} expects ${this.states_.length} state(s), but it received ${e.length} state value(s). Input received: ${e}`);!0===t?this.keptStates.push(this.states_.slice()):el(this.states_);for(let t=0;t<this.states_.length;++t){const s=e[t],r=Array.isArray(this.cell.stateSize)?this.cell.stateSize[t]:this.cell.stateSize,a=[n,r];if(!ue(s.shape,a))throw new ag(`State ${t} is incompatible with layer ${this.name}: expected shape=${a}, received shape=${s.shape}`);this.states_[t]=s}}this.states_=this.states_.map((e=>tl(e.clone())))}))}apply(e,t){let n=null==t?null:t.initialState,s=null==t?null:t.constants;null==t&&(t={});const r=Hv(e,n,s,this.numConstants);e=r.inputs,n=r.initialState,s=r.constants;let a=[],i=[];if(null!=n){t.initialState=n,a=a.concat(n),this.stateSpec=[];for(const e of n)this.stateSpec.push(new Hy({shape:e.shape}));i=i.concat(this.stateSpec)}if(null!=s&&(t.constants=s,a=a.concat(s),this.numConstants=s.length),a[0]instanceof jy){const n=[e].concat(a),s=this.inputSpec.concat(i),r=this.inputSpec;this.inputSpec=s;const o=super.apply(n,t);return this.inputSpec=r,o}return super.apply(e,t)}call(e,t){return Qo((()=>{const n=null==t?null:t.mask,s=null==t?null:t.training;let r=null==t?null:t.initialState;e=Py(e),null==r&&(r=this.stateful?this.states_:this.getInitialState(e));const a=Array.isArray(this.cell.stateSize)?this.cell.stateSize.length:1;if(r.length!==a)throw new ag(`RNN Layer has ${a} state(s) but was passed ${r.length} initial state(s).`);this.unroll&&console.warn("Ignoring unroll = true for RNN layer, due to imperative backend.");const i={training:s},o=jv(((e,t)=>{const n=this.cell.call([e].concat(t),i);return[n[0],n.slice(1)]}),e,r,this.goBackwards,n,null,this.unroll,this.returnSequences),l=o[0],u=o[1],c=o[2];this.stateful&&this.resetStates(c,s);const h=this.returnSequences?u:l;return this.returnState?[h].concat(c):h}))}getInitialState(e){return Qo((()=>{let t=eh(e.shape);return t=fc(t,[1,2]),t=ey(t),Array.isArray(this.cell.stateSize)?this.cell.stateSize.map((e=>e>1?iy(t,[1,e]):t)):this.cell.stateSize>1?[iy(t,[1,this.cell.stateSize])]:[t]}))}get trainableWeights(){return this.trainable?this.cell.trainableWeights:[]}get nonTrainableWeights(){return this.trainable?this.cell.nonTrainableWeights:this.cell.weights}setFastWeightInitDuringBuild(e){super.setFastWeightInitDuringBuild(e),null!=this.cell&&this.cell.setFastWeightInitDuringBuild(e)}getConfig(){const e=super.getConfig(),t={returnSequences:this.returnSequences,returnState:this.returnState,goBackwards:this.goBackwards,stateful:this.stateful,unroll:this.unroll};null!=this.numConstants&&(t.numConstants=this.numConstants);const n=this.cell.getConfig();return this.getClassName()===qv.className&&(t.cell={className:this.cell.getClassName(),config:n}),Object.assign({},n,e,t)}static fromConfig(e,t,n={}){const s=qb(t.cell,n);return new e(Object.assign(t,{cell:s}))}}qv.className="RNN",Ro(qv);class Kv extends Yy{}class Xv extends Kv{constructor(e){super(e),this.DEFAULT_ACTIVATION="tanh",this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_RECURRENT_INITIALIZER="orthogonal",this.DEFAULT_BIAS_INITIALIZER="zeros",this.units=e.units,Ng(this.units,"units"),this.activation=dv(null==e.activation?this.DEFAULT_ACTIVATION:e.activation),this.useBias=null==e.useBias||e.useBias,this.kernelInitializer=My(e.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.recurrentInitializer=My(e.recurrentInitializer||this.DEFAULT_RECURRENT_INITIALIZER),this.biasInitializer=My(e.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.kernelRegularizer=vv(e.kernelRegularizer),this.recurrentRegularizer=vv(e.recurrentRegularizer),this.biasRegularizer=vv(e.biasRegularizer),this.kernelConstraint=gb(e.kernelConstraint),this.recurrentConstraint=gb(e.recurrentConstraint),this.biasConstraint=gb(e.biasConstraint),this.dropout=Kg([1,Xg([0,null==e.dropout?0:e.dropout])]),this.recurrentDropout=Kg([1,Xg([0,null==e.recurrentDropout?0:e.recurrentDropout])]),this.dropoutFunc=e.dropoutFunc,this.stateSize=this.units,this.dropoutMask=null,this.recurrentDropoutMask=null}build(e){e=By(e),this.kernel=this.addWeight("kernel",[e[e.length-1],this.units],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.recurrentKernel=this.addWeight("recurrent_kernel",[this.units,this.units],null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias?this.bias=this.addWeight("bias",[this.units],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint):this.bias=null,this.built=!0}call(e,t){return Qo((()=>{if(2!==e.length)throw new ag(`SimpleRNNCell expects 2 input Tensors, got ${e.length}.`);let n=e[1];e=e[0];const s=null!=t.training&&t.training;let r;0<this.dropout&&this.dropout<1&&null==this.dropoutMask&&(this.dropoutMask=nw({ones:()=>ch(e),rate:this.dropout,training:s,dropoutFunc:this.dropoutFunc})),0<this.recurrentDropout&&this.recurrentDropout<1&&null==this.recurrentDropoutMask&&(this.recurrentDropoutMask=nw({ones:()=>ch(n),rate:this.recurrentDropout,training:s,dropoutFunc:this.dropoutFunc}));const a=this.dropoutMask,i=this.recurrentDropoutMask;r=ly(null!=a?ml(e,a):e,this.kernel.read()),null!=this.bias&&(r=py(r,this.bias.read())),null!=i&&(n=ml(n,i));let o=pl(r,ly(n,this.recurrentKernel.read()));return null!=this.activation&&(o=this.activation.apply(o)),[o,o]}))}getConfig(){const e=super.getConfig(),t={units:this.units,activation:hv(this.activation),useBias:this.useBias,kernelInitializer:Oy(this.kernelInitializer),recurrentInitializer:Oy(this.recurrentInitializer),biasInitializer:Oy(this.biasInitializer),kernelRegularizer:bv(this.kernelRegularizer),recurrentRegularizer:bv(this.recurrentRegularizer),biasRegularizer:bv(this.biasRegularizer),activityRegularizer:bv(this.activityRegularizer),kernelConstraint:fb(this.kernelConstraint),recurrentConstraint:fb(this.recurrentConstraint),biasConstraint:fb(this.biasConstraint),dropout:this.dropout,recurrentDropout:this.recurrentDropout};return Object.assign({},e,t)}}Xv.className="SimpleRNNCell",Ro(Xv);class Yv extends qv{constructor(e){e.cell=new Xv(e),super(e)}call(e,t){return Qo((()=>{null!=this.cell.dropoutMask&&(el(this.cell.dropoutMask),this.cell.dropoutMask=null),null!=this.cell.recurrentDropoutMask&&(el(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null);const n=null==t?null:t.mask,s=null==t?null:t.training,r=null==t?null:t.initialState;return super.call(e,{mask:n,training:s,initialState:r})}))}static fromConfig(e,t){return new e(t)}}Yv.className="SimpleRNN",Ro(Yv);class Zv extends Kv{constructor(e){if(super(e),this.DEFAULT_ACTIVATION="tanh",this.DEFAULT_RECURRENT_ACTIVATION="hardSigmoid",this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_RECURRENT_INITIALIZER="orthogonal",this.DEFAULT_BIAS_INITIALIZER="zeros",e.resetAfter)throw new ag("GRUCell does not support reset_after parameter set to true.");this.units=e.units,Ng(this.units,"units"),this.activation=dv(void 0===e.activation?this.DEFAULT_ACTIVATION:e.activation),this.recurrentActivation=dv(void 0===e.recurrentActivation?this.DEFAULT_RECURRENT_ACTIVATION:e.recurrentActivation),this.useBias=null==e.useBias||e.useBias,this.kernelInitializer=My(e.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.recurrentInitializer=My(e.recurrentInitializer||this.DEFAULT_RECURRENT_INITIALIZER),this.biasInitializer=My(e.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.kernelRegularizer=vv(e.kernelRegularizer),this.recurrentRegularizer=vv(e.recurrentRegularizer),this.biasRegularizer=vv(e.biasRegularizer),this.kernelConstraint=gb(e.kernelConstraint),this.recurrentConstraint=gb(e.recurrentConstraint),this.biasConstraint=gb(e.biasConstraint),this.dropout=Kg([1,Xg([0,null==e.dropout?0:e.dropout])]),this.recurrentDropout=Kg([1,Xg([0,null==e.recurrentDropout?0:e.recurrentDropout])]),this.dropoutFunc=e.dropoutFunc,this.implementation=e.implementation,this.stateSize=this.units,this.dropoutMask=null,this.recurrentDropoutMask=null}build(e){const t=(e=By(e))[e.length-1];this.kernel=this.addWeight("kernel",[t,3*this.units],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.recurrentKernel=this.addWeight("recurrent_kernel",[this.units,3*this.units],null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias?this.bias=this.addWeight("bias",[3*this.units],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint):this.bias=null,this.built=!0}call(e,t){return Qo((()=>{if(2!==e.length)throw new ag(`GRUCell expects 2 input Tensors (inputs, h, c), got ${e.length}.`);const n=null!=t.training&&t.training;let s=e[1];e=e[0],0<this.dropout&&this.dropout<1&&null==this.dropoutMask&&(this.dropoutMask=nw({ones:()=>ch(e),rate:this.dropout,training:n,count:3,dropoutFunc:this.dropoutFunc})),0<this.recurrentDropout&&this.recurrentDropout<1&&null==this.recurrentDropoutMask&&(this.recurrentDropoutMask=nw({ones:()=>ch(s),rate:this.recurrentDropout,training:n,count:3,dropoutFunc:this.dropoutFunc}));const r=this.dropoutMask,a=this.recurrentDropoutMask;let i,o,l;0<this.dropout&&this.dropout<1&&(e=ml(e,r[0]));let u=ly(e,this.kernel.read());this.useBias&&(u=py(u,this.bias.read())),0<this.recurrentDropout&&this.recurrentDropout<1&&(s=ml(s,a[0]));const c=this.recurrentKernel.read(),[h,p]=tp(c,[2*this.units,this.units],c.rank-1),d=ly(s,h),[f,m,g]=tp(u,3,u.rank-1),[y,b]=tp(d,2,d.rank-1);i=this.recurrentActivation.apply(pl(f,y)),o=this.recurrentActivation.apply(pl(m,b));const x=ly(ml(o,s),p);l=this.activation.apply(pl(g,x));const v=pl(ml(i,s),ml(pl(1,zc(i)),l));return[v,v]}))}getConfig(){const e=super.getConfig(),t={units:this.units,activation:hv(this.activation),recurrentActivation:hv(this.recurrentActivation),useBias:this.useBias,kernelInitializer:Oy(this.kernelInitializer),recurrentInitializer:Oy(this.recurrentInitializer),biasInitializer:Oy(this.biasInitializer),kernelRegularizer:bv(this.kernelRegularizer),recurrentRegularizer:bv(this.recurrentRegularizer),biasRegularizer:bv(this.biasRegularizer),activityRegularizer:bv(this.activityRegularizer),kernelConstraint:fb(this.kernelConstraint),recurrentConstraint:fb(this.recurrentConstraint),biasConstraint:fb(this.biasConstraint),dropout:this.dropout,recurrentDropout:this.recurrentDropout,implementation:this.implementation,resetAfter:!1};return Object.assign({},e,t)}}Zv.className="GRUCell",Ro(Zv);class Jv extends qv{constructor(e){0===e.implementation&&console.warn("`implementation=0` has been deprecated, and now defaults to `implementation=1`. Please update your layer call."),e.cell=new Zv(e),super(e)}call(e,t){return Qo((()=>{null!=this.cell.dropoutMask&&(el(this.cell.dropoutMask),this.cell.dropoutMask=null),null!=this.cell.recurrentDropoutMask&&(el(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null);const n=null==t?null:t.mask,s=null==t?null:t.training,r=null==t?null:t.initialState;return super.call(e,{mask:n,training:s,initialState:r})}))}static fromConfig(e,t){return 0===t.implmentation&&(t.implementation=1),new e(t)}}Jv.className="GRU",Ro(Jv);class Qv extends Kv{constructor(e){super(e),this.DEFAULT_ACTIVATION="tanh",this.DEFAULT_RECURRENT_ACTIVATION="hardSigmoid",this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_RECURRENT_INITIALIZER="orthogonal",this.DEFAULT_BIAS_INITIALIZER="zeros",this.units=e.units,Ng(this.units,"units"),this.activation=dv(void 0===e.activation?this.DEFAULT_ACTIVATION:e.activation),this.recurrentActivation=dv(void 0===e.recurrentActivation?this.DEFAULT_RECURRENT_ACTIVATION:e.recurrentActivation),this.useBias=null==e.useBias||e.useBias,this.kernelInitializer=My(e.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.recurrentInitializer=My(e.recurrentInitializer||this.DEFAULT_RECURRENT_INITIALIZER),this.biasInitializer=My(e.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.unitForgetBias=e.unitForgetBias,this.kernelRegularizer=vv(e.kernelRegularizer),this.recurrentRegularizer=vv(e.recurrentRegularizer),this.biasRegularizer=vv(e.biasRegularizer),this.kernelConstraint=gb(e.kernelConstraint),this.recurrentConstraint=gb(e.recurrentConstraint),this.biasConstraint=gb(e.biasConstraint),this.dropout=Kg([1,Xg([0,null==e.dropout?0:e.dropout])]),this.recurrentDropout=Kg([1,Xg([0,null==e.recurrentDropout?0:e.recurrentDropout])]),this.dropoutFunc=e.dropoutFunc,this.implementation=e.implementation,this.stateSize=[this.units,this.units],this.dropoutMask=null,this.recurrentDropoutMask=null}build(e){var t;const n=(e=By(e))[e.length-1];let s;if(this.kernel=this.addWeight("kernel",[n,4*this.units],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.recurrentKernel=this.addWeight("recurrent_kernel",[this.units,4*this.units],null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias){if(this.unitForgetBias){const e=this.biasInitializer,n=this.units;s=new((t=class extends yy{apply(t,s){const r=e.apply([n]),a=(new xy).apply([n]),i=e.apply([2*n]);return ay(ay(r,a),i)}}).className="CustomInit",t)}else s=this.biasInitializer;this.bias=this.addWeight("bias",[4*this.units],null,s,this.biasRegularizer,!0,this.biasConstraint)}else this.bias=null;this.built=!0}call(e,t){return Qo((()=>{const n=null!=t.training&&t.training;if(3!==e.length)throw new ag(`LSTMCell expects 3 input Tensors (inputs, h, c), got ${e.length}.`);let s=e[1];const r=e[2];e=e[0],0<this.dropout&&this.dropout<1&&null==this.dropoutMask&&(this.dropoutMask=nw({ones:()=>ch(e),rate:this.dropout,training:n,count:4,dropoutFunc:this.dropoutFunc})),0<this.recurrentDropout&&this.recurrentDropout<1&&null==this.recurrentDropoutMask&&(this.recurrentDropoutMask=nw({ones:()=>ch(s),rate:this.recurrentDropout,training:n,count:4,dropoutFunc:this.dropoutFunc}));const a=this.dropoutMask,i=this.recurrentDropoutMask;let o,l,u,c;0<this.dropout&&this.dropout<1&&(e=ml(e,a[0]));let h=ly(e,this.kernel.read());0<this.recurrentDropout&&this.recurrentDropout<1&&(s=ml(s,i[0])),h=pl(h,ly(s,this.recurrentKernel.read())),this.useBias&&(h=py(h,this.bias.read()));const[p,d,f,m]=tp(h,4,h.rank-1);o=this.recurrentActivation.apply(p),l=this.recurrentActivation.apply(d),u=pl(ml(l,r),ml(o,this.activation.apply(f))),c=this.recurrentActivation.apply(m);const g=ml(c,this.activation.apply(u));return[g,g,u]}))}getConfig(){const e=super.getConfig(),t={units:this.units,activation:hv(this.activation),recurrentActivation:hv(this.recurrentActivation),useBias:this.useBias,kernelInitializer:Oy(this.kernelInitializer),recurrentInitializer:Oy(this.recurrentInitializer),biasInitializer:Oy(this.biasInitializer),unitForgetBias:this.unitForgetBias,kernelRegularizer:bv(this.kernelRegularizer),recurrentRegularizer:bv(this.recurrentRegularizer),biasRegularizer:bv(this.biasRegularizer),activityRegularizer:bv(this.activityRegularizer),kernelConstraint:fb(this.kernelConstraint),recurrentConstraint:fb(this.recurrentConstraint),biasConstraint:fb(this.biasConstraint),dropout:this.dropout,recurrentDropout:this.recurrentDropout,implementation:this.implementation};return Object.assign({},e,t)}}Qv.className="LSTMCell",Ro(Qv);class ew extends qv{constructor(e){0===e.implementation&&console.warn("`implementation=0` has been deprecated, and now defaults to `implementation=1`. Please update your layer call."),e.cell=new Qv(e),super(e)}call(e,t){return Qo((()=>{null!=this.cell.dropoutMask&&(el(this.cell.dropoutMask),this.cell.dropoutMask=null),null!=this.cell.recurrentDropoutMask&&(el(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null);const n=null==t?null:t.mask,s=null==t?null:t.training,r=null==t?null:t.initialState;return super.call(e,{mask:n,training:s,initialState:r})}))}static fromConfig(e,t){return 0===t.implmentation&&(t.implementation=1),new e(t)}}ew.className="LSTM",Ro(ew);class tw extends Kv{constructor(e){super(e),this.cells=e.cells}get stateSize(){const e=[];for(const t of this.cells.slice().reverse())Array.isArray(t.stateSize)?e.push(...t.stateSize):e.push(t.stateSize);return e}call(e,t){return Qo((()=>{let n=e.slice(1);const s=[];for(const e of this.cells.slice().reverse())Array.isArray(e.stateSize)?s.push(n.splice(0,e.stateSize.length)):s.push(n.splice(0,1));s.reverse();const r=[];let a;for(let i=0;i<this.cells.length;++i){const o=this.cells[i];n=s[i],a=0===i?[e[0]].concat(n):[a[0]].concat(n),a=o.call(a,t),r.push(a.slice(1))}n=[];for(const e of r.slice().reverse())n.push(...e);return[a[0]].concat(n)}))}build(e){let t;Ly(e)&&(e=e[0]),this.cells.forEach(((n,s)=>{Vg(`RNNCell_${s}`,(()=>{n.build(e),t=Array.isArray(n.stateSize)?n.stateSize[0]:n.stateSize,e=[e[0],t]}))})),this.built=!0}getConfig(){const e=super.getConfig(),t={cells:this.cells.map((e=>({className:e.getClassName(),config:e.getConfig()})))};return Object.assign({},e,t)}static fromConfig(e,t,n={}){const s=[];for(const e of t.cells)s.push(qb(e,n));return new e({cells:s})}get trainableWeights(){if(!this.trainable)return[];const e=[];for(const t of this.cells)e.push(...t.trainableWeights);return e}get nonTrainableWeights(){const e=[];for(const t of this.cells)e.push(...t.nonTrainableWeights);if(!this.trainable){const t=[];for(const e of this.cells)t.push(...e.trainableWeights);return t.concat(e)}return e}getWeights(){const e=[];for(const t of this.cells)e.push(...t.weights);return Uy(e)}setWeights(e){const t=[];for(const n of this.cells){const s=n.weights.length,r=e.splice(s);for(let e=0;e<n.weights.length;++e)t.push([n.weights[e],r[e]])}Gy(t)}}function nw(e){const{ones:t,rate:n,training:s=!1,count:r=1,dropoutFunc:a}=e,i=()=>null!=a?a(t(),n):dy(t(),n),o=()=>fy(i,t,s);return!r||r<=1?tl(o().clone()):Array(r).fill(void 0).map(o).map((e=>tl(e.clone())))}tw.className="StackedRNNCells",Ro(tw);class sw extends qv{constructor(e){if(e.unroll)throw new ig("Unrolling is not possible with convolutional RNNs.");if(Array.isArray(e.cell))throw new ig("It is not possible at the moment to stack convolutional cells.");super(e),this.inputSpec=[new Hy({ndim:5})]}call(e,t){return Qo((()=>{if(null!=this.cell.dropoutMask&&(el(this.cell.dropoutMask),this.cell.dropoutMask=null),null!=this.cell.recurrentDropoutMask&&(el(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null),t&&t.constants)throw new ag("ConvRNN2D cell does not support constants");const n=null==t?null:t.mask,s=null==t?null:t.training,r=null==t?null:t.initialState;return super.call(e,{mask:n,training:s,initialState:r})}))}computeOutputShape(e){let t=this.computeSingleOutputShape(e);return this.returnSequences||(t=[t[0],...t.slice(2)]),this.returnState&&(t=[t,...Array(2).fill([e[0],...t.slice(-3)])]),t}getInitialState(e){return Qo((()=>{const{stateSize:t}=this.cell,n=e.shape,s=this.computeSingleOutputShape(n),r=eh([s[0],...s.slice(2)]);return Array.isArray(t)?Array(t.length).fill(r):[r]}))}resetStates(e,t=!1){Qo((()=>{if(!this.stateful)throw new sg("Cannot call resetStates() on an RNN Layer that is not stateful.");const n=this.inputSpec[0].shape,s=this.computeSingleOutputShape(n),r=[s[0],...s.slice(2)];if(null==n[0])throw new ag("If an RNN is stateful, it needs to know its batch size. Specify the batch size of your input tensors: \n- If using a Sequential model, specify the batch size by passing a `batchInputShape` option to your first layer.\n- If using the functional API, specify the batch size by passing a `batchShape` option to your Input layer.");if(null==this.getStates())Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map((()=>eh(r))):this.states_=[eh(r)];else if(null==e)el(this.states_),null!=this.keptStates&&(el(this.keptStates),this.keptStates=[]),Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map((()=>eh(r))):this.states_[0]=eh(r);else{if(Array.isArray(e)||(e=[e]),e.length!==this.states_.length)throw new ag(`Layer ${this.name} expects ${this.states_.length} state(s), but it received ${e.length} state value(s). Input received: ${e}`);t?this.keptStates.push(this.states_.slice()):el(this.states_);for(let t=0;t<this.states_.length;++t){const n=e[t],s=r;if(!ue(n.shape,s))throw new ag(`State ${t} is incompatible with layer ${this.name}: expected shape=${s}, received shape=${n.shape}`);this.states_[t]=n}}this.states_=this.states_.map((e=>tl(e.clone())))}))}computeSingleOutputShape(e){const{dataFormat:t,filters:n,kernelSize:s,padding:r,strides:a,dilationRate:i}=this.cell,o="channelsFirst"===t,l=e[o?3:2],u=e[o?4:3],c=$v(l,s[0],r,a[0],i[0]),h=$v(u,s[1],r,a[1],i[1]);return[...e.slice(0,2),...o?[n,c,h]:[c,h,n]]}}sw.className="ConvRNN2D";class rw extends Qv{constructor(e){const{filters:t,kernelSize:n,strides:s,padding:r,dataFormat:a,dilationRate:i}=e;super(Object.assign({},e,{units:t})),this.filters=t,Ng(this.filters,"filters"),this.kernelSize=Cv(n,2,"kernelSize"),this.kernelSize.forEach((e=>Ng(e,"kernelSize"))),this.strides=Cv(s||1,2,"strides"),this.strides.forEach((e=>Ng(e,"strides"))),this.padding=r||"valid",Pg(this.padding),this.dataFormat=a||"channelsLast",zg(this.dataFormat),this.dilationRate=Cv(i||1,2,"dilationRate"),this.dilationRate.forEach((e=>Ng(e,"dilationRate")))}build(e){var t;e=By(e);const n="channelsFirst"===this.dataFormat?1:e.length-1;if(null==e[n])throw new ag(`The channel dimension of the input should be defined. Found ${e[n]}`);const s=e[n],r=this.kernelSize.concat([s,4*this.filters]);this.kernel=this.addWeight("kernel",r,null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint);const a=this.kernelSize.concat([this.filters,4*this.filters]);if(this.recurrentKernel=this.addWeight("recurrent_kernel",a,null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias){let e;if(this.unitForgetBias){const n=this.biasInitializer,s=this.filters;e=new((t=class extends yy{apply(e,t){return ry([n.apply([s]),th([s]),n.apply([2*s])])}}).className="CustomInit",t)}else e=this.biasInitializer;this.bias=this.addWeight("bias",[4*this.filters],null,e,this.biasRegularizer,!0,this.biasConstraint)}this.built=!0}call(e,t){return Qo((()=>{if(3!==e.length)throw new ag(`ConvLSTM2DCell expects 3 input Tensors (inputs, h, c), got ${e.length}.`);const n=t.training||!1,s=e[0],r=e[1],a=e[2];0<this.dropout&&this.dropout<1&&null==this.dropoutMask&&(this.dropoutMask=nw({ones:()=>ch(s),rate:this.dropout,training:n,count:4,dropoutFunc:this.dropoutFunc}));const i=this.dropoutMask,o=(e,t,n)=>t&&t[n]?ml(t[n],e):e;let l=o(s,i,0),u=o(s,i,1),c=o(s,i,2),h=o(s,i,3);0<this.recurrentDropout&&this.recurrentDropout<1&&null==this.recurrentDropoutMask&&(this.recurrentDropoutMask=nw({ones:()=>ch(r),rate:this.recurrentDropout,training:n,count:4,dropoutFunc:this.dropoutFunc}));const p=this.recurrentDropoutMask;let d=o(r,p,0),f=o(r,p,1),m=o(r,p,2),g=o(r,p,3);const[y,b,x,v]=tp(this.kernel.read(),4,3),[w,k,I,S]=this.useBias?tp(this.bias.read(),4):[null,null,null,null];l=this.inputConv(l,y,w,this.padding),u=this.inputConv(u,b,k,this.padding),c=this.inputConv(c,x,I,this.padding),h=this.inputConv(h,v,S,this.padding);const[N,T,C,$]=tp(this.recurrentKernel.read(),4,3);d=this.recurrentConv(d,N),f=this.recurrentConv(f,T),m=this.recurrentConv(m,C),g=this.recurrentConv(g,$);const E=this.recurrentActivation.apply(pl(l,d)),A=this.recurrentActivation.apply(pl(u,f)),_=pl(ml(A,a),ml(E,this.activation.apply(pl(c,m)))),R=ml(this.recurrentActivation.apply(pl(h,g)),this.activation.apply(_));return[R,R,_]}))}getConfig(){const e=super.getConfig(),{units:t}=e,n=function(e,t){var n={};for(var s in e)Object.prototype.hasOwnProperty.call(e,s)&&t.indexOf(s)<0&&(n[s]=e[s]);if(null!=e&&"function"==typeof Object.getOwnPropertySymbols){var r=0;for(s=Object.getOwnPropertySymbols(e);r<s.length;r++)t.indexOf(s[r])<0&&Object.prototype.propertyIsEnumerable.call(e,s[r])&&(n[s[r]]=e[s[r]])}return n}(e,["units"]),s={filters:this.filters,kernelSize:this.kernelSize,padding:this.padding,dataFormat:this.dataFormat,dilationRate:this.dilationRate,strides:this.strides};return Object.assign({},n,s)}inputConv(e,t,n,s){const r=Ou(e,t,this.strides,s||"valid","channelsFirst"===this.dataFormat?"NCHW":"NHWC",this.dilationRate);return n?py(r,n,this.dataFormat):r}recurrentConv(e,t){return Ou(e,t,1,"same","channelsFirst"===this.dataFormat?"NCHW":"NHWC")}}rw.className="ConvLSTM2DCell",Ro(rw);class aw extends sw{constructor(e){const t=new rw(e);super(Object.assign({},e,{cell:t}))}static fromConfig(e,t){return new e(t)}}aw.className="ConvLSTM2D",Ro(aw);class iw extends Yy{constructor(e){super(e),this.rate=Math.max(Math.min(e.rate,1),0),this.noiseShape=e.noiseShape,this.seed=e.seed,this.supportsMasking=!0}getNoiseShape(e){if(null==this.noiseShape)return this.noiseShape;const t=e.shape,n=[];for(let e=0;e<this.noiseShape.length;++e)n.push(null==this.noiseShape[e]?t[e]:this.noiseShape[e]);return n}call(e,t){return Qo((()=>{this.invokeCallHook(e,t);const n=Py(e);if(0<this.rate&&this.rate<1){const e=null!=t.training&&t.training,s=this.getNoiseShape(n);return fy((()=>dy(n,this.rate,s,this.seed)),(()=>n),e)}return e}))}getConfig(){const e={rate:this.rate,noiseShape:this.noiseShape,seed:this.seed},t=super.getConfig();return Object.assign(e,t),e}dispose(){return super.dispose()}}iw.className="Dropout",Ro(iw);class ow extends iw{constructor(e){super(e),this.inputSpec=[{ndim:3}]}getNoiseShape(e){const t=e.shape;return[t[0],1,t[2]]}}ow.className="SpatialDropout1D",Ro(ow);class lw extends Yy{constructor(e){if(super(e),this.activation=null,this.useBias=!0,this.kernel=null,this.bias=null,this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_BIAS_INITIALIZER="zeros",null==e.batchInputShape&&null==e.inputShape&&null!=e.inputDim){let t=null;null!=e.batchSize&&(t=e.batchSize),this.batchInputShape=[t,e.inputDim]}this.units=e.units,Ng(this.units,"units"),this.activation=dv(e.activation),null!=e.useBias&&(this.useBias=e.useBias),this.kernelInitializer=My(e.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.biasInitializer=My(e.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.kernelConstraint=gb(e.kernelConstraint),this.biasConstraint=gb(e.biasConstraint),this.kernelRegularizer=vv(e.kernelRegularizer),this.biasRegularizer=vv(e.biasRegularizer),this.activityRegularizer=vv(e.activityRegularizer),this.supportsMasking=!0,this.inputSpec=[{minNDim:2}]}build(e){const t=(e=By(e))[e.length-1];null==this.kernel&&(this.kernel=this.addWeight("kernel",[t,this.units],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.units],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint))),this.inputSpec=[{minNDim:2,axes:{[-1]:t}}],this.built=!0}computeOutputShape(e){const t=(e=By(e)).slice();return t[t.length-1]=this.units,t}call(e,t){return Qo((()=>{this.invokeCallHook(e,t);const n=Py(e),s=Cg(this.activation.getClassName());let r;return null!=s?r=ly(n,this.kernel.read(),s,this.bias?this.bias.read():null):(r=ly(n,this.kernel.read()),null!=this.bias&&(r=py(r,this.bias.read())),null!=this.activation&&(r=this.activation.apply(r))),r}))}getConfig(){const e={units:this.units,activation:hv(this.activation),useBias:this.useBias,kernelInitializer:Oy(this.kernelInitializer),biasInitializer:Oy(this.biasInitializer),kernelRegularizer:bv(this.kernelRegularizer),biasRegularizer:bv(this.biasRegularizer),activityRegularizer:bv(this.activityRegularizer),kernelConstraint:fb(this.kernelConstraint),biasConstraint:fb(this.biasConstraint)},t=super.getConfig();return Object.assign(e,t),e}}lw.className="Dense",Ro(lw);class uw extends Yy{constructor(e){super(e=e||{}),this.inputSpec=[{minNDim:3}],this.dataFormat=e.dataFormat}computeOutputShape(e){e=By(e);for(const t of e.slice(1))if(null==t)throw new ag(`The shape of the input to "Flatten" is not fully defined (got ${e.slice(1)}). Make sure to pass a complete "input_shape" or "batch_input_shape" argument to the first layer in your model.`);return[e[0],qg(e,1)]}call(e,t){return Qo((()=>{this.invokeCallHook(e,t);let n=Py(e);if("channelsFirst"===this.dataFormat&&n.rank>1){const e=[0];for(let t=2;t<n.rank;++t)e.push(t);e.push(1),n=Zi(n,e)}return function(e){if(e.rank<=1)throw new ag(`batchFlatten requires a minimum rank of 2. Got rank: ${e.rank}.`);const t=[e.shape[0],qg(e.shape,1)];return du(e,t)}(n)}))}getConfig(){const e={};null!=this.dataFormat&&(e.dataFormat=this.dataFormat);const t=super.getConfig();return Object.assign(e,t),e}}uw.className="Flatten",Ro(uw);class cw extends Yy{constructor(e){super(e),this.supportsMasking=!0,this.activation=dv(e.activation)}call(e,t){return Qo((()=>{this.invokeCallHook(e,t);const n=Py(e);return this.activation.apply(n)}))}getConfig(){const e={activation:hv(this.activation)},t=super.getConfig();return Object.assign(e,t),e}}cw.className="Activation",Ro(cw);class hw extends Yy{constructor(e){super(e),this.n=e.n,this.inputSpec=[{ndim:2}]}computeOutputShape(e){return[e[0],this.n,e[1]]}call(e,t){return Qo((()=>{return e=Py(e),t=e,n=this.n,Qo((()=>{if(2!==t.shape.length)throw new ag(`repeat() expects a rank-2 tensor, but received a rank-${t.shape.length} tensor.`);return iy(ey(t,1),[1,n,1])}));var t,n}))}getConfig(){const e={n:this.n},t=super.getConfig();return Object.assign(e,t),e}}hw.className="RepeatVector",Ro(hw);class pw extends Yy{constructor(e){super(e),this.targetShape=e.targetShape;for(let e=0;e<this.targetShape.length;++e)this.isUnknown(this.targetShape[e])&&(this.targetShape[e]=null)}isUnknown(e){return e<0||null==e}fixUnknownDimension(e,t){const n="Total size of new array must be unchanged.",s=t.slice();let r=1,a=null;for(let e=0;e<s.length;++e){const t=s[e];if(this.isUnknown(t)){if(null!==a)throw new ag("Can only specifiy one unknown dimension.");a=e}else r*=t}const i=qg(e);if(null!==a){if(0===r||i%r!=0)throw new ag(n);s[a]=i/r}else if(i!==r)throw new ag(n);return s}computeOutputShape(e){let t=!1;for(let n=0;n<e.length;++n)if(this.isUnknown(e[n])){t=!0;break}return t?e.slice(0,1).concat(this.targetShape):e.slice(0,1).concat(this.fixUnknownDimension(e.slice(1),this.targetShape))}call(e,t){return Qo((()=>{this.invokeCallHook(e,t);const n=Py(e),s=n.shape,r=s.slice(0,1).concat(this.fixUnknownDimension(s.slice(1),this.targetShape));return du(n,r)}))}getConfig(){const e={targetShape:this.targetShape},t=super.getConfig();return Object.assign(e,t),e}}pw.className="Reshape",Ro(pw);class dw extends Yy{constructor(e){if(super(e),null==e.dims)throw new Error("Required configuration field `dims` is missing during Permute constructor call.");if(!Array.isArray(e.dims))throw new Error(`Permute constructor requires \`dims\` to be an Array, but received ${e.dims} instead.`);const t=Yg(1,e.dims.length+1);if(!ue(e.dims.slice().sort(),t))throw new Error("Invalid permutation `dims`: "+JSON.stringify(e.dims)+" `dims` must contain consecutive integers starting from 1.");this.dims=e.dims,this.dimsIncludingBatch=[0].concat(this.dims),this.inputSpec=[new Hy({ndim:this.dims.length+1})]}computeOutputShape(e){const t=(e=By(e)).slice();return this.dims.forEach(((n,s)=>{t[s+1]=e[n]})),t}call(e,t){return Zi(Py(e),this.dimsIncludingBatch)}getConfig(){const e={dims:this.dims},t=super.getConfig();return Object.assign(e,t),e}}dw.className="Permute",Ro(dw);class fw extends Yy{constructor(e){super(null==e?{}:e),this.supportsMasking=!0,this.maskValue=null!=e?null==e.maskValue?0:e.maskValue:0}computeOutputShape(e){return e}getConfig(){const e=super.getConfig(),t={maskValue:this.maskValue};return Object.assign(t,e),t}computeMask(e,t){const n=Py(e);return Hl(uh(n,this.maskValue),-1)}call(e,t){return Qo((()=>{this.invokeCallHook(e,t);const n=Py(e),s=Hl(uh(n,this.maskValue),-1,!0);return ml(n,Ei(s,n.dtype))}))}}fw.className="Masking",Ro(fw);class mw extends Yy{constructor(e){if(super(e),this.embeddings=null,this.DEFAULT_EMBEDDINGS_INITIALIZER="randomUniform",null==e.batchInputShape&&null==e.inputShape){let t=null;null!=e.batchSize&&(t=e.batchSize),null==e.inputLength?this.batchInputShape=[t,null]:this.batchInputShape=[t].concat(dg(e.inputLength))}this.inputDim=e.inputDim,Ng(this.inputDim,"inputDim"),this.outputDim=e.outputDim,Ng(this.outputDim,"outputDim"),this.embeddingsInitializer=My(e.embeddingsInitializer||this.DEFAULT_EMBEDDINGS_INITIALIZER),this.embeddingsRegularizer=vv(e.embeddingsRegularizer),this.activityRegularizer=vv(e.activityRegularizer),this.embeddingsConstraint=gb(e.embeddingsConstraint),this.maskZero=e.maskZero,this.supportsMasking=e.maskZero,this.inputLength=e.inputLength}build(e){this.embeddings=this.addWeight("embeddings",[this.inputDim,this.outputDim],this.dtype,this.embeddingsInitializer,this.embeddingsRegularizer,!0,this.embeddingsConstraint),this.built=!0}warnOnIncompatibleInputShape(e){}computeMask(e,t){return Qo((()=>this.maskZero?(e=Py(e),uh(e,bl(e))):null))}computeOutputShape(e){if(e=By(e),null==this.inputLength)return[...e,this.outputDim];const t=dg(this.inputLength);if(t.length!==e.length-1)throw new ag(`"inputLength" is ${this.inputLength}, but received input shape has shape ${e}`);{let n=0;for(let s=0;s<t.length;++s){const r=t[s],a=e[s+1];if(null!=r&&null!=a&&r!==a)throw new ag(`"inputLength" is ${this.inputLength}, but received input shape has shape ${e}`);null==r&&(t[n]=a),n++}}return[e[0],...t,this.outputDim]}call(e,t){return Qo((()=>{this.invokeCallHook(e,t);let n=Py(e);"int32"!==n.dtype&&(n=Qg(n,"int32"));const s=uy(this.embeddings.read(),du(n,[n.size]));return du(s,By(this.computeOutputShape(n.shape)))}))}getConfig(){const e={inputDim:this.inputDim,outputDim:this.outputDim,embeddingsInitializer:Oy(this.embeddingsInitializer),embeddingsRegularizer:bv(this.embeddingsRegularizer),activityRegularizer:bv(this.activityRegularizer),embeddingsConstraint:fb(this.embeddingsConstraint),maskZero:this.maskZero,inputLength:this.inputLength},t=super.getConfig();return Object.assign(e,t),e}}mw.className="Embedding",Ro(mw);class gw extends Yy{constructor(e){super(e||{}),this.supportsMasking=!0}mergeFunction(e){throw new ig}computeElementwiseOpOutputShape(e,t){if(null==e||null==t)return null;if(e.length<t.length)return this.computeElementwiseOpOutputShape(t,e);if(0===t.length)return e;const n=e.slice(0,e.length-t.length);for(let s=0;s<t.length;++s){const r=e[e.length-t.length+s],a=t[s];if(null==r||null==a||r<0||a<0)n.push(null);else if(1===r)n.push(a);else if(1===a)n.push(r);else{if(r!==a)throw new ag("Operands could not be broadcast together with shapes "+JSON.stringify(e)+" "+JSON.stringify(t));n.push(r)}}return n}build(e){if(Array.isArray(e)&&!Array.isArray(e[0])&&(e=[By(e)]),e.length<2)throw new ag(`A merge layer should be called on an Array of at least 2 inputs. Got ${e.length} input(s).`);let t=[];for(const n of e)null!=n&&null!==n[0]&&t.push(n[0]);if(t=wg(t),t.length>1)throw new ag(`Can not merge tensors with different batch sizes. Got tensors with shapes: ${JSON.stringify(e)}.`);let n=null==e[0]?null:e[0].slice(1);for(let t=1;t<e.length;++t){const s=null==e[t]?null:e[t].slice(1);n=this.computeElementwiseOpOutputShape(n,s)}const s=e.map((e=>e.length));-1===e.indexOf(null)&&1===wg(s).length?this.reshapeRequired=!1:this.reshapeRequired=!0}call(e,t){return Qo((()=>{if(this.reshapeRequired){const t=[],n=e.map((e=>e.rank));if(-1===n.indexOf(null)){const s=Xg(n);for(let n of e){const e=n.rank;for(let t=0;t<s-e;++t)n=ey(n,1);t.push(n)}return this.mergeFunction(t)}{let n=!1;for(const s of e){const e=s.rank;if(null==e){const e=s.shape,r=e[0],a=e.slice(1).concat([r]);let i=du(s,[r].concat(qg(e.slice(1))));i=Zi(i,[1,0]),i=du(i,a),t.push(i),n=!0}else if(e>1){const r=Yg(1,e).concat([0]);t.push(Zi(s,r)),n=!0}else t.push(s)}let s=this.mergeFunction(t);const r=s.rank;if(n)if(null==r){const e=s.shape,t=e[e.length-1],n=[t].concat(e.slice(0,e.length-1));s=du(Zi(du(s,[-1,t]),[1,0]),n)}else if(r>1){const e=[r-1].concat(Yg(0,r-1));s=Zi(s,e)}return s}}return this.mergeFunction(e)}))}computeOutputShape(e){let t;t=null==e[0]?null:e[0].slice(1);for(let n=1;n<e.length;++n){const s=null==e[n]?null:e[n].slice(1);t=this.computeElementwiseOpOutputShape(t,s)}let n=[];for(const t of e)null!=t&&null!==t[0]&&n.push(t[0]);return n=wg(n),t=1===n.length?n.concat(t):[null].concat(t),t}computeMask(e,t){return Qo((()=>{if(null==t)return null;if(!Array.isArray(t))throw new ag("`mask` should be an Array");if(!Array.isArray(e))throw new ag("`inputs` should be an Array");if(t.length!==e.length)throw new ag(`The Array 'inputs' and 'mask' are expected to have the same length, but have different lengths (${e.length} vs ${t.length})`);if(t.every((e=>null==e)))return null;let n=(t=t.map((e=>null==e?e:xc(e,0))))[0];for(let e=1;e<t.length-1;++e)n=Uc(n,t[e]);return n}))}}class yw extends gw{constructor(e){super(e)}mergeFunction(e){return Qo((()=>{let t=e[0].clone();for(let n=1;n<e.length;++n)t=pl(t,e[n]);return t}))}}yw.className="Add",Ro(yw);class bw extends gw{constructor(e){super(e)}mergeFunction(e){return Qo((()=>{let t=e[0].clone();for(let n=1;n<e.length;++n)t=ml(t,e[n]);return t}))}}bw.className="Multiply",Ro(bw);class xw extends gw{constructor(e){super(e)}mergeFunction(e){return Qo((()=>{let t=e[0].clone();for(let n=1;n<e.length;++n)t=pl(t,e[n]);return ml(1/e.length,t)}))}}xw.className="Average",Ro(xw);class vw extends gw{constructor(e){super(e)}mergeFunction(e){return Qo((()=>{let t=e[0];for(let n=1;n<e.length;++n)t=Ol(t,e[n]);return t}))}}vw.className="Maximum",Ro(vw);class ww extends gw{constructor(e){super(e)}mergeFunction(e){return Qo((()=>{let t=e[0];for(let n=1;n<e.length;++n)t=sh(t,e[n]);return t}))}}ww.className="Minimum",Ro(ww);class kw extends gw{constructor(e){super(e),this.DEFAULT_AXIS=-1,null==e&&(e={}),this.axis=null==e.axis?this.DEFAULT_AXIS:e.axis,this.supportsMasking=!0,this.reshapeRequired=!1}build(e){if(!Array.isArray(e)||!Array.isArray(e[0])||1===e.length)throw new ag("A `Concatenate` layer should be called on a list of at least 2 inputs");let t=!0;for(const n of e)if(null!=n){t=!1;break}if(t)return;const n=[];for(let t=0;t<e.length;++t){const s=e[t].slice();s.splice(this.axis,1);let r=!1;for(const e of n)if(ue(e,s)){r=!0;break}r||n.push(s)}if(n.length>1)throw new ag("A `Concatenate` layer requires inputs with matching shapes except for the concat axis. Got input shapes: "+JSON.stringify(e))}mergeFunction(e){return Qo((()=>ry(e,this.axis)))}computeOutputShape(e){if(!Array.isArray(e)||!Array.isArray(e[0]))throw new ag("A `Concatenate` layer should be called on a list of inputs.");const t=e,n=t[0].slice(),s=this.axis<0?n.length+this.axis:this.axis;for(const e of t.slice(1)){if(null==n[s]||null==e[s]){n[s]=null;break}n[s]+=e[s]}return n}computeMask(e,t){if(null==t)return null;if(!Array.isArray(t))throw new ag("`mask` should be an array for Concatenate");if(!Array.isArray(e))throw new ag("`inputs` should be an array for Concatenate");if(t.length!==e.length)throw new ag(`Mismatch in the length of mask (${t.length}) and the legnth of inputs (${e.length})`);return Qo((()=>{let n=!0;if(t.forEach((e=>{null==e||(n=!1)})),n)return null;const s=[];for(let n=0;n<e.length;++n)null==t[n]?s.push(Ei(ch(e[n]),"bool")):t[n].rank<e[n].rank?s.push(xc(t[n],-1)):s.push(t[n]);const r=gu(s,this.axis);return Gl(r,-1,!1)}))}getConfig(){const e={axis:this.axis},t=super.getConfig();return Object.assign(e,t),e}}function Iw(e,t){for(;e<0;)e+=t;return e}kw.className="Concatenate",Ro(kw);class Sw extends gw{constructor(e){super(e),this.axes=e.axes,this.normalize=null!=e.normalize&&e.normalize,this.supportsMasking=!0,this.reshapeRequired=!1}build(e){se(Array.isArray(e)&&2===e.length&&Array.isArray(e[0])&&Array.isArray(e[1]),(()=>"A `Dot` layer should be called on a list of exactly 2 inputs."));const t=e[0],n=e[1];if(t.length>3||n.length>3)throw new ig("Dot layer does not support tensors of 4D or higher rank yet.");const s=this.interpretAxes(t,n);if(t[s[0]]!==n[s[1]])throw new ag(`Dimension incompatibility: ${t[s[0]]} !== ${n[s[1]]}`)}mergeFunction(e){if(2!==e.length)throw new ag(`A \`Dot\` layer must be called on exactly 2 inputs, but received ${e.length} input(s).`);let t,n=e[0],s=e[1];return t=Array.isArray(this.axes)?this.axes.map(((t,n)=>Iw(t,e[n].shape.length))):[Iw(this.axes,n.shape.length),Iw(this.axes,s.shape.length)],this.normalize&&(n=Kb(n,t[0]),s=Kb(s,t[1])),function(e,t,n){if(e.shape.length>3||t.shape.length>3)throw new ig("batchDot is not implemented for tensors of 4D or higher rank yet");if(se(e.shape.length>=2,(()=>`batchDot requires the rank of x to be >= 2, but got ${e.shape.length}`)),se(e.shape.length>=2,(()=>`batchDot requires the rank of y to be >= 2, but got ${t.shape.length}`)),"number"==typeof n&&(n=[n,n]),"complex64"===e.dtype||"complex64"===t.dtype)throw new ig("batchDot is not implemented for complex64-type Tensors yet.");const s=e.shape.length,r=t.shape.length;null==n&&(n=[s-1,r-2]);const a=n;return Qo((()=>{let n,i;if(s>r){n=s-r;const e=[];for(let t=0;t<n;++t)e.push(1);t=du(t,t.shape.concat(e))}else if(r>s){n=r-s;const t=[];for(let e=0;e<n;++e)t.push(1);e=du(e,e.shape.concat(t))}else n=0;if(2===e.shape.length&&2===t.shape.length)i=a[0]===a[1]?fc(ml(e,t),a[0]):fc(ml(Zi(e,[1,0]),t),a[1]);else{const n=a[0]!==e.shape.length-1,s=a[1]===t.shape.length-1;i=Xi(e,t,n,s)}if(n>0){let e;e=s>r?s+r-3:s-1;const t=[];for(let s=e;s<e+n;++s)t.push(s);i=rp(i,t)}return 1===i.shape.length&&(i=xc(i,1)),i}))}(n,s,t)}interpretAxes(e,t){let n;return n=Array.isArray(this.axes)?this.axes:[Iw(this.axes,e.length),Iw(this.axes,t.length)],n}computeOutputShape(e){se(Array.isArray(e)&&2===e.length&&Array.isArray(e[0])&&Array.isArray(e[1]),(()=>"A `Dot` layer should be called on a list of exactly 2 inputs."));const t=e[0].slice(),n=e[1].slice();if(t.length>3||n.length>3)throw new ig("Dot layer does not support tensors of 4D or higher rank yet.");const s=this.interpretAxes(t,n);t.splice(s[0],1),n.splice(s[1],1),n.splice(0,1);const r=t.concat(n);return 1===r.length&&r.push(1),r}computeMask(e,t){return null}getConfig(){const e={axes:this.axes,normalize:this.normalize},t=super.getConfig();return Object.assign(e,t),e}}Sw.className="Dot",Ro(Sw);class Nw extends Yy{constructor(e){super(e),this.supportsMasking=!0,this.stddev=e.stddev}computeOutputShape(e){return e}getConfig(){const e=super.getConfig(),t={stddev:this.stddev};return Object.assign(t,e),t}call(e,t){return Qo((()=>{this.invokeCallHook(e,t);const n=Py(e);return fy((()=>pl(oy(n.shape,0,this.stddev),n)),(()=>n),t.training||!1)}))}}Nw.className="GaussianNoise",Ro(Nw);class Tw extends Yy{constructor(e){super(e),this.supportsMasking=!0,this.rate=e.rate}computeOutputShape(e){return e}getConfig(){const e=super.getConfig(),t={rate:this.rate};return Object.assign(t,e),t}call(e,t){return Qo((()=>{this.invokeCallHook(e,t);const n=Py(e);return this.rate>0&&this.rate<1?fy((()=>{const e=Math.sqrt(this.rate/(1-this.rate));return ml(n,oy(n.shape,1,e))}),(()=>n),t.training||!1):n}))}}Tw.className="GaussianDropout",Ro(Tw);class Cw extends Yy{constructor(e){super(e),this.supportsMasking=!0,this.rate=e.rate,this.noiseShape=e.noiseShape}_getNoiseShape(e){return this.noiseShape||Py(e).shape}computeOutputShape(e){return e}getConfig(){const e=super.getConfig(),t={rate:this.rate};return Object.assign(t,e),t}call(e,t){return Qo((()=>{if(this.rate<1&&this.rate>0){const n=this._getNoiseShape(e),s=()=>{const t=Py(e),s=-1.7580993408473766;let r=Tc($h(n),this.rate);r=Qg(r,"float32");const a=((1-this.rate)*(1+this.rate*s**2))**-.5,i=-a*s*this.rate,o=pl(ml(t,r),ml(pl(r,-1),s));return pl(ml(o,a),i)};return fy(s,(()=>Py(e)),t.training||!1)}return e}))}}function $w(e,t,n,s,r,a=.001){let i;if(2===e.rank)i=Iu(e,t,n,s,r,a);else if(3===e.rank)i=Su(e,t,n,s,r,a);else{if(4!==e.rank)throw new ig(`batchNormalization is not implemented for array of rank ${e.rank} yet`);i=Nu(e,t,n,s,r,a)}return i}Cw.className="AlphaDropout",Ro(Cw);class Ew extends Yy{constructor(e){null==e&&(e={}),super(e),this.supportsMasking=!0,this.axis=null==e.axis?-1:e.axis,this.momentum=null==e.momentum?.99:e.momentum,this.epsilon=null==e.epsilon?.001:e.epsilon,this.center=null==e.center||e.center,this.scale=null==e.scale||e.scale,this.betaInitializer=My(e.betaInitializer||"zeros"),this.gammaInitializer=My(e.gammaInitializer||"ones"),this.movingMeanInitializer=My(e.movingMeanInitializer||"zeros"),this.movingVarianceInitializer=My(e.movingVarianceInitializer||"ones"),this.betaConstraint=gb(e.betaConstraint),this.gammaConstraint=gb(e.gammaConstraint),this.betaRegularizer=vv(e.betaRegularizer),this.gammaRegularizer=vv(e.gammaRegularizer)}build(e){e=By(e);const t=this.axis>=0?this.axis:this.axis+e.length,n=e[t];if(null==n)throw new ag(`Axis ${t} of input tensor should have a defined dimension but the layer received an input with shape ${JSON.stringify(e)}.`);this.inputSpec=[new Hy({ndim:e.length,axes:{[t]:n}})];const s=[n];this.scale&&(this.gamma=this.addWeight("gamma",s,null,this.gammaInitializer,this.gammaRegularizer,!0,this.gammaConstraint)),this.center&&(this.beta=this.addWeight("beta",s,null,this.betaInitializer,this.betaRegularizer,!0,this.betaConstraint)),this.movingMean=this.addWeight("moving_mean",s,null,this.movingMeanInitializer,null,!1),this.movingVariance=this.addWeight("moving_variance",s,null,this.movingVarianceInitializer,null,!1),this.built=!0}call(e,t){return Qo((()=>{const n=null!=t.training&&t.training,s=Py(e),r=s.shape,a=r.length,i=Yg(0,a),o=this.axis>=0?this.axis:this.axis+a;i.splice(o,1);const l=ug(1,a);l[o]=r[o];const u=i.slice();u.sort();const c=!ue(u,Yg(0,a).slice(0,a-1));if(!n)return(()=>{if(c){const e=du(this.movingMean.read(),l),t=du(this.movingVariance.read(),l),n=this.center?du(this.beta.read(),l):null,r=this.scale?du(this.gamma.read(),l):null;return $w(s,e,t,n,r,this.epsilon)}return $w(s,this.movingMean.read(),this.movingVariance.read(),null==this.beta?null:this.beta.read(),null==this.gamma?null:this.gamma.read(),this.epsilon)})();const[h,p,d]=function(e,t,n,s,r=.001){return ue(s.slice().sort(),Yg(0,e.rank-1))?function(e,t,n,s,r=.001){return Qo((()=>{const a=ih(e,s),i=a.mean,o=a.variance;return[$w(e,i,o,n,t,r),i,o]}))}(e,t,n,s,r):function(e,t,n,s,r=.001){return Qo((()=>{const a=ih(e,s),i=a.mean,o=a.variance,l=[];for(const t of Yg(0,e.rank))-1!==s.indexOf(t)?l.push(1):l.push(e.shape[t]);const u=du(i,l),c=du(o,l),h=null==t?null:du(t,l),p=null==n?null:du(n,l);return[$w(e,u,c,p,h,r),i,o]}))}(e,t,n,s,r)}(s,this.gamma.read(),this.beta.read(),i,this.epsilon),f=(e,t,n)=>{Qo((()=>{const s=1-n,r=e.read(),a=ml(Rl(r,t),s);e.write(Rl(r,a))}))};return(()=>{f(this.movingMean,p,this.momentum),f(this.movingVariance,d,this.momentum)})(),h}))}getConfig(){const e={axis:this.axis,momentum:this.momentum,epsilon:this.epsilon,center:this.center,scale:this.scale,betaInitializer:Oy(this.betaInitializer),gammaInitializer:Oy(this.gammaInitializer),movingMeanInitializer:Oy(this.movingMeanInitializer),movingVarianceInitializer:Oy(this.movingVarianceInitializer),betaRegularizer:bv(this.betaRegularizer),gammaRegularizer:bv(this.gammaRegularizer),betaConstraint:fb(this.betaConstraint),gammaConstraint:fb(this.gammaConstraint)},t=super.getConfig();return Object.assign(e,t),e}}Ew.className="BatchNormalization",Ro(Ew);class Aw extends Yy{constructor(e){if(null==e&&(e={}),super(e),this.axis=null==e.axis?-1:e.axis,"number"==typeof this.axis){if(!Number.isInteger(this.axis))throw new Error(`Expected axis to be an integer, but received ${this.axis}`)}else{if(!Array.isArray(this.axis))throw new Error(`Expected axis to be an integer or an array of integers, but received ${JSON.stringify(this.axis)}`);for(const e of this.axis)if(!Number.isInteger(e))throw new Error(`Expected axis to be an array of integers, but received ${JSON.stringify(this.axis)}`)}this.epsilon=null==e.epsilon?.001:e.epsilon,this.center=null==e.center||e.center,this.scale=null==e.scale||e.scale,this.betaInitializer=My(e.betaInitializer||"zeros"),this.gammaInitializer=My(e.gammaInitializer||"ones"),this.betaRegularizer=vv(e.betaRegularizer),this.gammaRegularizer=vv(e.gammaRegularizer),this.supportsMasking=!0}build(e){const t=(e=By(e)).length;"number"==typeof this.axis&&(this.axis=[this.axis]);for(let e=0;e<this.axis.length;++e)this.axis[e]<0&&(this.axis[e]+=t);for(const e of this.axis)if(e<0||e>=t)throw new Error(`Invalid axis: ${e}`);if(this.axis.length!==wg(this.axis).length)throw new Error(`Found duplicate axes in: ${this.axis}`);const n=this.axis.map((t=>e[t]));this.scale?this.gamma=this.addWeight("gamma",n,"float32",this.gammaInitializer,this.gammaRegularizer,!0):this.gamma=null,this.center?this.beta=this.addWeight("beta",n,"float32",this.betaInitializer,this.betaRegularizer,!0):this.beta=null,this.built=!0}call(e,t){const n=Py(e),s=n.shape,r=s.length;return Qo((()=>{let{mean:e,variance:t}=ih(n,this.axis,!0);const a=ug(1,r);for(const e of this.axis)a[e]=s[e];const i=e=>null!=e&&e.shape.length!==r?du(e,a):e;let o=this.scale?i(this.gamma.read()):null,l=this.center?i(this.beta.read()):null;const u=[],c=[];for(let e=0;e<r;++e)-1!==this.axis.indexOf(e)?(u.push(s[e]),c.push(1)):(u.push(1),c.push(s[e]));return e=wc(e,u),t=wc(t,u),null!=o&&(o=wc(o,c)),null!=l&&(l=wc(l,c)),$w(n,e,t,l,o,this.epsilon)}))}getConfig(){const e={axis:this.axis,epsilon:this.epsilon,center:this.center,scale:this.scale,betaInitializer:Oy(this.betaInitializer),gammaInitializer:Oy(this.gammaInitializer),betaRegularizer:bv(this.betaRegularizer),gammaRegularizer:bv(this.gammaRegularizer)},t=super.getConfig();return Object.assign(e,t),e}}Aw.className="LayerNormalization",Ro(Aw);class _w extends Yy{constructor(e){if(null==e&&(e={}),super(e),this.dataFormat=null==e.dataFormat?"channelsLast":e.dataFormat,null==e.padding)this.padding=[[1,1],[1,1]];else if("number"==typeof e.padding)this.padding=[[e.padding,e.padding],[e.padding,e.padding]];else{if(e.padding=e.padding,2!==e.padding.length)throw new ag(`ZeroPadding2D expects padding to be a length-2 array, but received a length-${e.padding.length} array.`);let t,n;if("number"==typeof e.padding[0])t=[e.padding[0],e.padding[0]],n=[e.padding[1],e.padding[1]];else{if(e.padding=e.padding,2!==e.padding[0].length)throw new ag(`ZeroPadding2D expects height padding to be a length-2 array, but received a length-${e.padding[0].length} array.`);if(t=e.padding[0],2!==e.padding[1].length)throw new ag(`ZeroPadding2D expects width padding to be a length-2 array, but received a length-${e.padding[1].length} array.`);n=e.padding[1]}this.padding=[t,n]}this.inputSpec=[new Hy({ndim:4})]}computeOutputShape(e){let t,n;return e=By(e),"channelsFirst"===this.dataFormat?(t=null!=e[2]&&e[2]>=0?e[2]+this.padding[0][0]+this.padding[0][1]:null,n=null!=e[3]&&e[3]>=0?e[3]+this.padding[1][0]+this.padding[1][1]:null,[e[0],e[1],t,n]):(t=null!=e[1]&&e[1]>=0?e[1]+this.padding[0][0]+this.padding[0][1]:null,n=null!=e[2]&&e[2]>=0?e[2]+this.padding[1][0]+this.padding[1][1]:null,[e[0],t,n,e[3]])}call(e,t){return Qo((()=>{return t=Py(e),n=this.padding,s=this.dataFormat,Qo((()=>{if(4!==t.rank)throw new ag(`temporalPadding expects input tensor to be 4-D, but received a ${t.rank}-D tensor.`);if(null==n&&(n=[[1,1],[1,1]]),2!==n.length||2!==n[0].length||2!==n[1].length)throw new ag("spatial2dPadding expects `padding` to be an Array of two Arrays, each of which is an Array of two integers.");if(null==s&&(s="channelsLast"),"channelsLast"!==s&&"channelsFirst"!==s)throw new ag(`Unknown data format: ${s}. Supported data formats are 'channelsLast' and 'channelsFirst.`);let e;return e="channelsFirst"===s?[[0,0],[0,0],n[0],n[1]]:[[0,0],n[0],n[1],[0,0]],ph(t,e)}));var t,n,s}))}getConfig(){const e={padding:this.padding,dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}}function Rw(e,t,n,s,r,a){return Qo((()=>{let i;zg(r),Bg(a),Pg(s),null==n&&(n=[1,1]),null==s&&(s="valid"),null==r&&(r="channelsLast"),null==a&&(a="max"),e=Av(e,r);const o="same"===s?"same":"valid";return i="max"===a?Yc(e,t,n,o):fu(e,t,n,o),"channelsFirst"===r&&(i=Zi(i,[0,3,1,2])),i}))}function Fw(e,t,n,s,r,a){return Qo((()=>{let i;zg(r),Bg(a),Pg(s),null==n&&(n=[1,1,1]),null==s&&(s="valid"),null==r&&(r="channelsLast"),null==a&&(a="max"),e=_v(e,r);const o="same"===s?"same":"valid";return i="max"===a?Zc(e,t,n,o):mu(e,t,n,o),"channelsFirst"===r&&(i=Zi(i,[0,4,1,2,3])),i}))}_w.className="ZeroPadding2D",Ro(_w);class Dw extends Yy{constructor(e){if(null==e.poolSize&&(e.poolSize=2),super(e),"number"==typeof e.poolSize)this.poolSize=[e.poolSize];else{if(!Array.isArray(e.poolSize)||1!==e.poolSize.length||"number"!=typeof e.poolSize[0])throw new ag(`poolSize for 1D convolutional layer must be a number or an Array of a single number, but received ${JSON.stringify(e.poolSize)}`);this.poolSize=e.poolSize}if(Ng(this.poolSize,"poolSize"),null==e.strides)this.strides=this.poolSize;else if("number"==typeof e.strides)this.strides=[e.strides];else{if(!Array.isArray(e.strides)||1!==e.strides.length||"number"!=typeof e.strides[0])throw new ag(`strides for 1D convolutional layer must be a number or an Array of a single number, but received ${JSON.stringify(e.strides)}`);this.strides=e.strides}Ng(this.strides,"strides"),this.padding=null==e.padding?"valid":e.padding,Pg(this.padding),this.inputSpec=[new Hy({ndim:3})]}computeOutputShape(e){const t=$v((e=By(e))[1],this.poolSize[0],this.padding,this.strides[0]);return[e[0],t,e[2]]}call(e,t){return Qo((()=>{this.invokeCallHook(e,t),e=ey(Py(e),2);const n=this.poolingFunction(Py(e),[this.poolSize[0],1],[this.strides[0],1],this.padding,"channelsLast");return rp(n,[2])}))}getConfig(){const e={poolSize:this.poolSize,padding:this.padding,strides:this.strides},t=super.getConfig();return Object.assign(e,t),e}}class Ow extends Dw{constructor(e){super(e)}poolingFunction(e,t,n,s,r){return zg(r),Pg(s),Rw(e,t,n,s,r,"max")}}Ow.className="MaxPooling1D",Ro(Ow);class Mw extends Dw{constructor(e){super(e)}poolingFunction(e,t,n,s,r){return zg(r),Pg(s),Rw(e,t,n,s,r,"avg")}}Mw.className="AveragePooling1D",Ro(Mw);class Lw extends Yy{constructor(e){if(null==e.poolSize&&(e.poolSize=[2,2]),super(e),this.poolSize=Array.isArray(e.poolSize)?e.poolSize:[e.poolSize,e.poolSize],null==e.strides)this.strides=this.poolSize;else if(Array.isArray(e.strides)){if(2!==e.strides.length)throw new ag(`If the strides property of a 2D pooling layer is an Array, it is expected to have a length of 2, but received length ${e.strides.length}.`);this.strides=e.strides}else this.strides=[e.strides,e.strides];Ng(this.poolSize,"poolSize"),Ng(this.strides,"strides"),this.padding=null==e.padding?"valid":e.padding,this.dataFormat=null==e.dataFormat?"channelsLast":e.dataFormat,zg(this.dataFormat),Pg(this.padding),this.inputSpec=[new Hy({ndim:4})]}computeOutputShape(e){e=By(e);let t="channelsFirst"===this.dataFormat?e[2]:e[1],n="channelsFirst"===this.dataFormat?e[3]:e[2];return t=$v(t,this.poolSize[0],this.padding,this.strides[0]),n=$v(n,this.poolSize[1],this.padding,this.strides[1]),"channelsFirst"===this.dataFormat?[e[0],e[1],t,n]:[e[0],t,n,e[3]]}call(e,t){return Qo((()=>(this.invokeCallHook(e,t),this.poolingFunction(Py(e),this.poolSize,this.strides,this.padding,this.dataFormat))))}getConfig(){const e={poolSize:this.poolSize,padding:this.padding,strides:this.strides,dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}}class zw extends Lw{constructor(e){super(e)}poolingFunction(e,t,n,s,r){return zg(r),Pg(s),Rw(e,t,n,s,r,"max")}}zw.className="MaxPooling2D",Ro(zw);class Pw extends Lw{constructor(e){super(e)}poolingFunction(e,t,n,s,r){return zg(r),Pg(s),Rw(e,t,n,s,r,"avg")}}Pw.className="AveragePooling2D",Ro(Pw);class Bw extends Yy{constructor(e){if(null==e.poolSize&&(e.poolSize=[2,2,2]),super(e),this.poolSize=Array.isArray(e.poolSize)?e.poolSize:[e.poolSize,e.poolSize,e.poolSize],null==e.strides)this.strides=this.poolSize;else if(Array.isArray(e.strides)){if(3!==e.strides.length)throw new ag(`If the strides property of a 3D pooling layer is an Array, it is expected to have a length of 3, but received length ${e.strides.length}.`);this.strides=e.strides}else this.strides=[e.strides,e.strides,e.strides];Ng(this.poolSize,"poolSize"),Ng(this.strides,"strides"),this.padding=null==e.padding?"valid":e.padding,this.dataFormat=null==e.dataFormat?"channelsLast":e.dataFormat,zg(this.dataFormat),Pg(this.padding),this.inputSpec=[new Hy({ndim:5})]}computeOutputShape(e){e=By(e);let t="channelsFirst"===this.dataFormat?e[2]:e[1],n="channelsFirst"===this.dataFormat?e[3]:e[2],s="channelsFirst"===this.dataFormat?e[4]:e[3];return t=$v(t,this.poolSize[0],this.padding,this.strides[0]),n=$v(n,this.poolSize[1],this.padding,this.strides[1]),s=$v(s,this.poolSize[2],this.padding,this.strides[2]),"channelsFirst"===this.dataFormat?[e[0],e[1],t,n,s]:[e[0],t,n,s,e[4]]}call(e,t){return Qo((()=>(this.invokeCallHook(e,t),this.poolingFunction(Py(e),this.poolSize,this.strides,this.padding,this.dataFormat))))}getConfig(){const e={poolSize:this.poolSize,padding:this.padding,strides:this.strides,dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}}class Ww extends Bw{constructor(e){super(e)}poolingFunction(e,t,n,s,r){return zg(r),Pg(s),Fw(e,t,n,s,r,"max")}}Ww.className="MaxPooling3D",Ro(Ww);class Vw extends Bw{constructor(e){super(e)}poolingFunction(e,t,n,s,r){return zg(r),Pg(s),Fw(e,t,n,s,r,"avg")}}Vw.className="AveragePooling3D",Ro(Vw);class Uw extends Yy{constructor(e){super(e),this.inputSpec=[new Hy({ndim:3})]}computeOutputShape(e){return[e[0],e[2]]}call(e,t){throw new ig}}class Gw extends Uw{constructor(e){super(e||{})}call(e,t){return Qo((()=>{const t=Py(e);return Qc(t,1)}))}}Gw.className="GlobalAveragePooling1D",Ro(Gw);class Hw extends Uw{constructor(e){super(e||{})}call(e,t){return Qo((()=>{const t=Py(e);return pc(t,1)}))}}Hw.className="GlobalMaxPooling1D",Ro(Hw);class jw extends Yy{constructor(e){super(e),this.dataFormat=null==e.dataFormat?"channelsLast":e.dataFormat,zg(this.dataFormat),this.inputSpec=[new Hy({ndim:4})]}computeOutputShape(e){return"channelsLast"===this.dataFormat?[e[0],e[3]]:[e[0],e[1]]}call(e,t){throw new ig}getConfig(){const e={dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}}class qw extends jw{call(e,t){return Qo((()=>{const t=Py(e);return"channelsLast"===this.dataFormat?Qc(t,[1,2]):Qc(t,[2,3])}))}}qw.className="GlobalAveragePooling2D",Ro(qw);class Kw extends jw{call(e,t){return Qo((()=>{const t=Py(e);return"channelsLast"===this.dataFormat?pc(t,[1,2]):pc(t,[2,3])}))}}Kw.className="GlobalMaxPooling2D",Ro(Kw);class Xw extends Yy{constructor(e){super(e),this.layer=e.layer}build(e){this.built=!0}get trainable(){return null!=this.layer&&this.layer.trainable}set trainable(e){null!=this.layer&&(this.layer.trainable=e)}get trainableWeights(){return this.layer.trainableWeights}get nonTrainableWeights(){return this.layer.nonTrainableWeights}get updates(){return this.layer._updates}get losses(){return this.layer.losses}getWeights(){return this.layer.getWeights()}setWeights(e){this.layer.setWeights(e)}getConfig(){const e={layer:{className:this.layer.getClassName(),config:this.layer.getConfig()}},t=super.getConfig();return Object.assign(e,t),e}setFastWeightInitDuringBuild(e){super.setFastWeightInitDuringBuild(e),null!=this.layer&&this.layer.setFastWeightInitDuringBuild(e)}static fromConfig(e,t,n={}){const s=qb(t.layer,n);delete t.layer;const r={layer:s};return Object.assign(r,t),new e(r)}}class Yw extends Xw{constructor(e){super(e),this.supportsMasking=!0}build(e){if((e=By(e)).length<3)throw new ag(`TimeDistributed layer expects an input shape >= 3D, but received input shape ${JSON.stringify(e)}`);this.inputSpec=[{shape:e}];const t=[e[0]].concat(e.slice(2));this.layer.built||(this.layer.build(t),this.layer.built=!0),super.build(e)}computeOutputShape(e){const t=[(e=By(e))[0]].concat(e.slice(2)),n=this.layer.computeOutputShape(t),s=e[1];return[n[0],s].concat(n.slice(1))}call(e,t){return Qo((()=>jv(((e,n)=>[Py(this.layer.call(e,t)),[]]),e=Py(e),[],!1,null,null,!1,!0)[1]))}}Yw.className="TimeDistributed",Ro(Yw);class Zw extends Xw{constructor(e){super(e);const t=e.layer.getConfig(),n={};n.className=e.layer.getClassName(),n.config=t,this.forwardLayer=qb(n),t.goBackwards=!0!==t.goBackwards;const s={};var r;if(s.className=e.layer.getClassName(),s.config=t,this.backwardLayer=qb(s),this.forwardLayer.name="forward_"+this.forwardLayer.name,this.backwardLayer.name="backward_"+this.backwardLayer.name,this.mergeMode=void 0===e.mergeMode?"concat":e.mergeMode,r=this.mergeMode,Ig(Mg,"BidirectionalMergeMode",r),e.weights)throw new ig("weights support is not implemented for Bidirectional layer yet.");this._stateful=e.layer.stateful,this.returnSequences=e.layer.returnSequences,this.returnState=e.layer.returnState,this.supportsMasking=!0,this._trainable=!0,this.inputSpec=e.layer.inputSpec,this.numConstants=null}get trainable(){return this._trainable}set trainable(e){this._trainable=e,null!=this.forwardLayer&&(this.forwardLayer.trainable=e),null!=this.backwardLayer&&(this.backwardLayer.trainable=e)}getWeights(){return this.forwardLayer.getWeights().concat(this.backwardLayer.getWeights())}setWeights(e){const t=e.length,n=Math.floor(t/2);this.forwardLayer.setWeights(e.slice(0,n)),this.backwardLayer.setWeights(e.slice(n))}computeOutputShape(e){let t,n,s,r=this.forwardLayer.computeOutputShape(e);return Array.isArray(r)&&Array.isArray(r[0])||(r=[r]),this.returnState?(s=r.slice(1),t=r[0]):t=r[0],"concat"===this.mergeMode?(t[t.length-1]*=2,n=[t]):n=null==this.mergeMode?[t,t.slice()]:[t],this.returnState?null==this.mergeMode?n.concat(s).concat(s.slice()):[t].concat(s).concat(s.slice()):pg(n)}apply(e,t){let n=null==t?null:t.initialState,s=null==t?null:t.constants;null==t&&(t={});const r=Hv(e,n,s,this.numConstants);if(e=r.inputs,n=r.initialState,s=r.constants,Array.isArray(e)&&(n=e.slice(1),e=e[0]),(null==n||0===n.length)&&null==s)return super.apply(e,t);const a=[],i=[];if(null!=n){const e=n.length;if(e%2>0)throw new ag("When passing `initialState` to a Bidrectional RNN, the state should be an Array containing the states of the underlying RNNs.");t.initialState=n,a.push(...n);const s=n.map((e=>new Hy({shape:e.shape})));this.forwardLayer.stateSpec=s.slice(0,e/2),this.backwardLayer.stateSpec=s.slice(e/2),i.push(...s)}if(null!=s)throw new ig("Support for constants in Bidirectional layers is not implemented yet.");const o=a[0]instanceof jy;for(const e of a)if(e instanceof jy!==o)throw new ag("The initial state of a Bidirectional layer cannot be specified as a mix of symbolic and non-symbolic tensors");if(o){const n=[e].concat(a),s=this.inputSpec.concat(i),r=this.inputSpec;this.inputSpec=s;const o=super.apply(n,t);return this.inputSpec=r,o}return super.apply(e,t)}call(e,t){return Qo((()=>{const n=t.initialState;let s,r,a,i;if(null==n)s=this.forwardLayer.call(e,t),r=this.backwardLayer.call(e,t);else{const a=n.slice(0,n.length/2),i=n.slice(n.length/2);s=this.forwardLayer.call(e,Object.assign(t,{initialState:a})),r=this.backwardLayer.call(e,Object.assign(t,{initialState:i}))}return this.returnState&&(Array.isArray(s)&&(a=s.slice(1).concat(r.slice(1))),s=s[0],r=r[0]),this.returnSequences&&(r=Dh(r,1)),"concat"===this.mergeMode?i=ry([s,r]):"sum"===this.mergeMode?i=pl(s,r):"ave"===this.mergeMode?i=ml(.5,pl(s,r)):"mul"===this.mergeMode?i=ml(s,r):null==this.mergeMode&&(i=[s,r]),this.returnState?null==this.mergeMode?i.concat(a):[i].concat(a):i}))}resetStates(e){this.forwardLayer.resetStates(),this.backwardLayer.resetStates()}build(e){Vg(this.forwardLayer.name,(()=>{this.forwardLayer.build(e)})),Vg(this.backwardLayer.name,(()=>{this.backwardLayer.build(e)})),this.built=!0}computeMask(e,t){let n;if(Array.isArray(t)&&(t=t[0]),n=this.returnSequences?null==this.mergeMode?[t,t]:t:null==this.mergeMode?[null,null]:null,this.returnState){const e=this.forwardLayer.states.map((e=>null));return Array.isArray(n)?n.concat(e).concat(e):[n].concat(e).concat(e)}return n}get trainableWeights(){return this.forwardLayer.trainableWeights.concat(this.backwardLayer.trainableWeights)}get nonTrainableWeights(){return this.forwardLayer.nonTrainableWeights.concat(this.backwardLayer.nonTrainableWeights)}setFastWeightInitDuringBuild(e){super.setFastWeightInitDuringBuild(e),null!=this.forwardLayer&&this.forwardLayer.setFastWeightInitDuringBuild(e),null!=this.backwardLayer&&this.backwardLayer.setFastWeightInitDuringBuild(e)}getConfig(){const e={mergeMode:this.mergeMode},t=super.getConfig();return Object.assign(e,t),e}static fromConfig(e,t){const n=qb(t.layer);if(delete t.layer,null!=t.numConstants)throw new ig("Deserialization of a Bidirectional layer with numConstants present is not supported yet.");const s=t;return s.layer=n,new e(s)}}function Jw(e){return new Jy(e)}function Qw(e){return new Sv(e)}function ek(e){return new wv(e)}function tk(e){return new kv(e)}function nk(e){return new Iv(e)}function sk(e){return new Tv(e)}function rk(e){return new Nv(e)}function ak(e){return new Wv(e)}function ik(e){return new Ov(e)}function ok(e){return new Lv(e)}function lk(e){return new Mv(e)}function uk(e){return new zv(e)}function ck(e){return new Bv(e)}function hk(e){return new Vv(e)}function pk(e){return new Uv(e)}function dk(e){return new Gv(e)}function fk(e){return new cw(e)}function mk(e){return new lw(e)}function gk(e){return new iw(e)}function yk(e){return new ow(e)}function bk(e){return new uw(e)}function xk(e){return new hw(e)}function vk(e){return new pw(e)}function wk(e){return new dw(e)}function kk(e){return new mw(e)}function Ik(e){return new yw(e)}function Sk(e){return new xw(e)}function Nk(e){return new kw(e)}function Tk(e){return new vw(e)}function Ck(e){return new ww(e)}function $k(e){return new bw(e)}function Ek(e){return new Sw(e)}function Ak(e){return new Ew(e)}function _k(e){return new Aw(e)}function Rk(e){return new _w(e)}function Fk(e){return new Mw(e)}function Dk(e){return Fk(e)}function Ok(e){return Fk(e)}function Mk(e){return new Pw(e)}function Lk(e){return Mk(e)}function zk(e){return Mk(e)}function Pk(e){return new Vw(e)}function Bk(e){return Pk(e)}function Wk(e){return Pk(e)}function Vk(e){return new Gw(e)}function Uk(e){return new qw(e)}function Gk(e){return new Hw(e)}function Hk(e){return new Kw(e)}function jk(e){return new Ow(e)}function qk(e){return new zw(e)}function Kk(e){return new Ww(e)}function Xk(e){return new Jv(e)}function Yk(e){return new Zv(e)}function Zk(e){return new ew(e)}function Jk(e){return new Qv(e)}function Qk(e){return new Yv(e)}function eI(e){return new Xv(e)}function tI(e){return new aw(e)}function nI(e){return new rw(e)}function sI(e){return new qv(e)}function rI(e){return new tw(e)}function aI(e){return new Zw(e)}function iI(e){return new Yw(e)}Zw.className="Bidirectional",Ro(Zw);const oI=Gk,lI=Hk,uI=jk,cI=qk;function hI(e){return new Nw(e)}function pI(e){return new Tw(e)}function dI(e){return new Cw(e)}function fI(e){return new fw(e)}function mI(e,t){return rx(e,t)}function gI(e,t){return lx(e,t)}function yI(e,t){return ux(e,t)}function bI(e,t){return ax(e,t)}function xI(e,t){return cx(e,t)}function vI(e,t){return ox(e,t)}function wI(e,t){return function(e,t){return Qo((()=>{const n=ix(e,t),s=function(e,t){return Qo((()=>Ei(fc(Uc(Zu(e,1),Zu(t,0))),"float32")))}(e,t),r=pl(n,s);return Ei(Ju(Nc(r,0),fl(n,r),0),"float32")}))}(e,t)}function kI(e,t){return tx(e,t)}function II(e,t){return Yb(e,t)}function SI(e,t){return Zb(e,t)}function NI(e,t){return Zb(e,t)}function TI(e,t){return Zb(e,t)}function CI(e,t){return Xb(e,t)}function $I(e,t){return Xb(e,t)}function EI(e,t){return Xb(e,t)}function AI(e){return new gv(e)}function _I(e){return fv(t=e),new gv({l1:null!=t?t.l1:null,l2:0});var t}function RI(e){return fv(t=e),new gv({l2:null!=t?t.l2:null,l1:0});var t}class FI extends Pb{constructor(){super(...arguments),this.model=null}setModel(e){if(!(e instanceof Wx))throw new Error("model must be a LayersModel, not some other Container");this.model=e}}function DI(e,t){return e<t}function OI(e,t){return e>t}class MI extends FI{constructor(e){if(super(),null==e&&(e={}),e.restoreBestWeights)throw new ig("restoreBestWeights = True is not implemented in EarlyStopping yet.");this.monitor=e.monitor||"val_loss",this.minDelta=Math.abs(e.minDelta||0),this.patience=e.patience||0,this.verbose=e.verbose||0,this.mode=e.mode||"auto",this.baseline=e.baseline,-1===["auto","min","max"].indexOf(this.mode)&&(console.warn(`EarlyStopping mode '${this.mode}' is invalid. Falling back to mode 'auto'.`),this.mode="auto"),"min"===this.mode?this.monitorFunc=DI:"max"===this.mode||-1!==this.monitor.indexOf("acc")?this.monitorFunc=OI:this.monitorFunc=DI,this.monitorFunc===DI&&(this.minDelta*=-1)}async onTrainBegin(e){this.wait=0,this.stoppedEpoch=0,null!=this.baseline?this.best=this.baseline:this.best=this.monitorFunc===DI?1/0:-1/0}async onEpochEnd(e,t){await Mb(t);const n=this.getMonitorValue(t);null!=n&&(this.monitorFunc(n-this.minDelta,this.best)?(this.best=n,this.wait=0):(this.wait++,this.wait>=this.patience&&(this.stoppedEpoch=e,this.model.stopTraining=!0)))}async onTrainEnd(e){this.stoppedEpoch>0&&this.verbose&&console.log(`Epoch ${this.stoppedEpoch}: early stopping.`)}getMonitorValue(e){null==e&&(e={});const t=e[this.monitor];return null==t&&console.warn(`Metric for EarlyStopping ${this.monitor} is not available. Available metrics are: ${Object.keys(e)}`),t}}const LI={earlyStopping:function(e){return new MI(e)}};var zI,PI;He().registerFlag("KEEP_INTERMEDIATE_TENSORS",(()=>!1),(e=>{e&&console.warn("Keep intermediate tensors is ON. This will print the values of all intermediate tensors during model inference. Not all models support this mode. For details, check e2e/benchmarks/ model_config.js. This significantly impacts performance.")})),function(e){e[e.DT_INVALID=0]="DT_INVALID",e[e.DT_FLOAT=1]="DT_FLOAT",e[e.DT_DOUBLE=2]="DT_DOUBLE",e[e.DT_INT32=3]="DT_INT32",e[e.DT_UINT8=4]="DT_UINT8",e[e.DT_INT16=5]="DT_INT16",e[e.DT_INT8=6]="DT_INT8",e[e.DT_STRING=7]="DT_STRING",e[e.DT_COMPLEX64=8]="DT_COMPLEX64",e[e.DT_INT64=9]="DT_INT64",e[e.DT_BOOL=10]="DT_BOOL",e[e.DT_QINT8=11]="DT_QINT8",e[e.DT_QUINT8=12]="DT_QUINT8",e[e.DT_QINT32=13]="DT_QINT32",e[e.DT_BFLOAT16=14]="DT_BFLOAT16",e[e.DT_QINT16=15]="DT_QINT16",e[e.DT_QUINT16=16]="DT_QUINT16",e[e.DT_UINT16=17]="DT_UINT16",e[e.DT_COMPLEX128=18]="DT_COMPLEX128",e[e.DT_HALF=19]="DT_HALF",e[e.DT_RESOURCE=20]="DT_RESOURCE",e[e.DT_VARIANT=21]="DT_VARIANT",e[e.DT_UINT32=22]="DT_UINT32",e[e.DT_UINT64=23]="DT_UINT64",e[e.DT_FLOAT_REF=101]="DT_FLOAT_REF",e[e.DT_DOUBLE_REF=102]="DT_DOUBLE_REF",e[e.DT_INT32_REF=103]="DT_INT32_REF",e[e.DT_UINT8_REF=104]="DT_UINT8_REF",e[e.DT_INT16_REF=105]="DT_INT16_REF",e[e.DT_INT8_REF=106]="DT_INT8_REF",e[e.DT_STRING_REF=107]="DT_STRING_REF",e[e.DT_COMPLEX64_REF=108]="DT_COMPLEX64_REF",e[e.DT_INT64_REF=109]="DT_INT64_REF",e[e.DT_BOOL_REF=110]="DT_BOOL_REF",e[e.DT_QINT8_REF=111]="DT_QINT8_REF",e[e.DT_QUINT8_REF=112]="DT_QUINT8_REF",e[e.DT_QINT32_REF=113]="DT_QINT32_REF",e[e.DT_BFLOAT16_REF=114]="DT_BFLOAT16_REF",e[e.DT_QINT16_REF=115]="DT_QINT16_REF",e[e.DT_QUINT16_REF=116]="DT_QUINT16_REF",e[e.DT_UINT16_REF=117]="DT_UINT16_REF",e[e.DT_COMPLEX128_REF=118]="DT_COMPLEX128_REF",e[e.DT_HALF_REF=119]="DT_HALF_REF",e[e.DT_RESOURCE_REF=120]="DT_RESOURCE_REF",e[e.DT_VARIANT_REF=121]="DT_VARIANT_REF",e[e.DT_UINT32_REF=122]="DT_UINT32_REF",e[e.DT_UINT64_REF=123]="DT_UINT64_REF"}(zI||(zI={})),function(e){let t;!function(e){e[e.LEGACY=0]="LEGACY",e[e.V1=1]="V1",e[e.V2=2]="V2"}(t=e.CheckpointFormatVersion||(e.CheckpointFormatVersion={}))}(PI||(PI={}));const BI={};function WI(e,t){const n={tfOpName:e,category:"custom",inputs:[],attrs:[],customExecutor:t};BI[e]=n}function VI(e){return BI[e]}function UI(e){delete BI[e]}function GI(e,t,n,s,r){const a=t.inputParams[e];if(a&&void 0!==a.inputIndexStart){const e=a.inputIndexStart,i=0===a.inputIndexEnd?void 0:void 0===a.inputIndexEnd?e+1:a.inputIndexEnd;if("tensor"===a.type)return HI(t.inputNames[a.inputIndexStart],n,s,r);if("tensors"===a.type)return t.inputNames.slice(e,i).map((e=>HI(e,n,s,r)));const o=HI(t.inputNames.slice(e)[0],n,s,r),l=o.dataSync();return"number"===a.type?l[0]:Oe(o.shape,l)}const i=t.attrParams[e];return i&&i.value}function HI(e,t,n,s){const[r,a]=KI(e);if(null!=s){const e=s.getHashTableHandleByName(r);if(null!=e)return e}const i=n.currentContextIds.find((e=>!!t[qI(r,e)]));return void 0!==i?t[qI(r,i)][a]:void 0}function jI(e,t){const[n,s,r]=KI(e);return[qI(n,t&&t.currentContextId),s,r]}function qI(e,t){return t?`${e}-${t}`:e}function KI(e){const t=e.split(":");if(1===t.length)return[e,0,void 0];const n=t[0],s=3===t.length?t[1]:void 0;return[n,Number(t[t.length-1]),s]}function XI(e,t,n){let s=GI("pad",e,t,n);if("explicit"===s){s=GI("explicitPaddings",e,t,n);const r=[[0,0],[0,0],[0,0],[0,0]];for(let e=0;e<4;e++)r[e][0]=s[2*e],r[e][1]=s[2*e+1];return r}return s}function YI(e){return e.kept?e:Ai(e)}const ZI=[{tfOpName:"Add",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"AddV2",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"AddN",category:"arithmetic",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}]},{tfOpName:"BiasAdd",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"Sub",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"RealDiv",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Div",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"DivNoNan",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"FloorDiv",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Mul",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Maximum",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Minimum",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Pow",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"SquaredDifference",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Mod",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"FloorMod",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}],JI=[{tfOpName:"Abs",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Acos",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Asin",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Atan",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Atan2",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"y",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Ceil",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ClipByValue",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"clipValueMin",type:"number"},{start:2,name:"clipValueMax",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Complex",category:"basic_math",inputs:[{start:0,name:"real",type:"tensor"},{start:1,name:"imag",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ComplexAbs",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Cos",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Cosh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Elu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Exp",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Floor",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Log",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Imag",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"Tout",name:"outputType",type:"dtype",notSupported:!0}]},{tfOpName:"Neg",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Real",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"Tout",name:"outputType",type:"dtype",notSupported:!0}]},{tfOpName:"Prelu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"alpha",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Relu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Relu6",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Selu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sigmoid",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sin",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sinh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sqrt",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Rsqrt",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Square",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Tan",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Tanh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sign",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Round",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Expm1",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Log1p",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Reciprocal",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Softplus",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Asinh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Acosh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Atanh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Erf",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Prod",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axes",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool",notSupported:!0},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LeakyRelu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"alpha",name:"alpha",type:"number",defaultValue:.2},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"IsNan",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}],QI=[{tfOpName:"EmptyTensorList",category:"control",inputs:[{start:0,name:"elementShape",type:"shape"},{start:1,name:"maxNumElements",type:"number"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"LoopCond",category:"control",inputs:[{start:0,name:"pred",type:"tensor"}]},{tfOpName:"Switch",category:"control",inputs:[{start:0,name:"data",type:"tensor"},{start:1,name:"pred",type:"tensor"}]},{tfOpName:"Merge",category:"control",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}]},{tfOpName:"Enter",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"frame_name",name:"frameName",type:"string"},{tfName:"is_constant",name:"isConstant",type:"bool"}]},{tfOpName:"Exit",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"NextIteration",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"TensorArrayV3",category:"control",inputs:[{start:0,name:"size",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"element_shape",name:"elementShape",type:"shape"},{tfName:"dynamic_size",name:"dynamicSize",type:"bool"},{tfName:"clear_after_read",name:"clearAfterRead",type:"bool"},{tfName:"identical_element_shapes",name:"identicalElementShapes",type:"bool"},{tfName:"tensor_array_name",name:"name",type:"string"}]},{tfOpName:"TensorArrayWriteV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"tensor",type:"tensor"},{start:3,name:"flowIn",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"TensorArrayReadV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"flowIn",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"TensorArrayGatherV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"flowIn",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"element_shape",name:"elementShape",type:"shape"}]},{tfOpName:"TensorArrayScatterV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"tensor",type:"tensor"},{start:3,name:"flowIn",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"TensorArrayConcatV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"flowIn",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"element_shape_except0",name:"elementShapeExcept0",type:"shape",notSupported:!0}]},{tfOpName:"TensorArraySplitV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"tensor",type:"tensor"},{start:2,name:"lengths",type:"number[]"},{start:3,name:"flowIn",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"TensorArraySizeV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"flowIn",type:"number"}]},{tfOpName:"TensorArrayCloseV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"}]},{tfOpName:"StatelessIf",category:"control",inputs:[{start:0,name:"cond",type:"tensor"},{start:1,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"then_branch",name:"thenBranch",type:"func"},{tfName:"else_branch",name:"elseBranch",type:"func"}]},{tfOpName:"If",category:"control",inputs:[{start:0,name:"cond",type:"tensor"},{start:1,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"then_branch",name:"thenBranch",type:"func"},{tfName:"else_branch",name:"elseBranch",type:"func"}]},{tfOpName:"StatelessWhile",category:"control",inputs:[{start:0,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"cond",name:"cond",type:"func"},{tfName:"body",name:"body",type:"func"}]},{tfOpName:"While",category:"control",inputs:[{start:0,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"cond",name:"cond",type:"func"},{tfName:"body",name:"body",type:"func"}]},{tfOpName:"TensorListScatter",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListScatterV2",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"elementShape",type:"shape"},{start:3,name:"numElements",type:"number"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListGather",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListGetItem",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListSetItem",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"tensor",type:"tensor"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListReserve",category:"control",inputs:[{start:0,name:"elementShape",type:"shape"},{start:1,name:"numElements",type:"number"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListFromTensor",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListStack",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"},{tfName:"num_elements",name:"numElements",type:"dtype"}]},{tfOpName:"TensorListSplit",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"elementShape",type:"shape"},{start:2,name:"lengths",type:"number[]"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListConcat",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"}],attrs:[{tfName:"element_shape",name:"elementShape",type:"shape"},{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListConcatV2",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"}],attrs:[{tfName:"element_shape",name:"elementShape",type:"shape"},{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListPopBack",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListPushBack",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"tensor",type:"tensor"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListLength",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"}]},{tfOpName:"TensorListResize",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"size",type:"number"}]}],eS=[{tfOpName:"AvgPool",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MaxPool",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[],notSupported:!0},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MaxPoolWithArgmax",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"include_batch_in_index",name:"includeBatchInIndex",type:"bool"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"AvgPool3D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MaxPool3D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Conv1D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"stride",name:"stride",type:"number"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NWC"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"dilation",name:"dilation",type:"number",defaultValue:1}]},{tfOpName:"Conv2D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"useCudnnOnGpu",name:"useCudnnOnGpu",type:"bool"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"_FusedConv2D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"},{start:2,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"num_args",name:"numArgs",type:"number"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"use_cudnn_on_gpu",name:"useCudnnOnGpu",type:"bool",defaultValue:!0},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"dilations",name:"dilations",type:"number[]",defaultValue:[1,1,1,1]},{tfName:"fused_ops",name:"fusedOps",type:"string[]",defaultValue:[]},{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:1e-4},{tfName:"leakyrelu_alpha",name:"leakyreluAlpha",type:"number"}]},{tfOpName:"Conv2DBackpropInput",category:"convolution",inputs:[{start:2,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"},{start:0,name:"outputShape",type:"number[]"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]",notSupported:!0}]},{tfOpName:"DepthwiseConv2d",category:"convolution",inputs:[{start:0,name:"input",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"DepthwiseConv2dNative",category:"convolution",inputs:[{start:0,name:"input",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"FusedDepthwiseConv2dNative",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"},{start:2,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"num_args",name:"numArgs",type:"number"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"dilations",name:"dilations",type:"number[]",defaultValue:[1,1,1,1]},{tfName:"fused_ops",name:"fusedOps",type:"string[]",defaultValue:[]},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]}]},{tfOpName:"Conv3D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"Dilation2D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"rates",name:"dilations",type:"number[]"},{tfName:"padding",name:"pad",type:"string"}]}],tS=[{tfOpName:"Fill",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"},{start:1,name:"value",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"LinSpace",category:"creation",inputs:[{start:0,name:"start",type:"number"},{start:1,name:"stop",type:"number"},{start:2,name:"num",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"OneHot",category:"creation",inputs:[{start:0,name:"indices",type:"tensor"},{start:1,name:"depth",type:"number"},{start:2,name:"onValue",type:"number",defaultValue:1},{start:3,name:"offValue",type:"number",defaultValue:0}],attrs:[{tfName:"axis",name:"axis",type:"number",notSupported:!0},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Ones",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"OnesLike",category:"creation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"}]},{tfOpName:"RandomUniform",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"minval",name:"minval",type:"number",defaultValue:0},{tfName:"maxval",name:"maxval",type:"number",defaultValue:1},{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"seed",name:"seed",type:"number",defaultValue:0},{tfName:"seed2",name:"seed2",type:"number",defaultValue:0,notSupported:!0},{tfName:"T",name:"T",type:"number",notSupported:!0}]},{tfOpName:"Range",category:"creation",inputs:[{start:0,name:"start",type:"number"},{start:1,name:"stop",type:"number"},{start:2,name:"step",type:"number",defaultValue:0}],attrs:[{tfName:"Tidx",name:"dtype",type:"dtype"}]},{tfOpName:"TruncatedNormal",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"means",name:"mean",type:"number",defaultValue:0},{tfName:"stddev",name:"stdDev",type:"number",defaultValue:1},{tfName:"seed",name:"seed",type:"number"},{tfName:"seed2",name:"seed2",type:"number",defaultValue:0,notSupported:!0},{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"T",name:"T",type:"number",notSupported:!0}]},{tfOpName:"Zeros",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"ZerosLike",category:"creation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"Multinomial",category:"creation",inputs:[{start:0,name:"logits",type:"tensor"},{start:1,name:"numSamples",type:"number"}],attrs:[{tfName:"seed",name:"seed",type:"number"},{tfName:"seed2",name:"seed2",type:"number"},{tfName:"T",name:"dtype",type:"dtype"},{tfName:"output_dtype",name:"output_dtype",type:"dtype"}]}],nS=[{tfOpName:"NonMaxSuppressionV2",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"}]},{tfOpName:"NonMaxSuppressionV3",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"},{start:4,name:"scoreThreshold",type:"number"}]},{tfOpName:"NonMaxSuppressionV4",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"},{start:4,name:"scoreThreshold",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"T_threshold",name:"threshold",type:"dtype",notSupported:!0},{tfName:"pad_to_max_output_size",name:"padToMaxOutputSize",type:"bool"}]},{tfOpName:"NonMaxSuppressionV5",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"},{start:4,name:"scoreThreshold",type:"number"},{start:5,name:"softNmsSigma",type:"number"}]},{tfOpName:"Where",category:"dynamic",inputs:[{start:0,name:"condition",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ListDiff",category:"dynamic",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"y",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}],sS=[{tfOpName:"LowerBound",category:"evaluation",inputs:[{start:0,name:"sortedSequence",type:"tensor"},{start:1,name:"values",type:"tensor"}]},{tfOpName:"TopKV2",category:"evaluation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"k",type:"number"}],attrs:[{tfName:"sorted",name:"sorted",type:"bool"}]},{tfOpName:"UpperBound",category:"evaluation",inputs:[{start:0,name:"sortedSequence",type:"tensor"},{start:1,name:"values",type:"tensor"}]},{tfOpName:"Unique",category:"evaluation",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"UniqueV2",category:"evaluation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]}],rS=[{tfOpName:"PlaceholderWithDefault",category:"graph",inputs:[{start:0,name:"default",type:"tensor"}],attrs:[{tfName:"shape",name:"shape",type:"shape"},{tfName:"dtype",name:"dtype",type:"dtype"}]},{tfOpName:"Placeholder",category:"graph",attrs:[{tfName:"shape",name:"shape",type:"shape"},{tfName:"dtype",name:"dtype",type:"dtype"}]},{tfOpName:"Const",category:"graph"},{tfOpName:"Identity",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"IdentityN",category:"graph",inputs:[{start:0,end:0,name:"x",type:"tensors"}]},{tfOpName:"Snapshot",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"Rank",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"Size",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"Shape",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"ShapeN",category:"graph",inputs:[{start:0,end:0,name:"x",type:"tensors"}]},{tfOpName:"Print",category:"graph",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"data",type:"tensors"}],attrs:[{tfName:"message",name:"message",type:"string"},{tfName:"first_n",name:"firstN",type:"number",notSupported:!0},{tfName:"summarize",name:"summarize",type:"number",defaultValue:3}]},{tfOpName:"NoOp",category:"graph",inputs:[]},{tfOpName:"StopGradient",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"FakeQuantWithMinMaxVars",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"min",name:"min",type:"number"},{tfName:"max",name:"max",type:"number"}]}],aS=[{tfOpName:"HashTable",category:"hash_table",inputs:[],attrs:[{tfName:"shared_name",name:"sharedName",type:"string"},{tfName:"use_node_name_sharing",name:"useNodeNameSharing",type:"bool"},{tfName:"key_dtype",name:"keyDType",type:"dtype"},{tfName:"value_dtype",name:"valueDType",type:"dtype"}]},{tfOpName:"HashTableV2",category:"hash_table",inputs:[],attrs:[{tfName:"shared_name",name:"sharedName",type:"string"},{tfName:"use_node_name_sharing",name:"useNodeNameSharing",type:"bool"},{tfName:"key_dtype",name:"keyDType",type:"dtype"},{tfName:"value_dtype",name:"valueDType",type:"dtype"}]},{tfOpName:"LookupTableImport",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"values",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableImportV2",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"values",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableFind",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableFindV2",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableSize",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"}]},{tfOpName:"LookupTableSizeV2",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"}]}],iS=[{tfOpName:"ResizeBilinear",category:"image",inputs:[{start:0,name:"images",type:"tensor"},{start:1,name:"size",type:"number[]"}],attrs:[{tfName:"align_corners",name:"alignCorners",type:"bool"},{tfName:"half_pixel_centers",name:"halfPixelCenters",type:"bool"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ResizeNearestNeighbor",category:"image",inputs:[{start:0,name:"images",type:"tensor"},{start:1,name:"size",type:"number[]"}],attrs:[{tfName:"align_corners",name:"alignCorners",type:"bool"},{tfName:"half_pixel_centers",name:"halfPixelCenters",type:"bool"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"CropAndResize",category:"image",inputs:[{start:0,name:"image",type:"tensor"},{start:1,name:"boxes",type:"tensor"},{start:2,name:"boxInd",type:"tensor"},{start:3,name:"cropSize",type:"number[]"}],attrs:[{tfName:"method",name:"method",type:"string"},{tfName:"extrapolation_value",name:"extrapolationValue",type:"number"}]},{tfOpName:"ImageProjectiveTransformV3",category:"image",inputs:[{start:0,name:"images",type:"tensor"},{start:1,name:"transforms",type:"tensor"},{start:2,name:"outputShape",type:"number[]"},{start:3,name:"fillValue",type:"number"}],attrs:[{tfName:"interpolation",name:"interpolation",type:"string"},{tfName:"fill_mode",name:"fillMode",type:"string"}]}],oS=[{tfOpName:"Equal",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"NotEqual",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Greater",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"GreaterEqual",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Less",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LessEqual",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LogicalAnd",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LogicalNot",category:"logical",inputs:[{start:0,name:"a",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LogicalOr",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Select",category:"logical",inputs:[{start:0,name:"condition",type:"tensor"},{start:1,name:"a",type:"tensor"},{start:2,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"SelectV2",category:"logical",inputs:[{start:0,name:"condition",type:"tensor"},{start:1,name:"a",type:"tensor"},{start:2,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}],lS=[{tfOpName:"_FusedMatMul",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"},{start:2,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"num_args",name:"numArgs",type:"number"},{tfName:"fused_ops",name:"fusedOps",type:"string[]",defaultValue:[]},{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:1e-4},{tfName:"transpose_a",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"transpose_b",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MatMul",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"transpose_a",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"transpose_b",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"BatchMatMul",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"adj_x",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"adj_y",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"BatchMatMulV2",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"adj_x",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"adj_y",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Transpose",category:"matrices",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"perm",type:"number[]"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Einsum",category:"matrices",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}],attrs:[{tfName:"equation",name:"equation",type:"string"},{tfName:"N",name:"n",type:"number",defaultValue:2},{tfName:"T",name:"dtype",type:"dtype"}]}],uS=[{tfOpName:"EuclideanNorm",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool",defaultValue:!1}]},{tfOpName:"FusedBatchNorm",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"scale",type:"tensor"},{start:2,name:"offset",type:"tensor"},{start:3,name:"mean",type:"tensor"},{start:4,name:"variance",type:"tensor"}],attrs:[{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:.001},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"FusedBatchNormV2",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"scale",type:"tensor"},{start:2,name:"offset",type:"tensor"},{start:3,name:"mean",type:"tensor"},{start:4,name:"variance",type:"tensor"}],attrs:[{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:.001},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"FusedBatchNormV3",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"scale",type:"tensor"},{start:2,name:"offset",type:"tensor"},{start:3,name:"mean",type:"tensor"},{start:4,name:"variance",type:"tensor"}],attrs:[{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:.001},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"LRN",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"depth_radius",name:"radius",type:"number",defaultValue:5},{tfName:"bias",name:"bias",type:"number",defaultValue:1},{tfName:"alpha",name:"alpha",type:"number",defaultValue:1},{tfName:"beta",name:"beta",type:"number",defaultValue:.5}]},{tfOpName:"Softmax",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"LogSoftmax",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"SparseToDense",category:"normalization",inputs:[{start:0,name:"sparseIndices",type:"tensor"},{start:1,name:"outputShape",type:"number[]"},{start:2,name:"sparseValues",type:"tensor"},{start:3,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"validate_indices",name:"validateIndices",type:"bool",defaultValue:!0,notSupported:!0}]}],cS=[{tfOpName:"Bincount",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"size",type:"number"},{start:2,name:"weights",type:"tensor"}]},{tfOpName:"DenseBincount",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"size",type:"number"},{start:2,name:"weights",type:"tensor"}],attrs:[{tfName:"binary_output",name:"binaryOutput",type:"bool"}]},{tfOpName:"Max",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Mean",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Min",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Sum",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"All",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Any",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"ArgMax",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]},{tfOpName:"ArgMin",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]},{tfOpName:"Prod",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Cumprod",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}],attrs:[{tfName:"exclusive",name:"exclusive",type:"bool"},{tfName:"reverse",name:"reverse",type:"bool"}]},{tfOpName:"Cumsum",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}],attrs:[{tfName:"exclusive",name:"exclusive",type:"bool"},{tfName:"reverse",name:"reverse",type:"bool"}]}],hS=[{tfOpName:"ConcatV2",category:"slice_join",inputs:[{start:0,end:-1,name:"tensors",type:"tensors"},{start:-1,name:"axis",type:"number"}],attrs:[{tfName:"N",name:"n",type:"number",defaultValue:2}]},{tfOpName:"Concat",category:"slice_join",inputs:[{start:1,end:0,name:"tensors",type:"tensors"},{start:0,name:"axis",type:"number"}],attrs:[{tfName:"N",name:"n",type:"number",defaultValue:2}]},{tfOpName:"GatherV2",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"indices",type:"tensor"},{start:2,name:"axis",type:"number",defaultValue:0}],attrs:[{tfName:"batch_dims",name:"batchDims",type:"number",defaultValue:0}]},{tfOpName:"Gather",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"indices",type:"tensor"}],attrs:[{tfName:"validate_indices",name:"validateIndices",type:"bool",notSupported:!0}]},{tfOpName:"Reverse",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"dims",type:"bool[]"}]},{tfOpName:"ReverseV2",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}]},{tfOpName:"Slice",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"begin",type:"number[]"},{start:2,name:"size",type:"number[]"}]},{tfOpName:"StridedSlice",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"begin",type:"number[]"},{start:2,name:"end",type:"number[]"},{start:3,name:"strides",type:"number[]"}],attrs:[{tfName:"begin_mask",name:"beginMask",type:"number",defaultValue:0},{tfName:"end_mask",name:"endMask",type:"number",defaultValue:0},{tfName:"new_axis_mask",name:"newAxisMask",type:"number",defaultValue:0},{tfName:"ellipsis_mask",name:"ellipsisMask",type:"number",defaultValue:0},{tfName:"shrink_axis_mask",name:"shrinkAxisMask",type:"number",defaultValue:0}]},{tfOpName:"Pack",category:"slice_join",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}],attrs:[{tfName:"axis",name:"axis",type:"number",defaultValue:0}]},{tfOpName:"Unpack",category:"slice_join",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"axis",name:"axis",type:"number",defaultValue:0},{tfName:"num",name:"num",type:"number",defaultValue:0,notSupported:!0}]},{tfOpName:"Tile",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"reps",type:"number[]"}]},{tfOpName:"Split",category:"slice_join",inputs:[{start:0,name:"axis",type:"number",defaultValue:0},{start:1,name:"x",type:"tensor"}],attrs:[{tfName:"num_split",name:"numOrSizeSplits",type:"number",defaultValue:1}]},{tfOpName:"SplitV",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"numOrSizeSplits",type:"number[]"},{start:2,name:"axis",type:"number",defaultValue:0}]},{tfOpName:"ScatterNd",category:"slice_join",inputs:[{start:0,name:"indices",type:"tensor"},{start:1,name:"values",type:"tensor"},{start:2,name:"shape",type:"number[]"}]},{tfOpName:"GatherNd",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"indices",type:"tensor"}]},{tfOpName:"SparseToDense",category:"slice_join",inputs:[{start:0,name:"sparseIndices",type:"tensor"},{start:1,name:"outputShape",type:"number[]"},{start:2,name:"sparseValues",type:"tensor"},{start:3,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"validate_indices",name:"validateIndices",type:"bool",defaultValue:!1,notSupported:!0}]}],pS=[{tfOpName:"SparseFillEmptyRows",category:"sparse",inputs:[{start:0,name:"indices",type:"tensor"},{start:1,name:"values",type:"tensor"},{start:2,name:"denseShape",type:"tensor"},{start:3,name:"defaultValue",type:"tensor"}]},{tfOpName:"SparseReshape",category:"sparse",inputs:[{start:0,name:"inputIndices",type:"tensor"},{start:1,name:"inputShape",type:"tensor"},{start:2,name:"newShape",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"SparseSegmentMean",category:"sparse",inputs:[{start:0,name:"data",type:"tensor"},{start:1,name:"indices",type:"tensor"},{start:2,name:"segmentIds",type:"tensor"}]},{tfOpName:"SparseSegmentSum",category:"sparse",inputs:[{start:0,name:"data",type:"tensor"},{start:1,name:"indices",type:"tensor"},{start:2,name:"segmentIds",type:"tensor"}]}],dS=[{tfOpName:"FFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"IFFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"RFFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"fft_length",type:"number",notSupported:!0}]},{tfOpName:"IRFFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"fft_length",type:"number",notSupported:!0}]}],fS=[{tfOpName:"StringNGrams",category:"string",inputs:[{start:0,name:"data",type:"tensor"},{start:1,name:"dataSplits",type:"tensor"}],attrs:[{tfName:"separator",name:"separator",type:"string"},{tfName:"ngram_widths",name:"nGramWidths",type:"number[]"},{tfName:"left_pad",name:"leftPad",type:"string"},{tfName:"right_pad",name:"rightPad",type:"string"},{tfName:"pad_width",name:"padWidth",type:"number"},{tfName:"preserve_short_sequences",name:"preserveShortSequences",type:"bool"}],outputs:["ngrams","ngrams_splits"]},{tfOpName:"StringSplit",category:"string",inputs:[{start:0,name:"input",type:"tensor"},{start:1,name:"delimiter",type:"tensor"}],attrs:[{tfName:"skip_empty",name:"skipEmpty",type:"bool"}],outputs:["indices","values","shape"]},{tfOpName:"StringToHashBucketFast",category:"string",inputs:[{start:0,name:"input",type:"tensor"}],attrs:[{tfName:"num_buckets",name:"numBuckets",type:"number"}]}],mS=[{tfOpName:"Cast",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"SrcT",name:"sdtype",type:"dtype",notSupported:!0},{tfName:"DstT",name:"dtype",type:"dtype"}]},{tfOpName:"ExpandDims",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]},{tfOpName:"MirrorPad",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"padding",type:"number[]"}],attrs:[{tfName:"mode",name:"mode",type:"string"}]},{tfOpName:"Pad",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"padding",type:"number[]"}],attrs:[{tfName:"constant_value",name:"constantValue",type:"number",defaultValue:0}]},{tfOpName:"PadV2",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"padding",type:"number[]"},{start:2,name:"constantValue",type:"number",defaultValue:0}]},{tfOpName:"Reshape",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"shape",type:"number[]"}]},{tfOpName:"Squeeze",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"axis",tfDeprecatedName:"squeeze_dims",name:"axis",type:"number[]"}]},{tfOpName:"SpaceToBatchND",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"blockShape",type:"number[]"},{start:2,name:"paddings",type:"number[]"}]},{tfOpName:"BatchToSpaceND",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"blockShape",type:"number[]"},{start:2,name:"crops",type:"number[]"}]},{tfOpName:"DepthToSpace",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"block_size",name:"blockSize",type:"number"},{tfName:"data_format",name:"dataFormat",type:"string"}]},{tfOpName:"BroadcastTo",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"shape",type:"number[]"}],attrs:[]},{tfOpName:"BroadcastArgs",category:"transformation",inputs:[{start:0,name:"s0",type:"tensor"},{start:1,name:"s1",type:"tensor"}],attrs:[]}];class gS{static get Instance(){return this._instance||(this._instance=new this)}constructor(){const e=[].concat(...[N,T,C,$,E,A,_,R,F,D,O,M,L,z,P,B,W,V,U].map((e=>e.json)));this.opMappers=e.reduce(((e,t)=>(e[t.tfOpName]=t,e)),{})}transformGraph(e,t={}){const n=e.node,s=[],r=[],a=[],i=n.reduce(((e,t)=>(e[t.name]=this.mapNode(t),t.op.startsWith("Placeholder")?s.push(e[t.name]):"Const"===t.op?r.push(e[t.name]):null!=t.input&&0!==t.input.length||a.push(e[t.name]),e)),{});let o=[];const l=[];let u={},c={};null!=t&&(u=this.mapSignatureEntries(t.inputs),c=this.mapSignatureEntries(t.outputs));const h=Object.keys(i);h.forEach((e=>{const t=i[e];t.inputNames.forEach(((e,n)=>{const[s,,r]=jI(e),a=i[s];if(null!=a.outputs){const e=a.outputs.indexOf(r);if(-1!==e){const r=`${s}:${e}`;t.inputNames[n]=r}}t.inputs.push(a),a.children.push(t)}))})),0===Object.keys(c).length?h.forEach((e=>{const t=i[e];0===t.children.length&&l.push(t)})):Object.keys(c).forEach((e=>{const[t]=jI(e),n=i[t];null!=n&&(n.signatureKey=c[e],l.push(n))})),Object.keys(u).length>0?Object.keys(u).forEach((e=>{const[t]=jI(e),n=i[t];n&&(n.signatureKey=u[e],o.push(n))})):o=s;let p={};null!=e.library&&null!=e.library.function&&(p=e.library.function.reduce(((e,t)=>(e[t.signature.name]=this.mapFunction(t),e)),{}));const d={nodes:i,inputs:o,outputs:l,weights:r,placeholders:s,signature:t,functions:p};return a.length>0&&(d.initNodes=a),d}mapSignatureEntries(e){return Object.keys(e||{}).reduce(((t,n)=>(t[e[n].name]=n,t)),{})}mapNode(e){const t=VI(e.op)||this.opMappers[e.op]||{};null==e.attr&&(e.attr={});const n={name:e.name,op:e.op,category:t.category,inputNames:(e.input||[]).map((e=>e.startsWith("^")?e.slice(1):e)),inputs:[],children:[],inputParams:{},attrParams:{},rawAttrs:e.attr,outputs:t.outputs};return null!=t.inputs&&(n.inputParams=t.inputs.reduce(((e,t)=>(e[t.name]={type:t.type,inputIndexStart:t.start,inputIndexEnd:t.end},e)),{})),null!=t.attrs&&(n.attrParams=t.attrs.reduce(((t,n)=>{const s=n.type;let r;switch(n.type){case"string":r=bS(e.attr,n.tfName,n.defaultValue),void 0===r&&n.tfDeprecatedName&&(r=bS(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"string[]":r=$S(e.attr,n.tfName,n.defaultValue),void 0===r&&n.tfDeprecatedName&&(r=$S(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"number":r=vS(e.attr,n.tfName,n.defaultValue||0),void 0===r&&n.tfDeprecatedName&&(r=vS(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"number[]":r=CS(e.attr,n.tfName,n.defaultValue),void 0===r&&n.tfDeprecatedName&&(r=CS(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"bool":r=xS(e.attr,n.tfName,n.defaultValue),void 0===r&&n.tfDeprecatedName&&(r=xS(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"bool[]":r=AS(e.attr,n.tfName,n.defaultValue),void 0===r&&n.tfDeprecatedName&&(r=AS(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"shape":r=TS(e.attr,n.tfName,n.defaultValue),void 0===r&&n.tfDeprecatedName&&(r=TS(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"shape[]":r=ES(e.attr,n.tfName,n.defaultValue),void 0===r&&n.tfDeprecatedName&&(r=ES(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"dtype":r=IS(e.attr,n.tfName,n.defaultValue),void 0===r&&n.tfDeprecatedName&&(r=IS(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"dtype[]":r=SS(e.attr,n.tfName,n.defaultValue),void 0===r&&n.tfDeprecatedName&&(r=SS(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"func":r=kS(e.attr,n.tfName,n.defaultValue),void 0===r&&n.tfDeprecatedName&&(r=kS(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"tensor":case"tensors":break;default:throw new Error(`Unsupported param type: ${n.type} for op: ${e.op}`)}return t[n.name]={value:r,type:s},t}),{})),n}mapFunction(e){const t=e.nodeDef,n=[];let s={};null!=t&&(s=t.reduce(((e,t)=>(e[t.name]=this.mapNode(t),"Const"===t.op&&n.push(e[t.name]),e)),{}));const r=[],a=[];e.signature.inputArg.forEach((e=>{const[t]=jI(e.name),n={name:t,op:"Placeholder",inputs:[],inputNames:[],category:"graph",inputParams:{},attrParams:{dtype:{value:wS(e.type),type:"dtype"}},children:[]};n.signatureKey=e.name,r.push(n),s[t]=n})),Object.keys(s).forEach((e=>{const t=s[e];t.inputNames.forEach(((e,n)=>{const[r,,a]=jI(e),i=s[r];if(null!=i.outputs){const e=i.outputs.indexOf(a);if(-1!==e){const s=`${r}:${e}`;t.inputNames[n]=s}}t.inputs.push(i),i.children.push(t)}))}));const i=e.ret;e.signature.outputArg.forEach((e=>{const[t,n]=jI(i[e.name]),r=s[t];null!=r&&(r.defaultOutput=n,a.push(r))}));const o=this.mapArgsToSignature(e);return{nodes:s,inputs:r,outputs:a,weights:n,placeholders:[],signature:o}}mapArgsToSignature(e){return{methodName:e.signature.name,inputs:e.signature.inputArg.reduce(((e,t)=>(e[t.name]=this.mapArgToTensorInfo(t),e)),{}),outputs:e.signature.outputArg.reduce(((t,n)=>(t[n.name]=this.mapArgToTensorInfo(n,e.ret),t)),{})}}mapArgToTensorInfo(e,t){let n=e.name;return null!=t&&(n=t[n]),{name:n,dtype:e.type}}}function yS(e,t){const n=Array.isArray(e)?String.fromCharCode.apply(null,e):function(e){const t=He().global;if(void 0!==t.atob)return t.atob(e);if("undefined"!=typeof Buffer)return new Buffer(e,"base64").toString();throw new Error("Unable to decode base64 in this environment. Missing built-in atob() or Buffer()")}(e);return t?n:n.toLowerCase()}function bS(e,t,n,s=!1){const r=e[t];return null!=r?yS(r.s,s):n}function xS(e,t,n){const s=e[t];return s?s.b:n}function vS(e,t,n){const s=e[t]||{},r=null!=s.i?s.i:null!=s.f?s.f:n;return"number"==typeof r?r:parseInt(r,10)}function wS(e){switch("string"==typeof e&&(e=zI[e]),e){case zI.DT_FLOAT:case zI.DT_HALF:return"float32";case zI.DT_INT32:case zI.DT_INT64:case zI.DT_INT8:case zI.DT_UINT8:return"int32";case zI.DT_BOOL:return"bool";case zI.DT_DOUBLE:return"float32";case zI.DT_STRING:return"string";default:return null}}function kS(e,t,n){const s=e[t];return s&&s.func?s.func.name:n}function IS(e,t,n){const s=e[t];return s&&s.type?wS(s.type):n}function SS(e,t,n){const s=e[t];return s&&s.list&&s.list.type?s.list.type.map((e=>wS(e))):n}function NS(e){if(!e.unknownRank)return null!=e.dim?e.dim.map((e=>"number"==typeof e.size?e.size:parseInt(e.size,10))):[]}function TS(e,t,n){const s=e[t];return s&&s.shape?NS(s.shape):n}function CS(e,t,n){const s=e[t];return s?((s.list.f&&s.list.f.length?s.list.f:s.list.i)||[]).map((e=>"number"==typeof e?e:parseInt(e,10))):n}function $S(e,t,n,s=!1){const r=e[t];return r&&r.list&&r.list.s?r.list.s.map((e=>yS(e,s))):n}function ES(e,t,n){const s=e[t];return s&&s.list&&s.list.shape?s.list.shape.map((e=>NS(e))):n}function AS(e,t,n){const s=e[t];return s&&s.list&&s.list.b?s.list.b:n}class _S{constructor(e,t,n){this.node=e,this.tensorMap=t,this.context=n,this.inputs=[],this.attrs={},this.inputs=e.inputNames.map((e=>this.getInput(e))),null!=e.rawAttrs&&(this.attrs=Object.keys(e.rawAttrs).reduce(((e,t)=>(e[t]=this.getAttr(t),e)),{}))}getInput(e){return HI(e,this.tensorMap,this.context)}getAttr(e,t){const n=this.node.rawAttrs[e];if(null!=n.tensor)return HI(e,this.tensorMap,this.context);if(null!=n.i||null!=n.f)return vS(this.node.rawAttrs,e,t);if(null!=n.s)return bS(this.node.rawAttrs,e,t);if(null!=n.b)return xS(this.node.rawAttrs,e,t);if(null!=n.shape)return TS(this.node.rawAttrs,e,t);if(null!=n.type)return IS(this.node.rawAttrs,e,t);if(null!=n.list){if(null!=n.list.i||null!=n.list.f)return CS(this.node.rawAttrs,e,t);if(null!=n.list.s)return $S(this.node.rawAttrs,e,t);if(null!=n.list.shape)return ES(this.node.rawAttrs,e,t);if(null!=n.list.b)return AS(this.node.rawAttrs,e,t);if(null!=n.list.type)return SS(this.node.rawAttrs,e,t)}return t}}function RS(e,t,n=""){if("number"!=typeof e&&"number"!=typeof t){se(e.length===t.length,(()=>n+` Shapes ${e} and ${t} must match`));for(let s=0;s<e.length;s++){const r=e[s],a=t[s];se(r<0||a<0||r===a,(()=>n+` Shapes ${e} and ${t} must match`))}}}function FS(e){return"number"!=typeof e&&!e.some((e=>e<0))}function DS(e,t,n){let s=OS(e,n);const r=!FS(s);if(r&&0===t.length)throw new Error(`Tried to calculate elements of an empty list with non-fully-defined elementShape: ${s}`);if(r&&t.forEach((e=>{s=OS(e.shape,s)})),!FS(s))throw new Error(`Non-fully-defined elementShape: ${s}`);return s}function OS(e,t){if("number"==typeof e)return t;if("number"==typeof t)return e;if(e.length!==t.length)throw new Error(`Incompatible ranks during merge: ${e} vs. ${t}`);const n=[];for(let s=0;s<e.length;++s){const r=e[s],a=t[s];if(r>=0&&a>=0&&r!==a)throw new Error(`Incompatible shape during merge: ${e} vs. ${t}`);n[s]=r>=0?r:a}return n}class MS{constructor(e,t,n,s,r,a,i){this.name=e,this.dtype=t,this.maxSize=n,this.elementShape=s,this.identicalElementShapes=r,this.dynamicSize=a,this.clearAfterRead=i,this.tensors=[],this.closed_=!1,this.idTensor=Tl(0),tl(this.idTensor)}get id(){return this.idTensor.id}get closed(){return this.closed_}clearAndClose(e){this.tensors.forEach((t=>{null!=e&&e.has(t.tensor.id)||t.tensor.dispose()})),this.tensors=[],this.closed_=!0,this.idTensor.dispose()}size(){return this.tensors.length}read(e){if(this.closed_)throw new Error(`TensorArray ${this.name} has already been closed.`);if(e<0||e>=this.size())throw new Error(`Tried to read from index ${e}, but array size is: ${this.size()}`);const t=this.tensors[e];if(t.cleared)throw new Error(`TensorArray ${this.name}: Could not read index ${e} twice because it was cleared after a previous read (perhaps try setting clear_after_read = false?).`);return this.clearAfterRead&&(t.cleared=!0),t.read=!0,t.tensor}readMany(e){return e.map((e=>this.read(e)))}write(e,t){if(this.closed_)throw new Error(`TensorArray ${this.name} has already been closed.`);if(e<0||!this.dynamicSize&&e>=this.maxSize)throw new Error(`Tried to write to index ${e}, but array is not resizeable and size is: ${this.maxSize}`);const n=this.tensors[e]||{};if(t.dtype!==this.dtype)throw new Error(`TensorArray ${this.name}: Could not write to TensorArray index ${e},\n          because the value dtype is ${t.dtype}, but TensorArray dtype is ${this.dtype}.`);if(0!==this.size()||null!=this.elementShape&&0!==this.elementShape.length||(this.elementShape=t.shape),RS(this.elementShape,t.shape,`TensorArray ${this.name}: Could not write to TensorArray index ${e}.`),n.read)throw new Error(`TensorArray ${this.name}: Could not write to TensorArray index ${e}, because it has already been read.`);if(n.written)throw new Error(`TensorArray ${this.name}: Could not write to TensorArray index ${e}, because it has already been written.`);n.tensor=t,tl(t),n.written=!0,this.tensors[e]=n}writeMany(e,t){if(e.length!==t.length)throw new Error(`TensorArray ${this.name}: could not write multiple tensors,because the index size: ${e.length} is not the same as tensors size: ${t.length}.`);e.forEach(((e,n)=>this.write(e,t[n])))}gather(e,t){if(t&&t!==this.dtype)throw new Error(`TensorArray dtype is ${this.dtype} but gather requested dtype ${t}`);if(e)e=e.slice(0,this.size());else{e=[];for(let t=0;t<this.size();t++)e.push(t)}if(0===e.length)return Fa([],[0].concat(this.elementShape));const n=this.readMany(e);return RS(this.elementShape,n[0].shape,"TensorArray shape mismatch: "),ap(n,0)}concat(e){if(e&&e!==this.dtype)throw new Error(`TensorArray dtype is ${this.dtype} but concat requested dtype ${e}`);if(0===this.size())return Fa([],[0].concat(this.elementShape));const t=[];for(let e=0;e<this.size();e++)t.push(e);const n=this.readMany(t);return RS(this.elementShape,n[0].shape,`TensorArray shape mismatch: tensor array shape (${this.elementShape}) vs first tensor shape (${n[0].shape})`),gu(n,0)}scatter(e,t){if(t.dtype!==this.dtype)throw new Error(`TensorArray dtype is ${this.dtype} but tensor has dtype ${t.dtype}`);if(e.length!==t.shape[0])throw new Error(`Expected len(indices) == tensor.shape[0], but saw: ${e.length} vs. ${t.shape[0]}`);const n=Math.max(...e);if(!this.dynamicSize&&n>=this.maxSize)throw new Error(`Max index must be < array size (${n}  vs. ${this.maxSize})`);this.writeMany(e,bp(t,0))}split(e,t){if(t.dtype!==this.dtype)throw new Error(`TensorArray dtype is ${this.dtype} but tensor has dtype ${t.dtype}`);let n=0;const s=e.map((e=>(n+=e,n)));if(n!==t.shape[0])throw new Error(`Expected sum of lengths to be equal to\n          tensor.shape[0], but sum of lengths is\n        ${n}, and tensor's shape is: ${t.shape}`);if(!this.dynamicSize&&e.length!==this.maxSize)throw new Error(`TensorArray's size is not equal to the size of lengths (${this.maxSize} vs. ${e.length}), and the TensorArray is not marked as dynamically resizeable`);const r=0===n?0:t.size/n,a=[];Qo((()=>{t=du(t,[1,n,r]);for(let n=0;n<e.length;++n){const i=[0,0===n?0:s[n-1],0],o=[1,e[n],r];a[n]=du(bu(t,i,o),this.elementShape)}return a}));const i=[];for(let t=0;t<e.length;t++)i[t]=t;this.writeMany(i,a)}}class LS{constructor(e,t,n,s=-1){this.tensors=e,this.elementShape=t,this.elementDtype=n,null!=e&&e.forEach((e=>{if(n!==e.dtype)throw new Error(`Invalid data types; op elements ${n}, but list elements ${e.dtype}`);RS(t,e.shape,"TensorList shape mismatch: "),tl(e)})),this.idTensor=Tl(0),this.maxNumElements=s,tl(this.idTensor)}get id(){return this.idTensor.id}copy(){return new LS([...this.tensors],this.elementShape,this.elementDtype)}clearAndClose(e){this.tensors.forEach((t=>{null!=e&&e.has(t.id)||t.dispose()})),this.tensors.length=0,this.idTensor.dispose()}size(){return this.tensors.length}stack(e,t,n=-1){if(t!==this.elementDtype)throw new Error(`Invalid data types; op elements ${t}, but list elements ${this.elementDtype}`);if(-1!==n&&this.tensors.length!==n)throw new Error(`Operation expected a list with ${n} elements but got a list with ${this.tensors.length} elements.`);RS(e,this.elementShape,"TensorList shape mismatch: ");const s=DS(this.elementShape,this.tensors,e);return Qo((()=>{const e=this.tensors.map((e=>du(e,s)));return ap(e,0)}))}popBack(e,t){if(t!==this.elementDtype)throw new Error(`Invalid data types; op elements ${t}, but list elements ${this.elementDtype}`);if(0===this.size())throw new Error("Trying to pop from an empty list.");const n=DS(this.elementShape,this.tensors,e),s=this.tensors.pop();return RS(s.shape,e,"TensorList shape mismatch: "),du(s,n)}pushBack(e){if(e.dtype!==this.elementDtype)throw new Error(`Invalid data types; op elements ${e.dtype}, but list elements ${this.elementDtype}`);if(RS(e.shape,this.elementShape,"TensorList shape mismatch: "),this.maxNumElements===this.size())throw new Error("Trying to push element into a full list.");tl(e),this.tensors.push(e)}resize(e){if(e<0)throw new Error(`TensorListResize expects size to be non-negative. Got: ${e}`);if(-1!==this.maxNumElements&&e>this.maxNumElements)throw new Error(`TensorListResize input size ${e} is greater maxNumElement ${this.maxNumElements}.`);const t=new LS([],this.elementShape,this.elementDtype,this.maxNumElements);t.tensors.length=e;for(let n=0;n<Math.min(this.tensors.length,e);++n)t.tensors[n]=this.tensors[n];return t}getItem(e,t,n){if(n!==this.elementDtype)throw new Error(`Invalid data types; op elements ${n}, but list elements ${this.elementDtype}`);if(e<0||e>this.tensors.length)throw new Error(`Trying to access element ${e} in a list with ${this.tensors.length} elements.`);if(null==this.tensors[e])throw new Error(`element at index ${e} is null.`);RS(this.tensors[e].shape,t,"TensorList shape mismatch: ");const s=DS(this.elementShape,this.tensors,t);return du(this.tensors[e],s)}setItem(e,t){if(t.dtype!==this.elementDtype)throw new Error(`Invalid data types; op elements ${t.dtype}, but list elements ${this.elementDtype}`);if(e<0||-1!==this.maxNumElements&&e>=this.maxNumElements)throw new Error(`Trying to set element ${e} in a list with max ${this.maxNumElements} elements.`);RS(this.elementShape,t.shape,"TensorList shape mismatch: "),tl(t),this.tensors[e]=t}gather(e,t,n){if(t!==this.elementDtype)throw new Error(`Invalid data types; op elements ${t}, but list elements ${this.elementDtype}`);RS(this.elementShape,n,"TensorList shape mismatch: "),e=e.slice(0,this.size());const s=DS(this.elementShape,this.tensors,n);return 0===e.length?Fa([],[0].concat(s)):Qo((()=>{const t=e.map((e=>du(this.tensors[e],s)));return ap(t,0)}))}concat(e,t){if(e&&e!==this.elementDtype)throw new Error(`TensorList dtype is ${this.elementDtype} but concat requested dtype ${e}`);RS(this.elementShape,t,"TensorList shape mismatch: ");const n=DS(this.elementShape,this.tensors,t);return 0===this.size()?Fa([],[0].concat(n)):Qo((()=>{const e=this.tensors.map((e=>du(e,n)));return gu(e,0)}))}}function zS(e,t,n){const[s,r]=GI("fusedOps",e,t,n),a="biasadd"===s,i=!a,o="prelu"===r,l="fusedbatchnorm"===s,u=GI("numArgs",e,t,n);if(a){if(o&&2!==u)throw new Error("FusedConv2d and DepthwiseConv2d with BiasAdd and Prelu must have two extra arguments: bias and alpha.");if(!o&&a&&1!==u)throw new Error("FusedConv2d and DepthwiseConv2d with BiasAdd must have one extra argument: bias.")}if(l)throw new Error("FusedConv2d and DepthwiseConv2d with FusedBatchNorm is not supported");const c=GI("strides",e,t,n),h=XI(e,t,n),p=GI("dataFormat",e,t,n).toUpperCase(),d=GI("dilations",e,t,n);let[f,m]=GI("args",e,t,n);return i&&(m=f,f=void 0),{stride:c,pad:h,dataFormat:p,dilations:d,biasArg:f,preluArg:m,activationFunc:r,leakyreluAlpha:GI("leakyreluAlpha",e,t,n)}}function PS(e,t,n){return{boxes:GI("boxes",e,t,n),scores:GI("scores",e,t,n),maxOutputSize:GI("maxOutputSize",e,t,n),iouThreshold:GI("iouThreshold",e,t,n),scoreThreshold:GI("scoreThreshold",e,t,n),softNmsSigma:GI("softNmsSigma",e,t,n)}}class BS{constructor(e,t){this.keyDType=e,this.valueDType=t,this.handle=Tl(0),this.tensorMap=new Map,tl(this.handle)}get id(){return this.handle.id}clearAndClose(){this.tensorMap.forEach((e=>e.dispose())),this.tensorMap.clear(),this.handle.dispose()}size(){return this.tensorMap.size}tensorSize(){return Tl(this.size(),"int32")}async import(e,t){this.checkKeyAndValueTensor(e,t);const n=await e.data();return this.tensorMap.forEach((e=>e.dispose())),this.tensorMap.clear(),Qo((()=>{const e=bp(t),s=n.length,r=e.length;se(s===r,(()=>`The number of elements doesn't match, keys has ${s} elements, the values has ${r} elements.`));for(let t=0;t<s;t++){const s=n[t],r=e[t];tl(r),this.tensorMap.set(s,r)}return this.handle}))}async find(e,t){this.checkKeyAndValueTensor(e,t);const n=await e.data();return Qo((()=>{const e=[];for(let s=0;s<n.length;s++){const r=n[s],a=this.findWithDefault(r,t);e.push(a)}return ap(e)}))}findWithDefault(e,t){const n=this.tensorMap.get(e);return null!=n?n:t}checkKeyAndValueTensor(e,t){if(e.dtype!==this.keyDType)throw new Error(`Expect key dtype ${this.keyDType}, but got ${e.dtype}`);if(t.dtype!==this.valueDType)throw new Error(`Expect value dtype ${this.valueDType}, but got ${t.dtype}`)}}function WS(e,t,n,s){const r=((e,t,n)=>{switch(e.category){case"arithmetic":return Qo((()=>((e,t,n)=>{switch(e.op){case"BiasAdd":case"AddV2":case"Add":return[pl(GI("a",e,t,n),GI("b",e,t,n))];case"AddN":return[Ul(GI("tensors",e,t,n))];case"FloorMod":case"Mod":return[ah(GI("a",e,t,n),GI("b",e,t,n))];case"Mul":return[ml(GI("a",e,t,n),GI("b",e,t,n))];case"RealDiv":case"Div":return[fl(GI("a",e,t,n),GI("b",e,t,n))];case"DivNoNan":return[Qu(GI("a",e,t,n),GI("b",e,t,n))];case"FloorDiv":return[dl(GI("a",e,t,n),GI("b",e,t,n))];case"Sub":return[Rl(GI("a",e,t,n),GI("b",e,t,n))];case"Minimum":return[sh(GI("a",e,t,n),GI("b",e,t,n))];case"Maximum":return[Ol(GI("a",e,t,n),GI("b",e,t,n))];case"Pow":return[_l(GI("a",e,t,n),GI("b",e,t,n))];case"SquaredDifference":return[sp(GI("a",e,t,n),GI("b",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"basic_math":return Qo((()=>((e,t,n)=>{switch(e.op){case"Abs":case"ComplexAbs":return[Dl(GI("x",e,t,n))];case"Acos":return[Wl(GI("x",e,t,n))];case"Acosh":return[Vl(GI("x",e,t,n))];case"Asin":return[Kl(GI("x",e,t,n))];case"Asinh":return[Xl(GI("x",e,t,n))];case"Atan":return[Yl(GI("x",e,t,n))];case"Atan2":return[Zl(GI("x",e,t,n),GI("y",e,t,n))];case"Atanh":return[Jl(GI("x",e,t,n))];case"Ceil":return[Eu(GI("x",e,t,n))];case"Complex":return[_a(GI("real",e,t,n),GI("imag",e,t,n))];case"Cos":return[Vu(GI("x",e,t,n))];case"Cosh":return[Uu(GI("x",e,t,n))];case"Elu":return[nc(GI("x",e,t,n))];case"Erf":return[sc(GI("x",e,t,n))];case"Exp":return[bc(GI("x",e,t,n))];case"Expm1":return[vc(GI("x",e,t,n))];case"Floor":return[Ic(GI("x",e,t,n))];case"Log":return[Mc(GI("x",e,t,n))];case"Log1p":return[Lc(GI("x",e,t,n))];case"Imag":return[Cc(GI("x",e,t,n))];case"Neg":return[zc(GI("x",e,t,n))];case"Reciprocal":return[_h(GI("x",e,t,n))];case"Real":return[Ah(GI("x",e,t,n))];case"Relu":return[Rh(GI("x",e,t,n))];case"Round":return[Ph(GI("x",e,t,n))];case"Selu":return[Wh(GI("x",e,t,n))];case"Sigmoid":return[yu(GI("x",e,t,n))];case"Sin":return[Hh(GI("x",e,t,n))];case"Sign":return[Gh(GI("x",e,t,n))];case"Sinh":return[jh(GI("x",e,t,n))];case"Softplus":return[Pc(GI("x",e,t,n))];case"Sqrt":return[gl(GI("x",e,t,n))];case"Square":return[yl(GI("x",e,t,n))];case"Tanh":return[xu(GI("x",e,t,n))];case"Tan":return[lp(GI("x",e,t,n))];case"ClipByValue":return[Au(GI("x",e,t,n),GI("clipValueMin",e,t,n),GI("clipValueMax",e,t,n))];case"Relu6":return[Fh(GI("x",e,t,n))];case"Rsqrt":return[Bh(HI(e.inputNames[0],t,n))];case"Prod":return[vh(GI("x",e,t,n),GI("axes",e,t,n))];case"LeakyRelu":return[_c(GI("x",e,t,n),GI("alpha",e,t,n))];case"Prelu":return[xh(GI("x",e,t,n),GI("alpha",e,t,n))];case"IsNan":return[Ac(HI(e.inputNames[0],t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"control":return(async(e,t,n)=>{switch(e.op){case"If":case"StatelessIf":{const s=GI("thenBranch",e,t,n),r=GI("elseBranch",e,t,n),a=GI("cond",e,t,n),i=GI("args",e,t,n);return(await a.data())[0]?n.functionMap[s].executeFunctionAsync(i,n.tensorArrayMap,n.tensorListMap):n.functionMap[r].executeFunctionAsync(i,n.tensorArrayMap,n.tensorListMap)}case"While":case"StatelessWhile":{const s=GI("body",e,t,n),r=GI("cond",e,t,n),a=GI("args",e,t,n),i=await n.functionMap[r].executeFunctionAsync(a,n.tensorArrayMap,n.tensorListMap),o=a.map((e=>e.id));let l=await i[0].data();i.forEach((e=>{e.kept||-1!==o.indexOf(e.id)||e.dispose()}));let u=a;for(;l[0];){const e=u;u=await n.functionMap[s].executeFunctionAsync(u,n.tensorArrayMap,n.tensorListMap);const t=u.map((e=>e.id));e.forEach((e=>{e.kept||-1!==o.indexOf(e.id)||-1!==t.indexOf(e.id)||e.dispose()}));const a=await n.functionMap[r].executeFunctionAsync(u,n.tensorArrayMap,n.tensorListMap);l=await a[0].data(),a.forEach((e=>{e.kept||-1!==o.indexOf(e.id)||-1!==t.indexOf(e.id)||e.dispose()}))}return u}case"LoopCond":return[YI(GI("pred",e,t,n))];case"Switch":{const s=GI("pred",e,t,n);let r=GI("data",e,t,n);return r.kept||(r=YI(r)),(await s.data())[0]?[void 0,r]:[r,void 0]}case"Merge":{const s=e.inputNames.find((e=>void 0!==HI(e,t,n)));return s?[YI(HI(s,t,n))]:void 0}case"Enter":{const s=GI("frameName",e,t,n),r=GI("tensor",e,t,n);return n.enterFrame(s),[YI(r)]}case"Exit":{const s=GI("tensor",e,t,n);return n.exitFrame(),[YI(s)]}case"NextIteration":{const s=GI("tensor",e,t,n);return n.nextIteration(),[YI(s)]}case"TensorArrayV3":{const s=GI("size",e,t,n),r=GI("dtype",e,t,n),a=GI("elementShape",e,t,n),i=GI("dynamicSize",e,t,n),o=GI("clearAfterRead",e,t,n),l=GI("identicalElementShapes",e,t,n),u=GI("name",e,t,n),c=new MS(u,r,s,a,l,i,o);return n.addTensorArray(c),[c.idTensor,Tl(1)]}case"TensorArrayWriteV3":{const s=GI("tensorArrayId",e,t,n),r=GI("index",e,t,n),a=GI("tensor",e,t,n),i=n.getTensorArray(s.id);return i.write(r,a),[i.idTensor]}case"TensorArrayReadV3":{const s=GI("tensorArrayId",e,t,n),r=GI("index",e,t,n);return[n.getTensorArray(s.id).read(r)]}case"TensorArrayGatherV3":{const s=GI("tensorArrayId",e,t,n),r=GI("indices",e,t,n),a=GI("dtype",e,t,n);return[n.getTensorArray(s.id).gather(r,a)]}case"TensorArrayScatterV3":{const s=GI("tensorArrayId",e,t,n),r=GI("indices",e,t,n),a=GI("tensor",e,t,n),i=n.getTensorArray(s.id);return i.scatter(r,a),[i.idTensor]}case"TensorArrayConcatV3":{const s=GI("tensorArrayId",e,t,n),r=n.getTensorArray(s.id),a=GI("dtype",e,t,n);return[r.concat(a)]}case"TensorArraySplitV3":{const s=GI("tensorArrayId",e,t,n),r=GI("tensor",e,t,n),a=GI("lengths",e,t,n),i=n.getTensorArray(s.id);return i.split(a,r),[i.idTensor]}case"TensorArraySizeV3":{const s=GI("tensorArrayId",e,t,n);return[Tl(n.getTensorArray(s.id).size(),"int32")]}case"TensorArrayCloseV3":{const s=GI("tensorArrayId",e,t,n),r=n.getTensorArray(s.id);return r.clearAndClose(),[r.idTensor]}case"TensorListSetItem":{const s=GI("tensorListId",e,t,n),r=GI("index",e,t,n),a=GI("tensor",e,t,n),i=n.getTensorList(s.id);return i.setItem(r,a),[i.idTensor]}case"TensorListGetItem":{const s=GI("tensorListId",e,t,n),r=GI("index",e,t,n),a=GI("elementShape",e,t,n),i=GI("elementDType",e,t,n);return[n.getTensorList(s.id).getItem(r,a,i)]}case"TensorListScatterV2":case"TensorListScatter":{const s=GI("indices",e,t,n),r=function(e,t,n,s){if(t.length!==e.shape[0])throw new Error(`Expected len(indices) == tensor.shape[0], but saw: ${t.length} vs. ${e.shape[0]}`);const r=Math.max(...t);if(null!=s&&-1!==s&&r>=s)throw new Error(`Max index must be < array size (${r}  vs. ${s})`);const a=new LS([],n,e.dtype,s),i=bp(e,0);return t.forEach(((e,t)=>{a.setItem(e,i[t])})),a}(GI("tensor",e,t,n),s,GI("elementShape",e,t,n),GI("numElements",e,t,n));return n.addTensorList(r),[r.idTensor]}case"TensorListReserve":case"EmptyTensorList":{const s=GI("elementShape",e,t,n),r=GI("elementDType",e,t,n);let a;a="TensorListReserve"===e.op?"numElements":"maxNumElements";const i=function(e,t,n){return new LS([],e,t,n)}(s,r,GI(a,e,t,n));return n.addTensorList(i),[i.idTensor]}case"TensorListGather":{const s=GI("tensorListId",e,t,n),r=GI("indices",e,t,n),a=GI("elementShape",e,t,n),i=GI("elementDType",e,t,n);return[n.getTensorList(s.id).gather(r,i,a)]}case"TensorListStack":{const s=GI("tensorListId",e,t,n),r=GI("elementShape",e,t,n),a=GI("elementDType",e,t,n),i=GI("numElements",e,t,n);return[n.getTensorList(s.id).stack(r,a,i)]}case"TensorListFromTensor":{const s=function(e,t,n){const s=e.dtype;if(e.shape.length<1)throw new Error(`Tensor must be at least a vector, but saw shape: ${e.shape}`);if(e.dtype!==n)throw new Error(`Invalid data types; op elements ${e.dtype}, but list elements ${n}`);RS(e.shape.slice(1),t,"TensorList shape mismatch: ");const r=bp(e);return new LS(r,t,s)}(GI("tensor",e,t,n),GI("elementShape",e,t,n),GI("elementDType",e,t,n));return n.addTensorList(s),[s.idTensor]}case"TensorListConcat":case"TensorListConcatV2":{const s=GI("tensorListId",e,t,n),r=n.getTensorList(s.id),a=GI("dtype",e,t,n),i=GI("elementShape",e,t,n);return[r.concat(a,i)]}case"TensorListPushBack":{const s=GI("tensorListId",e,t,n),r=GI("tensor",e,t,n),a=n.getTensorList(s.id);return a.pushBack(r),[a.idTensor]}case"TensorListPopBack":{const s=GI("tensorListId",e,t,n),r=GI("elementShape",e,t,n),a=GI("elementDType",e,t,n);return[n.getTensorList(s.id).popBack(r,a)]}case"TensorListSplit":{const s=GI("tensor",e,t,n),r=GI("elementShape",e,t,n),a=function(e,t,n){let s=0;const r=t.map((e=>(s+=e,s)));if(s!==e.shape[0])throw new Error(`Expected sum of lengths to be equal to\n          tensor.shape[0], but sum of lengths is\n        ${s}, and tensor's shape is: ${e.shape}`);const a=OS(e.shape.slice(1),n),i=0===s?0:e.size/s,o=Qo((()=>{const n=[];e=du(e,[1,s,i]);for(let s=0;s<t.length;++s){const o=[0,0===s?0:r[s-1],0],l=[1,t[s],i];n[s]=du(bu(e,o,l),a)}return e.dispose(),n})),l=new LS([],n,e.dtype,t.length);for(let e=0;e<o.length;e++)l.setItem(e,o[e]);return l}(s,GI("lengths",e,t,n),r);return n.addTensorList(a),[a.idTensor]}case"TensorListLength":{const s=GI("tensorListId",e,t,n);return[Tl(n.getTensorList(s.id).size(),"int32")]}case"TensorListResize":{const s=GI("tensorListId",e,t,n),r=GI("size",e,t,n),a=n.getTensorList(s.id).resize(r);return n.addTensorList(a),[a.idTensor]}default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n);case"convolution":return Qo((()=>((e,t,n)=>{switch(e.op){case"Conv1D":{const s=GI("stride",e,t,n),r=GI("pad",e,t,n),a=GI("dataFormat",e,t,n).toUpperCase(),i=GI("dilation",e,t,n);return[Mu(GI("x",e,t,n),GI("filter",e,t,n),s,r,a,i)]}case"Conv2D":{const s=GI("strides",e,t,n),r=XI(e,t,n),a=GI("dataFormat",e,t,n).toUpperCase(),i=GI("dilations",e,t,n);return[Ou(GI("x",e,t,n),GI("filter",e,t,n),[s[1],s[2]],r,a,[i[1],i[2]])]}case"_FusedConv2D":{const{stride:s,pad:r,dataFormat:a,dilations:i,biasArg:o,preluArg:l,activationFunc:u,leakyreluAlpha:c}=zS(e,t,n);return[Lp({x:GI("x",e,t,n),filter:GI("filter",e,t,n),strides:[s[1],s[2]],pad:r,dataFormat:a,dilations:[i[1],i[2]],bias:o,activation:u,preluActivationWeights:l,leakyreluAlpha:c})]}case"FusedDepthwiseConv2dNative":{const{stride:s,pad:r,dataFormat:a,dilations:i,biasArg:o,preluArg:l,activationFunc:u,leakyreluAlpha:c}=zS(e,t,n);return[Bp({x:GI("x",e,t,n),filter:GI("filter",e,t,n),strides:[s[1],s[2]],pad:r,dataFormat:a,dilations:[i[1],i[2]],bias:o,activation:u,preluActivationWeights:l,leakyreluAlpha:c})]}case"Conv2DBackpropInput":case"Conv2dTranspose":{const s=GI("outputShape",e,t,n),r=GI("strides",e,t,n),a=XI(e,t,n);return[zu(GI("x",e,t,n),GI("filter",e,t,n),s,[r[1],r[2]],a)]}case"DepthwiseConv2dNative":case"DepthwiseConv2d":{const s=GI("strides",e,t,n),r=XI(e,t,n),a=GI("dilations",e,t,n),i=GI("dataFormat",e,t,n).toUpperCase();return[Ku(GI("input",e,t,n),GI("filter",e,t,n),[s[1],s[2]],r,i,[a[1],a[2]])]}case"Conv3D":{const s=GI("strides",e,t,n),r=GI("pad",e,t,n),a=GI("dataFormat",e,t,n).toUpperCase(),i=GI("dilations",e,t,n);return[Pu(GI("x",e,t,n),GI("filter",e,t,n),[s[1],s[2],s[3]],r,a,[i[1],i[2],i[3]])]}case"AvgPool":{const s=GI("strides",e,t,n),r=GI("pad",e,t,n),a=GI("kernelSize",e,t,n);return[fu(GI("x",e,t,n),[a[1],a[2]],[s[1],s[2]],r)]}case"MaxPool":{const s=GI("strides",e,t,n),r=GI("pad",e,t,n),a=GI("kernelSize",e,t,n);return[Yc(GI("x",e,t,n),[a[1],a[2]],[s[1],s[2]],r)]}case"MaxPoolWithArgmax":{const s=GI("strides",e,t,n),r=GI("pad",e,t,n),a=GI("kernelSize",e,t,n),i=GI("includeBatchInIndex",e,t,n),{result:o,indexes:l}=Jc(GI("x",e,t,n),[a[1],a[2]],[s[1],s[2]],r,i);return[o,l]}case"AvgPool3D":{const s=GI("strides",e,t,n),r=GI("pad",e,t,n),a=GI("kernelSize",e,t,n);return[mu(GI("x",e,t,n),[a[1],a[2],a[3]],[s[1],s[2],s[3]],r)]}case"MaxPool3D":{const s=GI("strides",e,t,n),r=GI("pad",e,t,n),a=GI("kernelSize",e,t,n);return[Zc(GI("x",e,t,n),[a[1],a[2],a[3]],[s[1],s[2],s[3]],r)]}case"Dilation2D":{const s=GI("strides",e,t,n),r=GI("pad",e,t,n),a=GI("dilations",e,t,n),i=s[1],o=s[2],l=a[1],u=a[2];return[Yu(GI("x",e,t,n),GI("filter",e,t,n),[i,o],r,[l,u],"NHWC")]}default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"creation":return Qo((()=>((e,t,n)=>{switch(e.op){case"Fill":{const s=GI("shape",e,t,n),r=GI("dtype",e,t,n);return[El(s,GI("value",e,t,n),r)]}case"LinSpace":return[Dc(GI("start",e,t,n),GI("stop",e,t,n),GI("num",e,t,n))];case"Multinomial":{const s=GI("logits",e,t,n),r=GI("numSamples",e,t,n),a=GI("seed",e,t,n);return[lh(s,r,a)]}case"OneHot":{const s=GI("indices",e,t,n),r=GI("depth",e,t,n),a=GI("onValue",e,t,n),i=GI("offValue",e,t,n);return[Yi(s,r,a,i)]}case"Ones":return[th(GI("shape",e,t,n),GI("dtype",e,t,n))];case"OnesLike":return[ch(GI("x",e,t,n))];case"RandomUniform":return[$h(GI("shape",e,t,n),GI("minval",e,t,n),GI("maxval",e,t,n),GI("dtype",e,t,n))];case"Range":return[Eh(GI("start",e,t,n),GI("stop",e,t,n),GI("step",e,t,n),GI("dtype",e,t,n))];case"TruncatedNormal":{const s=GI("shape",e,t,n),r=GI("mean",e,t,n),a=GI("stdDev",e,t,n),i=GI("seed",e,t,n);return[mp(s,r,a,GI("dtype",e,t,n),i)]}case"Zeros":return[eh(GI("shape",e,t,n),GI("dtype",e,t,n))];case"ZerosLike":return[bl(GI("x",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"dynamic":return(async(e,t,n)=>{switch(e.op){case"NonMaxSuppressionV5":{const{boxes:s,scores:r,maxOutputSize:a,iouThreshold:i,scoreThreshold:o,softNmsSigma:l}=PS(e,t,n),u=await Md.nonMaxSuppressionWithScoreAsync(s,r,a,i,o,l);return[u.selectedIndices,u.selectedScores]}case"NonMaxSuppressionV4":{const{boxes:s,scores:r,maxOutputSize:a,iouThreshold:i,scoreThreshold:o}=PS(e,t,n),l=GI("padToMaxOutputSize",e,t,n),u=await Md.nonMaxSuppressionPaddedAsync(s,r,a,i,o,l);return[u.selectedIndices,u.validOutputs]}case"NonMaxSuppressionV3":case"NonMaxSuppressionV2":{const{boxes:s,scores:r,maxOutputSize:a,iouThreshold:i,scoreThreshold:o}=PS(e,t,n);return[await Md.nonMaxSuppressionAsync(s,r,a,i,o)]}case"Where":{const s=Ei(GI("condition",e,t,n),"bool"),r=[await kp(s)];return s.dispose(),r}case"ListDiff":return Uh(GI("x",e,t,n),GI("y",e,t,n));default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n);case"evaluation":return Qo((()=>((e,t,n)=>{switch(e.op){case"LowerBound":return[Xc(GI("sortedSequence",e,t,n),GI("values",e,t,n))];case"TopKV2":{const s=GI("x",e,t,n),r=GI("k",e,t,n),a=GI("sorted",e,t,n),i=fp(s,r,a);return[i.values,i.indices]}case"UpperBound":return[xp(GI("sortedSequence",e,t,n),GI("values",e,t,n))];case"Unique":{const s=GI("x",e,t,n),r=gp(s);return[r.values,r.indices]}case"UniqueV2":{const s=GI("x",e,t,n),r=GI("axis",e,t,n),a=gp(s,r);return[a.values,a.indices]}default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"image":return Qo((()=>((e,t,n)=>{switch(e.op){case"ResizeBilinear":{const s=GI("images",e,t,n),r=GI("size",e,t,n),a=GI("alignCorners",e,t,n),i=GI("halfPixelCenters",e,t,n);return[Md.resizeBilinear(s,[r[0],r[1]],a,i)]}case"ResizeNearestNeighbor":{const s=GI("images",e,t,n),r=GI("size",e,t,n),a=GI("alignCorners",e,t,n),i=GI("halfPixelCenters",e,t,n);return[Md.resizeNearestNeighbor(s,[r[0],r[1]],a,i)]}case"CropAndResize":{const s=GI("image",e,t,n),r=GI("boxes",e,t,n),a=GI("boxInd",e,t,n),i=GI("cropSize",e,t,n),o=GI("method",e,t,n),l=GI("extrapolationValue",e,t,n);return[Md.cropAndResize(s,r,a,i,o,l)]}case"ImageProjectiveTransformV3":{const s=GI("images",e,t,n),r=GI("transforms",e,t,n),a=GI("outputShape",e,t,n),i=GI("fillValue",e,t,n),o=GI("interpolation",e,t,n),l=GI("fillMode",e,t,n);return[Md.transform(s,r,o.toLowerCase(),l.toLowerCase(),i,a)]}default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"graph":return Qo((()=>((e,t,n)=>{switch(e.op){case"Const":return t[e.name];case"PlaceholderWithDefault":const s=GI("default",e,t,n);return[HI(e.name,t,n)||s];case"Placeholder":return[HI(e.name,t,n)];case"Identity":case"StopGradient":case"FakeQuantWithMinMaxVars":case"Snapshot":return[YI(GI("x",e,t,n))];case"IdentityN":return GI("x",e,t,n).map((e=>YI(e)));case"Shape":return[up(GI("x",e,t,n).shape,"int32")];case"ShapeN":return GI("x",e,t,n).map((e=>up(e.shape)));case"Size":return[Tl(GI("x",e,t,n).size,"int32")];case"Rank":return[Tl(GI("x",e,t,n).rank,"int32")];case"NoOp":return[Tl(1)];case"Print":const r=GI("x",e,t,n),a=GI("data",e,t,n),i=GI("message",e,t,n),o=GI("summarize",e,t,n);console.warn("The graph has a tf.print() operation,usually used for debugging, which slows down performance."),console.log(i);for(let e=0;e<a.length;e++)console.log(Array.prototype.slice.call(a[e].dataSync()).slice(0,o));return[r];default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"logical":return Qo((()=>((e,t,n)=>{switch(e.op){case"Equal":return[Zu(GI("a",e,t,n),GI("b",e,t,n))];case"NotEqual":return[uh(GI("a",e,t,n),GI("b",e,t,n))];case"Greater":return[Nc(GI("a",e,t,n),GI("b",e,t,n))];case"GreaterEqual":return[Tc(GI("a",e,t,n),GI("b",e,t,n))];case"Less":return[Rc(GI("a",e,t,n),GI("b",e,t,n))];case"LessEqual":return[Fc(GI("a",e,t,n),GI("b",e,t,n))];case"LogicalAnd":return[Uc(GI("a",e,t,n),GI("b",e,t,n))];case"LogicalNot":return[Gc(GI("a",e,t,n))];case"LogicalOr":return[Hc(GI("a",e,t,n),GI("b",e,t,n))];case"Select":case"SelectV2":return[Ju(GI("condition",e,t,n),GI("a",e,t,n),GI("b",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"matrices":return Qo((()=>((e,t,n)=>{switch(e.op){case"BatchMatMul":case"BatchMatMulV2":case"MatMul":return[Xi(GI("a",e,t,n),GI("b",e,t,n),GI("transposeA",e,t,n),GI("transposeB",e,t,n))];case"Einsum":return[tc(GI("equation",e,t,n),...GI("tensors",e,t,n))];case"Transpose":return[Zi(GI("x",e,t,n),GI("perm",e,t,n))];case"_FusedMatMul":const[s,r]=GI("fusedOps",e,t,n),a="biasadd"===s,i="prelu"===r,o=GI("numArgs",e,t,n),l=GI("leakyreluAlpha",e,t,n);if(a){if(i&&2!==o)throw new Error("Fused MatMul with BiasAdd and Prelu must have two extra arguments: bias and alpha.");if(!i&&1!==o)throw new Error("Fused MatMul with BiasAdd must have one extra argument: bias.")}const[u,c]=GI("args",e,t,n);return[Wp({a:GI("a",e,t,n),b:GI("b",e,t,n),transposeA:GI("transposeA",e,t,n),transposeB:GI("transposeB",e,t,n),bias:u,activation:r,preluActivationWeights:c,leakyreluAlpha:l})];default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"normalization":return Qo((()=>((e,t,n)=>{switch(e.op){case"EuclideanNorm":return[yc(GI("x",e,t,n),GI("axis",e,t,n),GI("keepDims",e,t,n))];case"FusedBatchNorm":case"FusedBatchNormV2":case"FusedBatchNormV3":return[ku(GI("x",e,t,n),GI("mean",e,t,n),GI("variance",e,t,n),GI("offset",e,t,n),GI("scale",e,t,n),GI("epsilon",e,t,n))];case"LRN":return[Oc(GI("x",e,t,n),GI("radius",e,t,n),GI("bias",e,t,n),GI("alpha",e,t,n),GI("beta",e,t,n))];case"Softmax":return[Zh(GI("x",e,t,n))];case"LogSoftmax":return[Wc(GI("x",e,t,n))];case"SparseToDense":return[Tp(GI("sparseIndices",e,t,n),GI("outputShape",e,t,n),GI("sparseValues",e,t,n),GI("defaultValue",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"reduction":return Qo((()=>((e,t,n)=>{switch(e.op){case"Max":{const s=GI("axis",e,t,n),r=GI("keepDims",e,t,n);return[pc(GI("x",e,t,n),s,r)]}case"Mean":{const s=GI("axis",e,t,n),r=GI("keepDims",e,t,n);return[Qc(GI("x",e,t,n),s,r)]}case"Min":{const s=GI("axis",e,t,n),r=GI("keepDims",e,t,n);return[dc(GI("x",e,t,n),s,r)]}case"Sum":{const s=GI("axis",e,t,n),r=GI("keepDims",e,t,n);return[fc(GI("x",e,t,n),s,r)]}case"All":{const s=GI("axis",e,t,n),r=GI("keepDims",e,t,n);return[Gl(GI("x",e,t,n),s,r)]}case"Any":{const s=GI("axis",e,t,n),r=GI("keepDims",e,t,n);return[Hl(GI("x",e,t,n),s,r)]}case"ArgMax":{const s=GI("axis",e,t,n);return[jl(GI("x",e,t,n),s)]}case"ArgMin":{const s=GI("axis",e,t,n);return[ql(GI("x",e,t,n),s)]}case"Prod":{const s=GI("axis",e,t,n),r=GI("keepDims",e,t,n);return[vh(GI("x",e,t,n),s,r)]}case"Cumprod":{const s=GI("axis",e,t,n),r=GI("exclusive",e,t,n),a=GI("reverse",e,t,n);return[Gu(GI("x",e,t,n),s,r,a)]}case"Cumsum":{const s=GI("axis",e,t,n),r=GI("exclusive",e,t,n),a=GI("reverse",e,t,n);return[Hu(GI("x",e,t,n),s,r,a)]}case"Bincount":const s=GI("x",e,t,n),r=GI("weights",e,t,n),a=GI("size",e,t,n);return[Tu(s,r,a)];case"DenseBincount":{const s=GI("x",e,t,n),r=GI("weights",e,t,n),a=GI("size",e,t,n),i=GI("binaryOutput",e,t,n);return[ju(s,r,a,i)]}default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"slice_join":return Qo((()=>((e,t,n)=>{switch(e.op){case"ConcatV2":case"Concat":{const s=GI("n",e,t,n),r=GI("axis",e,t,n);let a=GI("tensors",e,t,n);return a=a.slice(0,s),[gu(a,r)]}case"Gather":{const s=GI("x",e,t,n),r=GI("indices",e,t,n);return[Sc(s,Ei(r,"int32"),0)]}case"GatherV2":{const s=GI("axis",e,t,n),r=GI("batchDims",e,t,n),a=GI("x",e,t,n),i=GI("indices",e,t,n);return[Sc(a,Ei(i,"int32"),s,r)]}case"Reverse":{const s=GI("dims",e,t,n),r=[];for(let e=0;e<s.length;e++)s[e]&&r.push(e);const a=GI("x",e,t,n);return[Dh(a,r)]}case"ReverseV2":{const s=GI("axis",e,t,n),r=GI("x",e,t,n);return[Dh(r,s)]}case"Slice":{const s=GI("begin",e,t,n),r=GI("size",e,t,n);return[bu(GI("x",e,t,n),s,r)]}case"StridedSlice":{const s=GI("begin",e,t,n),r=GI("end",e,t,n),a=GI("strides",e,t,n),i=GI("beginMask",e,t,n),o=GI("endMask",e,t,n),l=GI("ellipsisMask",e,t,n),u=GI("newAxisMask",e,t,n),c=GI("shrinkAxisMask",e,t,n),h=GI("x",e,t,n);return[op(h,s,r,a,i,o,l,u,c)]}case"Pack":return Qo((()=>{const s=GI("axis",e,t,n),r=GI("tensors",e,t,n),a=r[0].shape,i=rp(r[0]).shape,o=r.map((e=>{const t=ue(e.shape,a);if(!t&&!ue(rp(e).shape,i))throw new Error("the input tensors shape does not match");return t?e:du(e,a)}));return[ap(o,s)]}));case"Unpack":{const s=GI("axis",e,t,n),r=GI("tensor",e,t,n);return bp(r,s)}case"Tile":{const s=GI("reps",e,t,n);return[wc(GI("x",e,t,n),s)]}case"Split":case"SplitV":{const s=GI("axis",e,t,n),r=GI("numOrSizeSplits",e,t,n),a=GI("x",e,t,n);return tp(a,r,s)}case"ScatterNd":{const s=GI("indices",e,t,n),r=GI("values",e,t,n),a=GI("shape",e,t,n);return[Np(s,r,a)]}case"GatherNd":{const s=GI("x",e,t,n),r=GI("indices",e,t,n);return[Cp(s,r)]}case"SparseToDense":{const s=GI("sparseIndices",e,t,n),r=GI("outputShape",e,t,n),a=GI("sparseValues",e,t,n),i=GI("defaultValue",e,t,n);return[Tp(s,a,r,a.dtype===i.dtype?i:Ei(i,a.dtype))]}default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"sparse":return Qo((()=>((e,t,n)=>{switch(e.op){case"SparseFillEmptyRows":{const{outputIndices:s,outputValues:r,emptyRowIndicator:a,reverseIndexMap:i}=Pd.sparseFillEmptyRows(GI("indices",e,t,n),GI("values",e,t,n),GI("denseShape",e,t,n),GI("defaultValue",e,t,n));return[s,r,a,i]}case"SparseReshape":{const{outputIndices:s,outputShape:r}=Pd.sparseReshape(GI("inputIndices",e,t,n),GI("inputShape",e,t,n),GI("newShape",e,t,n));return[s,r]}case"SparseSegmentMean":return[Pd.sparseSegmentMean(GI("data",e,t,n),GI("indices",e,t,n),GI("segmentIds",e,t,n))];case"SparseSegmentSum":return[Pd.sparseSegmentSum(GI("data",e,t,n),GI("indices",e,t,n),GI("segmentIds",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"spectral":return Qo((()=>((e,t,n)=>{switch(e.op){case"FFT":return[Jh(GI("x",e,t,n))];case"IFFT":return[Qh(GI("x",e,t,n))];case"RFFT":return[np(GI("x",e,t,n))];case"IRFFT":return[ep(GI("x",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"string":return Qo((()=>((e,t,n)=>{switch(e.op){case"StringNGrams":{const{nGrams:s,nGramsSplits:r}=Bd.stringNGrams(GI("data",e,t,n),GI("dataSplits",e,t,n),GI("separator",e,t,n),GI("nGramWidths",e,t,n),GI("leftPad",e,t,n),GI("rightPad",e,t,n),GI("padWidth",e,t,n),GI("preserveShortSequences",e,t,n));return[s,r]}case"StringSplit":{const{indices:s,values:r,shape:a}=Bd.stringSplit(GI("input",e,t,n),GI("delimiter",e,t,n),GI("skipEmpty",e,t,n));return[s,r,a]}case"StringToHashBucketFast":return[Bd.stringToHashBucketFast(GI("input",e,t,n),GI("numBuckets",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"transformation":return Qo((()=>((e,t,n)=>{switch(e.op){case"Cast":return[Ei(GI("x",e,t,n),GI("dtype",e,t,n))];case"ExpandDims":{const s=GI("axis",e,t,n);return[xc(GI("x",e,t,n),s)]}case"Squeeze":{const s=GI("axis",e,t,n);return[rp(GI("x",e,t,n),s)]}case"Reshape":return[du(GI("x",e,t,n),GI("shape",e,t,n))];case"MirrorPad":return[rh(GI("x",e,t,n),GI("padding",e,t,n),GI("mode",e,t,n))];case"PadV2":case"Pad":return[ph(GI("x",e,t,n),GI("padding",e,t,n),GI("constantValue",e,t,n))];case"SpaceToBatchND":{const s=GI("blockShape",e,t,n),r=GI("paddings",e,t,n);return[yh(GI("x",e,t,n),s,r)]}case"BatchToSpaceND":{const s=GI("blockShape",e,t,n),r=GI("crops",e,t,n);return[wu(GI("x",e,t,n),s,r)]}case"DepthToSpace":{const s=GI("blockSize",e,t,n),r=GI("dataFormat",e,t,n).toUpperCase();return[qu(GI("x",e,t,n),s,r)]}case"BroadcastTo":return[$u(GI("x",e,t,n),GI("shape",e,t,n))];case"BroadcastArgs":return[Cu(GI("s0",e,t,n),GI("s1",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"hash_table":return(async(e,t,n,s)=>{switch(e.op){case"HashTable":case"HashTableV2":{const r=GI("keyDType",e,t,n),a=GI("valueDType",e,t,n),i=new BS(r,a);return s.addHashTable(e.name,i),[i.handle]}case"LookupTableImport":case"LookupTableImportV2":{const r=GI("tableHandle",e,t,n,s),a=GI("keys",e,t,n),i=GI("values",e,t,n),o=s.getHashTableById(r.id);return[await o.import(a,i)]}case"LookupTableFind":case"LookupTableFindV2":{const r=GI("tableHandle",e,t,n,s),a=GI("keys",e,t,n),i=GI("defaultValue",e,t,n),o=s.getHashTableById(r.id);return[await o.find(a,i)]}case"LookupTableSize":case"LookupTableSizeV2":{const r=GI("tableHandle",e,t,n,s);return[s.getHashTableById(r.id).tensorSize()]}default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n,s);case"custom":const r=VI(e.op);if(r&&r.customExecutor)return r.customExecutor(new _S(e,t,n));throw TypeError(`Custom op ${e.op} is not registered.`);default:throw TypeError(`Unknown op '${e.op}'. File an issue at https://github.com/tensorflow/tfjs/issues so we can add it, or register a custom execution with tf.registerOp()`)}})(e,t,n);return Ve(r)?r.then((e=>[].concat(e))):[].concat(r)}class VS{constructor(e={},t={},n={},s={}){this.weightMap=e,this.tensorArrayMap=t,this.tensorListMap=n,this.functionMap=s,this.rootContext={id:0,frameName:"",iterationId:0},this.contexts=[this.rootContext],this.lastId=0,this.generateCurrentContextIds()}newFrame(e,t){return{id:e,frameName:t,iterationId:0}}set currentContext(e){this.contexts!==e&&(this.contexts=e,this.generateCurrentContextIds())}get currentContext(){return this.contexts}get currentContextId(){return this._currentContextIds[0]}get currentContextIds(){return this._currentContextIds}generateCurrentContextIds(){const e=[];for(let t=0;t<this.contexts.length-1;t++){const n=this.contexts.slice(0,this.contexts.length-t);e.push(this.contextIdforContexts(n))}e.push(""),this._currentContextIds=e}contextIdforContexts(e){return e?e.map((e=>0===e.id&&0===e.iterationId?"":`${e.frameName}-${e.iterationId}`)).join("/"):""}enterFrame(e){this.contexts&&(this.lastId++,this.contexts=this.contexts.slice(),this.contexts.push(this.newFrame(this.lastId,e)),this._currentContextIds.unshift(this.contextIdforContexts(this.contexts)))}exitFrame(){if(!(this.contexts&&this.contexts.length>1))throw new Error("Cannot exit frame, the context is empty");this.contexts=this.contexts.slice(),this.contexts.splice(-1),this.currentContextIds.shift()}nextIteration(){if(!(this.contexts&&this.contexts.length>0))throw new Error("Cannot increase frame iteration, the context is empty");{this.contexts=this.contexts.slice(),this.lastId++;const e=Object.assign({},this.contexts[this.contexts.length-1]);e.iterationId+=1,e.id=this.lastId,this.contexts.splice(-1,1,e),this._currentContextIds.splice(0,1,this.contextIdforContexts(this.contexts))}}getWeight(e){return this.weightMap[e]}addTensorArray(e){this.tensorArrayMap[e.id]=e}getTensorArray(e){return this.tensorArrayMap[e]}addTensorList(e){this.tensorListMap[e.id]=e}getTensorList(e){return this.tensorListMap[e]}dispose(e){for(const t in this.tensorArrayMap)this.tensorArrayMap[t].clearAndClose(e);for(const t in this.tensorListMap)this.tensorListMap[t].clearAndClose(e)}}function US(e,t,n,s){const r=new Set,a=[];let i=null,o=null;const l=new Set,u=Object.keys(e).map((e=>KI(e)[0]));let c=[];null!=s&&(c=s.map((e=>KI(e.name)[0])));const h=[...t];for(;h.length>0;){const e=h.pop();(qS(e)||KS(e)||XS(e))&&null==i&&(i=e,o=i.children.map((e=>e.name)).filter((e=>r.has(e)))),r.add(e.name),null==n[e.name]&&-1===u.indexOf(e.name)&&-1===c.indexOf(e.name)&&(0!==e.inputs.length?e.inputs.forEach((e=>{l.has(e.name)||(l.add(e.name),h.push(e))})):a.push(e.name))}return{inputs:e,outputs:t,usedNodes:r,missingInputs:a,dynamicNode:i,syncInputs:o}}const GS=["Switch","Merge","Enter","Exit","NextIteration","StatelessIf","StatelessWhile","if","While"],HS=["NonMaxSuppressionV2","NonMaxSuppressionV3","NonMaxSuppressionV5","Where"],jS=["HashTable","HashTableV2","LookupTableImport","LookupTableImportV2","LookupTableFind","LookupTableFindV2","LookupTableSize","LookupTableSizeV2"];function qS(e){return GS.indexOf(e.op)>=0}function KS(e){return HS.indexOf(e.op)>=0}function XS(e){return jS.indexOf(e.op)>=0}class YS{constructor(e,t){this.graph=e,this.parent=t,this.compiledMap=new Map,this._weightMap={},this.SEPERATOR=",",this._functions={},this._functionExecutorMap={},this.intermediateTensors={},this.keepTensorForDebug=!1,this._outputs=e.outputs,this._inputs=e.inputs,this._initNodes=e.initNodes,this._signature=e.signature,this._functions=e.functions,null!=e.functions&&Object.keys(e.functions).forEach((t=>{this._functionExecutorMap[t]=new YS(e.functions[t],this)}))}get weightIds(){return this.parent?this.parent.weightIds:this._weightIds}get functionExecutorMap(){return this.parent?this.parent.functionExecutorMap:this._functionExecutorMap}get weightMap(){return this.parent?this.parent.weightMap:this._weightMap}set weightMap(e){const t=Object.keys(e).map((t=>e[t].map((e=>e.id))));this._weightIds=[].concat(...t),this._weightMap=e}set resourceManager(e){this._resourceManager=e}get inputs(){return this._inputs.map((e=>({name:e.name,shape:e.attrParams.shape?e.attrParams.shape.value:void 0,dtype:e.attrParams.dtype?e.attrParams.dtype.value:void 0})))}get outputs(){return this._outputs.map((e=>({name:e.name,shape:e.attrParams.shape?e.attrParams.shape.value:void 0,dtype:e.attrParams.dtype?e.attrParams.dtype.value:void 0})))}get inputNodes(){return this._inputs.map((e=>e.signatureKey||e.name))}get outputNodes(){return this._outputs.map((e=>{const t=e.signatureKey||e.name;return e.defaultOutput?`${t}:${e.defaultOutput}`:t}))}get functions(){return Object.keys(this._functions).reduce(((e,t)=>(e[t]=this._functions[t].signature,e)),{})}getCompilationKey(e,t){const n=e.map((e=>e.name)).sort(),s=t.map((e=>e.name)).sort();return n.join(this.SEPERATOR)+"--"+s.join(this.SEPERATOR)}compile(e,t){const n=US(e,t,this.weightMap,this._initNodes),{missingInputs:s,dynamicNode:r,syncInputs:a}=n;if(null!=r)throw new Error(`This execution contains the node '${r.name}', which has the dynamic op '${r.op}'. Please use model.executeAsync() instead. Alternatively, to avoid the dynamic ops, specify the inputs [${a}]`);if(s.length>0){const n=t.map((e=>e.name)),r=Object.keys(e);throw new Error(`Cannot compute the outputs [${n}] from the provided inputs [${r}]. Missing the following inputs: [${s}]`)}return function(e,t,n){const{usedNodes:s,inputs:r}=n,a=[],i=Object.keys(r).map((e=>KI(e)[0])).map((t=>e.nodes[t])),o=e.initNodes;i.forEach((e=>{s.has(e.name)&&a.push(e)})),e.weights.forEach((e=>{s.has(e.name)&&a.push(e)})),null!=o&&o.forEach((e=>{s.has(e.name)&&a.push(e)}));const l=new Set,u=[];for(;a.length>0;){const e=a.pop();l.add(e.name),t[e.name]||u.push(e),e.children.forEach((e=>{!l.has(e.name)&&s.has(e.name)&&e.inputs.every((e=>l.has(e.name)))&&a.push(e)}))}return u}(this.graph,this.weightMap,n)}execute(e,t){e=this.mapInputs(e);const n=Object.keys(e).sort();this.checkInputs(e),this.checkInputShapeAndType(e),t=this.mapOutputs(t),this.checkOutputs(t);const s=n.map((e=>this.graph.nodes[KI(e)[0]])),r=t.map((e=>KI(e)[0]));let a=r.map((e=>this.graph.nodes[e]));this.resetIntermediateTensors(),0===a.length&&(a=this._outputs);const i=this.getCompilationKey(s,a);let o=this.compiledMap.get(i);null==o&&(o=this.compile(e,a),this.compiledMap.set(i,o));const l={},u={};return Qo((()=>{const n=new VS(this.weightMap,l,u,this.functionExecutorMap),s=Object.assign({},this.weightMap);Object.keys(e).forEach((t=>{const[n,r]=KI(t),a=[];a[r]=e[t],s[n]=a}));const a=this.getFrozenTensorIds(s),i={};for(let e=0;e<o.length;e++){const t=o[e];if(!s[t.name]){const e=WS(t,s,n,this._resourceManager);if(Ve(e))throw new Error(`The execution of the op '${t.op}' returned a promise. Please use model.executeAsync() instead.`);s[t.name]=e,this.checkTensorForDisposal(t.name,t,s,n,a,r,i)}}return null==this.parent&&n.dispose(a),t.map((e=>HI(e,s,n)))}))}getFrozenTensorIds(e){const t=[].concat.apply([],Object.keys(e).map((t=>e[t])).map((e=>e.map((e=>e.id)))));return new Set(t)}checkTensorForDisposal(e,t,n,s,r,a,i){"control"!==t.category&&-1===a.indexOf(e)&&(n[e].forEach((e=>{null!=e&&(i[e.id]=(i[e.id]||0)+t.children.length)})),t.inputs.forEach((e=>{if("control"!==e.category){const a=function(e,t,n){return t[qI(e,n.currentContextId)]}(e.name,n,s);null!=a&&a.forEach((e=>{if(e&&!e.kept&&!r.has(e.id)){const n=i[e.id];if(1===n){if(this.keepTensorForDebug){const[n,r]=jI(t.name,s);this.intermediateTensors[n]||(this.intermediateTensors[n]=[]),this.intermediateTensors[n][r]=e}else e.dispose();delete i[e.id]}else null!=n&&i[e.id]--}}))}})))}async executeAsync(e,t){return this._executeAsync(e,t)}disposeIntermediateTensors(){this.intermediateTensors&&(Object.keys(this.intermediateTensors).forEach((e=>this.intermediateTensors[e].forEach((e=>e.dispose())))),this.disposeTensorsMap())}disposeTensorsMap(){this.tensorsMap&&Object.keys(this.tensorsMap).forEach((e=>{this.tensorsMap[e].forEach((e=>{!e||e.kept||e.isDisposed||this.keepIds.has(e.id)||e.dispose()}))}))}getIntermediateTensors(){return this.tensorsMap}resetIntermediateTensors(){for(const e in this.intermediateTensors)this.intermediateTensors[e].forEach((e=>e.dispose())),delete this.intermediateTensors[e]}async _executeAsync(e,t,n=!1,s={},r={}){n||(e=this.mapInputs(e),this.checkInputs(e),this.checkInputShapeAndType(e),t=this.mapOutputs(t),this.checkOutputs(t));try{this.keepTensorForDebug=He().getBool("KEEP_INTERMEDIATE_TENSORS")}catch(e){console.warn(e.message)}this.resetIntermediateTensors();const a=new VS(this.weightMap,s,r,this.functionExecutorMap);this.tensorsMap=await this.executeWithControlFlow(e,a,t,n);const i=t.map((e=>HI(e,this.tensorsMap,a))),o=i.map((e=>e.id)),l=Object.keys(e).map((t=>e[t].id));return this.keepIds=new Set([...o,...l,...this.weightIds]),this.keepTensorForDebug||this.disposeTensorsMap(),null==this.parent&&a.dispose(this.keepIds),i}async executeFunctionAsync(e,t,n){const s=e.reduce(((e,t,n)=>(e[this.inputs[n].name]=t,e)),{});return this._executeAsync(s,this.outputNodes,!0,t,n)}async executeWithControlFlow(e,t,n,s){const r=Object.keys(e),a=r.map((e=>this.graph.nodes[KI(e)[0]])),i=n.map((e=>KI(e)[0]));let o=i.map((e=>this.graph.nodes[e]));0===o.length&&(o=this._outputs);const{usedNodes:l,missingInputs:u,dynamicNode:c,syncInputs:h}=US(e,o,this.weightMap,this._initNodes),p=[...a,...this.graph.weights,...this._initNodes||[]].map((e=>({node:e,contexts:t.currentContext}))),d=Object.assign({},this.weightMap);Object.keys(e).forEach((t=>{const[n,s]=KI(t),r=[];r[s]=e[t],d[n]=r}));const f={},m=this.getFrozenTensorIds(d),g={};for(;p.length>0;){const e=this.processStack(a,p,t,d,g,m,i,f,l);await Promise.all(e)}null!=c||s||console.warn("This model execution did not contain any nodes with control flow or dynamic output shapes. You can use model.execute() instead.");const y=o.filter((e=>!qS(e)&&!HI(e.name,d,t))).map((e=>e.name));if(y.length>0){let e="";throw null!=c&&(e=`Alternatively, to avoid the dynamic ops, use model.execute() and specify the inputs [${h}]`),new Error(`Cannot compute the outputs [${y}] from the provided inputs [${r}]. Consider providing the following inputs: [${u}]. ${e}`)}return d}processStack(e,t,n,s,r,a,i,o,l){const u=[];for(;t.length>0;){const e=t.pop();n.currentContext=e.contexts;let c="";if("Enter"===e.node.op&&GI("isConstant",e.node,s,n)&&([c]=jI(e.node.name,n)),null==s[e.node.name]){const h=WS(e.node,s,n,this._resourceManager);c||([c]=jI(e.node.name,n));const p=n.currentContext;Ve(h)?u.push(h.then((u=>(s[c]=u,n.currentContext=p,this.checkTensorForDisposal(c,e.node,s,n,a,i,o),this.processChildNodes(e.node,t,n,s,r,l),u)))):(s[c]=h,this.checkTensorForDisposal(c,e.node,s,n,a,i,o),this.processChildNodes(e.node,t,n,s,r,l))}else this.processChildNodes(e.node,t,n,s,r,l)}return u}processChildNodes(e,t,n,s,r,a){e.children.forEach((e=>{const[i]=jI(e.name,n);!r[i]&&a.has(e.name)&&("Merge"===e.op?e.inputNames.some((e=>!!HI(e,s,n)))&&(r[i]=!0,t.push({contexts:n.currentContext,node:e})):e.inputNames.every((e=>!!HI(e,s,n)))&&(r[i]=!0,t.push({contexts:n.currentContext,node:e})))}))}dispose(){Object.keys(this.weightMap).forEach((e=>this.weightMap[e].forEach((e=>e.dispose()))))}checkInputShapeAndType(e){Object.keys(e).forEach((t=>{const n=e[t],[s]=KI(t),r=this.graph.nodes[s];if(r.attrParams.shape&&r.attrParams.shape.value){const e=r.attrParams.shape.value;se(e.length===n.shape.length&&n.shape.every(((t,n)=>-1===e[n]||e[n]===t)),(()=>`The shape of dict['${r.name}'] provided in model.execute(dict) must be [${e}], but was [${n.shape}]`))}r.attrParams.dtype&&r.attrParams.dtype.value&&se(n.dtype===r.attrParams.dtype.value,(()=>`The dtype of dict['${r.name}'] provided in model.execute(dict) must be ${r.attrParams.dtype.value}, but was ${n.dtype}`))}))}mapInputs(e){const t={};for(const n in e)null!=this._signature&&null!=this._signature.inputs&&null!=this._signature.inputs[n]?t[this._signature.inputs[n].name]=e[n]:t[n]=e[n];return t}checkInputs(e){const t=Object.keys(e).filter((e=>{const[t]=KI(e);return null==this.graph.nodes[t]}));if(t.length>0)throw new Error(`The dict provided in model.execute(dict) has keys: [${t}] that are not part of graph`)}mapOutputs(e){return e.map((e=>null!=this._signature&&null!=this._signature.outputs&&null!=this._signature.outputs[e]?this._signature.outputs[e].name:e),{})}checkOutputs(e){e.forEach((e=>{const[t]=KI(e);if(!this.graph.nodes[t])throw new Error(`The output '${e}' is not found in the graph`)}))}}class ZS{constructor(e={},t={}){this.hashTableNameToHandle=e,this.hashTableMap=t}addHashTable(e,t){this.hashTableNameToHandle[e]=t.handle,this.hashTableMap[t.id]=t}getHashTableHandleByName(e){return this.hashTableNameToHandle[e]}getHashTableById(e){return this.hashTableMap[e]}dispose(){for(const e in this.hashTableMap)this.hashTableMap[e].clearAndClose(),delete this.hashTableMap[e];for(const e in this.hashTableNameToHandle)this.hashTableNameToHandle[e].dispose(),delete this.hashTableNameToHandle[e]}}class JS{constructor(e,t={}){this.modelUrl=e,this.loadOptions=t,this.version="n/a",null==t&&(this.loadOptions={}),this.resourceManager=new ZS}get modelVersion(){return this.version}get inputNodes(){return this.executor.inputNodes}get outputNodes(){return this.executor.outputNodes}get inputs(){return this.executor.inputs}get outputs(){return this.executor.outputs}get weights(){return this.executor.weightMap}get metadata(){return this.artifacts.userDefinedMetadata}get modelSignature(){return this.signature}findIOHandler(){const e=this.modelUrl;if(null!=e.load)this.handler=e;else if(null!=this.loadOptions.requestInit)this.handler=Gi(e,this.loadOptions);else{const t=Ya(e,this.loadOptions);if(0===t.length)t.push(Gi(e,this.loadOptions));else if(t.length>1)throw new Error(`Found more than one (${t.length}) load handlers for URL '${[e]}'`);this.handler=t[0]}}async load(){if(this.findIOHandler(),null==this.handler.load)throw new Error("Cannot proceed with model loading because the IOHandler provided does not have the `load` method implemented.");const e=await this.handler.load();return this.loadSync(e)}loadSync(e){this.artifacts=e;const t=this.artifacts.modelTopology;let n;n=null!=this.artifacts.userDefinedMetadata&&null!=this.artifacts.userDefinedMetadata.signature?this.artifacts.userDefinedMetadata.signature:this.artifacts.signature,this.signature=n,this.version=`${t.versions.producer}.${t.versions.minConsumer}`;const s=Ma(this.artifacts.weightData,this.artifacts.weightSpecs);if(this.executor=new YS(gS.Instance.transformGraph(t,this.signature)),this.executor.weightMap=this.convertTensorMapToTensorsMap(s),this.executor.resourceManager=this.resourceManager,null!=e.modelInitializer&&null!=e.modelInitializer.node){const t=gS.Instance.transformGraph(e.modelInitializer);this.initializer=new YS(t),this.initializer.weightMap=this.executor.weightMap,this.initializer.resourceManager=this.resourceManager,this.initializer.executeAsync({},[])}return!0}async save(e,t){if("string"==typeof e){const t=Xa(e);if(0===t.length)throw new Error(`Cannot find any save handlers for URL '${e}'`);if(t.length>1)throw new Error(`Found more than one (${t.length}) save handlers for URL '${e}'`);e=t[0]}if(null==e.save)throw new Error("GraphModel.save() cannot proceed because the IOHandler provided does not have the `save` attribute defined.");return e.save(this.artifacts)}predict(e,t){return this.execute(e,this.outputNodes)}normalizeInputs(e){if(!(e instanceof Zr||Array.isArray(e)))return e;if((e=Array.isArray(e)?e:[e]).length!==this.inputNodes.length)throw new Error(`Input tensor count mismatch,the graph model has ${this.inputNodes.length} placeholders, while there are ${e.length} input tensors.`);return this.inputNodes.reduce(((t,n,s)=>(t[n]=e[s],t)),{})}normalizeOutputs(e){return e=e||this.outputNodes,Array.isArray(e)?e:[e]}execute(e,t){e=this.normalizeInputs(e),t=this.normalizeOutputs(t);const n=this.executor.execute(e,t);return n.length>1?n:n[0]}async executeAsync(e,t){e=this.normalizeInputs(e),t=this.normalizeOutputs(t);const n=await this.executor.executeAsync(e,t);return n.length>1?n:n[0]}getIntermediateTensors(){return this.executor.getIntermediateTensors()}disposeIntermediateTensors(){this.executor.disposeIntermediateTensors()}convertTensorMapToTensorsMap(e){return Object.keys(e).reduce(((t,n)=>(t[n]=[e[n]],t)),{})}dispose(){this.executor.dispose(),this.initializer&&this.initializer.dispose(),this.resourceManager.dispose()}}async function QS(e,t={}){if(null==e)throw new Error("modelUrl in loadGraphModel() cannot be null. Please provide a url or an IOHandler that loads the model");null==t&&(t={}),t.fromTFHub&&null==e.load&&(e.endsWith("/")||(e+="/"),e=`${e}model.json?tfjs-format=file`);const n=new JS(e,t);return await n.load(),n}const eN="3.17.0";var tN,nN=n(377);function sN(e,t,n=new Map,s=new Set){if(null==e)return null;if("function"==typeof Blob&&e instanceof Blob)return e.slice();if(s.has(e))throw new Error("Circular references are not supported.");if(n.has(e))return n.get(e);const r=t(e);if(r.recurse&&null!==r.value)throw new Error("A deep map function may not return both a value and recurse=true.");if(r.recurse){if(lN(e)){const r=Array.isArray(e)?[]:{};s.add(e);for(const a in e){const i=sN(e[a],t,n,s);r[a]=i}return s.delete(e),e.__proto__&&(r.__proto__=e.__proto__),r}throw new Error(`Can't recurse into non-iterable type: ${e}`)}return n.set(e,r.value),r.value}function rN(e,t=iN){return aN(e,t)}function aN(e,t,n=new Set){const s=e[0];if(n.has(s))throw new Error("Circular references are not supported.");const r=t(e);if(r.recurse&&null!==r.value)throw new Error("A deep zip function may not return both a value and recurse=true.");if(r.recurse){if(lN(s)){const r=Array.isArray(s)?[]:{};n.add(s);for(const a in s){const s=aN(e.map((e=>e[a])),t,n);r[a]=s}return n.delete(s),r}throw new Error(`Can't recurse into non-iterable type: ${s}`)}return r.value}function iN(e){return null===e?null:lN(e[0])?{value:null,recurse:!0}:{value:e,recurse:!1}}async function oN(e,t){const n=new Map;sN(e,t,n);for(const e of Array.from(n.keys())){const t=n.get(e);if(Ve(t)){const s=await t;n.set(e,s)}}return sN(e,t,n)}function lN(e){let t=!1;if(He().get("IS_BROWSER"))t=e instanceof TextDecoder;else{const{StringDecoder:s}=n(977);t=e instanceof s}return null!=e&&!ArrayBuffer.isView(e)&&(Array.isArray(e)||"object"==typeof e&&!(e instanceof Zr)&&!(e instanceof Promise)&&!t)}function uN(e){return e instanceof Zr?{value:e.clone(),recurse:!1}:lN(e)?{value:null,recurse:!0}:{value:e,recurse:!1}}class cN{constructor(e){if(this.capacity=e,this.begin=0,this.end=0,null==e)throw new RangeError("Can't create a ring buffer of unknown capacity.");if(e<1)throw new RangeError("Can't create ring buffer of capacity < 1.");this.data=new Array(e),this.doubledCapacity=2*e}wrap(e){for(;e<0;)e+=this.doubledCapacity;return e%this.doubledCapacity}get(e){if(e<0)throw new RangeError("Can't get item at a negative index.");return this.data[e%this.capacity]}set(e,t){if(e<0)throw new RangeError("Can't set item at a negative index.");this.data[e%this.capacity]=t}length(){let e=this.end-this.begin;return e<0&&(e=this.doubledCapacity+e),e}isFull(){return this.length()===this.capacity}isEmpty(){return 0===this.length()}push(e){if(this.isFull())throw new RangeError("Ring buffer is full.");this.set(this.end,e),this.end=this.wrap(this.end+1)}pushAll(e){for(const t of e)this.push(t)}pop(){if(this.isEmpty())throw new RangeError("Ring buffer is empty.");this.end=this.wrap(this.end-1);const e=this.get(this.end);return this.set(this.end,void 0),e}unshift(e){if(this.isFull())throw new RangeError("Ring buffer is full.");this.begin=this.wrap(this.begin-1),this.set(this.begin,e)}shift(){if(this.isEmpty())throw new RangeError("Ring buffer is empty.");const e=this.get(this.begin);return this.set(this.begin,void 0),this.begin=this.wrap(this.begin+1),e}shuffleExcise(e){if(this.isEmpty())throw new RangeError("Ring buffer is empty.");const t=this.wrap(this.begin+e),n=this.get(t);return this.set(t,this.pop()),n}}class hN extends cN{constructor(){super(hN.INITIAL_CAPACITY)}isFull(){return!1}push(e){super.isFull()&&this.expand(),super.push(e)}unshift(e){super.isFull()&&this.expand(),super.unshift(e)}expand(){const e=2*this.capacity,t=new Array(e),n=this.length();for(let e=0;e<n;e++)t[e]=this.get(this.wrap(this.begin+e));this.data=t,this.capacity=e,this.doubledCapacity=2*this.capacity,this.begin=0,this.end=n}}function pN(e){return new mN(e)}function dN(e){return new gN(e)}hN.INITIAL_CAPACITY=32;class fN{async toArray(){const e=[];let t=await this.next();for(;!t.done;)e.push(t.value),t=await this.next();return e}async toArrayForTest(){const e=this.prefetch(100),t=[];let n=await e.next();for(;!n.done;)t.push(n.value),n=await e.next();return t}async resolveFully(){let e=await this.next();for(;!e.done;)e=await this.next()}async resolveWhile(e){let t=await this.next(),n=e(t.value);for(;!t.done&&n;)t=await this.next(),n=e(t.value)}handleErrors(e){return new IN(this,e)}filter(e){return new wN(this,e)}map(e){return new kN(this,e)}mapAsync(e){return new SN(this,e)}serialMapAsync(e){return new SN(this,e).serial()}flatmap(e){return new TN(this,e)}async forEachAsync(e){return this.map(e).resolveFully()}async serialForEach(e){return this.serialMapAsync(e).resolveWhile((e=>!0===e))}rowMajorBatch(e,t=!0){return new vN(this,e,t)}columnMajorBatch(e,t=!0,n=iN){return this.rowMajorBatch(e,t).map((e=>rN(e,n)))}concatenate(e,t){return new CN(pN([this,e]),t)}take(e){return e<0||null==e?this:new xN(this,e)}skip(e){return e<0||null==e?this:new bN(this,e)}prefetch(e){return new EN(this,e)}shuffle(e,t){return new AN(this,e,t)}serial(){return new yN(this)}}class mN extends fN{constructor(e){super(),this.items=e,this.trav=0}summary(){return`Array of ${this.items.length} items`}async next(){if(this.trav>=this.items.length)return{value:null,done:!0};const e=this.items[this.trav];return this.trav++,{value:(t=e,function(e,t){return sN(e,t)}(t,uN)),done:!1};var t}}class gN extends fN{constructor(e){super(),this.nextFn=e}summary(){return"Function call"}async next(){try{return this.nextFn()}catch(e){throw e.message=`Error thrown while iterating through a dataset: ${e.message}`,e}}}class yN extends fN{constructor(e){super(),this.upstream=e,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> Serial`}async next(){return this.lastRead=this.lastRead.then((()=>this.serialNext())),this.lastRead}async serialNext(){return this.upstream.next()}}class bN extends fN{constructor(e,t){super(),this.upstream=e,this.maxCount=t,this.count=0,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> Skip`}async next(){return this.lastRead=this.lastRead.then((()=>this.serialNext())),this.lastRead}async serialNext(){for(;this.count++<this.maxCount;){const e=await this.upstream.next();if(e.done)return e;el(e.value)}return this.upstream.next()}}class xN extends fN{constructor(e,t){super(),this.upstream=e,this.maxCount=t,this.count=0}summary(){return`${this.upstream.summary()} -> Take`}async next(){return this.count++>=this.maxCount?{value:null,done:!0}:this.upstream.next()}}class vN extends fN{constructor(e,t,n=!0){super(),this.upstream=e,this.batchSize=t,this.enableSmallLastBatch=n,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> RowMajorBatch`}async next(){return this.lastRead=this.lastRead.then((()=>this.serialNext())),this.lastRead}async serialNext(){const e=[];for(;e.length<this.batchSize;){const t=await this.upstream.next();if(t.done)return this.enableSmallLastBatch&&e.length>0?{value:e,done:!1}:{value:null,done:!0};e.push(t.value)}return{value:e,done:!1}}}class wN extends fN{constructor(e,t){super(),this.upstream=e,this.predicate=t,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> Filter`}async next(){return this.lastRead=this.lastRead.then((()=>this.serialNext())),this.lastRead}async serialNext(){for(;;){const e=await this.upstream.next();if(e.done||this.predicate(e.value))return e;el(e.value)}}}class kN extends fN{constructor(e,t){super(),this.upstream=e,this.transform=t}summary(){return`${this.upstream.summary()} -> Map`}async next(){const e=await this.upstream.next();if(e.done)return{value:null,done:!0};const t=ha(e.value),n=this.transform(e.value),s=ha(n);for(const e of t)ca(e,s)||e.dispose();return{value:n,done:!1}}}class IN extends fN{constructor(e,t){super(),this.upstream=e,this.handler=t,this.count=0,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> handleErrors`}async next(){return this.lastRead=this.lastRead.then((()=>this.serialNext())),this.lastRead}async serialNext(){for(;;)try{return await this.upstream.next()}catch(e){if(!this.handler(e))return{value:null,done:!0}}}}class SN extends fN{constructor(e,t){super(),this.upstream=e,this.transform=t}summary(){return`${this.upstream.summary()} -> AsyncMap`}async next(){const e=await this.upstream.next();if(e.done)return{value:null,done:!0};const t=ha(e.value),n=await this.transform(e.value),s=ha(n);for(const e of t)ca(e,s)||e.dispose();return{value:n,done:!1}}}class NN extends fN{constructor(){super(),this.outputQueue=new hN,this.lastRead=Promise.resolve({value:null,done:!1})}async next(){return this.lastRead=this.lastRead.then((()=>this.serialNext())),this.lastRead}async serialNext(){for(;0===this.outputQueue.length();)if(!await this.pump())return{value:null,done:!0};return{value:this.outputQueue.shift(),done:!1}}}class TN extends NN{constructor(e,t){super(),this.upstream=e,this.transform=t}summary(){return`${this.upstream.summary()} -> Flatmap`}async pump(){const e=await this.upstream.next();if(e.done)return!1;const t=ha(e.value),n=this.transform(e.value),s=ha(n);this.outputQueue.pushAll(n);for(const e of t)ca(e,s)||e.dispose();return!0}}class CN extends fN{constructor(e,t){super(),this.baseErrorHandler=t,this.lastRead=null,this.iterator=null,this.moreIterators=e}summary(){return"TODO: fill in upstream of chained summaries -> Chained"}async next(){return this.lastRead=this.readFromChain(this.lastRead),this.lastRead}async readFromChain(e){if(await e,null==this.iterator){const e=await this.moreIterators.next();if(e.done)return{value:null,done:!0};this.iterator=e.value,null!=this.baseErrorHandler&&(this.iterator=this.iterator.handleErrors(this.baseErrorHandler))}const t=await this.iterator.next();return t.done?(this.iterator=null,this.readFromChain(e)):t}}!function(e){e[e.FAIL=0]="FAIL",e[e.SHORTEST=1]="SHORTEST",e[e.LONGEST=2]="LONGEST"}(tN||(tN={}));class $N extends fN{constructor(e,t=tN.FAIL){super(),this.iterators=e,this.mismatchMode=t,this.count=0,this.currentPromise=null}summary(){return"{TODO: fill in upstream of zip summaries} -> Zip"}async nextState(e){await e;let t=0,n=0;const s=await oN(this.iterators,(function(e){return e instanceof fN?{value:e.next().then((e=>(t++,e.done&&n++,e.value))),recurse:!1}:{value:null,recurse:!0}}));if(t===n)return{value:null,done:!0};if(n>0)switch(this.mismatchMode){case tN.FAIL:throw new Error(`Zipped streams should have the same length. Mismatched at element ${this.count}.`);case tN.SHORTEST:return{value:null,done:!0};case tN.LONGEST:}return this.count++,{value:s,done:!1}}async next(){return this.currentPromise=this.nextState(this.currentPromise),this.currentPromise}}class EN extends fN{constructor(e,t){super(),this.upstream=e,this.bufferSize=t,this.buffer=new cN(t)}summary(){return`${this.upstream.summary()} -> Prefetch`}refill(){for(;!this.buffer.isFull();){const e=this.upstream.next();this.buffer.push(e)}}next(){return this.refill(),this.buffer.shift()}}class AN extends EN{constructor(e,t,n){super(e,t),this.upstream=e,this.windowSize=t,this.upstreamExhausted=!1,this.random=nN.alea(n||Or().toString()),this.lastRead=Promise.resolve({value:null,done:!1})}async next(){return this.lastRead=this.lastRead.then((()=>this.serialNext())),this.lastRead}randomInt(e){return Math.floor(this.random()*e)}chooseIndex(){return this.randomInt(this.buffer.length())}async serialNext(){for(this.upstreamExhausted||this.refill();!this.buffer.isEmpty();){const e=this.chooseIndex(),t=await this.buffer.shuffleExcise(e);if(!t.done)return this.refill(),t;this.upstreamExhausted=!0}return{value:null,done:!0}}}class _N{constructor(){this.size=null}batch(e,t=!0){const n=this;let s;return se(e>0,(()=>`batchSize needs to be positive, but it is\n      ${e}`)),s=this.size===1/0||null==this.size?this.size:t?Math.ceil(this.size/e):Math.floor(this.size/e),RN((async()=>(await n.iterator()).columnMajorBatch(e,t,ON)),s)}concatenate(e){const t=this;let n;return n=this.size===1/0||e.size===1/0?1/0:null!=this.size&&null!=e.size?this.size+e.size:null,RN((async()=>(await t.iterator()).concatenate(await e.iterator())),n)}filter(e){const t=this;let n;return n=this.size===1/0?1/0:null,RN((async()=>(await t.iterator()).filter((t=>Qo((()=>e(t)))))),n)}async forEachAsync(e){return(await this.iterator()).forEachAsync(e)}map(e){const t=this;return RN((async()=>(await t.iterator()).map((t=>Qo((()=>e(t)))))),this.size)}mapAsync(e){const t=this;return RN((async()=>(await t.iterator()).mapAsync(e)),this.size)}prefetch(e){if(null==e)throw new RangeError("`Dataset.prefetch()` requires bufferSize to be specified.");const t=this;return RN((async()=>(await t.iterator()).prefetch(e)),this.size)}repeat(e){const t=this;let n;return n=null!=this.size&&e>0?this.size*e:0===e?0:null!=this.size&&(void 0===e||e<0)?1/0:null,RN((async()=>{return n=dN((async()=>({value:await t.iterator(),done:!1}))).take(e),new CN(n,s);var n,s}),n)}skip(e){const t=this;let n;return n=null!=this.size&&e>=0&&this.size>=e?this.size-e:null!=this.size&&(this.size<e||void 0===e||e<0)?0:null,RN((async()=>(await t.iterator()).skip(e)),n)}shuffle(e,t,n=!0){if(null==e||e<0)throw null==this.size?new RangeError("`Dataset.shuffle()` requires bufferSize to be specified."):new RangeError(`\`Dataset.shuffle()\` requires bufferSize to be specified.  If your data fits in main memory (for regular JS objects), and/or GPU memory (for \`tf.Tensor\`s), consider setting bufferSize to the dataset size (${this.size} elements)`);const s=this,r=nN.alea(t||Or().toString());return RN((async()=>{let t=r.int32();return n&&(t+=r.int32()),(await s.iterator()).shuffle(e,t.toString())}),this.size)}take(e){const t=this;let n;return n=null!=this.size&&this.size>e?e:null!=this.size&&this.size<=e?this.size:null,RN((async()=>(await t.iterator()).take(e)),n)}async toArray(){if(this.size===1/0)throw new Error("Can not convert infinite data stream to array.");return(await this.iterator()).toArray()}async toArrayForTest(){if(this.size===1/0)throw new Error("Can not convert infinite data stream to array.");return(await this.iterator()).toArrayForTest()}}function RN(e,t=null){return new class extends _N{constructor(){super(...arguments),this.size=t}async iterator(){return e()}}}function FN(e){return RN((async()=>pN(e)),e.length)}function DN(e){if(!lN(e))throw new Error("The argument to zip() must be an object or array.");let t;if(Array.isArray(e))for(let n=0;n<e.length;n++)t=null==t?e[n].size:Math.min(t,e[n].size);else if(e instanceof Object)for(const n in e)t=null==t?e[n].size:Math.min(t,e[n].size);return RN((async()=>function(e,t=tN.FAIL){return new $N(e,t)}(await oN(e,(e=>{if(e instanceof _N)return{value:e.iterator(),recurse:!1};if(lN(e))return{value:null,recurse:!0};throw new Error("Leaves of the structure passed to zip() must be Datasets, not primitives.")})),tN.SHORTEST)),t)}function ON(e){if(null===e)return null;return null==(t=e[0])||null===(n=t)||"object"!=typeof n&&"function"!=typeof n||Array.isArray(t)||"object"==typeof t&&t instanceof Zr||Se(t)?{value:function(e){if(0===e.length)throw new Error("Can't make a batch of zero elements.");return e[0]instanceof Zr?ap(e):Fa(e)}(e),recurse:!1}:{value:null,recurse:!0};var t,n}_N.MAX_BUFFER_SIZE=1e4;class MN extends _N{constructor(e){super(),this.input=e}async iterator(){return(await this.input.iterator()).decodeUTF8().split("\n").map((e=>(e.endsWith("\r")&&(e=e.slice(0,-1)),e)))}}const LN='"',zN=Symbol("out"),PN=Symbol("field"),BN=Symbol("quote"),WN=Symbol("quoteafterquote"),VN=Symbol("quoteinquote");class UN extends _N{constructor(e,t){super(),this.input=e,this.hasHeader=!0,this.fullColumnNames=null,this.columnNamesValidated=!1,this.columnConfigs=null,this.configuredColumnsOnly=!1,this.delimiter=",",this.delimWhitespace=!1,this.base=new MN(e),t||(t={}),this.hasHeader=!1!==t.hasHeader,this.fullColumnNames=t.columnNames,this.columnConfigs=t.columnConfigs,this.configuredColumnsOnly=t.configuredColumnsOnly,t.delimWhitespace?(se(null==t.delimiter,(()=>"Delimiter should not be provided when delimWhitespace is true.")),this.delimWhitespace=!0,this.delimiter=" "):this.delimiter=t.delimiter?t.delimiter:","}async columnNames(){return this.columnNamesValidated||await this.setColumnNames(),this.configuredColumnsOnly?Object.keys(this.columnConfigs):this.fullColumnNames}async setColumnNames(){const e=await this.maybeReadHeaderLine();if(!this.fullColumnNames&&!e)throw new Error("Column names must be provided if there is no header line.");this.fullColumnNames&&e&&se(e.length===this.fullColumnNames.length,(()=>"The length of provided columnNames ("+this.fullColumnNames.length.toString()+") does not match the length of the header line read from file ("+e.length.toString()+").")),this.fullColumnNames||(this.fullColumnNames=e);const t=this.fullColumnNames.reduce(((e,t)=>(e[t]=e[t]+1||1,e)),{}),n=Object.keys(t).filter((e=>t[e]>1));if(se(0===n.length,(()=>"Duplicate column names found: "+n.toString())),this.columnConfigs)for(const e of Object.keys(this.columnConfigs))if(-1===this.fullColumnNames.indexOf(e))throw new Error('The key "'+e+'" provided in columnConfigs does not match any of the column names ('+this.fullColumnNames.toString()+").");this.columnNamesValidated=!0}async maybeReadHeaderLine(){if(this.hasHeader){const e=await this.base.iterator(),t=await e.next();if(t.done)throw new Error("No data was found for CSV parsing.");const n=t.value;return this.parseRow(n,!1)}return null}async iterator(){this.columnNamesValidated||await this.setColumnNames();let e=await this.base.iterator();return this.hasHeader&&(e=e.skip(1)),e.map((e=>this.makeDataElement(e)))}makeDataElement(e){const t=this.parseRow(e),n={},s={};for(let r=0;r<this.fullColumnNames.length;r++){const a=this.fullColumnNames[r],i=this.columnConfigs?this.columnConfigs[a]:null;if(!this.configuredColumnsOnly||i){const o=t[r];let l=null;if(""===o)if(i&&void 0!==i.default)l=i.default;else{if(i&&(i.required||i.isLabel))throw new Error(`Required column ${a} is empty in this line: ${e}`);l=void 0}else{const e=Number(o);if(isNaN(e))l=i&&"bool"===i.dtype?this.getBoolean(o):o;else if(i&&i.dtype)switch(i.dtype){case"float32":default:l=e;break;case"int32":l=Math.floor(e);break;case"bool":l=this.getBoolean(o)}else l=e}i&&i.isLabel?s[a]=l:n[a]=l}}return 0===Object.keys(s).length?n:{xs:n,ys:s}}getBoolean(e){return"1"===e||"true"===e.toLowerCase()?1:0}parseRow(e,t=!0){const n=[];let s=0;const r=e.length;let a=zN;for(let t=0;t<r;t++)switch(a){case zN:switch(e.charAt(t)){case LN:s=t+1,a=BN;break;case this.delimiter:if(s=t+1," "===this.delimiter&&this.delimWhitespace)break;n.push(""),a=zN;break;default:a=PN,s=t}break;case PN:e.charAt(t)===this.delimiter&&(n.push(e.substring(s,t)),a=zN,s=t+1);break;case BN:e.charAt(t)===LN&&(a=WN);break;case WN:switch(e.charAt(t)){case this.delimiter:n.push(e.substring(s,t-1)),a=zN,s=t+1;break;case LN:a=BN;break;default:a=VN}break;case VN:e.charAt(t)===LN&&(a=BN)}if(a===WN?n.push(e.substring(s,r-1)):n.push(e.substring(s)),t&&n.length!==this.fullColumnNames.length)throw new Error(`Invalid row in csv file. Should have ${this.fullColumnNames.length} elements in a row, but got ${n}`);return n}}class GN extends fN{constructor(e){super(),this.microphoneConfig=e,this.isClosed=!1,this.fftSize=e.fftSize||1024;const t=Math.log2(this.fftSize);if(this.fftSize<0||t<4||t>14||!Number.isInteger(t))throw new Error(`Invalid fftSize: it must be a power of 2 between 2 to 4 and 2 to 14, but got ${this.fftSize}`);if(this.numFrames=e.numFramesPerSpectrogram||43,this.sampleRateHz=e.sampleRateHz,this.columnTruncateLength=e.columnTruncateLength||this.fftSize,this.audioTrackConstraints=e.audioTrackConstraints,this.smoothingTimeConstant=e.smoothingTimeConstant||0,this.includeSpectrogram=!1!==e.includeSpectrogram,this.includeWaveform=!0===e.includeWaveform,!this.includeSpectrogram&&!this.includeWaveform)throw new Error("Both includeSpectrogram and includeWaveform are false. At least one type of data should be returned.")}summary(){return"microphone"}static async create(e={}){if(!He().get("IS_BROWSER"))throw new Error("microphone API is only supported in browser environment.");const t=new GN(e);return await t.start(),t}async start(){try{this.stream=await navigator.mediaDevices.getUserMedia({audio:null==this.audioTrackConstraints||this.audioTrackConstraints,video:!1})}catch(e){throw new Error(`Error thrown while initializing video stream: ${e.message}`)}if(!this.stream)throw new Error("Could not obtain audio from microphone.");const e=window.AudioContext||window.webkitAudioContext;if(this.audioContext=new e,this.sampleRateHz){if(this.audioContext.sampleRate!==this.sampleRateHz)throw new Error(`Mismatch in sampling rate: Expected: ${this.sampleRateHz}; Actual: ${this.audioContext.sampleRate}`)}else this.sampleRateHz=this.audioContext.sampleRate;const t=this.audioContext.createMediaStreamSource(this.stream);this.analyser=this.audioContext.createAnalyser(),this.analyser.fftSize=2*this.fftSize,this.analyser.smoothingTimeConstant=this.smoothingTimeConstant,t.connect(this.analyser),this.freqData=new Float32Array(this.fftSize),this.timeData=new Float32Array(this.fftSize)}async next(){if(this.isClosed)return{value:null,done:!0};let e,t;const n=await this.getAudioData();if(this.includeSpectrogram){const t=this.flattenQueue(n.freqDataQueue);e=this.getTensorFromAudioDataArray(t,[this.numFrames,this.columnTruncateLength,1])}if(this.includeWaveform){const e=this.flattenQueue(n.timeDataQueue);t=this.getTensorFromAudioDataArray(e,[this.numFrames*this.fftSize,1])}return{value:{spectrogram:e,waveform:t},done:!1}}async capture(){return(await this.next()).value}async getAudioData(){const e=[],t=[];let n=0;return new Promise((s=>{const r=setInterval((()=>{this.includeSpectrogram&&(this.analyser.getFloatFrequencyData(this.freqData),this.freqData[0]===-1/0&&s({freqDataQueue:e,timeDataQueue:t}),e.push(this.freqData.slice(0,this.columnTruncateLength))),this.includeWaveform&&(this.analyser.getFloatTimeDomainData(this.timeData),t.push(this.timeData.slice())),++n===this.numFrames&&(clearInterval(r),s({freqDataQueue:e,timeDataQueue:t}))}),this.fftSize/this.sampleRateHz*1e3)}))}stop(){this.isClosed||(this.isClosed=!0,this.analyser.disconnect(),this.audioContext.close(),null!=this.stream&&this.stream.getTracks().length>0&&this.stream.getTracks()[0].stop())}toArray(){throw new Error("Can not convert infinite audio stream to array.")}getSampleRate(){return this.sampleRateHz}flattenQueue(e){const t=e[0].length,n=new Float32Array(e.length*t);return e.forEach(((e,s)=>n.set(e,s*t))),n}getTensorFromAudioDataArray(e,t){const n=new Float32Array(oe(t));return n.set(e,n.length-e.length),Fa(n,t)}}class HN extends fN{constructor(e,t){if(super(),this.webcamVideoElement=e,this.webcamConfig=t,this.isClosed=!0,this.resize=!1,this.needToResize())if(this.resize=!0,this.cropSize=[this.webcamConfig.resizeHeight,this.webcamConfig.resizeWidth],this.cropBoxInd=up([0],"int32"),this.webcamConfig.centerCrop){const e=1*this.webcamConfig.resizeWidth/this.webcamVideoElement.width,t=1*this.webcamConfig.resizeHeight/this.webcamVideoElement.height,n=(1-e)/2,s=(1-t)/2,r=n+e,a=t+s;this.cropBox=cp([s,n,a,r],[1,4])}else this.cropBox=cp([0,0,1,1],[1,4])}summary(){return"webcam"}static async create(e,t={}){if(!He().get("IS_BROWSER"))throw new Error("tf.data.webcam is only supported in browser environment.");if(!e){if(e=document.createElement("video"),!t.resizeWidth||!t.resizeHeight)throw new Error("Please provide webcam video element, or resizeWidth and resizeHeight to create a hidden video element.");e.width=t.resizeWidth,e.height=t.resizeHeight}const n=new HN(e,t);return await n.start(),n}async start(){this.webcamConfig.facingMode&&se("user"===this.webcamConfig.facingMode||"environment"===this.webcamConfig.facingMode,(()=>`Invalid webcam facing mode: ${this.webcamConfig.facingMode}. Please provide 'user' or 'environment'`));try{this.stream=await navigator.mediaDevices.getUserMedia({video:{deviceId:this.webcamConfig.deviceId,facingMode:this.webcamConfig.facingMode?this.webcamConfig.facingMode:"user",width:this.webcamVideoElement.width,height:this.webcamVideoElement.height}})}catch(e){throw e.message=`Error thrown while initializing video stream: ${e.message}`,e}if(!this.stream)throw new Error("Could not obtain video from webcam.");try{this.webcamVideoElement.srcObject=this.stream}catch(e){console.log(e),this.webcamVideoElement.src=window.URL.createObjectURL(this.stream)}return this.webcamVideoElement.play(),this.isClosed=!1,new Promise((e=>{this.webcamVideoElement.onloadedmetadata=()=>{e()}}))}async next(){if(this.isClosed)return{value:null,done:!0};let e;try{e=oo(this.webcamVideoElement)}catch(e){throw new Error(`Error thrown converting video to pixels: ${JSON.stringify(e)}`)}if(!this.resize)return{value:e,done:!1};try{return{value:this.cropAndResizeFrame(e),done:!1}}catch(e){throw new Error(`Error thrown cropping the video: ${e.message}`)}finally{e.dispose()}}needToResize(){return!(!this.webcamConfig.resizeWidth||!this.webcamConfig.resizeHeight||this.webcamVideoElement.width===this.webcamConfig.resizeWidth&&this.webcamVideoElement.height===this.webcamConfig.resizeHeight)}cropAndResizeFrame(e){return Qo((()=>{const t=xc(Ei(e,"float32"),0);let n;n=Md.cropAndResize(t,this.cropBox,this.cropBoxInd,this.cropSize,"bilinear");const s=n.shape;return du(n,s.slice(1))}))}async capture(){return(await this.next()).value}stop(){this.stream.getTracks().forEach((e=>e.stop()));try{this.webcamVideoElement.srcObject=null}catch(e){console.log(e),this.webcamVideoElement.src=null}this.isClosed=!0}toArray(){throw new Error("Can not convert infinite video stream to array.")}}class jN{}class qN extends fN{split(e){return new KN(this,e)}}class KN extends qN{constructor(e,t){super(),this.upstream=e,this.impl=new XN(e,t)}summary(){return this.impl.summary()}async next(){return this.impl.next()}}class XN extends NN{constructor(e,t){super(),this.upstream=e,this.separator=t,this.carryover=""}summary(){return`${this.upstream.summary()} -> Split('${this.separator}')`}async pump(){const e=await this.upstream.next();if(e.done)return""!==this.carryover&&(this.outputQueue.push(this.carryover),this.carryover="",!0);const t=e.value.split(this.separator);t[0]=this.carryover+t[0];for(const e of t.slice(0,-1))this.outputQueue.push(e);return this.carryover=t[t.length-1],!0}}class YN extends fN{decodeUTF8(){return new ZN(this)}}class ZN extends qN{constructor(e){super(),this.upstream=e,this.impl=new JN(e)}summary(){return this.impl.summary()}async next(){return this.impl.next()}}class JN extends NN{constructor(e){if(super(),this.upstream=e,He().get("IS_BROWSER"))this.decoder=new TextDecoder("utf-8");else{const{StringDecoder:e}=n(601);this.decoder=new e("utf8")}}summary(){return`${this.upstream.summary()} -> Utf8`}async pump(){const e=await this.upstream.next();let t,n;return!e.done&&(t=e.value,n=He().get("IS_BROWSER")?this.decoder.decode(t,{stream:!0}):this.decoder.write(Buffer.from(t.buffer)),this.outputQueue.push(n),!0)}}class QN extends YN{constructor(e,t={}){super(),this.file=e,this.options=t,se(e instanceof Uint8Array||!!He().get("IS_BROWSER")&&(e instanceof File||e instanceof Blob),(()=>"FileChunkIterator only supports File, Blob and Uint8Array right now.")),this.offset=t.offset||0,this.chunkSize=t.chunkSize||1048576}summary(){return`FileChunks ${this.file}`}async next(){if(this.offset>=(this.file instanceof Uint8Array?this.file.byteLength:this.file.size))return{value:null,done:!0};const e=new Promise(((e,t)=>{const n=this.offset+this.chunkSize;if(this.file instanceof Uint8Array)e(new Uint8Array(this.file.slice(this.offset,n)));else{const s=new FileReader;s.onload=n=>{let r=s.result;if(r instanceof ArrayBuffer&&(r=new Uint8Array(r)),!(r instanceof Uint8Array))return t(new TypeError("FileReader returned unknown type."));e(r)},s.onabort=e=>t(new Error("Aborted")),s.onerror=e=>t(new Error(e.type));const r=this.file.slice(this.offset,n);s.readAsArrayBuffer(r)}this.offset=n}));return{value:await e,done:!1}}}function eT(e){return"string"==typeof e&&"file://"===e.slice(0,7)}class tT extends jN{constructor(e,t={}){super(),this.input=e,this.options=t}async iterator(){if(eT(this.input)&&He().get("IS_NODE")){const e=n(792);this.input=e.readFileSync(this.input.slice(7))}return new QN(this.input,this.options)}}class nT extends jN{constructor(e,t={}){super(),this.url=e,this.fileOptions=t}async iterator(){return eT(this.url)?new tT(this.url,this.fileOptions).iterator():async function(e,t={},n){let s,r;var a;"string"==typeof e?s=e:(s=e.url,r={method:(a=e).method,headers:a.headers,body:a.body,mode:a.mode,credentials:a.credentials,cache:a.cache,redirect:a.redirect,referrer:a.referrer,integrity:a.integrity});const i=await(n||Mr)(s,r);if(i.ok){const e=new Uint8Array(await i.arrayBuffer());return new QN(e,t)}throw new Error(i.statusText)}(this.url,this.fileOptions)}}function sT(e,t={}){return new UN(new nT(e),t)}function rT(e){const t=dN(e);return RN((async()=>t))}function aT(e){return RN((async()=>{const t=await e();return dN((()=>t.next()))}))}async function iT(e,t){return HN.create(e,t)}async function oT(e){return GN.create(e)}const lT="3.17.0";function uT(e,t){Array.isArray(e)||(e=[e]),e.forEach((e=>{null!=e&&se("complex64"!==e.dtype,(()=>`${t} does not support complex64 tensors in the CPU backend.`))}))}const cT=wp;class hT extends q{constructor(){super(),this.blockSize=48,this.firstUse=!0,this.data=new j(this,Yo())}nextDataId(){return hT.nextDataId++}write(e,t,n){this.firstUse&&(this.firstUse=!1,He().get("IS_NODE")&&ir("\n============================\nHi, looks like you are running TensorFlow.js in Node.js. To speed things up dramatically, install our node backend, visit https://github.com/tensorflow/tfjs-node for more details. \n============================"));const s={id:this.nextDataId()};return this.data.set(s,{values:e,dtype:n,refCount:1}),s}makeTensorInfo(e,t,n){let s;if("string"===t&&null!=n&&n.length>0&&Ce(n[0])){const r=n.map((e=>Lr(e)));s=this.write(r,e,t)}else s=this.write(n,e,t);return{dataId:s,shape:e,dtype:t}}refCount(e){return this.data.has(e)?this.data.get(e).refCount:0}incRef(e){this.data.get(e).refCount++}decRef(e){this.data.has(e)&&this.data.get(e).refCount--}move(e,t,n,s,r){this.data.set(e,{values:t,dtype:s,refCount:r})}numDataIds(){return this.data.numDataIds()}async read(e){return this.readSync(e)}readSync(e){const{dtype:t,complexTensorInfos:n}=this.data.get(e);return"complex64"===t?uf(this.readSync(n.real.dataId),this.readSync(n.imag.dataId)):this.data.get(e).values}bufferSync(e){const t=this.readSync(e.dataId);if("string"===e.dtype)try{const n=t.map((e=>zr(e)));return $i(e.shape,e.dtype,n)}catch(e){throw new Error("Failed to decode encoded string bytes into utf-8")}return $i(e.shape,e.dtype,t)}makeOutput(e,t,n){return Yo().makeTensorFromTensorInfo(this.makeTensorInfo(t,n,e),this)}disposeData(e,t=!1){if(this.data.has(e)){if(this.data.get(e).refCount--,!t&&this.data.get(e).refCount>0)return!1;const{complexTensorInfos:n}=this.data.get(e);null!=n&&(this.disposeData(n.real.dataId,!0),this.disposeData(n.imag.dataId,!0)),this.data.delete(e)}return!0}disposeIntermediateTensorInfo(e){this.disposeData(e.dataId)}async time(e){const t=Or();return e(),{kernelMs:Or()-t}}memory(){return{unreliable:!0,reasons:["The reported memory is an upper bound. Due to automatic garbage collection, the true allocated memory may be less."]}}where(e){uT([e],"where");const t=this.readSync(e.dataId);return cT(e.shape,t)}dispose(){}floatPrecision(){return 32}epsilon(){return super.epsilon()}}function pT(e,t,n){return({inputs:s,attrs:r,backend:a})=>{const{x:i}=s;if(uT(i,e),"string"===i.dtype||"string"===n)throw new Error("unaryKernelFunc does not support string input/output");const o=a,l=o.data.get(i.dataId).values,u=oe(i.shape),c=n||i.dtype,h=ve(c,u);for(let e=0;e<u;++e)h[e]=t(l[e],r);return o.makeTensorInfo(i.shape,c,h)}}function dT(e,t,n){return({inputs:s,attrs:r,backend:a})=>{const{x:i}=s;if(uT(i,e),"string"===i.dtype||"string"===n)throw new Error("unaryKernelFunc does not support string input/output");const o=a,l=o.data.get(i.dataId).values,u=n||i.dtype,c=t(l,u,r);return o.makeTensorInfo(i.shape,u,c)}}hT.nextDataId=0,ul("cpu",(()=>new hT),1);const fT=pT(qt,(e=>e>=0?e:Math.exp(e)-1)),mT={kernelName:qt,backendName:"cpu",kernelFunc:fT};function gT(e){const{inputs:t,backend:n}=e,{x:s}=t;return n.incRef(s.dataId),{dataId:s.dataId,shape:s.shape,dtype:s.dtype}}const yT={kernelName:hn,backendName:"cpu",kernelFunc:gT};function bT(e){const{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{alpha:a}=s;uT([r],"leakyRelu");const i=oe(r.shape),o=n.data.get(r.dataId).values,l=xe("float32",i);for(let e=0;e<o.length;e++)l[e]=o[e]<0?a*o[e]:o[e];return n.makeTensorInfo(r.shape,"float32",l)}const xT={kernelName:yn,backendName:"cpu",kernelFunc:bT};function vT(e){return(t,n,s,r,a)=>{const i=to(t,n),o=i.length,l=Fe(i),u=xe(a,oe(i)),c=t.length,h=n.length,p=Fe(t),d=Fe(n),f=Qi(t,i),m=Qi(n,i);if(f.length+m.length===0)for(let t=0;t<u.length;++t)u[t]=e(s[t%s.length],r[t%r.length]);else for(let t=0;t<u.length;++t){const n=We(t,o,l),a=n.slice(-c);f.forEach((e=>a[e]=0));const i=Be(a,c,p),g=n.slice(-h);m.forEach((e=>g[e]=0));const y=Be(g,h,d);u[t]=e(s[i],r[y])}return[u,i]}}const wT=vT(((e,t)=>e<0?t*e:e));function kT(e){const{inputs:t,backend:n}=e,{x:s,alpha:r}=t;uT([s,r],"prelu");const a=n.data.get(s.dataId).values,i=n.data.get(r.dataId).values,[o,l]=wT(s.shape,r.shape,a,i,"float32");return n.makeTensorInfo(l,"float32",o)}const IT={kernelName:ts,backendName:"cpu",kernelFunc:kT},ST=pT(is,(e=>Math.max(0,e))),NT={kernelName:is,backendName:"cpu",kernelFunc:ST},TT=pT(ps,(e=>Math.min(Math.max(0,e),6))),CT={kernelName:ps,backendName:"cpu",kernelFunc:TT};function $T(e){return(t,n,s)=>{const r=xe(n,t.length);for(let n=0;n<t.length;++n)r[n]=e(t[n],s);return r}}const ET=$T((e=>1/(1+Math.exp(-e)))),AT=pT(Ss,(e=>1/(1+Math.exp(-e)))),_T={kernelName:Ss,backendName:"cpu",kernelFunc:AT};function RT(e,t,n,s,r){if("linear"===n)return gT({inputs:{x:t},backend:e});if("relu"===n)return ST({inputs:{x:t},backend:e});if("elu"===n)return fT({inputs:{x:t},backend:e});if("relu6"===n)return TT({inputs:{x:t},backend:e});if("prelu"===n)return kT({inputs:{x:t,alpha:s},backend:e});if("leakyrelu"===n)return bT({inputs:{x:t},backend:e,attrs:{alpha:r}});if("sigmoid"===n)return AT({inputs:{x:t},backend:e});throw new Error(`Activation ${n} has not been implemented for the CPU backend.`)}function FT(e){const{inputs:t,backend:n}=e,{real:s,imag:r}=t,a=n.data.get(s.dataId).values,i=n.data.get(r.dataId).values,o=n.makeTensorInfo(s.shape,"complex64");return n.data.get(o.dataId).complexTensorInfos={real:n.makeTensorInfo(s.shape,"float32",a),imag:n.makeTensorInfo(r.shape,"float32",i)},o}const DT={kernelName:kt,backendName:"cpu",kernelFunc:FT};function OT(e,t,n="float32"){if("complex64"===n)return FT({inputs:{real:OT(e,t,"float32"),imag:OT(e,t,"float32")},backend:e});const s=Le(oe(t),n);return e.makeTensorInfo(t,n,s)}function MT(e){const{inputs:t,backend:n}=e,{input:s}=t,r=n.data.get(s.dataId).complexTensorInfos.real,a=n.data.get(r.dataId).values;return n.makeTensorInfo(r.shape,r.dtype,a)}const LT={kernelName:rs,backendName:"cpu",kernelFunc:MT};function zT(e){const{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{dtype:a}=s;if("complex64"===a){if("complex64"===r.dtype)return gT({inputs:{x:r},backend:n});const e=OT(n,r.shape,r.dtype),t=zT({inputs:{x:r},backend:n,attrs:{dtype:"float32"}}),s=FT({inputs:{real:t,imag:e},backend:n});return n.disposeIntermediateTensorInfo(e),n.disposeIntermediateTensorInfo(t),s}if("complex64"===r.dtype){const e=MT({inputs:{input:r},backend:n}),t=zT({inputs:{x:e},backend:n,attrs:{dtype:a}});return n.disposeIntermediateTensorInfo(e),t}if(!Ie(r.dtype,a)){const e=gT({inputs:{x:r},backend:n});return{dataId:e.dataId,shape:e.shape,dtype:a}}if("int32"===a){const e=n.data.get(r.dataId).values,t=Int32Array.from(e);return n.makeTensorInfo(r.shape,"int32",t)}if("bool"===a){const e=n.data.get(r.dataId).values,t=Dr([0],r.dtype),[s,a]=vT(((e,t)=>e!==t?1:0))(r.shape,[],e,t,"bool");return n.makeTensorInfo(a,"bool",s)}throw new Error(`Error in Cast: failed to cast ${r.dtype} to ${a}`)}const PT={kernelName:xt,backendName:"cpu",kernelFunc:zT};function BT(e,t,n,s){return null==n?({inputs:n,backend:r})=>{const{a,b:i}=n,o=r;uT([a,i],e);const l=o.data.get(a.dataId).values,u=o.data.get(i.dataId).values,c="string"===a.dtype?Bf(l):l,h="string"===a.dtype?Bf(u):u,p=s||a.dtype,[d,f]=t(a.shape,i.shape,c,h,p);return o.makeTensorInfo(f,p,d)}:({inputs:e,backend:r})=>{const{a,b:i}=e,o=r;if("complex64"===a.dtype||"complex64"===i.dtype){const e=zT({inputs:{x:a},backend:o,attrs:{dtype:"complex64"}}),t=o.data.get(e.dataId),s=t.complexTensorInfos.real,r=t.complexTensorInfos.imag,l=o.data.get(s.dataId).values,u=o.data.get(r.dataId).values,c=zT({inputs:{x:i},backend:o,attrs:{dtype:"complex64"}}),h=o.data.get(c.dataId),p=h.complexTensorInfos.real,d=h.complexTensorInfos.imag,f=o.data.get(p.dataId).values,m=o.data.get(d.dataId).values,[g,y,b]=n(a.shape,i.shape,l,u,f,m),x=o.makeTensorInfo(b,"float32",g),v=o.makeTensorInfo(b,"float32",y),w=FT({inputs:{real:x,imag:v},backend:o});return o.disposeIntermediateTensorInfo(e),o.disposeIntermediateTensorInfo(c),o.disposeIntermediateTensorInfo(x),o.disposeIntermediateTensorInfo(v),w}{const e=o.data.get(a.dataId).values,n=o.data.get(i.dataId).values,r=s||a.dtype,[l,u]=t(a.shape,i.shape,e,n,r);return o.makeTensorInfo(u,r,l)}}}function WT(e){return(t,n,s,r,a,i)=>{const o=to(t,n),l=oe(o),u=o.length,c=Fe(o),h=xe("float32",l),p=xe("float32",l),d=Qi(t,o),f=Qi(n,o),m=uf(s,r),g=uf(a,i),y=t.length,b=Fe(t),x=n.length,v=Fe(n);if(d.length+f.length===0)for(let t=0;t<h.length;t++){const n=t%m.length,s=t%g.length,r=e(m[2*n],m[2*n+1],g[2*s],g[2*s+1]);h[t]=r.real,p[t]=r.imag}else for(let t=0;t<h.length;t++){const n=We(t,u,c),s=n.slice(-y);d.forEach((e=>s[e]=0));const r=Be(s,y,b),a=n.slice(-x);f.forEach((e=>a[e]=0));const i=Be(a,x,v),o=e(m[2*r],m[2*r+1],g[2*i],g[2*i+1]);h[t]=o.real,p[t]=o.imag}return[h,p,o]}}const VT=vT(((e,t)=>e+t)),UT=WT(((e,t,n,s)=>({real:e+n,imag:t+s}))),GT=BT(Qe,VT,UT),HT={kernelName:Qe,backendName:"cpu",kernelFunc:GT};function jT(e){const{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{shape:a}=s,i=oe(r.shape),o=ge(a,i),l=oe(o);se(i===l,(()=>`The new shape (${o}) has ${l} elements and the old shape (${r.shape}) has ${i} elements. The new shape and old shape must have the same number of elements.`)),n.incRef(r.dataId);const u=n.data.get(r.dataId);if(null!=u.complexTensorInfos){const e=u.complexTensorInfos.real,t=u.complexTensorInfos.imag;e.shape=o,t.shape=o}return{dataId:r.dataId,shape:o,dtype:r.dtype}}const qT={kernelName:os,backendName:"cpu",kernelFunc:jT};function KT(e){const{inputs:t,backend:n,attrs:s}=e,{a:r,b:a}=t,{transposeA:i,transposeB:o}=s;uT([r,a],"matMul");const l=r.shape.length,u=a.shape.length,c=i?r.shape[l-2]:r.shape[l-1],h=o?a.shape[u-1]:a.shape[u-2],p=i?r.shape[l-1]:r.shape[l-2],d=o?a.shape[u-2]:a.shape[u-1],f=r.shape.slice(0,-2),m=a.shape.slice(0,-2),g=oe(f),y=oe(m),b=to(r.shape.slice(0,-2),a.shape.slice(0,-2)).concat([p,d]);se(c===h,(()=>`Error in matMul: inner shapes (${c}) and (${h}) of Tensors with shapes ${r.shape} and ${a.shape} and transposeA=${i} and transposeB=${o} must match.`));const x=o?[y,d,h]:[y,h,d],v=jT({inputs:{x:r},backend:n,attrs:{shape:i?[g,c,p]:[g,p,c]}}),w=jT({inputs:{x:a},backend:n,attrs:{shape:x}}),k=i?v.shape[1]:v.shape[2],I=i?v.shape[2]:v.shape[1],S=o?w.shape[1]:w.shape[2],N=Math.max(g,y),T=n.data.get(v.dataId).values,C=n.data.get(w.dataId).values,$=Fe(v.shape),E=Fe(w.shape),[A,_,R]=i?[$[0],1,$[1]]:[$[0],$[1],1],[F,D,O]=o?[1,E[1],E[0]]:[E[1],1,E[0]],M=I*S,L=$i([N,I,S],v.dtype),z=L.values,P=n.blockSize;for(let e=0;e<N;e++)for(let t=0;t<I;t+=P)for(let n=0;n<S;n+=P)for(let s=0;s<k;s+=P){const r=Math.min(t+P,I),a=Math.min(n+P,S),i=Math.min(s+P,k);for(let o=t;o<r;o++)for(let t=n;t<a;t++){let n=0;for(let r=s;r<i;r++){const s=Math.min(e,g-1)*A,a=Math.min(e,y-1)*O;n+=T[s+o*_+r*R]*C[r*F+t*D+a]}z[e*M+(o*S+t)]+=n}}return n.disposeIntermediateTensorInfo(v),n.disposeIntermediateTensorInfo(w),n.makeTensorInfo(b,L.dtype,L.values)}const XT={kernelName:ft,backendName:"cpu",kernelFunc:KT},YT={kernelName:sr,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{a:r,b:a,bias:i,preluActivationWeights:o}=t,{transposeA:l,transposeB:u,activation:c,leakyreluAlpha:h}=s;let p,d,f;const m=[];p=KT({inputs:{a:r,b:a},attrs:{transposeA:l,transposeB:u},backend:n}),i&&(d=GT({inputs:{a:p,b:i},backend:n}),m.push(p),p=d),c&&(f=RT(n,p,c,o,h),m.push(p),p=f);for(const e of m)n.disposeIntermediateTensorInfo(e);return p}};function ZT(e){const t=new Float32Array(e.length);for(let n=0;n<e.length;++n)t[n]=Math.abs(e[n]);return t}const JT={kernelName:Ye,backendName:"cpu",kernelFunc:e=>{const{x:t}=e.inputs,n=e.backend;uT(t,"abs");let s=new Float32Array(oe(t.shape));return s=ZT(n.data.get(t.dataId).values),n.makeOutput(s,t.shape,t.dtype)}},QT=pT(Ze,(e=>Math.acos(e))),eC={kernelName:Ze,backendName:"cpu",kernelFunc:QT},tC=pT(Je,(e=>Math.acosh(e))),nC={kernelName:Je,backendName:"cpu",kernelFunc:tC},sC={kernelName:et,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,s=t;uT(t,"addN");const r=s.map((e=>n.data.get(e.dataId).values)),a=$i(s[0].shape,s[0].dtype),i=a.values;for(let e=0;e<s.length;e++){const t=r[e];for(let e=0;e<i.length;e++)i[e]+=t[e]}return n.makeTensorInfo(a.shape,a.dtype,a.values)}};function rC(e,t,n,s,r){const a=t.length,i=oe(t),o=Fe(t),l=Fe(r),u=xe(n,oe(r));for(let t=0;t<i;++t){const n=We(t,a,o),r=new Array(n.length);for(let e=0;e<r.length;e++)r[e]=n[s[e]];u[Be(r,a,l)]=e[t]}return u}function aC(e){const{inputs:t,attrs:n,backend:s}=e,{x:r}=t,{perm:a}=n;uT(r,"transpose");const i=r.shape.length,o=new Array(i);for(let e=0;e<o.length;e++)o[e]=r.shape[a[e]];const l=rC(s.data.get(r.dataId).values,r.shape,r.dtype,a,o);return{dataId:s.write(l,o,r.dtype),shape:o,dtype:r.dtype}}const iC={kernelName:Ks,backendName:"cpu",kernelFunc:aC},oC={kernelName:tt,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{axis:a,keepDims:i}=s;uT(r,"all");const o=ye(a,r.shape);let l=o;const u=uc(l,r.shape.length);let c=r;null!=u&&(c=aC({inputs:{x:r},backend:n,attrs:{perm:u}}),l=hc(l.length,r.shape.length)),lc("all",l,c.shape.length);const[h,p]=ic(c.shape,l),d=oe(p),f=Le(oe(h),c.dtype),m=n.data.get(c.dataId).values;for(let e=0;e<f.length;++e){const t=e*d;let n=m[t];for(let e=0;e<d;++e){const s=m[t+e];n=n&&s}f[e]=n}null!=u&&n.disposeIntermediateTensorInfo(c);const g=n.makeTensorInfo(h,c.dtype,f);if(i){const e=jT({inputs:{x:g},backend:n,attrs:{shape:oc(h,o)}});return n.disposeIntermediateTensorInfo(g),e}return g}},lC={kernelName:nt,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{axis:a,keepDims:i}=s;uT(r,"any");const o=ye(a,r.shape);let l=o;const u=uc(l,r.shape.length);let c=r;null!=u&&(c=aC({inputs:{x:r},backend:n,attrs:{perm:u}}),l=hc(l.length,r.shape.length)),lc("any",l,c.shape.length);const[h,p]=ic(c.shape,l),d=oe(p),f=Le(oe(h),c.dtype),m=n.data.get(c.dataId).values;for(let e=0;e<f.length;++e){const t=e*d;let n=m[t];for(let e=0;e<d;++e){const s=m[t+e];n=n||s}f[e]=n}null!=u&&n.disposeIntermediateTensorInfo(c);const g=n.makeTensorInfo(h,c.dtype,f);if(i){const e=jT({inputs:{x:g},backend:n,attrs:{shape:oc(h,o)}});return n.disposeIntermediateTensorInfo(g),e}return g}},uC={kernelName:st,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{axis:a}=s;uT(r,"argMax");let i=ye(a,r.shape);const o=uc(i,r.shape.length);let l=r;const u=[];null!=o&&(l=aC({inputs:{x:r},backend:n,attrs:{perm:o}}),u.push(l),i=hc(i.length,l.shape.length)),i=[i[0]],lc("argMax",i,l.shape.length);const[c,h]=ic(l.shape,i),p=Le(oe(c),"int32"),d=oe(h),f=n.data.get(l.dataId).values;for(let e=0;e<p.length;++e){const t=e*d;let n=f[t],s=0;for(let e=0;e<d;++e){const r=f[t+e];r>n&&(n=r,s=e)}p[e]=s}return u.forEach((e=>n.disposeIntermediateTensorInfo(e))),n.makeTensorInfo(c,"int32",p)}},cC={kernelName:rt,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{axis:a}=s;uT(r,"argMin");let i=ye(a,r.shape);const o=uc(i,r.shape.length);let l=r;const u=[];null!=o&&(l=aC({inputs:{x:r},backend:n,attrs:{perm:o}}),u.push(l),i=hc(i.length,l.shape.length)),i=[i[0]],lc("argMin",i,l.shape.length);const[c,h]=ic(l.shape,i),p=Le(oe(c),"int32"),d=oe(h),f=n.data.get(l.dataId).values;for(let e=0;e<p.length;++e){const t=e*d;let n=f[t],s=0;for(let e=0;e<d;++e){const r=f[t+e];r<n&&(n=r,s=e)}p[e]=s}return u.forEach((e=>n.disposeIntermediateTensorInfo(e))),n.makeTensorInfo(c,"int32",p)}},hC=pT(at,(e=>Math.asin(e))),pC={kernelName:at,backendName:"cpu",kernelFunc:hC},dC=pT(it,(e=>Math.asinh(e))),fC={kernelName:it,backendName:"cpu",kernelFunc:dC},mC=pT(ot,(e=>Math.atan(e))),gC={kernelName:ot,backendName:"cpu",kernelFunc:mC},yC=vT(((e,t)=>Math.atan2(e,t))),bC=BT(ut,yC),xC={kernelName:ut,backendName:"cpu",kernelFunc:bC},vC=pT(lt,(e=>Math.atanh(e))),wC={kernelName:lt,backendName:"cpu",kernelFunc:vC};function kC(e,t,n,s,r,a){const i=r.strideHeight,o=r.strideWidth,l=r.dilationHeight,u=r.dilationWidth,c=r.effectiveFilterHeight,h=r.effectiveFilterWidth,p=r.padInfo.top,d=r.padInfo.left,f="max"===a?Number.NEGATIVE_INFINITY:Number.POSITIVE_INFINITY,m=$i(r.outShape,n),g=m.values,y=r.outShape[1]*r.outShape[2]*r.outShape[3],b=r.outShape[2]*r.outShape[3],x=r.outShape[3];for(let t=0;t<r.batchSize;++t){const n=t*y,m=t*s[0];for(let t=0;t<r.inChannels;++t)for(let y=0;y<r.outHeight;++y){const v=y*i-p,w=Math.max(0,v),k=Math.min(r.inHeight,c+v),I=n+y*b;for(let n=0;n<r.outWidth;++n){const i=n*o-d,c=Math.max(0,i),p=Math.min(r.inWidth,h+i);let y=f,b=0,v=0;for(let n=w;n<k;n+=l){const r=m+n*s[1];for(let n=c;n<p;n+=u){const i=e[r+n*s[2]+t];"max"===a&&i>y?y=i:"avg"===a&&(b+=i,v++)}if(isNaN(y))break}g[I+n*x+t]="avg"===a?b/v:y}}}return m}function IC(e,t,n,s,r=!1,a=!1){const i=$i(s.outShape,"int32"),o=s.strideHeight,l=s.strideWidth,u=s.dilationHeight,c=s.dilationWidth,h=s.effectiveFilterHeight,p=s.effectiveFilterWidth,d=s.padInfo.top,f=s.padInfo.left,m=$i(t,n,e);for(let e=0;e<s.batchSize;++e)for(let t=0;t<s.inChannels;++t)for(let n=0;n<s.outHeight;++n){const g=n*o-d;let y=g;for(;y<0;)y+=u;const b=Math.min(s.inHeight,h+g);for(let o=0;o<s.outWidth;++o){const h=o*l-f;let d=h;for(;d<0;)d+=c;const x=Math.min(s.inWidth,p+h);let v=Number.NEGATIVE_INFINITY,w=-1;for(let n=y;n<b;n+=u){const i=n-g;for(let o=d;o<x;o+=c){const l=o-h,u=m.get(e,n,o,t);u>v&&(v=u,w=r?a?((e*s.inHeight+n)*s.inWidth+o)*s.inChannels+t:(n*s.inWidth+o)*s.inChannels+t:i*p+l)}}i.set(w,e,n,o,t)}}return i}function SC(e,t,n,s,r,a){const i=r.strideDepth,o=r.strideHeight,l=r.strideWidth,u=r.dilationDepth,c=r.dilationHeight,h=r.dilationWidth,p=r.effectiveFilterDepth,d=r.effectiveFilterHeight,f=r.effectiveFilterWidth,m=r.padInfo.front,g=r.padInfo.top,y=r.padInfo.left,b="max"===a?Number.NEGATIVE_INFINITY:Number.POSITIVE_INFINITY,x=$i(r.outShape,n),v=x.values,w=r.outShape[1]*r.outShape[2]*r.outShape[3]*r.outShape[4],k=r.outShape[2]*r.outShape[3]*r.outShape[4],I=r.outShape[3]*r.outShape[4],S=r.outShape[4];for(let t=0;t<r.batchSize;++t){const n=t*w,x=t*s[0];for(let t=0;t<r.inChannels;++t)for(let w=0;w<r.outDepth;++w){const N=w*i-m;let T=N;for(;T<0;)T+=u;const C=Math.min(r.inDepth,p+N),$=n+w*k;for(let n=0;n<r.outHeight;++n){const i=n*o-g;let p=i;for(;p<0;)p+=c;const m=Math.min(r.inHeight,d+i),w=$+n*I;for(let n=0;n<r.outWidth;++n){const i=n*l-y;let o=i;for(;o<0;)o+=h;const d=Math.min(r.inWidth,f+i),g=w+n*S;let k=b,I=0,N=0;for(let n=T;n<C;n+=u){const r=x+n*s[1];for(let n=p;n<m;n+=c){const i=r+n*s[2];for(let n=o;n<d;n+=h){const r=e[i+n*s[3]+t];if("max"===a&&r>k?k=r:"avg"===a&&(I+=r,N++),isNaN(k))break}if(isNaN(k))break}if(isNaN(k))break}v[g+t]="avg"===a?I/N:k}}}}return x}const NC={kernelName:ct,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:r}=t;uT(r,"avgPool");const{filterSize:a,strides:i,pad:o,dimRoundingMode:l}=s;se(cu(i,1),(()=>`Error in avgPool: Either strides or dilations must be 1. Got strides ${i} and dilations '1'`));const u=eu(r.shape,a,i,1,o,l);let c;if(1===u.filterWidth&&1===u.filterHeight&&ue(u.inShape,u.outShape))c=gT({inputs:{x:r},backend:n});else{const e=n.data.get(r.dataId).values,t=Fe(r.shape),s=kC(e,r.shape,r.dtype,t,u,"avg");c=n.makeTensorInfo(u.outShape,r.dtype,s.values)}return c}},TC={kernelName:pt,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{filterSize:a,strides:i,pad:o,dimRoundingMode:l,dataFormat:u}=s;uT(r,"avgPool3d");const c=tu(r.shape,a,i,1,o,l,u),h=SC(n.data.get(r.dataId).values,r.shape,r.dtype,Fe(r.shape),c,"avg");return n.makeTensorInfo(h.shape,"float32",h.values)}},CC={kernelName:dt,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{dy:r,input:a}=t,{filterSize:i,strides:o,pad:l,dimRoundingMode:u}=s;uT([r,a],"avgPool3DGrad");const c=tu(a.shape,i,o,1,l,u),h=c.strideDepth,p=c.strideHeight,d=c.strideWidth,f=c.filterDepth,m=c.filterHeight,g=c.filterWidth,y=c.dilationDepth,b=c.dilationHeight,x=c.dilationWidth,v=c.effectiveFilterDepth,w=c.effectiveFilterHeight,k=c.effectiveFilterWidth,I=v-1-c.padInfo.front,S=k-1-c.padInfo.left,N=w-1-c.padInfo.top,T=$i(a.shape,"float32"),C=1/(f*m*g),$=n.bufferSync(r);for(let e=0;e<c.batchSize;++e)for(let t=0;t<c.inChannels;++t)for(let n=0;n<c.inDepth;++n)for(let s=0;s<c.inHeight;++s)for(let r=0;r<c.inWidth;++r){const a=n-I,i=s-N,o=r-S;let l=0;for(let n=0;n<v;n+=y){const s=(a+n)/h;if(!(s<0||s>=c.outDepth||Math.floor(s)!==s))for(let n=0;n<w;n+=b){const r=(i+n)/p;if(!(r<0||r>=c.outHeight||Math.floor(r)!==r))for(let n=0;n<k;n+=x){const a=(o+n)/d;a<0||a>=c.outWidth||Math.floor(a)!==a||(l+=$.get(e,s,r,a,t))}}}T.set(l*C,e,n,s,r,t)}return n.makeTensorInfo(T.shape,T.dtype,T.values)}},$C={kernelName:ht,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{dy:r,input:a}=t,i=a;uT([r,a],"avgPoolGrad");const{filterSize:o,strides:l,pad:u}=s,c=eu(i.shape,o,l,1,u),h=c.strideHeight,p=c.strideWidth,d=c.filterHeight,f=c.filterWidth,m=c.dilationHeight,g=c.dilationWidth,y=c.effectiveFilterHeight,b=c.effectiveFilterWidth,x=b-1-c.padInfo.left,v=y-1-c.padInfo.top,w=$i(i.shape,"float32"),k=1/(d*f),I=n.data.get(r.dataId).values,S=$i(r.shape,"float32",I);for(let e=0;e<c.batchSize;++e)for(let t=0;t<c.inChannels;++t)for(let n=0;n<c.inHeight;++n)for(let s=0;s<c.inWidth;++s){const r=n-v,a=s-x;let i=0;for(let n=0;n<y;n+=m){const s=(r+n)/h;if(!(s<0||s>=c.outHeight||Math.floor(s)!==s))for(let n=0;n<b;n+=g){const r=(a+n)/p;r<0||r>=c.outWidth||Math.floor(r)!==r||(i+=S.get(e,s,r,t))}}w.set(i*k,e,n,s,t)}return n.makeTensorInfo(w.shape,w.dtype,w.values)}},EC={kernelName:an,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:r,scale:a,offset:i,mean:o,variance:l}=t;se(o.shape.length===l.shape.length,(()=>"Batch normalization gradient requires mean and variance to have equal ranks.")),se(null==i||o.shape.length===i.shape.length,(()=>"Batch normalization gradient requires mean and offset to have equal ranks.")),se(null==a||o.shape.length===a.shape.length,(()=>"Batch normalization gradient requires mean and scale to have equal ranks.")),uT([r,o,l,a,i],"batchNorm");let{varianceEpsilon:u}=s;null==u&&(u=.001);const c=n.data.get(r.dataId).values,h=n.data.get(o.dataId).values,p=n.data.get(l.dataId).values,d=a?n.data.get(a.dataId).values:new Float32Array([1]),f=i?n.data.get(i.dataId).values:new Float32Array([0]),m=new Float32Array(c.length),g=f.length,y=d.length,b=p.length,x=h.length;let v=0,w=0,k=0,I=0;for(let e=0;e<c.length;++e)m[e]=f[v++]+(c[e]-h[w++])*d[k++]/Math.sqrt(p[I++]+u),v>=g&&(v=0),w>=x&&(w=0),k>=y&&(k=0),I>=b&&(I=0);return n.makeTensorInfo(r.shape,r.dtype,m)}};function AC(e,t,n,s,r){const a=No(s,t,n),i=oe(n),o=Fe(s);if(a){const n=To(t,o);return"string"===r?e.slice(n,n+i):e.subarray(n,n+i)}const l=$i(s,r,"string"===r?Bf(e):e),u=$i(n,r);for(let e=0;e<u.size;++e){const n=u.indexToLoc(e),s=n.map(((e,n)=>e+t[n]));u.set(l.get(...s),...n)}return"string"===r?Wf(u.values):u.values}function _C(e){const{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{begin:a,size:i}=s;uT(r,"slice");const[o,l]=Co(r,a,i);po(r,o,l);const u=AC(n.data.get(r.dataId).values,o,l,r.shape,r.dtype);return n.makeTensorInfo(l,r.dtype,u)}const RC={kernelName:vs,backendName:"cpu",kernelFunc:_C},FC={kernelName:mt,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{blockShape:a,crops:i}=s;uT([r],"batchToSpaceND");const o=a.reduce(((e,t)=>e*t)),l=Xd(r.shape,a,o),u=Yd(l.length,a.length),c=Zd(r.shape,a,o),h=Jd(i,a.length),p=Qd(c,i,a.length),d=jT({inputs:{x:r},backend:n,attrs:{shape:l}}),f=aC({inputs:{x:d},backend:n,attrs:{perm:u}}),m=jT({inputs:{x:f},backend:n,attrs:{shape:c}}),g=_C({inputs:{x:m},backend:n,attrs:{begin:h,size:p}});return n.disposeIntermediateTensorInfo(d),n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(m),g}};function DC(e,t,n,s,r){const a=oe(s),i=Le(r,n);for(let n=0;n<e.length;n++){const s=e[n];if(s<0)throw new Error("Input x must be non-negative!");s>=r||(i[s]+=a>0?t[n]:1)}return i}function OC(e,t,n,s=!1){const r=e.shape[0],a=e.shape[1],i=$i([r,n],t.dtype);for(let o=0;o<r;o++)for(let r=0;r<a;r++){const a=e.get(o,r);if(a<0)throw new Error("Input x must be non-negative!");a>=n||(s?i.set(1,o,a):t.size>0?i.set(i.get(o,a)+t.get(o,r),o,a):i.set(i.get(o,a)+1,o,a))}return i}const MC={kernelName:gt,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:r,weights:a}=t,{size:i}=s,o=DC(n.data.get(r.dataId).values,n.data.get(a.dataId).values,a.dtype,a.shape,i);return n.makeTensorInfo([i],a.dtype,o)}},LC={kernelName:bt,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{s0:s,s1:r}=t,a=n.data.get(s.dataId).values,i=n.data.get(r.dataId).values,o=to(Array.from(a),Array.from(i));return n.makeTensorInfo([o.length],"int32",Int32Array.from(o))}},zC=$T((e=>Math.ceil(e))),PC=dT(vt,zC),BC={kernelName:vt,backendName:"cpu",kernelFunc:PC},WC=pT(wt,((e,t)=>{const n=t;return e>n.clipValueMax?n.clipValueMax:e<n.clipValueMin?n.clipValueMin:e})),VC={kernelName:wt,backendName:"cpu",kernelFunc:WC},UC={kernelName:It,backendName:"cpu",kernelFunc:e=>{const{x:t}=e.inputs,n=e.backend,s=new Float32Array(oe(t.shape)),r=n.data.get(t.dataId),a=r.complexTensorInfos.real,i=r.complexTensorInfos.imag,o=n.data.get(a.dataId).values,l=n.data.get(i.dataId).values;for(let e=0;e<o.length;e++){const t=o[e],n=l[e];s[e]=Math.hypot(t,n)}return n.makeOutput(s,t.shape,"float32")}};function GC(e,t,n,s){const r=ve(n,oe(t));if(s&&"string"!==n){let t=0;e.forEach((e=>{const n=oe(e.shape);r.set(e.vals,t),t+=n}))}else{let s=0;e.forEach((e=>{const a="string"===n?Bf(e.vals):e.vals;let i=0;for(let n=0;n<e.shape[0];++n){const o=n*t[1]+s;for(let t=0;t<e.shape[1];++t)r[o+t]=a[i++]}s+=e.shape[1]}))}return r}function HC(e){const{inputs:t,backend:n}=e,{input:s}=t,r=n.data.get(s.dataId).complexTensorInfos.imag,a=n.data.get(r.dataId).values;return n.makeTensorInfo(r.shape,r.dtype,a)}const jC={kernelName:dn,backendName:"cpu",kernelFunc:HC};function qC(e){const{inputs:t,backend:n,attrs:s}=e,{axis:r}=s,a=ye(r,t[0].shape)[0];let i=Hd(t.map((e=>e.shape)),a);if(0===oe(i))return n.makeTensorInfo(i,t[0].dtype,[]);const o=t.filter((e=>oe(e.shape)>0));if(1===o.length)return gT({inputs:{x:o[0]},backend:n});if(Gd(o.map((e=>e.shape)),a),"complex64"===o[0].dtype){const e=o.map((e=>MT({inputs:{input:e},backend:n}))),t=o.map((e=>HC({inputs:{input:e},backend:n}))),s=qC({inputs:e,backend:n,attrs:{axis:a}}),r=qC({inputs:t,backend:n,attrs:{axis:a}}),i=FT({inputs:{real:s,imag:r},backend:n});return e.forEach((e=>n.disposeIntermediateTensorInfo(e))),t.forEach((e=>n.disposeIntermediateTensorInfo(e))),n.disposeIntermediateTensorInfo(s),n.disposeIntermediateTensorInfo(r),i}const l=o.map((e=>{const t=oe(e.shape.slice(a));return jT({inputs:{x:e},backend:n,attrs:{shape:[-1,t]}})})),u=l.map((e=>({vals:n.data.get(e.dataId).values,shape:e.shape})));i=Hd(l.map((e=>e.shape)),1);const c=1===l[0].shape[0],h=GC(u,i,t[0].dtype,c),p=Hd(o.map((e=>e.shape)),a),d=n.makeTensorInfo(p,t[0].dtype,h);return l.forEach((e=>n.disposeIntermediateTensorInfo(e))),d}const KC={kernelName:St,backendName:"cpu",kernelFunc:qC};function XC(e){const{inputs:t,backend:n,attrs:s}=e,{x:r,filter:a}=t,{strides:i,pad:o,dataFormat:l,dilations:u,dimRoundingMode:c}=s;uT([r,a],"conv2d");const h=hu(l),p=nu(r.shape,a.shape,i,u,o,c,!1,h),d=p.filterHeight,f=p.filterWidth,m=p.dilationHeight,g=p.dilationWidth,y=p.padInfo.left,b=p.padInfo.top,x="channelsLast"===p.dataFormat,v=new qr(p.outShape,r.dtype),w=Fe(r.shape),k=Fe(a.shape),I=w[0],S=x?w[1]:w[2],N=x?w[2]:1,T=x?1:w[1],C=v.strides[0],$=x?v.strides[1]:v.strides[2],E=x?v.strides[2]:1,A=x?1:v.strides[1],_=n.data.get(r.dataId).values,R=n.data.get(a.dataId).values,F=v.values;for(let e=0;e<p.batchSize;++e){const t=e*I,n=e*C;for(let e=0;e<p.outHeight;++e){const s=n+e*$,r=e*p.strideHeight-b;for(let e=0;e<d;++e){const n=r+e*m;if(n<0||n>=p.inHeight)continue;const a=e*k[0],i=t+n*S;for(let e=0;e<p.outWidth;++e){const t=s+e*E,n=e*p.strideWidth-y;for(let e=0;e<f;++e){const s=n+e*g;if(s<0||s>=p.inWidth)continue;const r=i+s*N;let o=a+e*k[1];for(let e=0;e<p.inChannels;++e){const n=_[r+e*T];for(let e=0;e<p.outChannels;++e)F[t+e*A]+=n*R[o+e];o+=p.outChannels}}}}}}return n.makeTensorInfo(v.shape,v.dtype,F)}const YC={kernelName:Nt,backendName:"cpu",kernelFunc:XC},ZC={kernelName:Tt,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:r,dy:a}=t,{strides:i,pad:o,dataFormat:l,dimRoundingMode:u,filterShape:c}=s;uT([r,a],"conv2dBackpropFilter");const h=hu(l),p=nu(r.shape,c,i,1,o,u,!1,h),{strideHeight:d,strideWidth:f,filterHeight:m,filterWidth:g}=p,y="channelsLast"===p.dataFormat,b=new qr(p.filterShape,"float32"),x=p.padInfo.left,v=p.padInfo.top,w=n.data.get(r.dataId).values,k=n.data.get(a.dataId).values,I=new qr(r.shape,r.dtype,w),S=new qr(a.shape,a.dtype,k);for(let e=0;e<m;++e){const t=Math.max(0,Math.ceil((v-e)/d)),n=Math.min(p.outHeight,(p.inHeight+v-e)/d);for(let s=0;s<g;++s){const r=Math.max(0,Math.ceil((x-s)/f)),a=Math.min(p.outWidth,(p.inWidth+x-s)/f);for(let i=0;i<p.inChannels;++i)for(let o=0;o<p.outChannels;++o){let l=0;for(let u=0;u<p.batchSize;++u)for(let c=t;c<n;++c){const t=e+c*d-v;for(let e=r;e<a;++e){const n=s+e*f-x;l+=y?I.get(u,t,n,i)*S.get(u,c,e,o):I.get(u,i,t,n)*S.get(u,o,c,e)}}b.set(l,e,s,i,o)}}}return n.makeTensorInfo(b.shape,b.dtype,b.values)}},JC={kernelName:Ct,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{dy:r,filter:a}=t,{inputShape:i,strides:o,pad:l,dataFormat:u,dimRoundingMode:c}=s;uT([r,a],"conv2dBackpropInput");const h=Fe(a.shape),p=Fe(r.shape);let d=hu(u);const f=nu(i,a.shape,o,1,l,c,!1,d),m=new qr(f.inShape,"float32"),g=m.values,y=n.data.get(r.dataId).values,b=n.data.get(a.dataId).values,[x,v,w]=h,{batchSize:k,filterHeight:I,filterWidth:S,inChannels:N,inHeight:T,inWidth:C,outChannels:$,outHeight:E,outWidth:A,strideHeight:_,strideWidth:R}=f;d=f.dataFormat;const F=I-1-f.padInfo.top,D=S-1-f.padInfo.left,O="channelsLast"===d,M=m.strides[0],L=O?m.strides[1]:m.strides[2],z=O?m.strides[2]:1,P=O?1:m.strides[1],B=p[0],W=O?p[1]:p[2],V=O?p[2]:1,U=O?1:p[1];for(let e=0;e<k;++e)for(let t=0;t<N;++t)for(let n=0;n<T;++n){const s=n-F,r=Math.max(0,Math.ceil(s/_)),a=Math.min(E,(I+s)/_);for(let i=0;i<C;++i){const o=i-D,l=Math.max(0,Math.ceil(o/R)),u=Math.min(A,(S+o)/R);let c=0;for(let n=r;n<a;++n){const r=n*_-s;for(let s=l;s<u;++s){const a=B*e+W*n+V*s,i=x*(I-1-r)+v*(S-1-(s*R-o))+w*t;for(let e=0;e<$;++e)c+=y[a+U*e]*b[i+e]}}g[M*e+L*n+z*i+P*t]=c}}return n.makeTensorInfo(m.shape,m.dtype,m.values)}},QC={kernelName:$t,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:r,filter:a}=t,{strides:i,pad:o,dilations:l}=s;uT([r,a],"conv3d");const u=su(r.shape,a.shape,i,l,o),{filterDepth:c,filterHeight:h,filterWidth:p,dilationDepth:d,dilationHeight:f,dilationWidth:m,padInfo:g}=u,y=g.front,b=g.left,x=g.top,v=new qr(u.outShape,r.dtype),w=n.data.get(r.dataId).values,k=n.data.get(a.dataId).values,I=v.values,S=Fe(r.shape),N=Fe(a.shape);for(let e=0;e<u.batchSize;++e){const t=e*S[0],n=e*v.strides[0];for(let e=0;e<u.outDepth;++e){const s=n+e*v.strides[1],r=e*u.strideDepth-y;for(let e=0;e<c;++e){const n=r+e*d;if(n<0||n>=u.inDepth)continue;const a=e*N[0],i=t+n*S[1];for(let e=0;e<u.outHeight;++e){const t=s+e*v.strides[2],n=e*u.strideHeight-x;for(let e=0;e<h;++e){const s=n+e*f;if(s<0||s>=u.inHeight)continue;const r=a+e*N[1],o=i+s*S[2];for(let e=0;e<u.outWidth;++e){const n=t+e*u.outChannels,s=e*u.strideWidth-b;for(let e=0;e<p;++e){const t=s+e*m;if(t<0||t>=u.inWidth)continue;const a=r+e*N[2],i=o+t*u.inChannels;let l=a;for(let e=0;e<u.inChannels;++e){const t=w[i+e];for(let e=0;e<u.outChannels;++e)I[n+e]+=t*k[l+e];l+=u.outChannels}}}}}}}}return n.makeTensorInfo(v.shape,v.dtype,v.values)}},e$={kernelName:Et,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:r,dy:a}=t,{strides:i,pad:o,filterShape:l}=s;uT([r,a],"conv3dBackpropFilterV2");const u=Fe(r.shape),c=Fe(a.shape),h=su(r.shape,l,i,1,o),p=h.strideDepth,d=h.strideHeight,f=h.strideWidth,m=h.filterDepth,g=h.filterHeight,y=h.filterWidth,b=new qr(h.filterShape,"float32"),x=b.values,[v,w,k,I]=b.strides,S=n.data.get(a.dataId).values,[N,T,C,$]=c,E=n.data.get(r.dataId).values,[A,_,R,F]=u,D=h.padInfo.front,O=h.padInfo.left,M=h.padInfo.top;for(let e=0;e<m;++e){const t=Math.max(0,Math.ceil((D-e)/p)),n=Math.min(h.outDepth,(h.inDepth+D-e)/p),s=e*v;for(let r=0;r<g;++r){const a=Math.max(0,Math.ceil((M-r)/d)),i=Math.min(h.outHeight,(h.inHeight+M-r)/d),o=r*w+s;for(let s=0;s<y;++s){const l=Math.max(0,Math.ceil((O-s)/f)),u=Math.min(h.outWidth,(h.inWidth+O-s)/f),c=s*k+o;for(let o=0;o<h.inChannels;++o){const m=o*I+c;for(let c=0;c<h.outChannels;++c){let g=0;for(let m=0;m<h.batchSize;++m){const h=m*A,y=m*N;for(let m=t;m<n;++m){const t=(e+m*p-D)*_+h,n=m*T+y;for(let e=a;e<i;++e){const a=(r+e*d-M)*R+t,i=e*C+n;for(let e=l;e<u;++e){const t=e*$+i;g+=E[(s+e*f-O)*F+a+o]*S[t+c]}}}}x[m+c]=g}}}}}return n.makeTensorInfo(b.shape,b.dtype,b.values)}},t$={kernelName:At,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{dy:r,filter:a}=t,{pad:i,strides:o,inputShape:l}=s;uT([r],"conv3dBackpropInputV2");const u=Fe(r.shape),c=Fe(a.shape),h=su(l,a.shape,o,1,i),p=new qr(h.inShape,"float32"),d=p.values,[f,m,g,y]=p.strides,b=n.data.get(r.dataId).values,[x,v,w,k]=u,I=n.data.get(a.dataId).values,[S,N,T,C]=c,{batchSize:$,filterDepth:E,filterHeight:A,filterWidth:_,inChannels:R,inDepth:F,inHeight:D,inWidth:O,outChannels:M,outDepth:L,outHeight:z,outWidth:P,strideDepth:B,strideHeight:W,strideWidth:V}=h,U=E-1-h.padInfo.front,G=A-1-h.padInfo.top,H=_-1-h.padInfo.left;for(let e=0;e<$;++e)for(let t=0;t<R;++t)for(let n=0;n<F;++n){const s=n-U,r=Math.max(0,Math.ceil(s/B)),a=Math.min(L,(E+s)/B);for(let i=0;i<D;++i){const o=i-G,l=Math.max(0,Math.ceil(o/W)),u=Math.min(z,(A+o)/W);for(let c=0;c<O;++c){const h=c-H,p=Math.max(0,Math.ceil(h/V)),$=Math.min(P,(_+h)/V);let R=0;for(let n=r;n<a;++n){const r=n*B-s;for(let s=l;s<u;++s){const a=s*W-o;for(let i=p;i<$;++i){const o=x*e+v*n+w*s+k*i,l=S*(E-1-r)+N*(A-1-a)+T*(_-1-(i*V-h))+C*t;for(let e=0;e<M;++e)R+=b[o+e]*I[l+e]}}}d[f*e+m*n+g*i+y*c+t]=R}}}return n.makeTensorInfo(p.shape,p.dtype,p.values)}},n$=pT(_t,(e=>Math.cos(e))),s$={kernelName:_t,backendName:"cpu",kernelFunc:n$},r$=pT(Rt,(e=>Math.cosh(e))),a$={kernelName:Rt,backendName:"cpu",kernelFunc:r$},i$={kernelName:Ot,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{image:r,boxes:a,boxInd:i}=t,{cropSize:o,method:l,extrapolationValue:u}=s,[c,h,p,d]=r.shape,f=a.shape[0],[m,g]=o,y=$i([f,m,g,d],"float32"),b=n.data.get(a.dataId).values,x=n.data.get(i.dataId).values,v=n.data.get(r.dataId).values,w=Fe(r.shape),k=Fe(y.shape);for(let e=0;e<f;e++){const t=4*e,n=b[t],s=b[t+1],r=b[t+2],a=b[t+3],i=x[e];if(i>=c)continue;const o=m>1?(r-n)*(h-1)/(m-1):0,f=g>1?(a-s)*(p-1)/(g-1):0;for(let t=0;t<m;t++){const c=m>1?n*(h-1)+t*o:.5*(n+r)*(h-1);if(c<0||c>h-1)for(let n=0;n<g;n++)for(let s=0;s<d;s++){const r=s+n*k[2]+t*k[1]+e*k[0];y.values[r]=u}else if("bilinear"===l){const n=Math.floor(c),r=Math.ceil(c),o=c-n;for(let l=0;l<g;l++){const c=g>1?s*(p-1)+l*f:.5*(s+a)*(p-1);if(c<0||c>p-1){for(let n=0;n<d;n++){const s=n+l*k[2]+t*k[1]+e*k[0];y.values[s]=u}continue}const h=Math.floor(c),m=Math.ceil(c),b=c-h;for(let s=0;s<d;s++){let a=s+h*w[2]+n*w[1]+i*w[0];const u=v[a];a=s+m*w[2]+n*w[1]+i*w[0];const c=v[a];a=s+h*w[2]+r*w[1]+i*w[0];const p=v[a];a=s+m*w[2]+r*w[1]+i*w[0];const d=u+(c-u)*b,f=p+(v[a]-p)*b;a=s+l*k[2]+t*k[1]+e*k[0],y.values[a]=d+(f-d)*o}}}else for(let n=0;n<g;++n){const r=g>1?s*(p-1)+n*f:.5*(s+a)*(p-1);if(r<0||r>p-1){for(let s=0;s<d;s++){const r=s+n*k[2]+t*k[1]+e*k[0];y.values[r]=u}continue}const o=Math.round(r),l=Math.round(c);for(let s=0;s<d;s++){const r=s+o*w[2]+l*w[1]+i*w[0],a=s+n*k[2]+t*k[1]+e*k[0];y.values[a]=v[r]}}}}return n.makeTensorInfo(y.shape,y.dtype,y.values)}},o$={kernelName:Ft,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{axis:a,exclusive:i,reverse:o}=s;uT(r,"cumprod");const l=uc([a],r.shape.length);let u=r;null!=l&&(u=aC({inputs:{x:r},backend:n,attrs:{perm:l}}));const c=hc(1,r.shape.length)[0];if(c!==u.shape.length-1)throw new Error(`backend.cumprod in CPU expects an inner-most axis=${u.shape.length-1} but got axis=${c}`);const h=ia(u.dtype,"int32"),p=Me(oe(u.shape),h),d=n.data.get(u.dataId).values,f=u.shape[u.shape.length-1],m=o?(e,t)=>e+f-t-1:(e,t)=>e+t;for(let e=0;e<d.length;e+=f)for(let t=0;t<f;t++){const n=m(e,t);if(0===t)p[n]=i?1:d[n];else{const s=m(e,t-1);p[n]=i?d[s]*p[s]:d[n]*p[s]}}const g=n.makeTensorInfo(u.shape,h,p);if(null!=l){const e=aC({inputs:{x:g},backend:n,attrs:{perm:cc(l)}});return n.disposeIntermediateTensorInfo(g),n.disposeIntermediateTensorInfo(u),e}return g}},l$={kernelName:Dt,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{axis:a,exclusive:i,reverse:o}=s;uT(r,"cumsum");const l=uc([a],r.shape.length);let u=r;null!=l&&(u=aC({inputs:{x:r},backend:n,attrs:{perm:l}}));const c=hc(1,r.shape.length)[0];if(c!==u.shape.length-1)throw new Error(`backend.cumsum in CPU expects an inner-most axis=${u.shape.length-1} but got axis=${c}`);const h=ia(u.dtype,"int32"),p=Le(oe(u.shape),h),d=n.data.get(u.dataId).values,f=u.shape[u.shape.length-1],m=o?(e,t)=>e+f-t-1:(e,t)=>e+t;for(let e=0;e<d.length;e+=f)for(let t=0;t<f;t++){const n=m(e,t);if(0===t)p[n]=i?0:d[n];else{const s=m(e,t-1);p[n]=i?d[s]+p[s]:d[n]+p[s]}}const g=n.makeTensorInfo(u.shape,h,p);if(null!=l){const e=aC({inputs:{x:g},backend:n,attrs:{perm:cc(l)}});return n.disposeIntermediateTensorInfo(g),n.disposeIntermediateTensorInfo(u),e}return g}},u$={kernelName:Mt,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:r,weights:a}=t,{size:i,binaryOutput:o}=s;if(1===r.shape.length){const e=DC(n.data.get(r.dataId).values,n.data.get(a.dataId).values,a.dtype,a.shape,i);return n.makeTensorInfo([i],a.dtype,e)}if(2===r.shape.length){const e=OC(n.bufferSync(r),n.bufferSync(a),i,o);return n.makeTensorInfo(e.shape,a.dtype,e.values)}throw new Error(`Error in denseBincount: input must be at most rank 2, but got rank${r.shape.length}.`)}},c$={kernelName:Lt,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{blockSize:a,dataFormat:i}=s;se("NHWC"===i,(()=>`Only NHWC dataFormat supported on CPU for depthToSpace. Got ${i}`));const o=r.shape[0],l=r.shape[1],u=r.shape[2],c=r.shape[3],h=l*a,p=u*a,d=c/(a*a),f=n.data.get(r.dataId).values,m=new Float32Array(o*h*p*d);let g=0;for(let e=0;e<o;++e)for(let t=0;t<h;++t){const n=Math.floor(t/a),s=t%a;for(let t=0;t<p;++t){const r=Math.floor(t/a),i=(s*a+t%a)*d;for(let t=0;t<d;++t){const s=t+i+c*(r+u*(n+l*e));m[g++]=f[s]}}}return n.makeTensorInfo([o,h,p,d],r.dtype,m)}};function h$(e){const{inputs:t,backend:n,attrs:s}=e,{x:r,filter:a}=t,{strides:i,pad:o,dilations:l,dimRoundingMode:u}=s;uT([r,a],"depthwiseConv2DNative");const c=Fe(r.shape),h=Fe(a.shape);let p=l;null==p&&(p=[1,1]),se(cu(i,p),(()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${i} and dilations '${p}'`));const d=nu(r.shape,a.shape,i,p,o,u,!0),{filterHeight:f,filterWidth:m,dilationHeight:g,dilationWidth:y,padInfo:b}=d,x=b.left,v=b.top,w=d.outChannels/d.inChannels,k=new qr(d.outShape,r.dtype),I=n.data.get(r.dataId).values,S=n.data.get(a.dataId).values,N=k.values;for(let e=0;e<d.batchSize;++e){const t=e*c[0],n=e*k.strides[0];for(let e=0;e<d.outHeight;++e){const s=n+e*k.strides[1],r=e*d.strideHeight-v;for(let e=0;e<f;++e){const n=r+e*g;if(n<0||n>=d.inHeight)continue;const a=e*h[0],i=t+n*c[1];for(let e=0;e<d.outWidth;++e){const t=s+e*k.strides[2],n=e*d.strideWidth-x;for(let e=0;e<m;++e){const s=n+e*y;if(s<0||s>=d.inWidth)continue;const r=a+e*h[1],o=i+s*d.inChannels;let l=t,u=r;for(let e=0;e<d.inChannels;++e){const t=I[o+e];for(let e=0;e<w;++e)N[l+e]+=t*S[u+e];l+=w,u+=w}}}}}}return n.makeTensorInfo(k.shape,k.dtype,k.values)}const p$={kernelName:zt,backendName:"cpu",kernelFunc:h$},d$={kernelName:Pt,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:r,dy:a}=t,{strides:i,dilations:o,pad:l,dimRoundingMode:u,filterShape:c}=s;uT([r,a],"depthwiseConv2dNativeBackpropFilter");const h=nu(r.shape,c,i,o,l,u,!0),{strideHeight:p,strideWidth:d,filterHeight:f,filterWidth:m}=h,g=new qr(h.filterShape,"float32"),y=h.padInfo.left,b=h.padInfo.top,x=h.outChannels/h.inChannels,v=n.data.get(r.dataId).values,w=new qr(r.shape,r.dtype,v),k=n.data.get(a.dataId).values,I=new qr(a.shape,a.dtype,k);for(let e=0;e<f;++e){const t=Math.max(0,Math.ceil((b-e)/p)),n=Math.min(h.outHeight,(h.inHeight+b-e)/p);for(let s=0;s<m;++s){const r=Math.max(0,Math.ceil((y-s)/d)),a=Math.min(h.outWidth,(h.inWidth+y-s)/d);for(let i=0;i<h.outChannels;++i){const o=Math.trunc(i/x),l=i%x;let u=0;for(let l=0;l<h.batchSize;++l)for(let c=t;c<n;++c){const t=e+c*p-b;for(let e=r;e<a;++e){const n=s+e*d-y;u+=w.get(l,t,n,o)*I.get(l,c,e,i)}}g.set(u,e,s,o,l)}}}return n.makeTensorInfo(g.shape,g.dtype,g.values)}},f$={kernelName:Bt,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{dy:r,filter:a}=t,{strides:i,dilations:o,pad:l,dimRoundingMode:u,inputShape:c}=s;uT([r,a],"depthwiseConv2DNativeBackpropInput");const h=Fe(r.shape),p=Fe(a.shape),d=nu(c,a.shape,i,o,l,u,!0),f=new qr(d.inShape,"float32"),m=f.values,[g,y,b]=f.strides,x=n.data.get(r.dataId).values,[v,w,k]=h,I=n.data.get(a.dataId).values,[S,N,T]=p,{batchSize:C,filterHeight:$,filterWidth:E,inChannels:A,inHeight:_,inWidth:R,outChannels:F,outHeight:D,outWidth:O,strideHeight:M,strideWidth:L}=d,z=$-1-d.padInfo.top,P=E-1-d.padInfo.left,B=F/A;for(let e=0;e<C;++e)for(let t=0;t<A;++t)for(let n=0;n<_;++n){const s=n-z,r=Math.max(0,Math.ceil(s/M)),a=Math.min(D,($+s)/M);for(let i=0;i<R;++i){const o=i-P,l=Math.max(0,Math.ceil(o/L)),u=Math.min(O,(E+o)/L);let c=0;for(let n=r;n<a;++n){const r=n*M-s;for(let s=l;s<u;++s){const a=v*e+w*n+k*s,i=S*($-1-r)+N*(E-1-(s*L-o))+T*t;for(let e=0;e<B;++e)c+=x[a+(t*B+e)]*I[i+e]}}m[g*e+y*n+b*i+t]=c}}return n.makeTensorInfo(f.shape,f.dtype,f.values)}},m$={kernelName:Wt,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{x:s}=t,r=oe(s.shape),a=n.data.get(s.dataId).values,i=$i([r,r],s.dtype),o=i.values;for(let e=0;e<a.length;e++)o[e*r+e]=a[e];const l=[...s.shape,...s.shape];return n.makeTensorInfo(l,i.dtype,i.values)}},g$={kernelName:Vt,backendName:"cpu",kernelFunc:({inputs:e,backend:t,attrs:n})=>{const{x:s,filter:r}=e,{strides:a,pad:i,dilations:o}=n,l=t,u=l.data.get(s.dataId).values,c=s.shape.length,h=l.data.get(r.dataId).values,p=r.shape.length,{batchSize:d,inHeight:f,inWidth:m,inChannels:g,outHeight:y,outWidth:b,padInfo:x,strideHeight:v,strideWidth:w,filterHeight:k,filterWidth:I,dilationHeight:S,dilationWidth:N,outShape:T}=Ql(s.shape,r.shape,a,i,"NHWC",o),C=oe(T),$=T.length,E=ve(s.dtype,C);for(let e=0;e<d;++e)for(let t=0;t<y;++t){const n=t*v-x.top;for(let a=0;a<b;++a){const i=a*w-x.left;for(let o=0;o<g;++o){let l=Number.MIN_SAFE_INTEGER;for(let t=0;t<k;++t){const a=n+t*S;if(a>=0&&a<f)for(let n=0;n<I;++n){const d=i+n*N;if(d>=0&&d<m){const i=Be([e,a,d,o],c,Fe(s.shape)),f=Be([t,n,o],p,Fe(r.shape)),m=u[i]+h[f];m>l&&(l=m)}}}E[Be([e,t,a,o],$,Fe(T))]=l}}}return{dataId:l.write(Dr(E,s.dtype),T,s.dtype),shape:T,dtype:s.dtype}}},y$={kernelName:Gt,backendName:"cpu",kernelFunc:({inputs:e,backend:t,attrs:n})=>{const{x:s,filter:r,dy:a}=e,{strides:i,pad:o,dilations:l}=n,u=t,c=Oe(s.shape,u.data.get(s.dataId).values),h=Oe(r.shape,u.data.get(r.dataId).values),{batchSize:p,inHeight:d,inWidth:f,inChannels:m,outHeight:g,outWidth:y,padInfo:b,strideHeight:x,strideWidth:v,filterHeight:w,filterWidth:k,dilationHeight:I,dilationWidth:S,outShape:N}=Ql(s.shape,r.shape,i,o,"NHWC",l);se(a.rank===N.length,(()=>`Error in ${Gt}, dy must have the same rank as output ${N.length}, but got ${a.rank}`));const T=Oe(N,u.data.get(a.dataId).values),C=ze(r.shape,r.dtype);for(let e=0;e<p;++e)for(let t=0;t<g;++t){const n=t*x-b.top;for(let s=0;s<y;++s){const r=s*v-b.left;for(let a=0;a<m;++a){let i=Number.MIN_SAFE_INTEGER,o=0,l=0;for(let t=0;t<w;++t){const s=n+t*I;if(s>=0&&s<d)for(let n=0;n<k;++n){const u=r+n*S;if(u>=0&&u<f){const r=c[e][s][u][a]+h[t][n][a];r>i&&(i=r,o=t,l=n)}}}C[o][l][a]+=T[e][t][s][a]}}}return{dataId:u.write(Dr(C,s.dtype),r.shape,r.dtype),shape:r.shape,dtype:r.dtype}}},b$={kernelName:Ut,backendName:"cpu",kernelFunc:({inputs:e,backend:t,attrs:n})=>{const{x:s,filter:r,dy:a}=e,{strides:i,pad:o,dilations:l}=n,u=t,c=Oe(s.shape,u.data.get(s.dataId).values),h=Oe(r.shape,u.data.get(r.dataId).values),{batchSize:p,inHeight:d,inWidth:f,inChannels:m,outHeight:g,outWidth:y,padInfo:b,strideHeight:x,strideWidth:v,filterHeight:w,filterWidth:k,dilationHeight:I,dilationWidth:S,outShape:N}=Ql(s.shape,r.shape,i,o,"NHWC",l);se(a.rank===N.length,(()=>`Error in ${Ut}, dy must have the same rank as output ${N.length}, but got ${a.rank}`));const T=Oe(N,u.data.get(a.dataId).values),C=ze(s.shape,s.dtype);for(let e=0;e<p;++e)for(let t=0;t<g;++t){const n=t*x-b.top;for(let s=0;s<y;++s){const r=s*v-b.left;for(let a=0;a<m;++a){let i=Number.MIN_SAFE_INTEGER,o=n<0?0:n,l=r<0?0:r;for(let t=0;t<w;++t){const s=n+t*I;if(s>=0&&s<d)for(let n=0;n<k;++n){const u=r+n*S;if(u>=0&&u<f){const r=c[e][s][u][a]+h[t][n][a];r>i&&(i=r,o=s,l=u)}}}C[e][o][l][a]+=T[e][t][s][a]}}}return{dataId:u.write(Dr(C,s.dtype),s.shape,s.dtype),shape:s.shape,dtype:s.dtype}}},x$=vT(((e,t)=>e*t)),v$=WT(((e,t,n,s)=>({real:e*n-t*s,imag:e*s+t*n}))),w$=BT(Un,x$,v$),k$={kernelName:Un,backendName:"cpu",kernelFunc:w$};function I$(e){const{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{axis:a,keepDims:i}=s;let o;uT(r,"sum"),o="bool"===r.dtype?zT({inputs:{x:r},backend:n,attrs:{dtype:"int32"}}):gT({inputs:{x:r},backend:n});const l=o.shape.length,u=ye(a,o.shape),c=uc(u,l);let h=u,p=o;null!=c&&(p=aC({inputs:{x:o},backend:n,attrs:{perm:c}}),h=hc(h.length,l)),lc("sum",h,p.shape.length);const[d,f]=ic(p.shape,h);let m=OT(n,d,ia(p.dtype,"int32"));const g=oe(f),y=n.data.get(m.dataId).values,b=n.data.get(p.dataId).values;for(let e=0;e<y.length;++e){const t=e*g;let n=0;for(let e=0;e<g;++e)n+=b[t+e];y[e]=n}if(i){const e=m;m=jT({inputs:{x:m},backend:n,attrs:{shape:oc(m.shape,u)}}),n.disposeIntermediateTensorInfo(e)}return n.disposeIntermediateTensorInfo(o),null!=c&&n.disposeIntermediateTensorInfo(p),m}const S$={kernelName:Cs,backendName:"cpu",kernelFunc:I$},N$={kernelName:jt,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{equation:r}=s,a=t,{allDims:i,summedDims:o,idDims:l}=bf(r,a.length);vf(i.length,l,a);const{path:u,steps:c}=wf(o,l),h=c.length;let p=null,d=i.length;const f=[];for(let e=0;e<h;++e){for(const t of c[e]){const{permutationIndices:e,expandDims:s}=xf(d,l[t]);let r;kf(e)?r=a[t]:(r=aC({inputs:{x:a[t]},backend:n,attrs:{perm:e}}),f.push(r));const i=r.shape.slice();for(let e=0;e<s.length;++e)i.splice(s[e],0,1);ue(r.shape,i)||(r=jT({inputs:{x:r},backend:n,attrs:{shape:i}}),f.push(r)),null===p?p=r:(p=w$({inputs:{a:r,b:p},backend:n}),f.push(p))}e<h-1&&(u[e]>=0&&(p=I$({inputs:{x:p},backend:n,attrs:{axis:u[e]-(i.length-d),keepDims:!1}}),f.push(p)),d--)}for(const e of f)e!==p&&n.disposeIntermediateTensorInfo(e);return p}},T$={kernelName:Kt,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{dy:s,y:r}=t;uT([s,r],"eluGrad");const a=new Float32Array(oe(r.shape)),i=n.data.get(r.dataId).values,o=n.data.get(s.dataId).values;for(let e=0;e<i.length;++e){const t=i[e];a[e]=t>=1?o[e]:o[e]*(t+1)}return n.makeTensorInfo(r.shape,"float32",a)}},C$=vT(((e,t)=>e===t?1:0)),$$=BT(Yt,C$,null,"bool"),E$={kernelName:Yt,backendName:"cpu",kernelFunc:$$},A$=nf,_$=sf,R$=rf,F$=af,D$=of,O$=lf,M$=pT(Xt,(e=>{const t=Math.sign(e),n=Math.abs(e),s=1/(1+A$*n);return t*(1-((((O$*s+D$)*s+F$)*s+R$)*s+_$)*s*Math.exp(-n*n))})),L$={kernelName:Xt,backendName:"cpu",kernelFunc:M$},z$=$T((e=>Math.exp(e))),P$=dT(Zt,z$,"float32"),B$={kernelName:Zt,backendName:"cpu",kernelFunc:P$};function W$(e){const{inputs:t,backend:n,attrs:s}=e,{input:r}=t,{dim:a}=s,i=r.shape.length,o=r.shape.slice();let l=a;return a<0&&(se(-(i+1)<=a,(()=>`Axis must be in the interval [${-(i+1)}, ${i}]`)),l=i+a+1),o.splice(l,0,1),jT({inputs:{x:r},backend:n,attrs:{shape:o}})}const V$={kernelName:Jt,backendName:"cpu",kernelFunc:W$},U$=$T((e=>Math.expm1(e))),G$=dT(Qt,U$),H$={kernelName:Qt,backendName:"cpu",kernelFunc:G$},j$=vT(((e,t)=>e/t)),q$=BT(Ht,j$),K$={kernelName:Ht,backendName:"cpu",kernelFunc:q$},X$=vT(((e,t)=>e-t)),Y$=WT(((e,t,n,s)=>({real:e-n,imag:t-s}))),Z$=BT(Vs,X$,Y$),J$={kernelName:Vs,backendName:"cpu",kernelFunc:Z$};function Q$(e,t,n){const s=e.shape,r=s[0],a=s[1],i=n.data.get(e.dataId),o=i.complexTensorInfos.real,l=i.complexTensorInfos.imag,u=[r,a],c=oe(u),h=xe("float32",c),p=xe("float32",c);for(let e=0;e<r;e++){const s=_C({inputs:{x:o},backend:n,attrs:{begin:[e,0],size:[1,a]}}),r=_C({inputs:{x:l},backend:n,attrs:{begin:[e,0],size:[1,a]}}),i=FT({inputs:{real:s,imag:r},backend:n}),{real:u,imag:c}=eE(i,t,n),d=uf(u,c);for(let t=0;t<a;t++){const n=df(d,t);h[e*a+t]=n.real,p[e*a+t]=n.imag}n.disposeIntermediateTensorInfo(s),n.disposeIntermediateTensorInfo(r),n.disposeIntermediateTensorInfo(i)}const d=n.makeTensorInfo(u,"float32",h),f=n.makeTensorInfo(u,"float32",p),m=FT({inputs:{real:d,imag:f},backend:n});return n.disposeIntermediateTensorInfo(d),n.disposeIntermediateTensorInfo(f),m}function eE(e,t,n){const s=oe(e.shape),r=n.data.get(e.dataId),a=n.data.get(r.complexTensorInfos.real.dataId).values,i=n.data.get(r.complexTensorInfos.imag.dataId).values;if(0==((o=s)&o-1)){const r=tE(a,i,s,t,n),o=[e.shape[0],e.shape[1]];if(t){const e=n.makeTensorInfo(o,"float32",r.real),t=n.makeTensorInfo(o,"float32",r.imag),a=n.makeTensorInfo([],"float32",Fr(s,"float32")),i=gT({inputs:{x:a},backend:n}),l=K$.kernelFunc({inputs:{a:e,b:a},backend:n}),u=K$.kernelFunc({inputs:{a:t,b:i},backend:n}),c=n.data.get(l.dataId).values,h=n.data.get(u.dataId).values;return n.disposeIntermediateTensorInfo(e),n.disposeIntermediateTensorInfo(t),n.disposeIntermediateTensorInfo(a),n.disposeIntermediateTensorInfo(i),n.disposeIntermediateTensorInfo(l),n.disposeIntermediateTensorInfo(u),{real:c,imag:h}}return r}{const e=function(e,t,n){const s=new Float32Array(2*t);for(let r=0;r<t;r++){let a=0,i=0;for(let s=0;s<t;s++){const o=gf(r*s,t,n),l=df(e,s);a+=l.real*o.real-l.imag*o.imag,i+=l.real*o.imag+l.imag*o.real}n&&(a/=t,i/=t),ff(s,a,i,r)}return s}(uf(a,i),s,t);return cf(e)}var o}function tE(e,t,n,s,r){if(1===n)return{real:e,imag:t};const a=uf(e,t),i=n/2,o=hf(a),l=o.real,u=o.imag,c=[l.length],h=r.makeTensorInfo(c,"float32",l),p=r.makeTensorInfo(c,"float32",u),d=FT({inputs:{real:h,imag:p},backend:r}),f=pf(a),m=f.real,g=f.imag,y=[m.length],b=r.makeTensorInfo(y,"float32",m),x=r.makeTensorInfo(y,"float32",g),v=FT({inputs:{real:b,imag:x},backend:r}),w=tE(l,u,i,s,r),k=w.real,I=w.imag,S=[k.length],N=r.makeTensorInfo(S,"float32",k),T=r.makeTensorInfo(S,"float32",I),C=FT({inputs:{real:N,imag:T},backend:r}),$=tE(m,g,i,s,r),E=$.real,A=$.imag,_=[E.length],R=r.makeTensorInfo(_,"float32",E),F=r.makeTensorInfo(_,"float32",A),D=FT({inputs:{real:R,imag:F},backend:r}),O=mf(n,s),M=[O.real.length],L=r.makeTensorInfo(M,"float32",O.real),z=r.makeTensorInfo(M,"float32",O.imag),P=FT({inputs:{real:L,imag:z},backend:r}),B=w$({inputs:{a:P,b:D},backend:r}),W=GT({inputs:{a:C,b:B},backend:r}),V=Z$({inputs:{a:C,b:B},backend:r}),U=MT({inputs:{input:W},backend:r}),G=MT({inputs:{input:V},backend:r}),H=HC({inputs:{input:W},backend:r}),j=HC({inputs:{input:V},backend:r}),q=qC({inputs:[U,G],backend:r,attrs:{axis:0}}),K=qC({inputs:[H,j],backend:r,attrs:{axis:0}}),X=r.data.get(q.dataId).values,Y=r.data.get(K.dataId).values;return r.disposeIntermediateTensorInfo(h),r.disposeIntermediateTensorInfo(p),r.disposeIntermediateTensorInfo(d),r.disposeIntermediateTensorInfo(b),r.disposeIntermediateTensorInfo(x),r.disposeIntermediateTensorInfo(v),r.disposeIntermediateTensorInfo(N),r.disposeIntermediateTensorInfo(T),r.disposeIntermediateTensorInfo(C),r.disposeIntermediateTensorInfo(R),r.disposeIntermediateTensorInfo(F),r.disposeIntermediateTensorInfo(D),r.disposeIntermediateTensorInfo(L),r.disposeIntermediateTensorInfo(z),r.disposeIntermediateTensorInfo(P),r.disposeIntermediateTensorInfo(B),r.disposeIntermediateTensorInfo(W),r.disposeIntermediateTensorInfo(V),r.disposeIntermediateTensorInfo(U),r.disposeIntermediateTensorInfo(H),r.disposeIntermediateTensorInfo(G),r.disposeIntermediateTensorInfo(j),r.disposeIntermediateTensorInfo(q),r.disposeIntermediateTensorInfo(K),{real:X,imag:Y}}const nE={kernelName:en,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{input:s}=t,r=oe(s.shape),a=s.shape[s.shape.length-1],i=jT({inputs:{x:s},backend:n,attrs:{shape:[r/a,a]}}),o=Q$(i,!1,n),l=jT({inputs:{x:o},backend:n,attrs:{shape:s.shape}});return n.disposeIntermediateTensorInfo(i),n.disposeIntermediateTensorInfo(o),l}};function sE(e){const{backend:t,attrs:n}=e,{shape:s,value:r,dtype:a}=n,i=a||Ae(r),o=ve(i,oe(s));return function(e,t,n){e.fill(t)}(o,r),t.makeTensorInfo(s,i,o)}const rE={kernelName:tn,backendName:"cpu",kernelFunc:sE},aE={kernelName:nn,backendName:"cpu",kernelFunc:({inputs:e,attrs:t,backend:n})=>{const{image:s}=e,r=n,a=xe(s.dtype,oe(s.shape)),[i,o,l,u]=s.shape,c=r.data.get(s.dataId).values;for(let e=0;e<i;e++){const t=e*l*o*u;for(let e=0;e<o;e++){const n=e*(l*u);for(let e=0;e<l;e++){const s=e*u;for(let r=0;r<u;r++){const i=Math.round(l-e-1),o=t+n+s+r;let h=c[o];i>=0&&i<l&&(h=c[t+n+i*u+r]),a[o]=h}}}}return{dataId:r.write(a,s.shape,s.dtype),shape:s.shape,dtype:s.dtype}}},iE=$T((e=>Math.floor(e))),oE=dT(sn,iE),lE={kernelName:sn,backendName:"cpu",kernelFunc:oE},uE=vT(((e,t)=>Math.floor(e/t))),cE=BT(rn,uE,null,"int32"),hE={kernelName:rn,backendName:"cpu",kernelFunc:cE},pE={kernelName:rr,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:r,filter:a,bias:i,preluActivationWeights:o}=t,{strides:l,pad:u,dataFormat:c,dilations:h,dimRoundingMode:p,activation:d,leakyreluAlpha:f}=s;let m=XC({inputs:{x:r,filter:a},backend:n,attrs:{strides:l,pad:u,dataFormat:c,dilations:h,dimRoundingMode:p}});if(i){const e=m;if("NCHW"===c&&1===i.shape.length&&1!==i.shape[0]){const e=jT({inputs:{x:i},backend:n,attrs:{shape:[i.shape[0],1,1]}});m=GT({inputs:{a:m,b:e},backend:n}),n.disposeIntermediateTensorInfo(e)}else m=GT({inputs:{a:m,b:i},backend:n});n.disposeIntermediateTensorInfo(e)}if(d){const e=m;m=RT(n,m,d,o,f),n.disposeIntermediateTensorInfo(e)}return m}},dE={kernelName:ar,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:r,filter:a,bias:i,preluActivationWeights:o}=t,{strides:l,pad:u,dataFormat:c,dilations:h,dimRoundingMode:p,activation:d,leakyreluAlpha:f}=s;let m=h$({inputs:{x:r,filter:a},backend:n,attrs:{strides:l,pad:u,dataFormat:c,dilations:h,dimRoundingMode:p}});if(i){const e=m;m=GT({inputs:{a:m,b:i},backend:n}),n.disposeIntermediateTensorInfo(e)}if(d){const e=m;m=RT(n,m,d,o,f),n.disposeIntermediateTensorInfo(e)}return m}};function fE(e,t,n,s,r,a,i,o,l){const u=$i([s,a],n);for(let n=0;n<s;n++){const s=[];let c=0;for(let t=0;t<r;t++){const a=e[n*r+t];c+=a*i[t],s.push(a)}if(c<0||c>=l/a)throw new Error(`Invalid indices: ${s} does not index into ${o}`);for(let e=0;e<a;e++)u.values[n*a+e]=t.get(...t.indexToLoc(c*a+e))}return u}const mE={kernelName:ln,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{params:s,indices:r}=t,a=oe(s.shape),i=r.shape,o=i[i.length-1],[l,u,c,h]=lo(s,r);if(0===u)return n.makeTensorInfo(l,s.dtype,[]);const p=fE(n.data.get(r.dataId).values,n.bufferSync(s),s.dtype,u,o,c,h,s.shape,a);return n.makeTensorInfo(l,s.dtype,p.values)}};function gE(e,t,n){const s=$i(n,e.dtype);for(let n=0;n<s.size;++n){const r=s.indexToLoc(n).slice(),a=r[0],i=r[2],o=t.locToIndex([a,i]);r[2]=t.values[o];const l=e.locToIndex(r);0<=l&&l<e.values.length&&(s.values[n]=e.values[l])}return s}const yE={kernelName:on,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:r,indices:a}=t,{axis:i,batchDims:o}=s;uT([r,a],"gatherV2");const l=ye(i,r.shape)[0],u=n.data.get(a.dataId).values,c=r.shape[l];for(let e=0;e<u.length;++e){const t=u[e];se(t<=c-1&&t>=0,(()=>`GatherV2: the index value ${t} is not in [0, ${c-1}]`))}let h=o;null==o&&(h=0);const p=oe(a.shape),d=Pf(r,a,l,h),f=jT({inputs:{x:r},backend:n,attrs:{shape:[d.batchSize,d.outerSize,d.dimSize,d.sliceSize]}}),m=jT({inputs:{x:a},backend:n,attrs:{shape:[d.batchSize,p/d.batchSize]}}),g=[d.batchSize,d.outerSize,p/d.batchSize,d.sliceSize],y=n.bufferSync(m),b=gE(n.bufferSync(f),y,g);return n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(m),n.makeTensorInfo(d.outputShape,b.dtype,b.values)}},bE=vT(((e,t)=>e>t?1:0)),xE=BT(un,bE,null,"bool"),vE={kernelName:un,backendName:"cpu",kernelFunc:xE},wE=vT(((e,t)=>e>=t?1:0)),kE=BT(cn,wE,null,"bool"),IE={kernelName:cn,backendName:"cpu",kernelFunc:kE},SE={kernelName:pn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{input:s}=t,r=oe(s.shape),a=s.shape[s.shape.length-1],i=jT({inputs:{x:s},backend:n,attrs:{shape:[r/a,a]}}),o=Q$(i,!0,n),l=jT({inputs:{x:o},backend:n,attrs:{shape:s.shape}});return n.disposeIntermediateTensorInfo(i),n.disposeIntermediateTensorInfo(o),l}},NE=pT(fn,(e=>Number.isFinite(e)?1:0),"bool"),TE={kernelName:fn,backendName:"cpu",kernelFunc:NE},CE=pT(mn,(e=>Math.abs(e)===1/0?1:0),"bool"),$E={kernelName:mn,backendName:"cpu",kernelFunc:CE},EE=pT(gn,(e=>Number.isNaN(e)?1:0),"bool"),AE={kernelName:gn,backendName:"cpu",kernelFunc:EE},_E=vT(((e,t)=>e<t?1:0)),RE=BT(bn,_E,null,"bool"),FE={kernelName:bn,backendName:"cpu",kernelFunc:RE},DE=vT(((e,t)=>e<=t?1:0)),OE=BT(xn,DE,null,"bool"),ME={kernelName:xn,backendName:"cpu",kernelFunc:OE};function LE(e,t,n){const s=(t-e)/(n-1),r=Le(n,"float32");r[0]=e;for(let e=1;e<r.length;e++)r[e]=r[e-1]+s;return r}const zE={kernelName:vn,backendName:"cpu",kernelFunc:function(e){const{backend:t,attrs:n}=e,{start:s,stop:r,num:a}=n,i=LE(s,r,a);return t.makeTensorInfo([i.length],"float32",i)}},PE=$T((e=>Math.log(e))),BE=dT(wn,PE),WE={kernelName:wn,backendName:"cpu",kernelFunc:BE},VE=pT(kn,(e=>Math.log1p(e))),UE={kernelName:kn,backendName:"cpu",kernelFunc:VE},GE=vT(((e,t)=>e&&t)),HE=BT(In,GE,null,"bool"),jE={kernelName:In,backendName:"cpu",kernelFunc:HE},qE=pT(Sn,(e=>e?0:1),"bool"),KE={kernelName:Sn,backendName:"cpu",kernelFunc:qE},XE=vT(((e,t)=>e||t)),YE=BT(Nn,XE,null,"bool"),ZE={kernelName:Nn,backendName:"cpu",kernelFunc:YE},JE={kernelName:$n,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{depthRadius:a,bias:i,alpha:o,beta:l}=s;uT(r,"LRN");const u=r.shape[3],c=u-1,h=n.data.get(r.dataId).values,p=oe(r.shape),d=new Float32Array(p);function f(e){const t=e%u;let n=e-t+Math.max(0,t-a);const s=e-t+Math.min(t+a,c);let r=0;for(;n<=s;n++){const e=h[n];r+=e*e}return r}for(let e=0;e<p;e++){const t=f(e),n=h[e]*Math.pow(i+o*t,-l);d[e]=n}return n.makeTensorInfo(r.shape,r.dtype,d)}},QE={kernelName:En,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:r,y:a,dy:i}=t,{depthRadius:o,bias:l,alpha:u,beta:c}=s;uT(i,"LRNGrad");const h=oe(i.shape),p=i.shape[3],d=n.data.get(i.dataId).values,f=n.data.get(r.dataId).values,m=n.data.get(a.dataId).values,g=new Float32Array(h),y=h;for(let e=0;e<y;e++){const t=e%p,n=e-t+Math.max(0,t-o),s=e-t+Math.min(p,t+o+1);let r=0;for(let e=n;e<s;e++)r+=Math.pow(f[e],2);r=u*r+l;for(let t=n;t<s;t++){let n=-2*u*c*f[t]*m[e]/r;e===t&&(n+=Math.pow(r,-c)),n*=d[e],g[t]+=n}}return n.makeTensorInfo(i.shape,r.dtype,g)}};function eA(e,t,n,s){const r=xe(s,oe(n));for(let n=0;n<r.length;++n){const s=n*t;let a=e[s];for(let n=0;n<t;++n){const t=e[s+n];(Number.isNaN(t)||t>a)&&(a=t)}r[n]=a}return r}function tA(e){const{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{reductionIndices:a,keepDims:i}=s,o=n;let l=r.shape;const u=l.length,c=ye(a,l);let h=c;const p=uc(h,u);let d=o.data.get(r.dataId).values;if(null!=p){const e=new Array(u);for(let t=0;t<e.length;t++)e[t]=l[p[t]];d=rC(d,l,r.dtype,p,e),h=hc(h.length,u),l=e}uT(r,"max"),lc("max",h,u);const[f,m]=ic(l,h),g=eA(d,oe(m),f,r.dtype),y=o.write(g,f,r.dtype);let b=f;return i&&(b=oc(f,c)),{dataId:y,shape:b,dtype:r.dtype}}const nA={kernelName:An,backendName:"cpu",kernelFunc:tA},sA=vT(((e,t)=>Math.max(e,t))),rA=BT(_n,sA),aA={kernelName:_n,backendName:"cpu",kernelFunc:rA},iA={kernelName:Rn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:r}=t;uT(r,"maxPool");const{filterSize:a,strides:i,pad:o,dimRoundingMode:l}=s;se(cu(i,1),(()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${i} and dilations '1'`));const u=eu(r.shape,a,i,1,o,l);let c;if(1===u.filterWidth&&1===u.filterHeight&&ue(u.inShape,u.outShape))c=gT({inputs:{x:r},backend:n});else{const e=n.data.get(r.dataId).values,t=Fe(r.shape),s=kC(e,r.shape,r.dtype,t,u,"max");c=n.makeTensorInfo(u.outShape,r.dtype,s.values)}return c}},oA={kernelName:Dn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{filterSize:a,strides:i,pad:o,dimRoundingMode:l,dataFormat:u}=s;uT(r,"maxPool3d");const c=tu(r.shape,a,i,1,o,l,u),h=SC(n.data.get(r.dataId).values,r.shape,r.dtype,Fe(r.shape),c,"max");return n.makeTensorInfo(h.shape,"float32",h.values)}},lA={kernelName:On,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{dy:r,input:a}=t,{filterSize:i,strides:o,pad:l,dimRoundingMode:u}=s;uT([r,a],"maxPool3DGrad");const c=tu(a.shape,i,o,1,l,u),h=function(e,t){const n=$i(t.outShape,"int32"),s=t.strideDepth,r=t.strideHeight,a=t.strideWidth,i=t.dilationDepth,o=t.dilationHeight,l=t.dilationWidth,u=t.effectiveFilterDepth,c=t.effectiveFilterHeight,h=t.effectiveFilterWidth,p=t.padInfo.front,d=t.padInfo.top,f=t.padInfo.left;for(let m=0;m<t.batchSize;++m)for(let g=0;g<t.inChannels;++g)for(let y=0;y<t.outDepth;++y){const b=y*s-p;let x=b;for(;x<0;)x+=i;const v=Math.min(t.inDepth,u+b);for(let s=0;s<t.outHeight;++s){const u=s*r-d;let p=u;for(;p<0;)p+=o;const w=Math.min(t.inHeight,c+u);for(let r=0;r<t.outWidth;++r){const d=r*a-f;let k=d;for(;k<0;)k+=l;const I=Math.min(t.inWidth,h+d);let S=Number.NEGATIVE_INFINITY,N=-1;for(let t=x;t<v;t+=i){const n=t-b;for(let s=p;s<w;s+=o){const r=s-u;for(let a=k;a<I;a+=l){const i=a-d,o=e.get(m,t,s,a,g);o>=S&&(S=o,N=n*c*h+r*c+i)}}}n.set(N,m,y,s,r,g)}}}return n}(n.bufferSync(a),c),p=c.strideDepth,d=c.strideHeight,f=c.strideWidth,m=c.dilationDepth,g=c.dilationHeight,y=c.dilationWidth,b=c.effectiveFilterDepth,x=c.effectiveFilterHeight,v=c.effectiveFilterWidth,w=b-1-c.padInfo.front,k=v-1-c.padInfo.left,I=x-1-c.padInfo.top,S=$i(a.shape,"float32"),N=n.bufferSync(r);for(let e=0;e<c.batchSize;++e)for(let t=0;t<c.inChannels;++t)for(let n=0;n<c.inDepth;++n)for(let s=0;s<c.inHeight;++s)for(let r=0;r<c.inWidth;++r){const a=n-w,i=s-I,o=r-k;let l=0;for(let n=0;n<b;n+=m){const s=(a+n)/p;if(!(s<0||s>=c.outDepth||Math.floor(s)!==s))for(let r=0;r<x;r+=g){const a=(i+r)/d;if(!(a<0||a>=c.outHeight||Math.floor(a)!==a))for(let i=0;i<v;i+=y){const u=(o+i)/f;if(u<0||u>=c.outWidth||Math.floor(u)!==u)continue;const p=b*x*v-1-h.get(e,s,a,u,t)===n*x*v+r*v+i?1:0;0!==p&&(l+=N.get(e,s,a,u,t)*p)}}}S.set(l,e,n,s,r,t)}return n.makeTensorInfo(S.shape,S.dtype,S.values)}},uA={kernelName:Fn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{dy:r,input:a,output:i}=t,o=a;uT([a,i],"maxPoolGrad");const{filterSize:l,strides:u,pad:c,dimRoundingMode:h}=s,p=eu(o.shape,l,u,1,c,h),d=n.data.get(o.dataId).values,f=$i(p.outShape,o.dtype,IC(d,o.shape,o.dtype,p).values),m=p.strideHeight,g=p.strideWidth,y=p.dilationHeight,b=p.dilationWidth,x=p.effectiveFilterHeight,v=p.effectiveFilterWidth,w=v-1-p.padInfo.left,k=x-1-p.padInfo.top,I=$i(o.shape,"float32"),S=n.data.get(r.dataId).values,N=$i(r.shape,"float32",S);for(let e=0;e<p.batchSize;++e)for(let t=0;t<p.inChannels;++t)for(let n=0;n<p.inHeight;++n)for(let s=0;s<p.inWidth;++s){const r=n-k,a=s-w;let i=0;for(let n=0;n<x;n+=y){const s=(r+n)/m;if(!(s<0||s>=p.outHeight||Math.floor(s)!==s))for(let r=0;r<v;r+=b){const o=(a+r)/g;if(o<0||o>=p.outWidth||Math.floor(o)!==o)continue;const l=x*v-1-f.get(e,s,o,t)===n*v+r?1:0;0!==l&&(i+=N.get(e,s,o,t)*l)}}I.set(i,e,n,s,t)}return n.makeTensorInfo(I.shape,I.dtype,I.values)}},cA={kernelName:Mn,backendName:"cpu",kernelFunc:({inputs:e,attrs:t,backend:n})=>{const{x:s}=e,{filterSize:r,strides:a,pad:i,includeBatchInIndex:o}=t,l=n;uT(s,"MaxPoolWithArgmax");const u=l.data.get(s.dataId).values,c=eu(s.shape,r,a,[1,1],i),[h,p]=function(e,t,n,s,r){const a=kC(e,0,n,Fe(t),r,"max"),i=IC(e,t,n,r,!0,s);return[a.values,i.values]}(u,s.shape,s.dtype,o,c),d=l.write(h,c.outShape,s.dtype),f=l.write(p,c.outShape,s.dtype);return[{dataId:d,shape:c.outShape,dtype:s.dtype},{dataId:f,shape:c.outShape,dtype:"int32"}]}},hA={kernelName:Ln,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{axis:a,keepDims:i}=s,o=ye(a,r.shape),l=oe(ic(r.shape,o)[1]),u=[],c=n.makeTensorInfo([],"float32",new Float32Array([l]));u.push(c);const h=zT({inputs:{x:r},backend:n,attrs:{dtype:"float32"}});u.push(h);const p=q$({inputs:{a:h,b:c},backend:n});u.push(p);const d=I$({inputs:{x:p},backend:n,attrs:{axis:a,keepDims:i}});return u.forEach((e=>n.disposeIntermediateTensorInfo(e))),d}},pA={kernelName:zn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{axis:a,keepDims:i}=s;uT(r,"min");const o=ye(a,r.shape);let l=o;const u=uc(l,r.shape.length);let c=r;null!=u&&(c=aC({inputs:{x:r},backend:n,attrs:{perm:u}}),l=hc(l.length,r.shape.length)),lc("min",l,c.shape.length);const[h,p]=ic(c.shape,l),d=oe(p),f=Le(oe(h),c.dtype),m=n.data.get(c.dataId).values;for(let e=0;e<f.length;++e){const t=e*d;let n=m[t];for(let e=0;e<d;++e){const s=m[t+e];(Number.isNaN(s)||s<n)&&(n=s)}f[e]=n}null!=u&&n.disposeIntermediateTensorInfo(c);const g=n.makeTensorInfo(h,c.dtype,f);if(i){const e=jT({inputs:{x:g},backend:n,attrs:{shape:oc(h,o)}});return n.disposeIntermediateTensorInfo(g),e}return g}},dA=vT(((e,t)=>Math.min(e,t))),fA=BT(Pn,dA),mA={kernelName:Pn,backendName:"cpu",kernelFunc:fA},gA={kernelName:Bn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{paddings:a,mode:i}=s;uT(r,"mirrorPad");const o=a.map(((e,t)=>e[0]+r.shape[t]+e[1])),l=a.map((e=>e[0])),u=a.map(((e,t)=>e[0]+r.shape[t])),c="reflect"===i?0:1,h=n.data.get(r.dataId).values,p=r.shape.length,d=Fe(r.shape),f=oe(o),m=o.length,g=Fe(o),y=xe(r.dtype,f);for(let e=0;e<f;e++){let t=We(e,m,g);for(let e=0;e<m;e++)t[e]<l[e]?t[e]=2*l[e]-t[e]-c:t[e]>=u[e]&&(t[e]=2*(u[e]-1)-t[e]+c);t=t.map(((e,t)=>e-l[t]));const n=Be(t,p,d);y[e]=h[n]}return{dataId:n.write(y,o,r.dtype),shape:o,dtype:r.dtype}}},yA=vT(((e,t)=>{const n=e%t;return e<0&&t<0||e>=0&&t>=0?n:(n+t)%t})),bA=BT(Wn,yA),xA={kernelName:Wn,backendName:"cpu",kernelFunc:bA};var vA=n(948);function wA(e){const{inputs:t,backend:n,attrs:s}=e,{logits:r}=t,{dim:a}=s,i=r.shape.length;let o=a;if(-1===o&&(o=i-1),o!==i-1)throw Error(`Softmax along a non-last dimension is not yet supported. Logits was rank ${i} and dim was ${o}`);const l=ye([o],r.shape),u=tA({inputs:{x:r},backend:n,attrs:{reductionIndices:l,keepDims:!1}}),c=oc(u.shape,l),h=jT({inputs:{x:u},backend:n,attrs:{shape:c}}),p=Z$({inputs:{a:r,b:h},backend:n}),d=P$({inputs:{x:p},backend:n}),f=I$({inputs:{x:d},backend:n,attrs:{axis:l,keepDims:!1}}),m=jT({inputs:{x:f},backend:n,attrs:{shape:c}}),g=q$({inputs:{a:d,b:m},backend:n});return n.disposeIntermediateTensorInfo(u),n.disposeIntermediateTensorInfo(h),n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(d),n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(m),g}const kA={kernelName:As,backendName:"cpu",kernelFunc:wA},IA={kernelName:Vn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{logits:r}=t,{numSamples:a,seed:i,normalized:o}=s;uT(r,"multinomial");const l=o?r:wA({inputs:{logits:r},backend:n,attrs:{dim:-1}}),u=l.shape[0],c=l.shape[1],h=n.data.get(l.dataId).values,p=[u,a],d=Le(oe(p),"int32");for(let e=0;e<u;++e){const t=e*c,n=new Float32Array(c-1);n[0]=h[t];for(let e=1;e<n.length;++e)n[e]=n[e-1]+h[t+e];const s=vA.alea(i.toString()),r=e*a;for(let e=0;e<a;++e){const t=s();d[r+e]=n.length;for(let s=0;s<n.length;s++)if(t<n[s]){d[r+e]=s;break}}}return o||n.disposeIntermediateTensorInfo(l),n.makeTensorInfo(p,"int32",d)}};function SA(e,t,n){const s=Fr(-1,n);return x$([],t,s,e,n)}const NA={kernelName:Gn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{x:s}=t;uT(s,"neg");const r=n.data.get(s.dataId).values,[a,i]=SA(r,s.shape,s.dtype);return n.makeTensorInfo(i,s.dtype,a)}},TA=ed,CA={kernelName:jn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{boxes:r,scores:a}=t,{maxOutputSize:i,iouThreshold:o,scoreThreshold:l}=s;uT(r,"NonMaxSuppression");const u=n.data.get(r.dataId).values,c=n.data.get(a.dataId).values,{selectedIndices:h}=TA(u,c,i,o,l);return n.makeTensorInfo([h.length],"int32",new Int32Array(h))}},$A=td,EA={kernelName:qn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{boxes:r,scores:a}=t,{maxOutputSize:i,iouThreshold:o,scoreThreshold:l,padToMaxOutputSize:u}=s;uT(r,"NonMaxSuppressionPadded");const c=n.data.get(r.dataId).values,h=n.data.get(a.dataId).values,{selectedIndices:p,validOutputs:d}=$A(c,h,i,o,l,u);return[n.makeTensorInfo([p.length],"int32",new Int32Array(p)),n.makeTensorInfo([],"int32",new Int32Array([d]))]}},AA=nd,_A={kernelName:Kn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{boxes:r,scores:a}=t,{maxOutputSize:i,iouThreshold:o,scoreThreshold:l,softNmsSigma:u}=s;uT(r,"NonMaxSuppressionWithScore");const c=n.data.get(r.dataId).values,h=n.data.get(a.dataId).values,p=i,d=o,f=l,m=u,{selectedIndices:g,selectedScores:y}=AA(c,h,p,d,f,m);return[n.makeTensorInfo([g.length],"int32",new Int32Array(g)),n.makeTensorInfo([y.length],"float32",new Float32Array(y))]}},RA=vT(((e,t)=>e!==t?1:0)),FA=BT(Hn,RA,null,"bool"),DA={kernelName:Hn,backendName:"cpu",kernelFunc:FA},OA={kernelName:Yn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{indices:r}=t,{depth:a,onValue:i,offValue:o}=s;uT(r,"oneHot");const l=oe(r.shape),u=new Float32Array(l*a);u.fill(o);const c=n.data.get(r.dataId).values;for(let e=0;e<l;++e)c[e]>=0&&c[e]<a&&(u[e*a+c[e]]=i);return n.makeTensorInfo([...r.shape,a],"int32",u)}};function MA(e){const{inputs:t,backend:n}=e,{x:s}=t;if("string"===s.dtype)throw new Error("zerosLike is not supported for string tensors");if("complex64"===s.dtype){const e=MT({inputs:{input:s},backend:n}),t=MA({inputs:{x:e},backend:n}),r=HC({inputs:{input:s},backend:n}),a=MA({inputs:{x:r},backend:n}),i=FT({inputs:{real:t,imag:a},backend:n});return n.disposeIntermediateTensorInfo(e),n.disposeIntermediateTensorInfo(t),n.disposeIntermediateTensorInfo(r),n.disposeIntermediateTensorInfo(a),i}return sE({backend:n,attrs:{shape:s.shape,value:0,dtype:s.dtype}})}const LA={kernelName:Qs,backendName:"cpu",kernelFunc:MA},zA={kernelName:Xn,backendName:"cpu",kernelFunc:function e(t){const{inputs:n,backend:s}=t,{x:r}=n;if("string"===r.dtype)throw new Error("onesLike is not supported for string tensors");if("complex64"===r.dtype){const t=MT({inputs:{input:r},backend:s}),n=e({inputs:{x:t},backend:s}),a=HC({inputs:{input:r},backend:s}),i=MA({inputs:{x:a},backend:s}),o=FT({inputs:{real:n,imag:i},backend:s});return s.disposeIntermediateTensorInfo(t),s.disposeIntermediateTensorInfo(n),s.disposeIntermediateTensorInfo(a),s.disposeIntermediateTensorInfo(i),o}return sE({backend:s,attrs:{shape:r.shape,value:1,dtype:r.dtype}})}};function PA(e){const{inputs:t,backend:n,attrs:s}=e,{axis:r}=s;if(1===t.length)return W$({inputs:{input:t[0]},backend:n,attrs:{dim:r}});const a=t[0].shape,i=t[0].dtype;t.forEach((e=>{re(a,e.shape,"All tensors passed to stack must have matching shapes"),se(i===e.dtype,(()=>"All tensors passed to stack must have matching dtypes"))}));const o=[],l=qC({inputs:t.map((e=>{const t=W$({inputs:{input:e},backend:n,attrs:{dim:r}});return o.push(t),t})),backend:n,attrs:{axis:r}});return o.forEach((e=>n.disposeIntermediateTensorInfo(e))),l}const BA={kernelName:Zn,backendName:"cpu",kernelFunc:PA},WA={kernelName:Jn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{paddings:a,constantValue:i}=s;uT(r,"pad");const o=a.map(((e,t)=>e[0]+r.shape[t]+e[1])),l=a.map((e=>e[0])),u=n.data.get(r.dataId).values,c=oe(r.shape),h=r.shape.length,p=Fe(r.shape),d=oe(o),f=o.length,m=Fe(o),g=xe(r.dtype,d);0!==i&&g.fill(i);for(let e=0;e<c;e++)g[Be(We(e,h,p).map(((e,t)=>e+l[t])),f,m)]=u[e];return{dataId:n.write(g,o,r.dtype),shape:o,dtype:r.dtype}}},VA=vT(((e,t)=>Math.pow(e,t))),UA=BT(es,VA),GA={kernelName:es,backendName:"cpu",kernelFunc:UA};function HA(e,t,n,s){const[r,a]=ic(e,s),i=ia(t,"int32"),o=Le(oe(r),i),l=oe(a);for(let e=0;e<o.length;++e){const t=e*l;let s=1;for(let e=0;e<l;++e)s*=n[t+e];o[e]=s}return{outVals:o,outShape:r,outDtype:i}}const jA={kernelName:ns,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{axis:a,keepDims:i}=s;uT(r,"prod");const o=r.shape.length,l=ye(a,r.shape),u=uc(l,o);let c=l,h=r;const p=[];null!=u&&(h=aC({inputs:{x:r},backend:n,attrs:{perm:u}}),p.push(h),c=hc(c.length,o));const d=n.data.get(h.dataId).values,{outVals:f,outShape:m,outDtype:g}=HA(h.shape,h.dtype,d,c);let y=m;return i&&(y=oc(m,l)),p.forEach((e=>n.disposeIntermediateTensorInfo(e))),n.makeTensorInfo(y,g,f)}};function qA(e,t,n,s){if(e===t||e<t&&n<0||t<e&&n>1)return Le(0,s);const r=Le(Math.abs(Math.ceil((t-e)/n)),s);t<e&&1===n&&(n=-1),r[0]=e;for(let e=1;e<r.length;e++)r[e]=r[e-1]+n;return r}const KA={kernelName:ss,backendName:"cpu",kernelFunc:function(e){const{backend:t,attrs:n}=e,{start:s,stop:r,dtype:a,step:i}=n,o=qA(s,r,i,a);return t.makeTensorInfo([o.length],a,o)}},XA=pT(as,(e=>1/e)),YA={kernelName:as,backendName:"cpu",kernelFunc:XA},ZA={kernelName:cs,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{images:r}=t,{alignCorners:a,halfPixelCenters:i,size:o}=s;uT(r,"resizeBilinear");const l=Fe(r.shape),[u,c]=o,[h,p,d,f]=r.shape,m=n.data.get(r.dataId).values,g=new Float32Array(oe([h,u,c,f])),y=[a&&u>1?p-1:p,a&&c>1?d-1:d],b=[a&&u>1?u-1:u,a&&c>1?c-1:c];let x=0;const v=y[0]/b[0],w=y[1]/b[1];for(let e=0;e<h;e++)for(let t=0;t<u;t++){let n;n=i?v*(t+.5)-.5:v*t;const s=Math.max(0,Math.floor(n)),r=n-s,a=Math.min(p-1,Math.ceil(n)),o=e*l[0]+s*l[1],u=e*l[0]+a*l[1];for(let e=0;e<c;e++){let t;t=i?w*(e+.5)-.5:w*e;const n=Math.max(0,Math.floor(t)),s=t-n,a=Math.min(d-1,Math.ceil(t)),c=o+n*l[2],h=u+n*l[2],p=o+a*l[2],y=u+a*l[2];for(let e=0;e<f;e++){const t=m[c+e],n=m[h+e],a=t+(m[p+e]-t)*s,i=a+(n+(m[y+e]-n)*s-a)*r;g[x++]=i}}}return n.makeTensorInfo([h,u,c,f],"float32",g)}},JA={kernelName:hs,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{images:r,dy:a}=t,{alignCorners:i}=s;uT([a,r],"resizeBilinearGrad");const o=Fe(r.shape),[l,u,c,h]=r.shape,[,p,d]=a.shape,f=new Float32Array(l*u*c*h),m=[i&&p>1?u-1:u,i&&d>1?c-1:c],g=[i&&p>1?p-1:p,i&&d>1?d-1:d],y=m[0]/g[0],b=m[1]/g[1],x=n.data.get(a.dataId).values;let v=0;for(let e=0;e<l;e++){const t=e*o[0];for(let e=0;e<p;e++){const n=e*y,s=Math.floor(n),r=Math.min(Math.ceil(n),u-1),a=t+s*o[1],i=t+r*o[1],l=n-s,p=1-l;for(let e=0;e<d;e++){const t=e*b,n=Math.floor(t),s=Math.min(Math.ceil(t),c-1),r=t-n,u=1-r,d=a+n*o[2],m=a+s*o[2],g=i+n*o[2],y=i+s*o[2],w=p*u,k=p*r,I=l*u,S=l*r;for(let e=0;e<h;e++){const t=x[v++];f[d+e]+=t*w,f[m+e]+=t*k,f[g+e]+=t*I,f[y+e]+=t*S}}}}return n.makeTensorInfo([l,c,u,h],"float32",f)}},QA={kernelName:ls,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{images:r}=t,{alignCorners:a,halfPixelCenters:i,size:o}=s;uT(r,"resizeNearestNeighbor");const l=Fe(r.shape),[u,c]=o,[h,p,d,f]=r.shape,m=n.data.get(r.dataId).values,g=new Float32Array(h*u*c*f),y=[a&&u>1?p-1:p,a&&c>1?d-1:d],b=[a&&u>1?u-1:u,a&&c>1?c-1:c],x=y[0]/b[0],v=y[1]/b[1];let w=0;for(let e=0;e<h;e++){const t=e*l[0];for(let e=0;e<u;e++){const n=i?x*(e+.5):x*e;let s=Math.min(p-1,a?Math.round(n):Math.floor(n));i&&(s=Math.max(0,s));const r=t+s*l[1];for(let e=0;e<c;e++){const t=i?v*(e+.5):v*e;let n=Math.min(d-1,a?Math.round(t):Math.floor(t));i&&(n=Math.max(0,n));const s=r+n*l[2];for(let e=0;e<f;e++){const t=m[s+e];g[w++]=t}}}}return n.makeTensorInfo([h,u,c,f],r.dtype,g)}},e_={kernelName:us,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{images:r,dy:a}=t,{alignCorners:i}=s;uT([a,r],"resizeNearestNeighborGrad");const o=Fe(r.shape),l=Fe(a.shape),[u,c,h,p]=r.shape,[,d,f]=a.shape,m=new Float32Array(u*c*h*p),g=n.data.get(a.dataId).values,y=[i&&d>1?c-1:c,i&&f>1?h-1:h],b=[i&&d>1?d-1:d,i&&f>1?f-1:f],x=y[0]/b[0],v=y[1]/b[1],w=1/x,k=1/v,I=2*Math.ceil(w)+2,S=2*Math.ceil(k)+2;for(let e=0;e<u;e++){const t=e*o[0];for(let e=0;e<c;e++){const n=t+e*o[1],s=Math.floor(e*w),r=Math.floor(s-I/2);for(let s=0;s<h;s++){const a=n+s*o[2],u=Math.floor(s*k),y=Math.floor(u-S/2);for(let n=0;n<p;n++){let o=0;for(let a=0;a<I;a++){const u=a+r;if(u<0||u>=d)continue;const p=t+u*l[1],m=u*x;if(e===Math.min(c-1,i?Math.round(m):Math.floor(m)))for(let e=0;e<S;e++){const t=e+y;if(t<0||t>=f)continue;const r=p+t*l[2],a=t*v;s===Math.min(h-1,i?Math.round(a):Math.floor(a))&&(o+=g[r+n])}}m[a+n]=o}}}}return n.makeTensorInfo(r.shape,r.dtype,m)}},t_={kernelName:ds,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{dims:a}=s;uT(r,"reverse");const i=r.shape.length,o=ye(a,r.shape);if(0===i)return gT({inputs:{x:r},backend:n});const l=new qr(r.shape,r.dtype),u=n.bufferSync(r);for(let e=0;e<l.size;e++){const t=l.indexToLoc(e),n=t.slice();o.forEach((e=>n[e]=r.shape[e]-1-n[e])),l.set(u.get(...n),...t)}return n.makeTensorInfo(l.shape,l.dtype,l.values)}},n_={kernelName:nr,backendName:"cpu",kernelFunc:({inputs:e,attrs:t,backend:n})=>{const{image:s}=e,{radians:r,fillValue:a,center:i}=t,o=n,l=xe(s.dtype,oe(s.shape)),[u,c,h,p]=s.shape,[d,f]=Kd(i,c,h),m=Math.sin(r),g=Math.cos(r),y=o.data.get(s.dataId).values;for(let e=0;e<u;e++){const t=e*h*c*p;for(let e=0;e<c;e++){const n=e*(h*p);for(let s=0;s<h;s++){const r=s*p;for(let i=0;i<p;i++){const o=[u,e,s,i],b=o[2],x=o[1];let v=(b-d)*g-(x-f)*m,w=(b-d)*m+(x-f)*g;v=Math.round(v+d),w=Math.round(w+f);let k=a;"number"!=typeof a&&(k=3===i?255:a[i]),v>=0&&v<h&&w>=0&&w<c&&(k=y[t+w*(h*p)+v*p+i]),l[t+n+r+i]=k}}}}return{dataId:o.write(l,s.shape,s.dtype),shape:s.shape,dtype:s.dtype}}},s_=pT(fs,(e=>{const t=Math.floor(e);return e-t<.5?Math.floor(e):e-t>.5?Math.ceil(e):t%2==0?t:t+1})),r_={kernelName:fs,backendName:"cpu",kernelFunc:s_},a_=$T((e=>1/Math.sqrt(e))),i_=dT(ms,a_),o_={kernelName:ms,backendName:"cpu",kernelFunc:i_};function l_(e,t,n,s,r,a,i,o,l,u){const c=[s/r,r],h=e.values,p=t.values;if(0===s)return $i(n,t.dtype);const d=$i(c,t.dtype);"string"==typeof l||"number"==typeof l?d.values.fill(l):"boolean"==typeof l&&d.values.fill(+l);for(let e=0;e<a;e++){const a=[];let l=0;for(let t=0;t<i;t++){const n=h[e*i+t];a.push(n),l+=n*o[t]}if(l<0||l>=s/r)throw new Error(`Invalid indices: ${a} does not index into ${n}`);for(let n=0;n<r;n++)u?d.values[l*r+n]+=p[e*r+n]:d.values[l*r+n]=0===t.rank?p[0]:p[e*r+n]}return d}const u_={kernelName:gs,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{indices:r,updates:a}=t,{shape:i}=s,{sliceRank:o,numUpdates:l,sliceSize:u,strides:c,outputSize:h}=ho(0,r,i),p=l_(n.bufferSync(r),n.bufferSync(a),i,h,u,l,o,c,0,!0);return n.makeTensorInfo(i,p.dtype,p.values)}};function c_(e,t){let n=0,s=e.length,r=0;for(;n<s;)r=Math.floor((n+s)/2),e[r]<t?n=r+1:s=r;return s}function h_(e,t){let n=0,s=e.length,r=0;for(;n<s;)r=Math.floor((n+s)/2),e[r]<=t?n=r+1:s=r;return s}const p_={kernelName:ys,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{sortedSequence:r,values:a}=t,{side:i}=s,o=function(e,t,n,s,r,a){const i=ve("int32",n*r);for(let o=0;o<n;++o){const n=e.slice(o*s,(o+1)*s),l=o*r;for(let e=0;e<r;++e)i[l+e]="left"===a?c_(n,t[e+l]):h_(n,t[e+l])}return i}(n.data.get(r.dataId).values,n.data.get(a.dataId).values,r.shape[0],r.shape[1],a.shape[1],i);return n.makeTensorInfo(a.shape,"int32",o)}},d_={kernelName:bs,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{condition:s,t:r,e:a}=t;uT([s,r,a],"select");const i=s.shape.length,o=n.data.get(s.dataId).values,l=n.data.get(r.dataId).values,u=n.data.get(a.dataId).values,c=ia(r.dtype,a.dtype),h=Le(oe(r.shape),c);let p=0;const d=0===i||i>1||1===r.shape.length?1:oe(r.shape.slice(1));for(let e=0;e<o.length;e++)for(let t=0;t<d;t++)1===o[e]?h[p++]=l[e]:h[p++]=u[e];return n.makeTensorInfo(r.shape,c,h)}},f_=ef,m_=tf,g_=pT(xs,(e=>e>=0?m_*e:f_*(Math.exp(e)-1))),y_={kernelName:xs,backendName:"cpu",kernelFunc:g_},b_=pT(Is,(e=>e<0?-1:e>0?1:0)),x_={kernelName:Is,backendName:"cpu",kernelFunc:b_},v_=pT(ws,(e=>Math.sin(e))),w_={kernelName:ws,backendName:"cpu",kernelFunc:v_},k_=pT(ks,(e=>Math.sinh(e))),I_={kernelName:ks,backendName:"cpu",kernelFunc:k_},S_=Math.log(1.1920928955078125e-7)+2,N_=pT(Ns,(e=>{const t=e>-S_,n=e<S_,s=Math.exp(e);let r;return r=n?s:t?e:Math.log(1+s),r})),T_={kernelName:Ns,backendName:"cpu",kernelFunc:N_},C_={kernelName:$s,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{blockShape:a,paddings:i}=s;uT([r],"spaceToBatchND");const o=oe(a),l=[[0,0]];l.push(...i);for(let e=1+a.length;e<r.shape.length;++e)l.push([0,0]);const u=WA.kernelFunc({inputs:{x:r},backend:n,attrs:{paddings:l,constantValue:0}}),c=Xd(u.shape,a,o,!1),h=Yd(c.length,a.length,!1),p=Zd(u.shape,a,o,!1),d=jT({inputs:{x:u},backend:n,attrs:{shape:c}}),f=aC({inputs:{x:d},backend:n,attrs:{perm:h}}),m=jT({inputs:{x:f},backend:n,attrs:{shape:p}});return n.disposeIntermediateTensorInfo(u),n.disposeIntermediateTensorInfo(d),n.disposeIntermediateTensorInfo(f),m}};function $_(e,t,n,s,r,a,i){const o=t[0],l=a[0],u=new Array(l),c=new Array(o),h=t[1];if(0===l){if(0!==o)throw new Error(Nf(o));return[ve(n,0),[0,h],ve(r,0),u,c]}let p=!0,d=0;const f=new Array(l).fill(0);for(let t=0;t<o;++t){const n=e[t*h];if(n<0)throw new Error(Tf(t,n));if(n>=l)throw new Error(Cf(t,n,l));++f[n],p=p&&n>=d,d=n}let m=!0;for(let e=0;e<l;++e){const t=0===f[e];u[e]=t,m=m&&!t,f[e]=Math.max(f[e],1),e>0&&(f[e]+=f[e-1])}if(m&&p){const t=e,n=s;for(let e=0;e<o;++e)c[e]=e;return[t,[o,h],n,u,c]}{const t=f[l-1],a=ve(n,t*h),p=ve(r,t),d=new Array(l).fill(0);for(let t=0;t<o;++t){const n=e[t*h],r=d[n],i=(0===n?0:f[n-1])+r;d[n]++;for(let n=0;n<h;++n)a[i*h+n]=e[t*h+n];p[i]=s[t],c[t]=i}for(let e=0;e<l;++e)if(0===d[e]){const t=0===e?0:f[e-1];a[t*h+0]=e;for(let e=1;e<h;++e)a[t*h+e]=0;p[t]=i}return[a,[t,h],p,u,c]}}const E_={kernelName:_s,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{indices:s,values:r,denseShape:a,defaultValue:i}=t;if(1!==a.shape.length)throw new Error(`Dense shape must be a vector, saw:\n        ${a.shape}`);if(2!==s.shape.length)throw new Error(`Indices must be a matrix, saw:\n        ${s.shape}`);if(1!==r.shape.length)throw new Error(`Values must be a vector, saw:\n        ${r.shape}`);if(0!==i.shape.length)throw new Error(`Default value must be a scalar, saw:\n        ${i.shape}`);const o=n.data.get(s.dataId).values,l=n.data.get(r.dataId).values,u=n.data.get(a.dataId).values,c=n.data.get(i.dataId).values[0],[h,p,d,f,m]=$_(o,s.shape,s.dtype,l,r.dtype,u,c);return[n.makeTensorInfo(p,s.dtype,h),n.makeTensorInfo([p[0]],r.dtype,d),n.makeTensorInfo([f.length],"bool",new Uint8Array(f.map((e=>Number(e))))),n.makeTensorInfo([m.length],s.dtype,new Int32Array(m))]}};function A_(e,t,n,s,r){const a=oe(s),i=t[0],o=r.length,l=[];let u=1,c=-1;for(let e=0;e<o;++e){const t=r[e];if(-1===t){if(-1!==c)throw new Error($f(c,e));c=e,l.push(1)}else{if(t<0)throw new Error(Ef(e,t));u*=t,l.push(t)}}if(-1!==c){if(u<=0)throw new Error("reshape cannot infer the missing input size for an empty tensor unless all specified input sizes are non-zero");const e=Math.trunc(a/u);if(u*e!==a)throw new Error(_f(s,l));l[c]=e}if(oe(l)!==a)throw new Error(Rf(s,l));const h=s.length,p=[];if(h>0){p[h-1]=1;for(let e=h-2;e>=0;--e)p[e]=p[e+1]*s[e+1]}const d=[];if(o>0){d[o-1]=1;for(let e=o-2;e>=0;--e)d[e]=d[e+1]*l[e+1]}const f=ve(n,i*o);for(let t=0;t<i;++t){let n=0;for(let s=0;s<h;++s)n+=e[t*h+s]*p[s];for(let e=0;e<o;++e)f[t*o+e]=Math.trunc(n/d[e]),n%=d[e]}return[f,[i,o],l]}const __={kernelName:Rs,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{inputIndices:s,inputShape:r,newShape:a}=t;if(2!==s.shape.length)throw new Error(`Input indices should be a matrix but received shape\n        ${s.shape}`);if(1!==r.shape.length)throw new Error(`Input shape should be a vector but received shape\n        ${r.shape}`);if(1!==a.shape.length)throw new Error(`Target shape should be a vector but received shape ${a.shape}`);const i=Array.from(n.data.get(r.dataId).values),o=n.data.get(s.dataId).values,l=Array.from(n.data.get(a.dataId).values),[u,c,h]=A_(o,s.shape,s.dtype,i,l);return[n.makeTensorInfo(c,s.dtype,u),n.makeTensorInfo([h.length],a.dtype,new Int32Array(h))]}};function R_(e,t,n,s,r,a=!1,i=0){const o=s.length,l=[t[0],e.length/t[0]],u=l[1],c=o>0?r[o-1]+1:0;if(c<0)throw new Error("segment ids must be >= 0");const h=t.slice();h[0]=c;const p=ve(n,h.reduce(((e,t)=>e*t),1));if(0===o)return c>0&&p.fill(i),[p,h];if(c<=0)throw new Error("segment ids must be >= 0");let d=0,f=1,m=0,g=r[d];for(;;){let t=0;if(f<o){if(t=r[f],g===t){++f;continue}if(g>=t)throw new Error("segment ids are not increasing")}if(g<0||g>=c)throw new Error(Of(g,c));g>m&&p.fill(i,m*u,g*u);for(let t=d;t<f;++t){const n=s[t];if(n<0||n>=l[0])throw new Error(Mf(t,s[t],l[0]));for(let t=0;t<u;t++)p[g*u+t]+=e[n*u+t]}if(a)for(let e=0;e<u;e++)p[g*u+e]/=f-d;if(d=f,++f,m=g+1,g=t,f>o)break}return m<c&&p.fill(i,m*u,c*u),[p,h]}const F_={kernelName:Fs,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{data:s,indices:r,segmentIds:a}=t;if(s.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(1!==r.shape.length)throw new Error(`Indices should be a vector but received shape\n          ${r.shape}`);if(1!==a.shape.length)throw new Error(`Segment ids should be a vector but received shape\n          ${a.shape}`);if(r.shape[0]!==a.shape[0])throw new Error("segmentIds and indices should have same size.");const i=n.data.get(s.dataId).values,o=n.data.get(r.dataId).values,l=n.data.get(a.dataId).values,[u,c]=R_(i,s.shape,s.dtype,o,l,!0);return n.makeTensorInfo(c,s.dtype,u)}},D_={kernelName:Ds,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{data:s,indices:r,segmentIds:a}=t;if(s.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(1!==r.shape.length)throw new Error(`Indices should be a vector but received shape\n         ${r.shape}`);if(1!==a.shape.length)throw new Error(`Segment ids should be a vector but received shape\n         ${a.shape}`);if(r.shape[0]!==a.shape[0])throw new Error("segmentIds and indices should have same size.");const i=n.data.get(s.dataId).values,o=n.data.get(r.dataId).values,l=n.data.get(a.dataId).values,[u,c]=R_(i,s.shape,s.dtype,o,l);return n.makeTensorInfo(c,s.dtype,u)}},O_={kernelName:Os,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{sparseIndices:r,sparseValues:a,defaultValue:i}=t,{outputShape:o}=s,{sliceRank:l,numUpdates:u,sliceSize:c,strides:h,outputSize:p}=ho(0,r,o),d=!1,f=n.bufferSync(r);let m;switch(a.dtype){case"bool":m=l_(f,n.bufferSync(a),o,p,c,u,l,h,Boolean(n.data.get(i.dataId).values[0]),d);break;case"float32":case"int32":m=l_(f,n.bufferSync(a),o,p,c,u,l,h,n.data.get(i.dataId).values[0],d);break;case"string":m=l_(f,n.bufferSync(a),o,p,c,u,l,h,zr(n.data.get(i.dataId).values[0]),d);break;default:throw new Error(`Unsupported type ${a.dtype}`)}return n.makeTensorInfo(o,m.dtype,m.values)}},M_={kernelName:Es,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{numOrSizeSplits:a,axis:i}=s,o=ye(i,r.shape)[0],l=Sf(r,a,o),u=new Array(r.shape.length).fill(0),c=r.shape.slice();return l.map((e=>{const t=[...c];t[o]=e;const s=_C({inputs:{x:r},backend:n,attrs:{begin:u,size:t}});return u[o]+=e,s}))}},L_=$T((e=>Math.sqrt(e))),z_=pT(Ts,(e=>Math.sqrt(e))),P_={kernelName:Ts,backendName:"cpu",kernelFunc:z_},B_={kernelName:Ls,backendName:"cpu",kernelFunc:({inputs:e,backend:t})=>{const{x:n}=e,s=t;uT(n,"square");const r=s.data.get(n.dataId).values,a=new Float32Array(r.length);for(let e=0;e<r.length;++e){const t=r[e];a[e]=t*t}return{dataId:s.write(a,n.shape,n.dtype),shape:n.shape,dtype:n.dtype}}},W_=vT(((e,t)=>{const n=e-t;return n*n})),V_=BT(Ms,W_),U_={kernelName:Ms,backendName:"cpu",kernelFunc:V_},G_=pT(er,((e,t)=>{const n=t;return isNaN(e)?NaN:e>0?1:n.alpha})),H_={kernelName:er,backendName:"cpu",kernelFunc:G_};function j_(e,t,n,s){const r=$i(e,t.dtype);for(let e=0;e<r.size;e++){const a=r.indexToLoc(e),i=new Array(a.length);for(let e=0;e<i.length;e++)i[e]=a[e]*n[e]+s[e];r.set(t.get(...i),...a)}return r}const q_={kernelName:zs,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{begin:a,end:i,strides:o,beginMask:l,endMask:u,ellipsisMask:c,newAxisMask:h,shrinkAxisMask:p}=s;uT(r,"stridedSlice");const{finalShapeSparse:d,finalShape:f,isIdentity:m,sliceDim0:g,isSimpleSlice:y,begin:b,end:x,strides:v}=$o(r.shape,a,i,o,l,u,c,h,p);let w;if(m)w=jT({inputs:{x:r},backend:n,attrs:{shape:f}});else if(g||y){se(r.shape.length>=1,(()=>`Input must have rank at least 1, got: ${r.shape.length}`));const e=mo(b,x,v),t=_C({inputs:{x:r},backend:n,attrs:{begin:b,size:e}});w=jT({inputs:{x:t},backend:n,attrs:{shape:f}}),n.disposeIntermediateTensorInfo(t)}else{const e=j_(d,n.bufferSync(r),v,b);w=n.makeTensorInfo(f,e.dtype,e.values)}return w}};class K_{constructor(e,t,n,s,r,a){this.separator=Lr(e),this.nGramWidths=t,this.leftPad=Lr(n),this.rightPad=Lr(s),this.padWidth=r,this.preserveShort=a}getPadWidth(e){return Math.min(this.padWidth<0?e-1:this.padWidth,e-1)}getNumNGrams(e,t){const n=this.getPadWidth(t);return Math.max(0,e+2*n-t+1)}createNGrams(e,t,n,s,r,a){for(let i=0;i<r;++i){const o=this.getPadWidth(a),l=Math.max(0,o-i),u=Math.max(0,o-(r-(i+1))),c=a-(l+u),h=t+(l>0?0:i-o);let p=0;p+=l*this.leftPad.length;for(let t=0;t<c;++t)p+=e[h+t].length;p+=u*this.rightPad.length,p+=(l+u+c-1)*this.separator.length,n[s+i]=new Uint8Array(p);const d=n[s+i];let f=0;const m=e=>e.forEach((e=>d[f++]=e));for(let e=0;e<l;++e)m(this.leftPad),m(this.separator);for(let t=0;t<c-1;++t)m(e[h+t]),m(this.separator);if(c>0){m(e[h+c-1]);for(let e=0;e<u;++e)m(this.separator),m(this.rightPad)}else{for(let e=0;e<u-1;++e)m(this.rightPad),m(this.separator);m(this.rightPad)}}}compute(e,t){const n=e.length,s=t.length;if(s>0){let e=t[0];if(0!==e)throw new Error(`First split value must be 0, got ${e}`);for(let r=1;r<s;++r){let s=t[r]>=e;if(s=s&&t[r]<=n,!s)throw new Error(`Invalid split value ${t[r]}, must be in [${e}, ${n}]`);e=t[r]}if(e!==n)throw new Error(`Last split value must be data size. Expected ${n}, got ${e}`)}const r=s-1,a=ve("int32",s);if(0===n||0===s){const e=new Array(n);for(let e=0;e<=r;++e)a[e]=0;return[e,a]}a[0]=0;for(let e=1;e<=r;++e){const n=t[e]-t[e-1];let s=0;this.nGramWidths.forEach((e=>{s+=this.getNumNGrams(n,e)})),this.preserveShort&&n>0&&0===s&&(s=1),a[e]=a[e-1]+s}const i=new Array(a[r]);for(let n=0;n<r;++n){const s=t[n];let r=a[n];if(this.nGramWidths.forEach((a=>{const o=t[n+1]-t[n],l=this.getNumNGrams(o,a);this.createNGrams(e,s,i,r,l,a),r+=l})),this.preserveShort&&r===a[n]){const a=t[n+1]-t[n];if(0===a)continue;const o=a+2*this.padWidth,l=1;this.createNGrams(e,s,i,r,l,o)}}return[i,a]}}function X_(e,t,n,s,r,a,i,o){return new K_(n,s,r,a,i,o).compute(e,t)}const Y_={kernelName:Ps,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{separator:r,nGramWidths:a,leftPad:i,rightPad:o,padWidth:l,preserveShortSequences:u}=s,{data:c,dataSplits:h}=t,p=n.data.get(c.dataId).values,d=n.data.get(h.dataId).values,[f,m]=X_(p,d,r,a,i,o,l,u);return[n.makeTensorInfo([f.length],"string",f),n.makeTensorInfo(h.shape,"int32",m)]}};function Z_(e,t,n,s){if(!e.length)return;if(0===t.length){for(let t=0;t<e.length;++t)s.push(e.subarray(t,t+1));return}if(1===t.length){const r=t[0];let a=e.indexOf(r);for(;-1!==a;){const t=e.subarray(0,a);n&&0===t.length||s.push(t),a=(e=e.subarray(a+1)).indexOf(r)}return void(n&&0===e.length||s.push(e))}let r=0;for(let a=0;a<e.length+1;a++)if(a===e.length||-1!==t.indexOf(e[a])){const t=e.subarray(r,a);n&&0===t.length||s.push(t),r=a+1}}function J_(e,t,n){const s=e.length,r=[];let a=0,i=0;const o=new Array(s);for(let l=0;l<s;++l){const s=r.length;Z_(e[l],t,n,r);const u=r.length-s;o[l]=u,a+=u,i=Math.max(i,u)}const l=ve("int32",2*a),u=new Array(a),c=[s,i];let h=0;for(let e=0;e<s;++e)for(let t=0;t<o[e];++t)l[2*h]=e,l[2*h+1]=t,u[h]=r[h],++h;return[l,u,c]}const Q_={kernelName:Bs,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{skipEmpty:r}=s,{input:a,delimiter:i}=t;if("string"!==a.dtype)throw new Error("Input must be of datatype string");if(1!==a.shape.length)throw new Error(`Input must be a vector, got shape: ${a.shape}`);if(0!==i.shape.length)throw new Error(`Delimiter must be a scalar, got shape: ${i.shape}`);const o=n.data.get(a.dataId).values,l=n.data.get(i.dataId).values[0],[u,c,h]=J_(o,l,r),p=c.length;return[n.makeTensorInfo([p,2],"int32",u),n.makeTensorInfo([p],"string",c),n.makeTensorInfo([2],"int32",new Int32Array(h))]}};function eR(e,t){const n=ve("int32",e.length);for(let s=0;s<e.length;++s)n[s]=Rr(e[s]).modulo(t).getLowBitsUnsigned();return n}const tR={kernelName:Ws,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{numBuckets:r}=s,{input:a}=t;if("string"!==a.dtype)throw new Error("Input must be of datatype string");if(r<=0)throw new Error("Number of buckets must be at least 1");const i=eR(n.data.get(a.dataId).values,r);return n.makeTensorInfo(a.shape,"int32",i)}},nR=pT(Us,(e=>Math.tan(e))),sR={kernelName:Us,backendName:"cpu",kernelFunc:nR},rR=pT(Gs,(e=>Math.tanh(e)));function aR(e,t){const n=new Array(e.rank);for(let s=0;s<n.length;s++)n[s]=e.shape[s]*t[s];const s=$i(n,e.dtype);for(let t=0;t<s.values.length;++t){const n=s.indexToLoc(t),r=new Array(e.rank);for(let t=0;t<r.length;t++)r[t]=n[t]%e.shape[t];const a=e.locToIndex(r);s.values[t]=e.values[a]}return s}const iR={kernelName:Hs,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{reps:a}=s;uT(r,"tile");const i=aR(n.bufferSync(r),a);return n.makeTensorInfo(i.shape,i.dtype,i.values)}},oR=(e,t)=>{const n=t.value-e.value;return 0===n?e.index-t.index:n};function lR(e,t,n=0,s=e.length-1){for(;s>n;){if(s-n>600){const r=s-n+1,a=t-n+1,i=Math.log(r),o=.5*Math.exp(2*i/3),l=.5*Math.sqrt(i*o*(r-o)/r)*Math.sign(a-r/2);lR(e,t,Math.max(n,Math.floor(t-a*o/r+l)),Math.min(s,Math.floor(t+(r-a)*o/r+l)))}const r=e[t];let a=n,i=s;for(Q(e,n,t),oR(e[s],r)>0&&Q(e,n,s);a<i;){for(Q(e,a,i),a++,i--;oR(e[a],r)<0;)a+=1;for(;oR(e[i],r)>0;)i-=1}0===oR(e[n],r)?Q(e,n,i):(i+=1,Q(e,i,s)),i<=t&&(n=i+1),t<=i&&(s=i-1)}}function uR(e,t,n,s,r){const a=t[t.length-1],[i,o]=[e.length/a,a],l=xe(n,i*s),u=xe("int32",i*s);for(let t=0;t<i;t++){const n=t*o,a=e.subarray(n,n+o);let i=new Array(a.length);a.forEach(((e,t)=>i[t]={value:e,index:t})),s<i.length&&(lR(i,s),i=i.slice(0,s)),r&&i.sort(oR);const c=t*s,h=l.subarray(c,c+s),p=u.subarray(c,c+s);for(let e=0;e<s;e++)h[e]=i[e].value,p[e]=i[e].index}const c=t.slice();return c[c.length-1]=s,[$i(c,n,l),$i(c,"int32",u)]}const cR={kernelName:js,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{k:a,sorted:i}=s;uT(r,"topk");const o=n.data.get(r.dataId).values,[l,u]=uR(o,r.shape,r.dtype,a,i);return[n.makeTensorInfo(l.shape,l.dtype,l.values),n.makeTensorInfo(u.shape,u.dtype,u.values)]}},hR={kernelName:qs,backendName:"cpu",kernelFunc:function(e){const{inputs:t,attrs:n,backend:s}=e,{image:r,transforms:a}=t,{interpolation:i,fillMode:o,fillValue:l,outputShape:u}=n,[c,h,p,d]=r.shape,[f,m]=null!=u?u:[h,p],g=[c,f,m,d],y=Fe(r.shape),b=y[0],x=y[1],v=y[2],w=xe(r.dtype,oe(g));w.fill(l);const k=s.data.get(r.dataId).values,I=s.data.get(a.dataId).values;for(let e=0;e<c;++e){const t=1===a.shape[0]?I:I.subarray(8*e,8*e+8);for(let n=0;n<f;++n)for(let s=0;s<m;++s)for(let r=0;r<d;++r){let a;const u=t[6]*s+t[7]*n+1;if(0===u)continue;const c=(t[0]*s+t[1]*n+t[2])/u,d=(t[3]*s+t[4]*n+t[5])/u,f=pR(c,p,o),m=pR(d,h,o);switch(i){case"nearest":a=fR(k,h,p,b,x,v,e,m,f,r,l);break;case"bilinear":a=mR(k,h,p,b,x,v,e,m,f,r,l);break;default:throw new Error(`Error in Transform: Expect 'nearest' or 'bilinear', but got ${i}`)}w[e*b+n*x+s*v+r]=a}return s.makeTensorInfo(g,r.dtype,w)}return{dataId:s.write(w,g,r.dtype),shape:r.shape,dtype:r.dtype}}};function pR(e,t,n){switch(n){case"reflect":return function(e,t){let n=e;if(n<0)if(t<=1)n=0;else{const e=2*t;n<e&&(n=e*Math.trunc(-n/e)+n),n=n<-t?n+e:-n-1}else if(n>t-1)if(t<=1)n=0;else{const e=2*t;n-=e*Math.trunc(n/e),n>=t&&(n=e-n-1)}return Z(0,n,t-1)}(e,t);case"wrap":return function(e,t){let n=e;if(n<0)if(t<=1)n=0;else{const e=t-1;n+=t*(Math.trunc(-n/e)+1)}else if(n>t-1)if(t<=1)n=0;else{const e=t-1;n-=t*Math.trunc(n/e)}return Z(0,n,t-1)}(e,t);case"nearest":return function(e,t){return Z(0,e,t-1)}(e,t);default:return function(e,t){return e}(e)}}function dR(e,t,n,s,r,a,i,o,l,u,c){return 0<=o&&o<t&&0<=l&&l<n?e[i*s+o*r+l*a+u]:c}function fR(e,t,n,s,r,a,i,o,l,u,c){return dR(e,t,n,s,r,a,i,Math.round(o),Math.round(l),u,c)}function mR(e,t,n,s,r,a,i,o,l,u,c){const h=Math.floor(o),p=Math.floor(l),d=h+1,f=p+1;return(d-o)*((f-l)*dR(e,t,n,s,r,a,i,h,p,u,c)+(l-p)*dR(e,t,n,s,r,a,i,h,f,u,c))+(o-h)*((f-l)*dR(e,t,n,s,r,a,i,d,p,u,c)+(l-p)*dR(e,t,n,s,r,a,i,d,f,u,c))}function gR(e,t,n,s){const r=ye(t,n)[0],a=[1,n[0],1];for(let e=0;e<r;e++)a[0]*=n[e];a[1]=n[r];for(let e=r+1;e<n.length;e++)a[2]*=n[e];const i={},o=new Int32Array(n[r]),l=new qr(a,s,e),u=[],c=1===a[0]&&1===a[2];for(let t=0;t<n[r];t++){let n;if(c)n=e[t].toString();else{const e=[];for(let n=0;n<a[0];n++)for(let s=0;s<a[2];s++)e.push(l.get(n,t,s));n=e.join(",")}if(void 0!==i[n])o[t]=i[n];else{const e=Object.keys(i).length;i[n]=e,o[t]=e,u.push(t)}}const h=a.slice();h[1]=Object.keys(i).length;const p=new qr(h,s);u.forEach(((e,t)=>{for(let n=0;n<a[0];n++)for(let s=0;s<a[2];s++)p.set(l.get(n,e,s),n,t,s)}));const d=n.slice();return d[r]=h[1],{outputValues:p.values,outputShape:d,indices:o}}const yR={kernelName:Xs,backendName:"cpu",kernelFunc:function(e){const{inputs:t,attrs:n,backend:s}=e,{axis:r}=n,{x:a}=t;uT(a,"unique");const i=s.data.get(a.dataId).values,{outputValues:o,outputShape:l,indices:u}=gR(i,r,a.shape,a.dtype);return[s.makeTensorInfo(l,a.dtype,o),s.makeTensorInfo([u.length],"int32",u)]}},bR={kernelName:Ys,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{value:r}=t;let{axis:a}=s;a<0&&(a+=r.shape.length);const i=r.shape.length,o=r.shape[a],l=new Array(i-1);let u=0;for(let e=0;e<i;e++)e!==a&&(l[u++]=r.shape[e]);const c=new Array(i).fill(0),h=r.shape.slice();h[a]=1;const p=new Array(o);for(let e=0;e<p.length;e++){c[a]=e;const t=_C({inputs:{x:r},backend:n,attrs:{begin:c,size:h}});p[e]=jT({inputs:{x:t},backend:n,attrs:{shape:l}}),n.disposeIntermediateTensorInfo(t)}return p}},xR={kernelName:Zs,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:r,segmentIds:a}=t,{numSegments:i}=s;uT(r,"unsortedSegmentSum");const o=[],l=[],u=r.shape.length-a.shape.length;let c=a;for(let e=0;e<u;++e){const t=W$({inputs:{input:c},backend:n,attrs:{dim:e+1}});c=t,l.push(t)}for(let e=0;e<i;++e){const t=Fr(e,"int32"),s=n.makeTensorInfo([],"int32",t),a=$$({inputs:{a:s,b:c},backend:n}),i=zT({inputs:{x:a},backend:n,attrs:{dtype:"float32"}}),u=w$({inputs:{a:i,b:r},backend:n}),h=I$({inputs:{x:u},backend:n,attrs:{axis:0,keepDims:!1}});o.push(h),l.push(s),l.push(a),l.push(i),l.push(u),l.push(h)}const h=PA({inputs:o,backend:n,attrs:{axis:0}});return l.forEach((e=>n.disposeIntermediateTensorInfo(e))),h}},vR=[YT,JT,eC,nC,HT,sC,oC,lC,uC,cC,pC,fC,gC,xC,wC,NC,TC,CC,$C,XT,EC,FC,MC,LC,PT,BC,VC,DT,UC,KC,YC,ZC,JC,QC,e$,t$,s$,a$,i$,o$,l$,u$,c$,p$,d$,f$,m$,g$,y$,b$,N$,mT,T$,E$,L$,B$,V$,H$,nE,rE,aE,lE,hE,pE,dE,mE,yE,vE,IE,yT,SE,jC,TE,$E,AE,xT,FE,ME,zE,WE,UE,jE,KE,ZE,JE,QE,nA,aA,iA,oA,lA,uA,cA,hA,pA,mA,gA,xA,IA,k$,NA,CA,EA,_A,DA,OA,zA,BA,WA,GA,IT,jA,KA,LT,K$,YA,NT,CT,qT,ZA,JA,QA,e_,t_,n_,r_,o_,u_,p_,d_,y_,_T,x_,w_,I_,RC,kA,T_,C_,E_,__,F_,D_,O_,M_,P_,B_,U_,H_,q_,Y_,Q_,tR,J$,S$,sR,{kernelName:Gs,backendName:"cpu",kernelFunc:rR},iR,cR,hR,iC,yR,bR,xR,LA];for(const e of vR)dr(e);const wR={},kR={alpha:!1,antialias:!1,premultipliedAlpha:!1,preserveDrawingBuffer:!1,depth:!1,stencil:!1,failIfMajorPerformanceCaveat:!0};function IR(e,t){if(!(e in wR)||null!=t){const n=function(e,t){if(1!==e&&2!==e)throw new Error("Cannot get WebGL rendering context, WebGL is disabled.");const n=null==t?function(e){if("undefined"!=typeof OffscreenCanvas&&2===e)return new OffscreenCanvas(300,150);if("undefined"!=typeof document)return document.createElement("canvas");throw new Error("Cannot create a canvas in this context")}(e):t;return n.addEventListener("webglcontextlost",(t=>{t.preventDefault(),delete wR[e]}),!1),1===e?n.getContext("webgl",kR)||n.getContext("experimental-webgl",kR):n.getContext("webgl2",kR)}(e,t);if(null===n)return console.log("Could not get context for WebGL version",e),null;wR[e]=n}const n=wR[e];return null==n||n.isContextLost()?(delete wR[e],IR(e)):(n.disable(n.DEPTH_TEST),n.disable(n.STENCIL_TEST),n.disable(n.BLEND),n.disable(n.DITHER),n.disable(n.POLYGON_OFFSET_FILL),n.disable(n.SAMPLE_COVERAGE),n.enable(n.SCISSOR_TEST),n.enable(n.CULL_FACE),n.cullFace(n.BACK),wR[e])}var SR,NR,TR;function CR(e,t){return[t,e]}function $R(e){const t=oe(e);return pe(Math.ceil(t/4))}function ER(e,t){return[Math.max(1,Math.ceil(t/2)),Math.max(1,Math.ceil(e/2))]}function AR(e,t){const n=e;let s,r,a,i,o,l,u,c,h,p;return 2===He().getNumber("WEBGL_VERSION")?(s=n.R32F,r=n.R16F,a=n.RGBA16F,i=n.RGBA32F,o=n.RED,u=4,c=1,h=n.HALF_FLOAT,p=n.FLOAT,l=n.RGBA8):(s=e.RGBA,r=e.RGBA,a=e.RGBA,i=n.RGBA,o=e.RGBA,u=4,c=4,h=null!=t?t.HALF_FLOAT_OES:null,p=e.FLOAT,l=e.RGBA),{internalFormatFloat:s,internalFormatHalfFloat:r,internalFormatPackedHalfFloat:a,internalFormatPackedFloat:i,textureFormatFloat:o,downloadTextureFormat:l,downloadUnpackNumChannels:u,defaultNumChannels:c,textureTypeHalfFloat:h,textureTypeFloat:p}}function _R(e,t){const n=t();return He().getBool("DEBUG")&&function(e){const t=e.getError();if(t!==e.NO_ERROR)throw new Error("WebGL Error: "+function(e,t){switch(t){case e.NO_ERROR:return"NO_ERROR";case e.INVALID_ENUM:return"INVALID_ENUM";case e.INVALID_VALUE:return"INVALID_VALUE";case e.INVALID_OPERATION:return"INVALID_OPERATION";case e.INVALID_FRAMEBUFFER_OPERATION:return"INVALID_FRAMEBUFFER_OPERATION";case e.OUT_OF_MEMORY:return"OUT_OF_MEMORY";case e.CONTEXT_LOST_WEBGL:return"CONTEXT_LOST_WEBGL";default:return`Unknown error code ${t}`}}(e,t))}(e),n}function RR(e){return!!(He().getBool("WEBGL_RENDER_FLOAT32_ENABLED")||0===e||5.96e-8<Math.abs(e)&&Math.abs(e)<65504)}function FR(e,t){return VR(e,(()=>e.getExtension(t)),'Extension "'+t+'" not supported on this browser.')}!function(e){e[e.DENSE=0]="DENSE",e[e.SHARED_BATCH=1]="SHARED_BATCH"}(SR||(SR={})),function(e){e[e.RENDER=0]="RENDER",e[e.UPLOAD=1]="UPLOAD",e[e.PIXELS=2]="PIXELS",e[e.DOWNLOAD=3]="DOWNLOAD"}(NR||(NR={})),function(e){e[e.UNPACKED_FLOAT16=0]="UNPACKED_FLOAT16",e[e.UNPACKED_FLOAT32=1]="UNPACKED_FLOAT32",e[e.PACKED_4X1_UNSIGNED_BYTE=2]="PACKED_4X1_UNSIGNED_BYTE",e[e.PACKED_2X2_FLOAT32=3]="PACKED_2X2_FLOAT32",e[e.PACKED_2X2_FLOAT16=4]="PACKED_2X2_FLOAT16"}(TR||(TR={}));const DR=/ERROR: [0-9]+:([0-9]+):/g;function OR(e,t){const n=DR.exec(t);if(null==n)return console.log(`Couldn't parse line number in error: ${t}`),void console.log(e);const s=+n[1],r=e.split("\n"),a=r.length.toString().length+2,i=r.map(((e,t)=>fe((t+1).toString(),a)+e));let o=0;for(let e=0;e<i.length;e++)o=Math.max(i[e].length,o);const l=i.slice(0,s-1),u=i.slice(s-1,s),c=i.slice(s);console.log(l.join("\n")),console.log(t.split("\n")[0]),console.log(`%c ${fe(u[0],o)}`,"border:1px solid red; background-color:#e3d2d2; color:#a61717"),console.log(c.join("\n"))}function MR(e,t){if(_R(e,(()=>e.validateProgram(t))),!1===e.getProgramParameter(t,e.VALIDATE_STATUS))throw console.log(e.getProgramInfoLog(t)),new Error("Shader program validation failed.")}function LR(e,t,n,s,r,a,i){const o=e.getAttribLocation(t,n);return-1!==o&&(_R(e,(()=>e.bindBuffer(e.ARRAY_BUFFER,s))),_R(e,(()=>e.vertexAttribPointer(o,r,e.FLOAT,!1,a,i))),_R(e,(()=>e.enableVertexAttribArray(o))),!0)}function zR(e,t,n,s){_R(e,(()=>function(e,t,n){(function(e,t){const n=e.MAX_COMBINED_TEXTURE_IMAGE_UNITS-1,s=t+e.TEXTURE0;if(s<e.TEXTURE0||s>n)throw new Error(`textureUnit must be in [gl.TEXTURE0, gl.TEXTURE${n}].`)})(e,n),_R(e,(()=>e.activeTexture(e.TEXTURE0+n))),_R(e,(()=>e.bindTexture(e.TEXTURE_2D,t)))}(e,t,s))),_R(e,(()=>e.uniform1i(n,s)))}function PR(e,t,n){_R(e,(()=>e.bindFramebuffer(e.FRAMEBUFFER,n))),_R(e,(()=>e.framebufferTexture2D(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0,e.TEXTURE_2D,t,0)))}function BR(e,t){_R(e,(()=>e.bindFramebuffer(e.FRAMEBUFFER,t))),_R(e,(()=>e.framebufferTexture2D(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0,e.TEXTURE_2D,null,0)))}function WR(e){const t=e.checkFramebufferStatus(e.FRAMEBUFFER);if(t!==e.FRAMEBUFFER_COMPLETE)throw new Error("Error binding framebuffer: "+function(e,t){switch(t){case e.FRAMEBUFFER_INCOMPLETE_ATTACHMENT:return"FRAMEBUFFER_INCOMPLETE_ATTACHMENT";case e.FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT:return"FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT";case e.FRAMEBUFFER_INCOMPLETE_DIMENSIONS:return"FRAMEBUFFER_INCOMPLETE_DIMENSIONS";case e.FRAMEBUFFER_UNSUPPORTED:return"FRAMEBUFFER_UNSUPPORTED";default:return`unknown error ${t}`}}(e,t))}function VR(e,t,n){const s=_R(e,(()=>t()));if(null==s)throw new Error(n);return s}function UR(e,t=2){return oe(e.slice(0,e.length-t))}function GR(e){if(0===e.length)throw Error("Cannot get rows and columns of an empty shape array.");return[e.length>1?e[e.length-2]:1,e[e.length-1]]}function HR(e){let t=[1,1,1];return 0===e.length||1===e.length&&1===e[0]||(t=[UR(e),...GR(e)]),t}function jR(e){return e%2==0}function qR(e,t){if(ue(e=e.slice(-2),t=t.slice(-2)))return!0;if(!e.length||!t.length)return!0;if(0===e[0]||0===e[1]||0===t[0]||0===t[1])return!0;if(e.length!==t.length){const n=e.slice(-1)[0],s=t.slice(-1)[0];if(n===s)return!0;if(jR(n)&&jR(s)&&(1===e[0]||1===t[0]))return!0}return e[1]===t[1]&&jR(e[0])&&jR(t[0])}let KR,XR;function YR(e,t){return null!=e.getExtension(t)}function ZR(e){try{if(null!=IR(e))return!0}catch(e){return console.log("Error when getting WebGL context: ",e),!1}return!1}function JR(e){const t=AR(e),n=e.createTexture();e.bindTexture(e.TEXTURE_2D,n),e.texImage2D(e.TEXTURE_2D,0,t.internalFormatFloat,1,1,0,t.textureFormatFloat,t.textureTypeFloat,null);const s=e.createFramebuffer();e.bindFramebuffer(e.FRAMEBUFFER,s),e.framebufferTexture2D(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0,e.TEXTURE_2D,n,0);const r=e.checkFramebufferStatus(e.FRAMEBUFFER)===e.FRAMEBUFFER_COMPLETE;return e.bindTexture(e.TEXTURE_2D,null),e.bindFramebuffer(e.FRAMEBUFFER,null),e.deleteTexture(n),e.deleteFramebuffer(s),r}function QR(e,t){Array.isArray(e)||(e=[e]),e.forEach((e=>{null!=e&&se("complex64"!==e.dtype,(()=>`${t} does not support complex64 tensors in the WebGL backend.`))}))}const eF=He();function tF(){let e,t,n,s,r,a,i,o,l,u;return 2===He().getNumber("WEBGL_VERSION")?(e="#version 300 es",t="in",n="out",s="in",r="texture",a="outputColor",i="out vec4 outputColor;",o="\n      bool isnan_custom(float val) {\n        uint floatToUint = floatBitsToUint(val);\n        return (floatToUint & 0x7fffffffu) > 0x7f800000u;\n      }\n\n      bvec4 isnan_custom(vec4 val) {\n        return bvec4(isnan_custom(val.x),\n          isnan_custom(val.y), isnan_custom(val.z), isnan_custom(val.w));\n      }\n\n      #define isnan(value) isnan_custom(value)\n    ",l="",u="\n      #define round(value) newRound(value)\n      int newRound(float value) {\n        return int(floor(value + 0.5));\n      }\n\n      ivec4 newRound(vec4 value) {\n        return ivec4(floor(value + vec4(0.5)));\n      }\n    "):(e="",t="attribute",n="varying",s="varying",r="texture2D",a="gl_FragColor",i="",o="\n      #define isnan(value) isnan_custom(value)\n      bool isnan_custom(float val) {\n        return (val > 0. || val < 1. || val == 0.) ? false : true;\n      }\n      bvec4 isnan_custom(vec4 val) {\n        return bvec4(isnan(val.x), isnan(val.y), isnan(val.z), isnan(val.w));\n      }\n    ",l="\n      uniform float INFINITY;\n\n      bool isinf(float val) {\n        return abs(val) == INFINITY;\n      }\n      bvec4 isinf(vec4 val) {\n        return equal(abs(val), vec4(INFINITY));\n      }\n    ",u="\n      int round(float value) {\n        return int(floor(value + 0.5));\n      }\n\n      ivec4 round(vec4 value) {\n        return ivec4(floor(value + vec4(0.5)));\n      }\n    "),{version:e,attribute:t,varyingVs:n,varyingFs:s,texture2D:r,output:a,defineOutput:i,defineSpecialNaN:o,defineSpecialInf:l,defineRound:u}}function nF(e,t,n="index"){const s=Fe(t);return s.map(((t,r)=>`int ${e[r]} = ${n} / ${t}; ${r===s.length-1?`int ${e[r+1]} = ${n} - ${e[r]} * ${t}`:`index -= ${e[r]} * ${t}`};`)).join("")}function sF(e,t,n="index"){const s=Fe(t);return s.map(((t,r)=>`int ${e[r]} = ${n} / outShapeStrides[${r}]; ${r===s.length-1?`int ${e[r+1]} = ${n} - ${e[r]} * outShapeStrides[${r}]`:`index -= ${e[r]} * outShapeStrides[${r}]`};`)).join("")}function rF(e){const t=Fe(e).map((e=>e.toString()));return`\n  int getFlatIndex(ivec3 coords) {\n    return coords.x * ${t[0]} + coords.y * ${t[1]} + coords.z;\n  }\n`}eF.registerFlag("HAS_WEBGL",(()=>eF.getNumber("WEBGL_VERSION")>0)),eF.registerFlag("WEBGL_VERSION",(()=>ZR(2)?2:ZR(1)?1:0)),eF.registerFlag("WEBGL_CHECK_NUMERICAL_PROBLEMS",(()=>!1)),eF.registerFlag("WEBGL_BUFFER_SUPPORTED",(()=>2===eF.get("WEBGL_VERSION"))),eF.registerFlag("WEBGL_CPU_FORWARD",(()=>!0)),eF.registerFlag("WEBGL_FORCE_F16_TEXTURES",(()=>!1)),eF.registerFlag("WEBGL_PACK",(()=>eF.getBool("HAS_WEBGL"))),eF.registerFlag("WEBGL_PACK_NORMALIZATION",(()=>eF.getBool("WEBGL_PACK"))),eF.registerFlag("WEBGL_PACK_CLIP",(()=>eF.getBool("WEBGL_PACK"))),eF.registerFlag("WEBGL_PACK_DEPTHWISECONV",(()=>eF.getBool("WEBGL_PACK"))),eF.registerFlag("WEBGL_PACK_BINARY_OPERATIONS",(()=>eF.getBool("WEBGL_PACK"))),eF.registerFlag("WEBGL_PACK_UNARY_OPERATIONS",(()=>eF.getBool("WEBGL_PACK"))),eF.registerFlag("WEBGL_PACK_ARRAY_OPERATIONS",(()=>eF.getBool("WEBGL_PACK"))),eF.registerFlag("WEBGL_PACK_IMAGE_OPERATIONS",(()=>eF.getBool("WEBGL_PACK"))),eF.registerFlag("WEBGL_PACK_REDUCE",(()=>eF.getBool("WEBGL_PACK"))),eF.registerFlag("WEBGL_LAZILY_UNPACK",(()=>eF.getBool("WEBGL_PACK"))),eF.registerFlag("WEBGL_CONV_IM2COL",(()=>eF.getBool("WEBGL_PACK"))),eF.registerFlag("WEBGL_MAX_TEXTURE_SIZE",(()=>function(e){if(null==KR){const t=IR(e);KR=t.getParameter(t.MAX_TEXTURE_SIZE)}return KR}(eF.getNumber("WEBGL_VERSION")))),eF.registerFlag("WEBGL_MAX_TEXTURES_IN_SHADER",(()=>function(e){if(null==XR){const t=IR(e);XR=t.getParameter(t.MAX_TEXTURE_IMAGE_UNITS)}return Math.min(16,XR)}(eF.getNumber("WEBGL_VERSION")))),eF.registerFlag("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION",(()=>{const e=eF.getNumber("WEBGL_VERSION");return 0===e?0:function(e){if(0===e)return 0;let t;const n=IR(e);return t=YR(n,"EXT_disjoint_timer_query_webgl2")&&2===e?2:YR(n,"EXT_disjoint_timer_query")?1:0,t}(e)})),eF.registerFlag("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE",(()=>eF.getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")>0&&!wa())),eF.registerFlag("WEBGL_RENDER_FLOAT32_CAPABLE",(()=>function(e){if(0===e)return!1;const t=IR(e);if(1===e){if(!YR(t,"OES_texture_float"))return!1}else if(!YR(t,"EXT_color_buffer_float"))return!1;return JR(t)}(eF.getNumber("WEBGL_VERSION")))),eF.registerFlag("WEBGL_RENDER_FLOAT32_ENABLED",(()=>!eF.getBool("WEBGL_FORCE_F16_TEXTURES")&&eF.getBool("WEBGL_RENDER_FLOAT32_CAPABLE"))),eF.registerFlag("WEBGL_DOWNLOAD_FLOAT_ENABLED",(()=>function(e){if(0===e)return!1;const t=IR(e);if(1!==e){if(YR(t,"EXT_color_buffer_float"))return JR(t);const e="EXT_color_buffer_half_float";if(YR(t,e)){const n=t.getExtension(e);return function(e,t){const n=AR(e,t),s=e.createTexture();e.bindTexture(e.TEXTURE_2D,s),e.texImage2D(e.TEXTURE_2D,0,n.internalFormatHalfFloat,1,1,0,n.textureFormatFloat,n.textureTypeHalfFloat,null);const r=e.createFramebuffer();e.bindFramebuffer(e.FRAMEBUFFER,r),e.framebufferTexture2D(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0,e.TEXTURE_2D,s,0);const a=e.checkFramebufferStatus(e.FRAMEBUFFER)===e.FRAMEBUFFER_COMPLETE;return e.bindTexture(e.TEXTURE_2D,null),e.bindFramebuffer(e.FRAMEBUFFER,null),e.deleteTexture(s),e.deleteFramebuffer(r),a}(t,n)}return!1}return!!YR(t,"OES_texture_float")&&!!YR(t,"WEBGL_color_buffer_float")&&JR(t)}(eF.getNumber("WEBGL_VERSION")))),eF.registerFlag("WEBGL_FENCE_API_ENABLED",(()=>{return 2===(e=eF.getNumber("WEBGL_VERSION"))&&null!=IR(e).fenceSync;var e})),eF.registerFlag("WEBGL_SIZE_UPLOAD_UNIFORM",(()=>eF.getBool("WEBGL_RENDER_FLOAT32_ENABLED")?4:0)),eF.registerFlag("WEBGL_DELETE_TEXTURE_THRESHOLD",(()=>-1),(e=>{if(e<0&&-1!==e)throw new Error(`WEBGL_DELETE_TEXTURE_THRESHOLD must be -1 (indicating never delete) or at least 0, but got ${e}.`)})),eF.registerFlag("WEBGL_FLUSH_THRESHOLD",(()=>wa()?1:-1),(e=>{if(e<0&&-1!==e)throw new Error(`WEBGL_FLUSH_THRESHOLD must be -1 (indicating never manual flush) or at least 0, but got ${e}.`)})),eF.registerFlag("CPU_HANDOFF_SIZE_THRESHOLD",(()=>128)),eF.registerFlag("WEBGL_USE_SHAPES_UNIFORMS",(()=>!1)),eF.registerFlag("TOPK_LAST_DIM_CPU_HANDOFF_SIZE_THRESHOLD",(()=>1e5)),eF.registerFlag("TOPK_K_CPU_HANDOFF_THRESHOLD",(()=>128));const aF="\n  const float FLOAT_MAX = 1.70141184e38;\n  const float FLOAT_MIN = 1.17549435e-38;\n\n  lowp vec4 encode_float(highp float v) {\n    if (isnan(v)) {\n      return vec4(255, 255, 255, 255);\n    }\n\n    highp float av = abs(v);\n\n    if(av < FLOAT_MIN) {\n      return vec4(0.0, 0.0, 0.0, 0.0);\n    } else if(v > FLOAT_MAX) {\n      return vec4(0.0, 0.0, 128.0, 127.0) / 255.0;\n    } else if(v < -FLOAT_MAX) {\n      return vec4(0.0, 0.0,  128.0, 255.0) / 255.0;\n    }\n\n    highp vec4 c = vec4(0,0,0,0);\n\n    highp float e = floor(log2(av));\n    highp float m = exp2(fract(log2(av))) - 1.0;\n\n    c[2] = floor(128.0 * m);\n    m -= c[2] / 128.0;\n    c[1] = floor(32768.0 * m);\n    m -= c[1] / 32768.0;\n    c[0] = floor(8388608.0 * m);\n\n    highp float ebias = e + 127.0;\n    c[3] = floor(ebias / 2.0);\n    ebias -= c[3] * 2.0;\n    c[2] += floor(ebias) * 128.0;\n\n    c[3] += 128.0 * step(0.0, -v);\n\n    return c / 255.0;\n  }\n",{getBroadcastDims:iF}=y;function oF(e,t,n){const s=[];if(e.forEach((e=>{const t=oe(e.shapeInfo.logicalShape);if(e.shapeInfo.isUniform?s.push(`uniform float ${e.name}${t>1?`[${t}]`:""};`):(s.push(`uniform sampler2D ${e.name};`),s.push(`uniform int offset${e.name};`)),n.enableShapeUniforms){const{uniformShape:t}=yF(n.packedInputs,e.shapeInfo.logicalShape,e.shapeInfo.texShape);switch(t.length){case 1:s.push(`uniform int ${e.name}Shape;`);break;case 2:s.push(`uniform ivec2 ${e.name}Shape;`);break;case 3:s.push(`uniform ivec3 ${e.name}Shape;`);break;case 4:s.push(`uniform ivec4 ${e.name}Shape;`)}s.push(`uniform ivec2 ${e.name}TexShape;`)}})),n.enableShapeUniforms){switch(t.logicalShape.length){case 1:s.push("uniform int outShape;");break;case 2:s.push("uniform ivec2 outShape;"),s.push("uniform int outShapeStrides;");break;case 3:s.push("uniform ivec3 outShape;"),s.push("uniform ivec2 outShapeStrides;");break;case 4:s.push("uniform ivec4 outShape;"),s.push("uniform ivec3 outShapeStrides;")}s.push("uniform ivec2 outTexShape;")}n.customUniforms&&n.customUniforms.forEach((e=>{s.push(`uniform ${e.type} ${e.name}${e.arrayIndex?`[${e.arrayIndex}]`:""};`)}));const r=s.join("\n"),a=e.map((e=>function(e,t,n=!1,s){let r="";r+=n?uF(e,s):lF(e,s);const a=e.shapeInfo.logicalShape,i=t.logicalShape;return a.length<=i.length&&(r+=n?function(e,t){const n=e.name,s=n.charAt(0).toUpperCase()+n.slice(1),r="get"+s+"AtOutCoords",a=e.shapeInfo.logicalShape.length,i=t.logicalShape.length,o=iF(e.shapeInfo.logicalShape,t.logicalShape),l=gF(i),u=i-a;let c;const h=["x","y","z","w","u","v"];c=0===a?"":i<2&&o.length>=1?"coords = 0;":o.map((e=>`coords.${h[e+u]} = 0;`)).join("\n");let p="";p=i<2&&a>0?"coords":e.shapeInfo.logicalShape.map(((e,t)=>`coords.${h[t+u]}`)).join(", ");let d="return outputValue;";const f=1===oe(e.shapeInfo.logicalShape),m=1===oe(t.logicalShape);if(1!==a||f||m){if(f&&!m)d=1===i?"\n        return vec4(outputValue.x, outputValue.x, 0., 0.);\n      ":"\n        return vec4(outputValue.x);\n      ";else if(o.length){const e=a-2,t=a-1;o.indexOf(e)>-1&&o.indexOf(t)>-1?d="return vec4(outputValue.x);":o.indexOf(e)>-1?d="return vec4(outputValue.x, outputValue.y, outputValue.x, outputValue.y);":o.indexOf(t)>-1&&(d="return vec4(outputValue.xx, outputValue.zz);")}}else d="\n      return vec4(outputValue.xy, outputValue.xy);\n    ";return`\n    vec4 ${r}() {\n      ${l} coords = getOutputCoords();\n      ${c}\n      vec4 outputValue = get${s}(${p});\n      ${d}\n    }\n  `}(e,t):function(e,t){const n=e.name,s=n.charAt(0).toUpperCase()+n.slice(1),r="get"+s+"AtOutCoords",a=t.texShape,i=e.shapeInfo.texShape,o=e.shapeInfo.logicalShape.length,l=t.logicalShape.length;if(!e.shapeInfo.isUniform&&o===l&&null==e.shapeInfo.flatOffset&&ue(i,a))return`\n      float ${r}() {\n        return sampleTexture(${n}, resultUV);\n      }\n    `;const u=gF(l),c=iF(e.shapeInfo.logicalShape,t.logicalShape),h=l-o;let p;const d=["x","y","z","w","u","v"];p=0===o?"":l<2&&c.length>=1?"coords = 0;":c.map((e=>`coords.${d[e+h]} = 0;`)).join("\n");let f="";return f=l<2&&o>0?"coords":e.shapeInfo.logicalShape.map(((e,t)=>`coords.${d[t+h]}`)).join(", "),`\n    float ${r}() {\n      ${u} coords = getOutputCoords();\n      ${p}\n      return get${s}(${f});\n    }\n  `}(e,t)),r}(e,t,n.packedInputs,n.enableShapeUniforms))).join("\n"),i=t.texShape,o=tF(),l=function(e){return`\n    float sampleTexture(sampler2D textureSampler, vec2 uv) {\n      return ${e.texture2D}(textureSampler, uv).r;\n    }\n  `}(o);let u,c,h=function(e){return`${e.version}\n    precision highp float;\n    precision highp int;\n    precision highp sampler2D;\n    ${e.varyingFs} vec2 resultUV;\n    ${e.defineOutput}\n    const vec2 halfCR = vec2(0.5, 0.5);\n\n    struct ivec5\n    {\n      int x;\n      int y;\n      int z;\n      int w;\n      int u;\n    };\n\n    struct ivec6\n    {\n      int x;\n      int y;\n      int z;\n      int w;\n      int u;\n      int v;\n    };\n\n    uniform float NAN;\n    ${e.defineSpecialNaN}\n    ${e.defineSpecialInf}\n    ${e.defineRound}\n\n    int imod(int x, int y) {\n      return x - y * (x / y);\n    }\n\n    int idiv(int a, int b, float sign) {\n      int res = a / b;\n      int mod = imod(a, b);\n      if (sign < 0. && mod != 0) {\n        res -= 1;\n      }\n      return res;\n    }\n\n    //Based on the work of Dave Hoskins\n    //https://www.shadertoy.com/view/4djSRW\n    #define HASHSCALE1 443.8975\n    float random(float seed){\n      vec2 p = resultUV * seed;\n      vec3 p3  = fract(vec3(p.xyx) * HASHSCALE1);\n      p3 += dot(p3, p3.yzx + 19.19);\n      return fract((p3.x + p3.y) * p3.z);\n    }\n\n    ${cF}\n    ${hF}\n    ${pF}\n  `}(o);return t.isPacked?(u=function(e,t,n){switch(e.length){case 0:return"\n    int getOutputCoords() {\n      return 0;\n    }\n  ";case 1:return function(e,t,n){const s=[Math.ceil(t[0]/2),Math.ceil(t[1]/2)];return 1===s[0]?n?"\n      int getOutputCoords() {\n        return 2 * int(resultUV.x * ceil(float(outTexShape[1]) / 2.0));\n      }\n    ":`\n      int getOutputCoords() {\n        return 2 * int(resultUV.x * ${s[1]}.0);\n      }\n    `:1===s[1]?n?"\n      int getOutputCoords() {\n        return 2 * int(resultUV.y * ceil(float(outTexShape[0]) / 2.0));\n      }\n    ":`\n      int getOutputCoords() {\n        return 2 * int(resultUV.y * ${s[0]}.0);\n      }\n    `:n?"\n    int getOutputCoords() {\n      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(packedTexShape[0], packedTexShape[1]));\n      return 2 * (resTexRC.x * packedTexShape[1] + resTexRC.y);\n    }\n  ":`\n    int getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${s[0]}, ${s[1]}));\n      return 2 * (resTexRC.x * ${s[1]} + resTexRC.y);\n    }\n  `}(0,t,n);case 2:return function(e,t,n){const s=[Math.ceil(t[0]/2),Math.ceil(t[1]/2)];if(ue(e,t))return n?"\n      ivec2 getOutputCoords() {\n        ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));\n        return 2 * ivec2(resultUV.yx * vec2(packedTexShape[0], packedTexShape[1]));\n      }\n    ":`\n      ivec2 getOutputCoords() {\n        return 2 * ivec2(resultUV.yx * vec2(${s[0]}, ${s[1]}));\n      }\n    `;const r=Math.ceil(e[1]/2);return n?"\n    ivec2 getOutputCoords() {\n      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));\n      int texelsInLogicalRow = int(ceil(float(outShape[1]) / 2.0));\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(packedTexShape[0], packedTexShape[1]));\n\n      int index = resTexRC.x * packedTexShape[1] + resTexRC.y;\n      int r = 2 * (index / texelsInLogicalRow);\n      int c = imod(index, texelsInLogicalRow) * 2;\n\n      return ivec2(r, c);\n    }\n  ":`\n    ivec2 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${s[0]}, ${s[1]}));\n\n      int index = resTexRC.x * ${s[1]} + resTexRC.y;\n      int r = 2 * (index / ${r});\n      int c = imod(index, ${r}) * 2;\n\n      return ivec2(r, c);\n    }\n  `}(e,t,n);case 3:return function(e,t,n){if(n)return"\n    ivec3 getOutputCoords() {\n      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));\n      int texelsInLogicalRow = int(ceil(float(outShape[2]) / 2.0));\n      int texelsInBatch = texelsInLogicalRow * int(ceil(float(outShape[1]) / 2.0));\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(packedTexShape[0], packedTexShape[1]));\n      int index = resTexRC.x * packedTexShape[1] + resTexRC.y;\n\n      int b = index / texelsInBatch;\n      index -= b * texelsInBatch;\n\n      int r = 2 * (index / texelsInLogicalRow);\n      int c = imod(index, texelsInLogicalRow) * 2;\n\n      return ivec3(b, r, c);\n    }\n  ";const s=[Math.ceil(t[0]/2),Math.ceil(t[1]/2)],r=Math.ceil(e[2]/2),a=r*Math.ceil(e[1]/2);return`\n    ivec3 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${s[0]}, ${s[1]}));\n      int index = resTexRC.x * ${s[1]} + resTexRC.y;\n\n      int b = index / ${a};\n      index -= b * ${a};\n\n      int r = 2 * (index / ${r});\n      int c = imod(index, ${r}) * 2;\n\n      return ivec3(b, r, c);\n    }\n  `}(e,t,n);default:return function(e,t,n){if(n)return"\n    ivec4 getOutputCoords() {\n      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(packedTexShape[0], packedTexShape[1]));\n      int index = resTexRC.x * packedTexShape[1] + resTexRC.y;\n\n      int texelsInLogicalRow = int(ceil(float(outShape[3]) / 2.0));\n      int texelsInBatch = texelsInLogicalRow * int(ceil(float(outShape[2]) / 2.0));\n      int texelsInBatchN = texelsInBatch * outShape[1];\n\n      int b2 = index / texelsInBatchN;\n      index -= b2 * texelsInBatchN;\n\n      int b = index / texelsInBatch;\n      index -= b * texelsInBatch;\n\n      int r = 2 * (index / texelsInLogicalRow);\n      int c = imod(index, texelsInLogicalRow) * 2;\n\n      return ivec4(b2, b, r, c);\n    }\n  ";const s=[Math.ceil(t[0]/2),Math.ceil(t[1]/2)],r=Math.ceil(e[e.length-1]/2),a=r*Math.ceil(e[e.length-2]/2);let i=a,o="",l="b, r, c";for(let t=2;t<e.length-1;t++)i*=e[e.length-t-1],o=`\n      int b${t} = index / ${i};\n      index -= b${t} * ${i};\n    `+o,l=`b${t}, `+l;return`\n    ivec${e.length} getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${s[0]}, ${s[1]}));\n      int index = resTexRC.x * ${s[1]} + resTexRC.y;\n\n      ${o}\n\n      int b = index / ${a};\n      index -= b * ${a};\n\n      int r = 2 * (index / ${r});\n      int c = imod(index, ${r}) * 2;\n\n      return ivec${e.length}(${l});\n    }\n  `}(e,t,n)}}(t.logicalShape,i,n.enableShapeUniforms),c=function(e){return`\n    void setOutput(vec4 val) {\n      ${e.output} = val;\n    }\n  `}(o)):(u=function(e,t,n){switch(e.length){case 0:return"\n    int getOutputCoords() {\n      return 0;\n    }\n  ";case 1:return function(e,t,n){return 1===t[0]?n?"\n      int getOutputCoords() {\n        return int(resultUV.x * float(outTexShape[1]));\n      }\n    ":`\n      int getOutputCoords() {\n        return int(resultUV.x * ${t[1]}.0);\n      }\n    `:1===t[1]?n?"\n      int getOutputCoords() {\n        return int(resultUV.y * float(outTexShape[0]));\n      }\n    ":`\n      int getOutputCoords() {\n        return int(resultUV.y * ${t[0]}.0);\n      }\n    `:n?"\n    int getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(outTexShape[0], outTexShape[1]));\n      return resTexRC.x * outTexShape[1] + resTexRC.y;\n    }\n  ":`\n    int getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${t[0]}, ${t[1]}));\n      return resTexRC.x * ${t[1]} + resTexRC.y;\n    }\n  `}(0,t,n);case 2:return function(e,t,n){return ue(e,t)?n?"\n      ivec2 getOutputCoords() {\n        return ivec2(resultUV.yx * vec2(outTexShape[0], outTexShape[1]));\n      }\n    ":`\n      ivec2 getOutputCoords() {\n        return ivec2(resultUV.yx * vec2(${t[0]}, ${t[1]}));\n      }\n    `:1===e[1]?n?"\n      ivec2 getOutputCoords() {\n        ivec2 resTexRC = ivec2(resultUV.yx *\n                               vec2(outTexShape[0], outTexShape[1]));\n        int index = resTexRC.x * outTexShape[1] + resTexRC.y;\n        return ivec2(index, 0);\n      }\n    ":`\n      ivec2 getOutputCoords() {\n        ivec2 resTexRC = ivec2(resultUV.yx *\n                               vec2(${t[0]}, ${t[1]}));\n        int index = resTexRC.x * ${t[1]} + resTexRC.y;\n        return ivec2(index, 0);\n      }\n    `:1===e[0]?n?"\n      ivec2 getOutputCoords() {\n        ivec2 resTexRC = ivec2(resultUV.yx *\n                               vec2(outTexShape[0], outTexShape[1]));\n        int index = resTexRC.x * outTexShape[1] + resTexRC.y;\n        return ivec2(0, index);\n      }\n    ":`\n      ivec2 getOutputCoords() {\n        ivec2 resTexRC = ivec2(resultUV.yx *\n                               vec2(${t[0]}, ${t[1]}));\n        int index = resTexRC.x * ${t[1]} + resTexRC.y;\n        return ivec2(0, index);\n      }\n    `:n?"\n    ivec2 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(outTexShape[0], outTexShape[1]));\n      int index = resTexRC.x * outTexShape[1] + resTexRC.y;\n      int r = index / outShape[1];\n      int c = index - r * outShape[1];\n      return ivec2(r, c);\n    }\n  ":`\n    ivec2 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${t[0]}, ${t[1]}));\n      int index = resTexRC.x * ${t[1]} + resTexRC.y;\n      int r = index / ${e[1]};\n      int c = index - r * ${e[1]};\n      return ivec2(r, c);\n    }\n  `}(e,t,n);case 3:return function(e,t,n){if(n)return`\n  ivec3 getOutputCoords() {\n    ivec2 resTexRC = ivec2(resultUV.yx *\n                           vec2(outTexShape[0], outTexShape[1]));\n    int index = resTexRC.x * outTexShape[1] + resTexRC.y;\n    ${sF(["r","c","d"],e)}\n    return ivec3(r, c, d);\n  }\n`;const s=nF(["r","c","d"],e);return`\n    ivec3 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${t[0]}, ${t[1]}));\n      int index = resTexRC.x * ${t[1]} + resTexRC.y;\n      ${s}\n      return ivec3(r, c, d);\n    }\n  `}(e,t,n);case 4:return function(e,t,n){if(n)return`\n    ivec4 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n        vec2(outTexShape[0], outTexShape[1]));\n      int index = resTexRC.x * outTexShape[1] + resTexRC.y;\n      ${sF(["r","c","d","d2"],e)}\n      return ivec4(r, c, d, d2);\n    }\n  `;const s=nF(["r","c","d","d2"],e);return`\n    ivec4 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n        vec2(${t[0]}, ${t[1]}));\n      int index = resTexRC.x * ${t[1]} + resTexRC.y;\n      ${s}\n      return ivec4(r, c, d, d2);\n    }\n  `}(e,t,n);case 5:return function(e,t){const n=nF(["r","c","d","d2","d3"],e);return`\n    ivec5 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx * vec2(${t[0]},\n                             ${t[1]}));\n\n      int index = resTexRC.x * ${t[1]} + resTexRC.y;\n\n      ${n}\n\n      ivec5 outShape = ivec5(r, c, d, d2, d3);\n      return outShape;\n    }\n  `}(e,t);case 6:return function(e,t){const n=nF(["r","c","d","d2","d3","d4"],e);return`\n    ivec6 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n        vec2(${t[0]}, ${t[1]}));\n      int index = resTexRC.x * ${t[1]} + resTexRC.y;\n\n      ${n}\n\n      ivec6 result = ivec6(r, c, d, d2, d3, d4);\n      return result;\n    }\n  `}(e,t);default:throw new Error(`${e.length}-D output sampling is not yet supported`)}}(t.logicalShape,i,n.enableShapeUniforms),c=function(e){return`\n    void setOutput(float val) {\n      ${e.output} = vec4(val, 0, 0, 0);\n    }\n  `}(o)),n.packedInputs&&(h+=dF),[h,l,c,r,u,a,n.userCode].join("\n")}function lF(e,t=!1){const n=e.shapeInfo.logicalShape;switch(n.length){case 0:return function(e,t){const n=e.name,s="get"+n.charAt(0).toUpperCase()+n.slice(1);if(e.shapeInfo.isUniform)return`float ${s}() {return ${n};}`;const[r,a]=e.shapeInfo.texShape;if(1===r&&1===a)return`\n      float ${s}() {\n        return sampleTexture(${n}, halfCR);\n      }\n    `;const i=fF(n);if(t)return`\n    float ${s}() {\n      vec2 uv = uvFromFlat(${n}TexShape[0], ${n}TexShape[1], ${i});\n      return sampleTexture(${n}, uv);\n    }\n  `;const[o,l]=e.shapeInfo.texShape;return`\n    float ${s}() {\n      vec2 uv = uvFromFlat(${o}, ${l}, ${i});\n      return sampleTexture(${n}, uv);\n    }\n  `}(e,t);case 1:return function(e,t){const n=e.name,s="get"+n.charAt(0).toUpperCase()+n.slice(1);if(e.shapeInfo.isUniform)return`\n      float ${s}(int index) {\n        ${mF(e)}\n      }\n    `;const r=e.shapeInfo.texShape,a=r[0],i=r[1];if(1===i&&1===a)return`\n      float ${s}(int index) {\n        return sampleTexture(${n}, halfCR);\n      }\n    `;const o=fF(n);return 1===i?t?`\n      float ${s}(int index) {\n        vec2 uv = vec2(0.5, (float(index + ${o}) + 0.5) / float(${n}TexShape[0]));\n        return sampleTexture(${n}, uv);\n      }\n    `:`\n      float ${s}(int index) {\n        vec2 uv = vec2(0.5, (float(index + ${o}) + 0.5) / ${a}.0);\n        return sampleTexture(${n}, uv);\n      }\n    `:1===a?t?`\n      float ${s}(int index) {\n        vec2 uv = vec2((float(index + ${o}) + 0.5) / float(${n}TexShape[1]), 0.5);\n        return sampleTexture(${n}, uv);\n      }\n    `:`\n      float ${s}(int index) {\n        vec2 uv = vec2((float(index + ${o}) + 0.5) / ${i}.0, 0.5);\n        return sampleTexture(${n}, uv);\n      }\n    `:t?`\n    float ${s}(int index) {\n      vec2 uv = uvFromFlat(${n}TexShape[0], ${n}TexShape[1], index + ${o});\n      return sampleTexture(${n}, uv);\n    }\n  `:`\n    float ${s}(int index) {\n      vec2 uv = uvFromFlat(${a}, ${i}, index + ${o});\n      return sampleTexture(${n}, uv);\n    }\n  `}(e,t);case 2:return function(e,t){const n=e.shapeInfo.logicalShape,s=e.name,r="get"+s.charAt(0).toUpperCase()+s.slice(1),a=e.shapeInfo.texShape;if(null!=a&&ue(n,a)){if(t)return`\n      float ${r}(int row, int col) {\n        vec2 uv = (vec2(col, row) + halfCR) / vec2(${s}TexShape[1], ${s}TexShape[0]);\n        return sampleTexture(${s}, uv);\n      }\n    `;const e=a[0];return`\n    float ${r}(int row, int col) {\n      vec2 uv = (vec2(col, row) + halfCR) / vec2(${a[1]}.0, ${e}.0);\n      return sampleTexture(${s}, uv);\n    }\n  `}const{newShape:i,keptDims:o}=be(n),l=i;if(l.length<n.length){const n=["row","col"];return`\n      ${lF(bF(e,l),t)}\n      float ${r}(int row, int col) {\n        return ${r}(${xF(n,o)});\n      }\n    `}if(e.shapeInfo.isUniform)return`\n      float ${r}(int row, int col) {\n        int index = round(dot(vec2(row, col), vec2(${n[1]}, 1)));\n        ${mF(e)}\n      }\n    `;const u=a[0],c=a[1],h=fF(s);return 1===c?t?`\n      float ${r}(int row, int col) {\n        float index = dot(vec3(row, col, ${h}), vec3(${s}Shape[1], 1, 1));\n        vec2 uv = vec2(0.5, (index + 0.5) / float(${s}TexShape[0]));\n        return sampleTexture(${s}, uv);\n      }\n    `:`\n    float ${r}(int row, int col) {\n      float index = dot(vec3(row, col, ${h}), vec3(${n[1]}, 1, 1));\n      vec2 uv = vec2(0.5, (index + 0.5) / ${u}.0);\n      return sampleTexture(${s}, uv);\n    }\n  `:1===u?t?`\n      float ${r}(int row, int col) {\n        float index = dot(vec3(row, col, ${h}), vec3(${s}Shape[1], 1, 1));\n        vec2 uv = vec2((index + 0.5) / float(${s}TexShape[1]), 0.5);\n        return sampleTexture(${s}, uv);\n      }\n    `:`\n    float ${r}(int row, int col) {\n      float index = dot(vec3(row, col, ${h}), vec3(${n[1]}, 1, 1));\n      vec2 uv = vec2((index + 0.5) / ${c}.0, 0.5);\n      return sampleTexture(${s}, uv);\n    }\n  `:t?`\n      float ${r}(int row, int col) {\n        // Explicitly use integer operations as dot() only works on floats.\n        int index = row * ${s}Shape[1] + col + ${h};\n        vec2 uv = uvFromFlat(${s}TexShape[0], ${s}TexShape[1], index);\n        return sampleTexture(${s}, uv);\n      }\n    `:`\n  float ${r}(int row, int col) {\n    // Explicitly use integer operations as dot() only works on floats.\n    int index = row * ${n[1]} + col + ${h};\n    vec2 uv = uvFromFlat(${u}, ${c}, index);\n    return sampleTexture(${s}, uv);\n  }\n`}(e,t);case 3:return function(e,t){const n=e.shapeInfo.logicalShape,s=e.name,r="get"+s.charAt(0).toUpperCase()+s.slice(1),a=n[1]*n[2],i=n[2],{newShape:o,keptDims:l}=be(n),u=o;if(u.length<n.length){const n=["row","col","depth"];return`\n        ${lF(bF(e,u),t)}\n        float ${r}(int row, int col, int depth) {\n          return ${r}(${xF(n,l)});\n        }\n      `}if(e.shapeInfo.isUniform)return`\n      float ${r}(int row, int col, int depth) {\n        int index = round(dot(vec3(row, col, depth),\n                          vec3(${a}, ${i}, 1)));\n        ${mF(e)}\n      }\n    `;const c=e.shapeInfo.texShape,h=c[0],p=c[1],d=e.shapeInfo.flatOffset;if(p===a&&null==d)return t?`\n      float ${r}(int row, int col, int depth) {\n        int stride1 = ${s}Shape[2];\n        float texR = float(row);\n        float texC = dot(vec2(col, depth), vec2(stride1, 1));\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                   vec2(${s}TexShape[1], ${s}TexShape[0]);\n        return sampleTexture(${s}, uv);\n      }\n    `:`\n        float ${r}(int row, int col, int depth) {\n          float texR = float(row);\n          float texC = dot(vec2(col, depth), vec2(${i}, 1));\n          vec2 uv = (vec2(texC, texR) + halfCR) /\n                     vec2(${p}.0, ${h}.0);\n          return sampleTexture(${s}, uv);\n        }\n      `;if(p===i&&null==d)return t?`\n      float ${r}(int row, int col, int depth) {\n        float texR = dot(vec2(row, col), vec2(${s}Shape[1], 1));\n        float texC = float(depth);\n        vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${s}TexShape[1], ${s}TexShape[0]);\n        return sampleTexture(${s}, uv);\n      }\n    `:`\n    float ${r}(int row, int col, int depth) {\n      float texR = dot(vec2(row, col), vec2(${n[1]}, 1));\n      float texC = float(depth);\n      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${p}.0, ${h}.0);\n      return sampleTexture(${s}, uv);\n    }\n  `;const f=fF(s);return t?`\n    float ${r}(int row, int col, int depth) {\n      // Explicitly use integer operations as dot() only works on floats.\n      int stride0 = ${s}Shape[1] * ${s}Shape[2];\n      int stride1 = ${s}Shape[2];\n      int index = row * ${a} + col * ${i} + depth + ${f};\n      vec2 uv = uvFromFlat(${s}TexShape[0], ${s}TexShape[1], index);\n      return sampleTexture(${s}, uv);\n    }\n    `:`\n      float ${r}(int row, int col, int depth) {\n        // Explicitly use integer operations as dot() only works on floats.\n        int index = row * ${a} + col * ${i} + depth + ${f};\n        vec2 uv = uvFromFlat(${h}, ${p}, index);\n        return sampleTexture(${s}, uv);\n      }\n  `}(e,t);case 4:return function(e,t){const n=e.shapeInfo.logicalShape,s=e.name,r="get"+s.charAt(0).toUpperCase()+s.slice(1),a=n[3],i=n[2]*a,o=n[1]*i,{newShape:l,keptDims:u}=be(n);if(l.length<n.length){const n=["row","col","depth","depth2"];return`\n      ${lF(bF(e,l),t)}\n      float ${r}(int row, int col, int depth, int depth2) {\n        return ${r}(${xF(n,u)});\n      }\n    `}if(e.shapeInfo.isUniform)return`\n      float ${r}(int row, int col, int depth, int depth2) {\n        int index = round(dot(vec4(row, col, depth, depth2),\n                          vec4(${o}, ${i}, ${a}, 1)));\n        ${mF(e)}\n      }\n    `;const c=e.shapeInfo.flatOffset,h=e.shapeInfo.texShape,p=h[0],d=h[1],f=`int stride2 = ${s}Shape[3];`,m=`int stride1 = ${s}Shape[2] * stride2;`,g=`int stride0 = ${s}Shape[1] * stride1;`;if(d===o&&null==c)return t?`\n      float ${r}(int row, int col, int depth, int depth2) {\n        ${f}\n        ${m}\n        float texR = float(row);\n        float texC =\n            dot(vec3(col, depth, depth2),\n                vec3(stride1, stride2, 1));\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                   vec2(${s}TexShape[1], ${s}TexShape[0]);\n        return sampleTexture(${s}, uv);\n      }\n    `:`\n      float ${r}(int row, int col, int depth, int depth2) {\n        float texR = float(row);\n        float texC =\n            dot(vec3(col, depth, depth2),\n                vec3(${i}, ${a}, 1));\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                   vec2(${d}.0, ${p}.0);\n        return sampleTexture(${s}, uv);\n      }\n    `;if(d===a&&null==c)return t?`\n      float ${r}(int row, int col, int depth, int depth2) {\n        float texR = dot(vec3(row, col, depth),\n                         vec3(${s}Shape[1] * ${s}Shape[2], ${s}Shape[2], 1));\n        float texC = float(depth2);\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                  vec2(${s}TexShape[1], ${s}TexShape[0]);\n        return sampleTexture(${s}, uv);\n      }\n    `:`\n      float ${r}(int row, int col, int depth, int depth2) {\n        float texR = dot(vec3(row, col, depth),\n                         vec3(${n[1]*n[2]}, ${n[2]}, 1));\n        float texC = float(depth2);\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                  vec2(${d}.0, ${p}.0);\n        return sampleTexture(${s}, uv);\n      }\n    `;const y=fF(s);return t?`\n    float ${r}(int row, int col, int depth, int depth2) {\n      // Explicitly use integer operations as dot() only works on floats.\n      ${f}\n      ${m}\n      ${g}\n      int index = row * stride0 + col * stride1 +\n          depth * stride2 + depth2;\n      vec2 uv = uvFromFlat(${s}TexShape[0], ${s}TexShape[1], index + ${y});\n      return sampleTexture(${s}, uv);\n    }\n  `:`\n    float ${r}(int row, int col, int depth, int depth2) {\n      // Explicitly use integer operations as dot() only works on floats.\n      int index = row * ${o} + col * ${i} +\n          depth * ${a} + depth2;\n      vec2 uv = uvFromFlat(${p}, ${d}, index + ${y});\n      return sampleTexture(${s}, uv);\n    }\n  `}(e,t);case 5:return function(e){const t=e.shapeInfo.logicalShape,n=e.name,s="get"+n.charAt(0).toUpperCase()+n.slice(1),r=t[4],a=t[3]*r,i=t[2]*a,o=t[1]*i,{newShape:l,keptDims:u}=be(t);if(l.length<t.length){const t=["row","col","depth","depth2","depth3"];return`\n      ${lF(bF(e,l))}\n      float ${s}(int row, int col, int depth, int depth2, int depth3) {\n        return ${s}(${xF(t,u)});\n      }\n    `}if(e.shapeInfo.isUniform)return`\n      float ${s}(int row, int col, int depth, int depth2, int depth3) {\n        float index = dot(\n          vec4(row, col, depth, depth2),\n          vec4(${o}, ${i}, ${a}, ${r})) +\n          depth3;\n        ${mF(e)}\n      }\n    `;const c=e.shapeInfo.flatOffset,h=e.shapeInfo.texShape,p=h[0],d=h[1];if(d===o&&null==c)return`\n      float ${s}(int row, int col, int depth, int depth2, int depth3) {\n        int texR = row;\n        float texC = dot(vec4(col, depth, depth2, depth3),\n                         vec4(${i}, ${a}, ${r}, 1));\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                   vec2(${d}.0, ${p}.0);\n        return sampleTexture(${n}, uv);\n      }\n    `;if(d===r&&null==c)return`\n      float ${s}(int row, int col, int depth, int depth2, int depth3) {\n        float texR = dot(\n          vec4(row, col, depth, depth2),\n          vec4(${t[1]*t[2]*t[3]},\n               ${t[2]*t[3]}, ${t[3]}, 1));\n        int texC = depth3;\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                  vec2(${d}.0, ${p}.0);\n        return sampleTexture(${n}, uv);\n      }\n    `;return`\n    float ${s}(int row, int col, int depth, int depth2, int depth3) {\n      // Explicitly use integer operations as dot() only works on floats.\n      int index = row * ${o} + col * ${i} + depth * ${a} +\n          depth2 * ${r} + depth3 + ${fF(n)};\n      vec2 uv = uvFromFlat(${p}, ${d}, index);\n      return sampleTexture(${n}, uv);\n    }\n  `}(e);case 6:return function(e){const t=e.shapeInfo.logicalShape,n=e.name,s="get"+n.charAt(0).toUpperCase()+n.slice(1),{newShape:r,keptDims:a}=be(t);if(r.length<t.length){const t=["row","col","depth","depth2","depth3","depth4"];return`\n      ${lF(bF(e,r))}\n      float ${s}(int row, int col, int depth,\n                    int depth2, int depth3, int depth4) {\n        return ${s}(${xF(t,a)});\n      }\n    `}const i=t[5],o=t[4]*i,l=t[3]*o,u=t[2]*l,c=t[1]*u;if(e.shapeInfo.isUniform)return`\n      float ${s}(int row, int col, int depth,\n                  int depth2, int depth3, int depth4) {\n        int index = round(dot(\n          vec4(row, col, depth, depth2),\n          vec4(${c}, ${u}, ${l}, ${o})) +\n          dot(\n            vec2(depth3, depth4),\n            vec2(${i}, 1)));\n        ${mF(e)}\n      }\n    `;const h=e.shapeInfo.flatOffset,p=e.shapeInfo.texShape,d=p[0],f=p[1];if(f===c&&null==h)return`\n      float ${s}(int row, int col, int depth,\n                    int depth2, int depth3, int depth4) {\n        int texR = row;\n        float texC = dot(vec4(col, depth, depth2, depth3),\n          vec4(${u}, ${l}, ${o}, ${i})) +\n               float(depth4);\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                   vec2(${f}.0, ${d}.0);\n        return sampleTexture(${n}, uv);\n      }\n    `;if(f===i&&null==h)return`\n      float ${s}(int row, int col, int depth,\n                    int depth2, int depth3, int depth4) {\n        float texR = dot(vec4(row, col, depth, depth2),\n          vec4(${t[1]*t[2]*t[3]*t[4]},\n               ${t[2]*t[3]*t[4]},\n               ${t[3]*t[4]},\n               ${t[4]})) + float(depth3);\n        int texC = depth4;\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                  vec2(${f}.0, ${d}.0);\n        return sampleTexture(${n}, uv);\n      }\n    `;return`\n    float ${s}(int row, int col, int depth,\n                  int depth2, int depth3, int depth4) {\n      // Explicitly use integer operations as dot() only works on floats.\n      int index = row * ${c} + col * ${u} + depth * ${l} +\n          depth2 * ${o} + depth3 * ${i} + depth4 + ${fF(n)};\n      vec2 uv = uvFromFlat(${d}, ${f}, index);\n      return sampleTexture(${n}, uv);\n    }\n  `}(e);default:throw new Error(`${n.length}-D input sampling is not yet supported`)}}function uF(e,t){switch(e.shapeInfo.logicalShape.length){case 0:return function(e){const t=e.name;return`\n    vec4 ${"get"+t.charAt(0).toUpperCase()+t.slice(1)}() {\n      return ${tF().texture2D}(${t}, halfCR);\n    }\n  `}(e);case 1:return function(e,t){const n=e.name,s="get"+n.charAt(0).toUpperCase()+n.slice(1),r=e.shapeInfo.texShape,a=tF();if(t)return`\n    vec4 ${s}(int index) {\n      ivec2 packedTexShape = ivec2(ceil(float(${n}TexShape[0]) / 2.0), ceil(float(${n}TexShape[1]) / 2.0));\n      vec2 uv = packedUVfrom1D(\n        packedTexShape[0], packedTexShape[1], index);\n      return ${a.texture2D}(${n}, uv);\n    }\n  `;const i=[Math.ceil(r[0]/2),Math.ceil(r[1]/2)];return`\n    vec4 ${s}(int index) {\n      vec2 uv = packedUVfrom1D(\n        ${i[0]}, ${i[1]}, index);\n      return ${a.texture2D}(${n}, uv);\n    }\n  `}(e,t);case 2:return function(e,t){const n=e.shapeInfo.logicalShape,s=e.name,r="get"+s.charAt(0).toUpperCase()+s.slice(1),a=e.shapeInfo.texShape,i=a[0],o=a[1],l=tF();if(null!=a&&ue(n,a))return t?`\n      vec4 ${r}(int row, int col) {\n        vec2 uv = (vec2(col, row) + halfCR) / vec2(${s}TexShape[1], ${s}TexShape[0]);\n\n        return ${l.texture2D}(${s}, uv);\n      }\n    `:`\n      vec4 ${r}(int row, int col) {\n        vec2 uv = (vec2(col, row) + halfCR) / vec2(${o}.0, ${i}.0);\n\n        return ${l.texture2D}(${s}, uv);\n      }\n    `;if(t)return`\n    vec4 ${r}(int row, int col) {\n      ivec2 packedTexShape = ivec2(ceil(float(${s}TexShape[0]) / 2.0), ceil(float(${s}TexShape[1]) / 2.0));\n      int valuesPerRow = int(ceil(float(${s}Shape[1]) / 2.0));\n      vec2 uv = packedUVfrom2D(valuesPerRow, packedTexShape[0], packedTexShape[1], row, col);\n      return ${l.texture2D}(${s}, uv);\n    }\n  `;const u=[Math.ceil(a[0]/2),Math.ceil(a[1]/2)];return`\n    vec4 ${r}(int row, int col) {\n      vec2 uv = packedUVfrom2D(${Math.ceil(n[1]/2)}, ${u[0]}, ${u[1]}, row, col);\n      return ${l.texture2D}(${s}, uv);\n    }\n  `}(e,t);case 3:return function(e,t){const n=e.shapeInfo.logicalShape,s=e.name,r="get"+s.charAt(0).toUpperCase()+s.slice(1),a=e.shapeInfo.texShape,i=[Math.ceil(a[0]/2),Math.ceil(a[1]/2)];if(1===n[0]){const s=[1,2],a=["b","row","col"];return`\n        ${uF(bF(e,n.slice(1)),t)}\n        vec4 ${r}(int b, int row, int col) {\n          return ${r}(${xF(a,s)});\n        }\n      `}const o=tF();if(t)return`\n    vec4 ${r}(int b, int row, int col) {\n      ivec2 packedTexShape = ivec2(ceil(float(${s}TexShape[0]) / 2.0), ceil(float(${s}TexShape[1]) / 2.0));\n      int valuesPerRow = int(ceil(float(${s}Shape[2]) / 2.0));\n      int texelsInBatch = valuesPerRow * int(ceil(float(${s}Shape[1]) / 2.0));\n      vec2 uv = packedUVfrom3D(\n        packedTexShape[0], packedTexShape[1], texelsInBatch, valuesPerRow, b, row, col);\n      return ${o.texture2D}(${s}, uv);\n    }\n  `;const l=i[0],u=i[1],c=Math.ceil(n[2]/2);return`\n    vec4 ${r}(int b, int row, int col) {\n      vec2 uv = packedUVfrom3D(\n        ${l}, ${u}, ${c*Math.ceil(n[1]/2)}, ${c}, b, row, col);\n      return ${o.texture2D}(${s}, uv);\n    }\n  `}(e,t);default:return function(e,t){const n=e.name,s="get"+n.charAt(0).toUpperCase()+n.slice(1),r=tF();if(t)return`\n    vec4 ${s}(int b2, int b, int row, int col) {\n      int valuesPerRow = int(ceil(float(${n}Shape[3]) / 2.0));\n      int texelsInBatch = valuesPerRow * int(ceil(float(${n}Shape[2]) / 2.0));\n      int index = b * texelsInBatch + (row / 2) * valuesPerRow + (col / 2);\n      texelsInBatch *= ${n}Shape[1];\n      index = b2 * texelsInBatch + index;\n      ivec2 packedTexShape = ivec2(ceil(float(${n}TexShape[0]) / 2.0), ceil(float(${n}TexShape[1]) / 2.0));\n      int texR = index / packedTexShape[1];\n      int texC = index - texR * packedTexShape[1];\n      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(packedTexShape[1], packedTexShape[0]); return ${r.texture2D}(${n}, uv);\n    }\n  `;const a=e.shapeInfo.logicalShape,i=a.length,o=e.shapeInfo.texShape,l=[Math.ceil(o[0]/2),Math.ceil(o[1]/2)],u=l[0],c=l[1],h=Math.ceil(a[i-1]/2);let p=h*Math.ceil(a[i-2]/2),d="int b, int row, int col",f=`b * ${p} + (row / 2) * ${h} + (col / 2)`;for(let e=2;e<i-1;e++)d=`int b${e}, `+d,p*=a[i-e-1],f=`b${e} * ${p} + `+f;return`\n    vec4 ${s}(${d}) {\n      int index = ${f};\n      int texR = index / ${c};\n      int texC = index - texR * ${c};\n      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${c}, ${u});\n      return ${r.texture2D}(${n}, uv);\n    }\n  `}(e,t)}}const cF="\nvec2 uvFromFlat(int texNumR, int texNumC, int index) {\n  int texR = index / texNumC;\n  int texC = index - texR * texNumC;\n  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);\n}\nvec2 packedUVfrom1D(int texNumR, int texNumC, int index) {\n  int texelIndex = index / 2;\n  int texR = texelIndex / texNumC;\n  int texC = texelIndex - texR * texNumC;\n  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);\n}\n",hF="\nvec2 packedUVfrom2D(int texelsInLogicalRow, int texNumR,\n  int texNumC, int row, int col) {\n  int texelIndex = (row / 2) * texelsInLogicalRow + (col / 2);\n  int texR = texelIndex / texNumC;\n  int texC = texelIndex - texR * texNumC;\n  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);\n}\n",pF="\nvec2 packedUVfrom3D(int texNumR, int texNumC,\n    int texelsInBatch, int texelsInLogicalRow, int b,\n    int row, int col) {\n  int index = b * texelsInBatch + (row / 2) * texelsInLogicalRow + (col / 2);\n  int texR = index / texNumC;\n  int texC = index - texR * texNumC;\n  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);\n}\n",dF="\n  float getChannel(vec4 frag, vec2 innerDims) {\n    vec2 modCoord = mod(innerDims, 2.);\n    return modCoord.x == 0. ?\n      (modCoord.y == 0. ? frag.r : frag.g) :\n      (modCoord.y == 0. ? frag.b : frag.a);\n  }\n  float getChannel(vec4 frag, int dim) {\n    float modCoord = mod(float(dim), 2.);\n    return modCoord == 0. ? frag.r : frag.g;\n  }\n";function fF(e){return`offset${e}`}function mF(e){const t=e.name,n=oe(e.shapeInfo.logicalShape);return n<2?`return ${t};`:`\n    for (int i = 0; i < ${n}; i++) {\n      if (i == index) {\n        return ${t}[i];\n      }\n    }\n  `}function gF(e){if(e<=1)return"int";if(2===e)return"ivec2";if(3===e)return"ivec3";if(4===e)return"ivec4";if(5===e)return"ivec5";if(6===e)return"ivec6";throw Error(`GPU for rank ${e} is not yet supported`)}function yF(e,t,n){const{newShape:s,keptDims:r}=be(t),a=t.length,i=e&&3===a&&1===t[0],o=i?t.slice(1):s,l=!e&&a>1&&!ue(t,n)&&s.length<a||i;return{useSqueezeShape:l,uniformShape:l?o:t,keptDims:r}}function bF(e,t){const n=JSON.parse(JSON.stringify(e));return n.shapeInfo.logicalShape=t,n}function xF(e,t){return t.map((t=>e[t])).join(", ")}function vF(e,t,n){const s={},r={},a={},i=[];let o,l,u,c=null,h=null;h=e.getUniformLocation(n,"NAN",!1),1===He().getNumber("WEBGL_VERSION")&&(c=e.getUniformLocation(n,"INFINITY",!1));const p=!1;for(let i=0;i<t.variableNames.length;i++){const o=t.variableNames[i];s[o]=e.getUniformLocation(n,o,p),s[`offset${o}`]=e.getUniformLocation(n,`offset${o}`,p),t.enableShapeUniforms&&(r[`${o}Shape`]=e.getUniformLocation(n,`${o}Shape`,p),a[`${o}TexShape`]=e.getUniformLocation(n,`${o}TexShape`,p))}return t.enableShapeUniforms&&(o=e.getUniformLocation(n,"outShape",p),u=e.getUniformLocation(n,"outShapeStrides",p),l=e.getUniformLocation(n,"outTexShape",p)),t.customUniforms&&t.customUniforms.forEach(((t,s)=>{i[s]=e.getUniformLocation(n,t.name,p)})),{uniformLocations:s,customUniformLocations:i,infLoc:c,nanLoc:h,inShapesLocations:r,inTexShapesLocations:a,outShapeLocation:o,outShapeStridesLocation:u,outTexShapeLocation:l}}function wF(e,t){if(e.length!==t.length)throw Error(`Binary was compiled with ${e.length} inputs, but was executed with ${t.length} inputs`);e.forEach(((e,n)=>{const s=e.logicalShape,r=t[n],a=r.shape;if(!ue(s,a))throw Error(`Binary was compiled with different shapes than the current args. Shapes ${s} and ${a} must match`);if(e.isUniform&&r.isUniform)return;const i=e.texShape,o=r.isUniform?null:r.texData.texShape;if(!ue(i,o))throw Error(`Binary was compiled with different texture shapes than the current args. Shape ${i} and ${o} must match`)}))}function kF(e){return He().getBool("WEBGL_USE_SHAPES_UNIFORMS")&&e<=4}class IF{constructor(e){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0,this.outPackingScheme=SR.DENSE,this.customUniforms=[{name:"texShape",type:"ivec2"}];const t=tF();this.outputShape=e,this.enableShapeUniforms=kF(this.outputShape.length),this.userCode=`\n      ivec3 outCoordsFromFlatIndex(int index) {\n        ${this.enableShapeUniforms?sF(["r","c","d"],e):nF(["r","c","d"],e)}\n        return ivec3(r, c, d);\n      }\n\n      void main() {\n        ivec2 resTexRC = ivec2(resultUV.yx * vec2(texShape[0], texShape[1]));\n        int index = 4 * (resTexRC.x * texShape[1] + resTexRC.y);\n\n        vec4 result = vec4(0.);\n\n        for (int i=0; i<4; i++) {\n          int flatIndex = index + i;\n          ivec3 rc = outCoordsFromFlatIndex(flatIndex);\n          result[i] = getA(rc.x, rc.y, rc.z);\n        }\n\n        ${t.output} = result;\n      }\n    `}}class SF{constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outPackingScheme=SR.DENSE,this.customUniforms=[{name:"texShape",type:"ivec2"}];const t=tF();this.outputShape=e,this.enableShapeUniforms=kF(this.outputShape.length),this.userCode=`\n      ivec3 outCoordsFromFlatIndex(int index) {\n        ${this.enableShapeUniforms?sF(["r","c","d"],e):nF(["r","c","d"],e)}\n        return ivec3(r, c, d);\n      }\n\n      void main() {\n        ivec2 resTexRC = ivec2(resultUV.yx * vec2(texShape[0], texShape[1]));\n        int index = 4 * (resTexRC.x * texShape[1] + resTexRC.y);\n\n        vec4 result = vec4(0.);\n\n        for (int i=0; i<4; i++) {\n          int flatIndex = index + i;\n          ivec3 rc = outCoordsFromFlatIndex(flatIndex);\n          result[i] = getChannel(getA(rc.x, rc.y, rc.z), vec2(rc.y, rc.z));\n        }\n\n        ${t.output} = result;\n      }\n    `}}class NF{constructor(e){this.variableNames=["A"],this.outTexUsage=NR.DOWNLOAD;const t=tF();this.outputShape=e,this.userCode=`\n      ${aF}\n\n      void main() {\n        float x = getAAtOutCoords();\n        ${t.output} = encode_float(x);\n      }\n    `}}class TF{constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!1,this.outTexUsage=NR.DOWNLOAD;const t=tF();this.outputShape=e,this.userCode=`\n      ${aF}\n\n      void main() {\n        ivec3 coords = getOutputCoords();\n        float x = getChannel(getAAtOutCoords(), vec2(coords.y, coords.z));\n        ${t.output} = encode_float(x);\n      }\n    `}}class CF{constructor(e,t=!1){this.variableNames=["A"],this.customUniforms=[{name:"texShape",type:"ivec2"}];const n=tF();this.outputShape=e,this.enableShapeUniforms=kF(this.outputShape.length);let s="result";t&&(s="floor(result * 255. + 0.5)"),this.userCode=`\n      ${this.enableShapeUniforms?"\n  int getFlatIndex(ivec3 coords) {\n    return coords.x * outShapeStrides[0] + coords.y * outShapeStrides[1] + coords.z;\n  }\n":rF(e)}\n\n      void main() {\n        ivec3 coords = getOutputCoords();\n\n        int flatIndex = getFlatIndex(coords);\n        int offset = imod(flatIndex, 4);\n\n        flatIndex = idiv(flatIndex, 4, 1.);\n\n        int r = flatIndex / texShape[1];\n        int c = imod(flatIndex, texShape[1]);\n        vec2 uv = (vec2(c, r) + halfCR) / vec2(texShape[1], texShape[0]);\n        vec4 values = ${n.texture2D}(A, uv);\n\n        float result;\n\n        if(offset == 0) {\n          result = values[0];\n        } else if(offset == 1) {\n          result = values[1];\n        } else if(offset == 2) {\n          result = values[2];\n        } else {\n          result = values[3];\n        }\n\n        ${n.output} = vec4(${s}, 0., 0., 0.);\n      }\n    `}}class $F{constructor(e,t=!1){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0,this.customUniforms=[{name:"texShape",type:"ivec2"}];const n=tF();this.outputShape=e,this.enableShapeUniforms=kF(this.outputShape.length);let s="",r="result";t&&(r="floor(result * 255. + 0.5)");for(let t=0;t<=1;t++)for(let r=0;r<=1;r++){const a=2*t+r;s+=`\n          localCoords = coords;\n          if(localCoords[2] + ${r} < ${this.enableShapeUniforms?"outShape[2]":`${e[2]}`}) {\n          localCoords[2] += ${r};\n          if (localCoords[1] + ${t} < ${this.enableShapeUniforms?"outShape[1]":`${e[1]}`}) {\n            localCoords[1] += ${t};\n\n            flatIndex = getFlatIndex(localCoords);\n            offset = imod(flatIndex, 4);\n\n            flatIndex = idiv(flatIndex, 4, 1.);\n\n            int r = flatIndex / texShape[1];\n            int c = imod(flatIndex, texShape[1]);\n            vec2 uv = (vec2(c, r) + halfCR) / vec2(texShape[1], texShape[0]);\n            values = ${n.texture2D}(A, uv);\n\n            if (offset == 0) {\n              result[${a}] = values[0];\n            } else if (offset == 1) {\n              result[${a}] = values[1];\n            } else if (offset == 2) {\n              result[${a}] = values[2];\n            } else {\n              result[${a}] = values[3];\n            }\n          }\n        }\n        `}this.userCode=`\n        ${this.enableShapeUniforms?"\n  int getFlatIndex(ivec3 coords) {\n    return coords.x * outShapeStrides[0] + coords.y * outShapeStrides[1] + coords.z;\n  }\n":rF(e)}\n\n        void main() {\n          ivec3 coords = getOutputCoords();\n\n          vec4 result = vec4(0.);\n          int flatIndex, r, c, offset;\n          ivec3 localCoords;\n          vec2 uv;\n          vec4 values;\n\n          ${s}\n\n          ${n.output} = ${r};\n        }\n    `}}function EF(e,t,n,s,r,a){!function(e,t){const n=He().getNumber("WEBGL_MAX_TEXTURE_SIZE");if(e<=0||t<=0)throw new Error(`Requested texture size [${e}x${t}] is invalid.`);if(e>n||t>n)throw new Error(`Requested texture size [${e}x${t}] greater than WebGL maximum on this browser / GPU [${n}x${n}].`)}(t,n);const i=function(e){return VR(e,(()=>e.createTexture()),"Unable to create WebGLTexture.")}(e),o=e.TEXTURE_2D;return _R(e,(()=>e.bindTexture(o,i))),_R(e,(()=>e.texParameteri(o,e.TEXTURE_WRAP_S,e.CLAMP_TO_EDGE))),_R(e,(()=>e.texParameteri(o,e.TEXTURE_WRAP_T,e.CLAMP_TO_EDGE))),_R(e,(()=>e.texParameteri(o,e.TEXTURE_MIN_FILTER,e.NEAREST))),_R(e,(()=>e.texParameteri(o,e.TEXTURE_MAG_FILTER,e.NEAREST))),1===He().getNumber("WEBGL_VERSION")?_R(e,(()=>e.texImage2D(o,0,s,t,n,0,r,a,null))):_R(e,(()=>e.texStorage2D(o,1,s,t,n))),_R(e,(()=>e.bindTexture(e.TEXTURE_2D,null))),{texture:i,texShape:[n,t]}}function AF(e){return e.internalFormatFloat}function _F(e){return e.internalFormatHalfFloat}function RF(e){return e.downloadTextureFormat}function FF(e){return e.internalFormatPackedFloat}function DF(e){return e.internalFormatPackedHalfFloat}class OF{constructor(e){this.outputTexture=null,this.program=null,this.disposed=!1,this.vertexAttrsAreBound=!1,this.itemsToPoll=[];const t=He().getNumber("WEBGL_VERSION");null!=e?(this.gl=e,function(e,t){wR[e]=t}(t,e)):this.gl=IR(t);let n="WEBGL_color_buffer_float";const s="EXT_color_buffer_half_float";if(this.parallelCompilationExtension=this.gl.getExtension("KHR_parallel_shader_compile"),1===He().getNumber("WEBGL_VERSION")){const e="OES_texture_float",t="OES_texture_half_float";if(this.textureFloatExtension=FR(this.gl,e),YR(this.gl,t))this.textureHalfFloatExtension=FR(this.gl,t);else if(He().get("WEBGL_FORCE_F16_TEXTURES"))throw new Error("GL context does not support half float textures, yet the environment flag WEBGL_FORCE_F16_TEXTURES is set to true.");if(this.colorBufferFloatExtension=this.gl.getExtension(n),YR(this.gl,s))this.colorBufferHalfFloatExtension=FR(this.gl,s);else if(He().get("WEBGL_FORCE_F16_TEXTURES"))throw new Error("GL context does not support color renderable half floats, yet the environment flag WEBGL_FORCE_F16_TEXTURES is set to true.")}else if(n="EXT_color_buffer_float",YR(this.gl,n))this.colorBufferFloatExtension=this.gl.getExtension(n);else{if(!YR(this.gl,s))throw new Error("GL context does not support color renderable floats");this.colorBufferHalfFloatExtension=this.gl.getExtension(s)}this.vertexBuffer=function(e){return function(e,t){const n=VR(e,(()=>e.createBuffer()),"Unable to create WebGLBuffer");return _R(e,(()=>e.bindBuffer(e.ARRAY_BUFFER,n))),_R(e,(()=>e.bufferData(e.ARRAY_BUFFER,t,e.STATIC_DRAW))),n}(e,new Float32Array([-1,1,0,0,1,-1,-1,0,0,0,1,1,0,1,1,1,-1,0,1,0]))}(this.gl),this.indexBuffer=function(e){return function(e,t){const n=VR(e,(()=>e.createBuffer()),"Unable to create WebGLBuffer");return _R(e,(()=>e.bindBuffer(e.ELEMENT_ARRAY_BUFFER,n))),_R(e,(()=>e.bufferData(e.ELEMENT_ARRAY_BUFFER,t,e.STATIC_DRAW))),n}(e,new Uint16Array([0,1,2,2,1,3]))}(this.gl),this.framebuffer=function(e){return VR(e,(()=>e.createFramebuffer()),"Unable to create WebGLFramebuffer.")}(this.gl),this.textureConfig=AR(this.gl,this.textureHalfFloatExtension)}get debug(){return He().getBool("DEBUG")}dispose(){if(this.disposed)return;null!=this.program&&console.warn("Disposing a GPGPUContext that still has a bound WebGLProgram. This is probably a resource leak, delete the program with GPGPUContext.deleteProgram before disposing."),null!=this.outputTexture&&console.warn("Disposing a GPGPUContext that still has a bound output matrix texture.  This is probably a resource leak, delete the output matrix texture with GPGPUContext.deleteMatrixTexture before disposing.");const e=this.gl;_R(e,(()=>e.finish())),_R(e,(()=>e.bindFramebuffer(e.FRAMEBUFFER,null))),_R(e,(()=>e.deleteFramebuffer(this.framebuffer))),_R(e,(()=>e.bindBuffer(e.ARRAY_BUFFER,null))),_R(e,(()=>e.bindBuffer(e.ELEMENT_ARRAY_BUFFER,null))),_R(e,(()=>e.deleteBuffer(this.indexBuffer))),this.disposed=!0}createFloat32MatrixTexture(e,t){return this.throwIfDisposed(),function(e,t,n,s){const[r,a]=CR(t,n);return EF(e,r,a,AF(s),s.textureFormatFloat,e.FLOAT)}(this.gl,e,t,this.textureConfig)}createFloat16MatrixTexture(e,t){return this.throwIfDisposed(),function(e,t,n,s){const[r,a]=CR(t,n);return EF(e,r,a,_F(s),s.textureFormatFloat,s.textureTypeHalfFloat)}(this.gl,e,t,this.textureConfig)}createUnsignedBytesMatrixTexture(e,t){return this.throwIfDisposed(),function(e,t,n,s){const[r,a]=CR(t,n);return EF(e,r,a,RF(s),e.RGBA,e.UNSIGNED_BYTE)}(this.gl,e,t,this.textureConfig)}uploadPixelDataToTexture(e,t){this.throwIfDisposed(),function(e,t,n){_R(e,(()=>e.bindTexture(e.TEXTURE_2D,t))),n.data instanceof Uint8Array?2===He().getNumber("WEBGL_VERSION")?_R(e,(()=>e.texSubImage2D(e.TEXTURE_2D,0,0,0,n.width,n.height,e.RGBA,e.UNSIGNED_BYTE,n.data))):_R(e,(()=>e.texImage2D(e.TEXTURE_2D,0,e.RGBA,n.width,n.height,0,e.RGBA,e.UNSIGNED_BYTE,n.data))):2===He().getNumber("WEBGL_VERSION")?_R(e,(()=>e.texSubImage2D(e.TEXTURE_2D,0,0,0,e.RGBA,e.UNSIGNED_BYTE,n))):_R(e,(()=>e.texImage2D(e.TEXTURE_2D,0,e.RGBA,e.RGBA,e.UNSIGNED_BYTE,n))),_R(e,(()=>e.bindTexture(e.TEXTURE_2D,null)))}(this.gl,e,t)}uploadDenseMatrixToTexture(e,t,n,s){this.throwIfDisposed(),function(e,t,n,s,r,a){let i,o,l;_R(e,(()=>e.bindTexture(e.TEXTURE_2D,t))),r instanceof Uint8Array?(i=new Uint8Array(n*s*4),o=e.UNSIGNED_BYTE,l=e.RGBA):(i=new Float32Array(n*s*4),o=e.FLOAT,l=a.internalFormatPackedFloat),i.set(r),2===He().getNumber("WEBGL_VERSION")?_R(e,(()=>e.texSubImage2D(e.TEXTURE_2D,0,0,0,n,s,e.RGBA,o,i))):_R(e,(()=>e.texImage2D(e.TEXTURE_2D,0,l,n,s,0,e.RGBA,o,i))),_R(e,(()=>e.bindTexture(e.TEXTURE_2D,null)))}(this.gl,e,t,n,s,this.textureConfig)}createFloat16PackedMatrixTexture(e,t){return this.throwIfDisposed(),function(e,t,n,s){const[r,a]=ER(t,n);return EF(e,r,a,DF(s),e.RGBA,s.textureTypeHalfFloat)}(this.gl,e,t,this.textureConfig)}createPackedMatrixTexture(e,t){return this.throwIfDisposed(),function(e,t,n,s){const[r,a]=ER(t,n);return EF(e,r,a,FF(s),e.RGBA,e.FLOAT)}(this.gl,e,t,this.textureConfig)}deleteMatrixTexture(e){this.throwIfDisposed(),this.outputTexture===e&&(BR(this.gl,this.framebuffer),this.outputTexture=null),_R(this.gl,(()=>this.gl.deleteTexture(e)))}downloadByteEncodedFloatMatrixFromOutputTexture(e,t,n){return this.downloadMatrixDriver(e,(()=>function(e,t,n,s){const[r,a]=CR(t,n),i=new Uint8Array(t*n*4);return _R(e,(()=>e.readPixels(0,0,r,a,s.downloadTextureFormat,e.UNSIGNED_BYTE,i))),new Float32Array(i.buffer)}(this.gl,t,n,this.textureConfig)))}downloadPackedMatrixFromBuffer(e,t,n,s,r,a){return function(e,t,n,s,r,a,i,o){const l=e,u=new Float32Array(function(e,t){const[n,s]=ER(e,t);return n*s*4}(a,i));return l.bindBuffer(l.PIXEL_PACK_BUFFER,t),l.getBufferSubData(l.PIXEL_PACK_BUFFER,0,u),l.bindBuffer(l.PIXEL_PACK_BUFFER,null),u}(this.gl,e,0,0,0,r,a,this.textureConfig)}downloadFloat32MatrixFromBuffer(e,t){return function(e,t,n){const s=e,r=new Float32Array(n);return s.bindBuffer(s.PIXEL_PACK_BUFFER,t),s.getBufferSubData(s.PIXEL_PACK_BUFFER,0,r),s.bindBuffer(s.PIXEL_PACK_BUFFER,null),r}(this.gl,e,t)}createBufferFromTexture(e,t,n){this.bindTextureToFrameBuffer(e);const s=function(e,t,n,s){const r=e.createBuffer();_R(e,(()=>e.bindBuffer(e.PIXEL_PACK_BUFFER,r)));const a=16*t*n;return _R(e,(()=>e.bufferData(e.PIXEL_PACK_BUFFER,a,e.STREAM_READ))),_R(e,(()=>e.readPixels(0,0,n,t,e.RGBA,e.FLOAT,0))),_R(e,(()=>e.bindBuffer(e.PIXEL_PACK_BUFFER,null))),r}(this.gl,t,n,this.textureConfig);return this.unbindTextureToFrameBuffer(),s}createAndWaitForFence(){const e=this.createFence(this.gl);return this.pollFence(e)}createFence(e){let t,n;if(He().getBool("WEBGL_FENCE_API_ENABLED")){const s=e,r=s.fenceSync(s.SYNC_GPU_COMMANDS_COMPLETE,0);e.flush(),n=()=>{const e=s.clientWaitSync(r,0,0);return e===s.ALREADY_SIGNALED||e===s.CONDITION_SATISFIED},t=r}else He().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")>0?(t=this.beginQuery(),this.endQuery(),n=()=>this.isQueryAvailable(t,He().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION"))):n=()=>!0;return{query:t,isFencePassed:n}}downloadMatrixFromPackedTexture(e,t,n){return this.downloadMatrixDriver(e,(()=>function(e,t,n){const s=new Float32Array(t*n*4);return _R(e,(()=>e.readPixels(0,0,n,t,e.RGBA,e.FLOAT,s))),s}(this.gl,t,n)))}createProgram(e){this.throwIfDisposed();const t=this.gl;null==this.vertexShader&&(this.vertexShader=function(e){const t=tF();return function(e,t){const n=VR(e,(()=>e.createShader(e.VERTEX_SHADER)),"Unable to create vertex WebGLShader.");if(_R(e,(()=>e.shaderSource(n,t))),_R(e,(()=>e.compileShader(n))),!1===e.getShaderParameter(n,e.COMPILE_STATUS))throw console.log(e.getShaderInfoLog(n)),new Error("Failed to compile vertex shader.");return n}(e,`${t.version}\n    precision highp float;\n    ${t.attribute} vec3 clipSpacePos;\n    ${t.attribute} vec2 uv;\n    ${t.varyingVs} vec2 resultUV;\n\n    void main() {\n      gl_Position = vec4(clipSpacePos, 1);\n      resultUV = uv;\n    }`)}(t));const n=function(e){return VR(e,(()=>e.createProgram()),"Unable to create WebGLProgram.")}(t);return _R(t,(()=>t.attachShader(n,this.vertexShader))),_R(t,(()=>t.attachShader(n,e))),function(e,t){if(_R(e,(()=>e.linkProgram(t))),!He().get("ENGINE_COMPILE_ONLY")&&!1===e.getProgramParameter(t,e.LINK_STATUS))throw console.log(e.getProgramInfoLog(t)),new Error("Failed to link vertex and fragment shaders.")}(t,n),this.debug&&MR(t,n),this.vertexAttrsAreBound||(this.setProgram(n),this.vertexAttrsAreBound=function(e,t,n){return _R(e,(()=>e.bindBuffer(e.ARRAY_BUFFER,n))),LR(e,t,"clipSpacePos",n,3,20,0)&&LR(e,t,"uv",n,2,20,12)}(t,this.program,this.vertexBuffer)),n}deleteProgram(e){this.throwIfDisposed(),e===this.program&&(this.program=null),null!=e&&_R(this.gl,(()=>this.gl.deleteProgram(e)))}setProgram(e){this.throwIfDisposed(),this.program=e,null!=this.program&&this.debug&&MR(this.gl,this.program),_R(this.gl,(()=>this.gl.useProgram(e)))}getUniformLocation(e,t,n=!0){return this.throwIfDisposed(),n?function(e,t,n){return VR(e,(()=>e.getUniformLocation(t,n)),'uniform "'+n+'" not present in program.')}(this.gl,e,t):function(e,t,n){return e.getUniformLocation(t,n)}(this.gl,e,t)}getAttributeLocation(e,t){return this.throwIfDisposed(),_R(this.gl,(()=>this.gl.getAttribLocation(e,t)))}getUniformLocationNoThrow(e,t){return this.throwIfDisposed(),this.gl.getUniformLocation(e,t)}setInputMatrixTexture(e,t,n){this.throwIfDisposed(),this.throwIfNoProgram(),zR(this.gl,e,t,n)}setOutputMatrixTexture(e,t,n){this.setOutputMatrixTextureDriver(e,n,t)}setOutputPackedMatrixTexture(e,t,n){this.throwIfDisposed();const[s,r]=ER(t,n);this.setOutputMatrixTextureDriver(e,s,r)}setOutputMatrixWriteRegion(e,t,n,s){this.setOutputMatrixWriteRegionDriver(n,e,s,t)}setOutputPackedMatrixWriteRegion(e,t,n,s){throw new Error("setOutputPackedMatrixWriteRegion not implemented.")}debugValidate(){null!=this.program&&MR(this.gl,this.program),WR(this.gl)}executeProgram(){this.throwIfDisposed(),this.throwIfNoProgram();const e=this.gl;this.debug&&this.debugValidate(),_R(e,(()=>e.drawElements(e.TRIANGLES,6,e.UNSIGNED_SHORT,0)))}blockUntilAllProgramsCompleted(){this.throwIfDisposed(),_R(this.gl,(()=>this.gl.finish()))}getQueryTimerExtension(){return null==this.disjointQueryTimerExtension&&(this.disjointQueryTimerExtension=FR(this.gl,2===He().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")?"EXT_disjoint_timer_query_webgl2":"EXT_disjoint_timer_query")),this.disjointQueryTimerExtension}getQueryTimerExtensionWebGL2(){return this.getQueryTimerExtension()}getQueryTimerExtensionWebGL1(){return this.getQueryTimerExtension()}beginQuery(){if(2===He().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")){const e=this.gl,t=this.getQueryTimerExtensionWebGL2(),n=e.createQuery();return e.beginQuery(t.TIME_ELAPSED_EXT,n),n}const e=this.getQueryTimerExtensionWebGL1(),t=e.createQueryEXT();return e.beginQueryEXT(e.TIME_ELAPSED_EXT,t),t}endQuery(){if(2===He().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")){const e=this.gl,t=this.getQueryTimerExtensionWebGL2();return void e.endQuery(t.TIME_ELAPSED_EXT)}const e=this.getQueryTimerExtensionWebGL1();e.endQueryEXT(e.TIME_ELAPSED_EXT)}async waitForQueryAndGetTime(e){return await me((()=>this.disposed||this.isQueryAvailable(e,He().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")))),this.getQueryTime(e,He().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION"))}getQueryTime(e,t){if(0===t)return null;if(2===t){const t=this.gl;return t.getQueryParameter(e,t.QUERY_RESULT)/1e6}{const t=this.getQueryTimerExtensionWebGL1();return t.getQueryObjectEXT(e,t.QUERY_RESULT_EXT)/1e6}}isQueryAvailable(e,t){if(0===t)return!0;if(2===t){const t=this.gl,n=this.getQueryTimerExtensionWebGL2(),s=t.getQueryParameter(e,t.QUERY_RESULT_AVAILABLE);return null==this.disjoint&&(this.disjoint=this.gl.getParameter(n.GPU_DISJOINT_EXT)),s&&!this.disjoint}{const t=this.getQueryTimerExtensionWebGL1(),n=t.getQueryObjectEXT(e,t.QUERY_RESULT_AVAILABLE_EXT);return null==this.disjoint&&(this.disjoint=this.gl.getParameter(t.GPU_DISJOINT_EXT)),n&&!this.disjoint}}pollFence(e){return new Promise((t=>{this.addItemToPoll((()=>e.isFencePassed()),(()=>t()))}))}pollItems(){const e=function(e){let t=0;for(;t<e.length&&e[t]();++t);return t-1}(this.itemsToPoll.map((e=>e.isDoneFn)));for(let t=0;t<=e;++t){const{resolveFn:e}=this.itemsToPoll[t];e()}this.itemsToPoll=this.itemsToPoll.slice(e+1)}addItemToPoll(e,t){this.itemsToPoll.push({isDoneFn:e,resolveFn:t}),this.itemsToPoll.length>1||me((()=>(this.pollItems(),0===this.itemsToPoll.length)))}bindTextureToFrameBuffer(e){this.throwIfDisposed(),PR(this.gl,e,this.framebuffer),this.debug&&WR(this.gl)}unbindTextureToFrameBuffer(){null!=this.outputTexture?(PR(this.gl,this.outputTexture,this.framebuffer),this.debug&&WR(this.gl)):BR(this.gl,this.framebuffer)}downloadMatrixDriver(e,t){this.bindTextureToFrameBuffer(e);const n=t();return this.unbindTextureToFrameBuffer(),n}setOutputMatrixTextureDriver(e,t,n){this.throwIfDisposed();const s=this.gl;PR(s,e,this.framebuffer),this.debug&&WR(s),this.outputTexture=e,_R(s,(()=>s.viewport(0,0,t,n))),_R(s,(()=>s.scissor(0,0,t,n)))}setOutputMatrixWriteRegionDriver(e,t,n,s){this.throwIfDisposed(),_R(this.gl,(()=>this.gl.scissor(e,t,n,s)))}throwIfDisposed(){if(this.disposed)throw new Error("Attempted to use disposed GPGPUContext.")}throwIfNoProgram(){if(null==this.program)throw new Error("No GPU program is currently set.")}}const{addImpl:MF,bincountImpl:LF,bincountReduceImpl:zF,ceilImpl:PF,concatImpl:BF,equalImpl:WF,expImpl:VF,expm1Impl:UF,floorImpl:GF,gatherNdImpl:HF,gatherV2Impl:jF,greaterImpl:qF,greaterEqualImpl:KF,lessImpl:XF,lessEqualImpl:YF,linSpaceImpl:ZF,logImpl:JF,maxImpl:QF,maximumImpl:eD,minimumImpl:tD,multiplyImpl:nD,negImpl:sD,notEqualImpl:rD,prodImpl:aD,rangeImpl:iD,rsqrtImpl:oD,scatterImpl:lD,sigmoidImpl:uD,simpleAbsImpl:cD,sliceImpl:hD,sparseFillEmptyRowsImpl:pD,sparseReshapeImpl:dD,sparseSegmentReductionImpl:fD,sqrtImpl:mD,stridedSliceImpl:gD,stringNGramsImpl:yD,stringSplitImpl:bD,stringToHashBucketFastImpl:xD,subImpl:vD,tileImpl:wD,topKImpl:kD,transposeImpl:ID,uniqueImpl:SD}=H;function ND(e,t){return["x","y","z","w","u","v"].slice(0,t).map((t=>`${e}.${t}`))}function TD(e,t){return 1===t?[e]:ND(e,t)}class CD{constructor(e){if(this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0,this.outputShape=e,this.rank=e.length,this.enableShapeUniforms=kF(this.outputShape.length),0===this.rank)this.userCode="\n        void main() {\n          setOutput(vec4(getA(), 0., 0., 0.));\n        }\n      ";else{const e=TD("rc",this.rank),t=gF(this.rank),n=this.getOutOfBoundsCondition(e),s=this.getSetup(e),r=this.getOutput(e);this.userCode=`\n        void main() {\n          ${t} rc = getOutputCoords();\n\n          if(${n}) {\n            setOutput(vec4(0));\n          } else {\n            ${s}\n\n            setOutput(vec4(${r}));\n          }\n        }\n      `}}getSourceCoordsArr(e){const t=[];for(let n=0;n<=1;n++)for(let s=0;s<=1;s++){let r=`${0===n?"r":"rp1"}, ${0===s?"c":"cp1"}`;for(let t=2;t<this.rank;t++)r=`${e[e.length-1-t]},`+r;t.push(r)}return t}getOutOfBoundsCondition(e){if(1===this.rank)return`rc > ${this.enableShapeUniforms?"outShape":this.outputShape[0]}`;let t="";for(let n=this.rank-2;n<this.rank;n++)t+=`${e[n]} >= ${this.enableShapeUniforms?`outShape[${n}]`:this.outputShape[n]}`,n<this.rank-1&&(t+="||");return t}getSetup(e){if(1===this.rank)return"";const t=e.slice(-2),n=this.enableShapeUniforms?`outShape[${this.rank} - 1]`:this.outputShape[this.rank-1],s=this.enableShapeUniforms?`outShape[${this.rank} - 2]`:this.outputShape[this.rank-2];return`\n      int r = ${t[0]};\n      int c = ${t[1]};\n      int rp1 = r + 1;\n      int cp1 = c + 1;\n\n      bool cEdge = cp1 >= ${n};\n      bool rEdge = rp1 >= ${s};\n    `}getOutput(e){const t=this.getSourceCoordsArr(e);return 1===this.rank?`getA(rc), (rc + 1 >= ${this.enableShapeUniforms?"outShape":this.outputShape[0]} ? 0. : getA(rc + 1)), 0, 0`:`getA(${t[0]}),\n            cEdge ? 0. : getA(${t[1]}),\n            rEdge ? 0. : getA(${t[2]}),\n            rEdge || cEdge ? 0. : getA(${t[3]})`}}class $D{constructor(e,t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"inputShape",type:"ivec3"}],this.outputShape=e,this.enableShapeUniforms=kF(this.outputShape.length);let n="";for(let e=0;e<4;e++){let t="thisRC = rc;";e%2==1&&(t+="thisRC.z += 1;"),e>1&&(t+="thisRC.y += 1;"),n+=`\n        ${t}\n        ${e>0?"if(thisRC.y < rows && thisRC.z < cols){":""}\n          int flatIndex = getFlatIndex(thisRC);\n\n          ivec3 inputRC = inputCoordsFromReshapedOutCoords(flatIndex);\n          vec2 inputRCInnerDims = vec2(float(inputRC.y),float(inputRC.z));\n\n          result[${e}] =\n            getChannel(getA(inputRC.x, inputRC.y, inputRC.z), inputRCInnerDims);\n        ${e>0?"}":""}\n      `}var s,r;this.userCode=`\n      ${s=t,r=this.enableShapeUniforms,`\n    ivec3 inputCoordsFromReshapedOutCoords(int index) {\n      ${r?function(e,t,n="index"){const s=function(e,t){const n=e.length,s=e.map((e=>`${t}[${e}]`)),r=new Array(n-1);r[n-2]=s[n-1];for(let e=n-3;e>=0;--e)r[e]=`(${r[e+1]} * ${s[e+1]})`;return r}(e.map(((e,t)=>t)),t);return s.map(((t,r)=>`int ${e[r]} = ${n} / ${s[r]}; ${r===s.length-1?`int ${e[r+1]} = ${n} - ${e[r]} * ${s[r]}`:`index -= ${e[r]} * ${s[r]}`};`)).join("")}(["r","c","d"],"inputShape"):nF(["r","c","d"],s)}\n      return ivec3(r, c, d);\n    }\n  `}\n      ${this.enableShapeUniforms?"\n  int getFlatIndex(ivec3 coords) {\n    return coords.x * outShapeStrides[0] + coords.y * outShapeStrides[1] + coords.z;\n  }\n":rF(e)}\n\n      void main() {\n        ivec3 rc = getOutputCoords();\n\n        vec4 result = vec4(0.);\n\n        ivec3 thisRC;\n        int rows = ${this.enableShapeUniforms?"outShape[1]":e[1]};\n        int cols = ${this.enableShapeUniforms?"outShape[2]":e[2]};\n\n        ${n}\n\n        setOutput(result);\n      }\n    `}}class ED{constructor(e){this.gpgpu=e,this.numUsedTextures=0,this.numFreeTextures=0,this._numBytesAllocated=0,this._numBytesFree=0,this.freeTextures={},this.logEnabled=!1,this.usedTextures={}}acquireTexture(e,t,n){const s=_D(t,n),r=RD(e,s,n);r in this.freeTextures||(this.freeTextures[r]=[]),r in this.usedTextures||(this.usedTextures[r]=[]);const a=AD(e,s,this.gpgpu.gl,this.gpgpu.textureConfig,n);if(this.freeTextures[r].length>0){this.numFreeTextures--,this.numUsedTextures++,this._numBytesFree-=a,this.log();const e=this.freeTextures[r].shift();return this.usedTextures[r].push(e),e}let i;return s===TR.PACKED_2X2_FLOAT32?i=this.gpgpu.createPackedMatrixTexture(e[0],e[1]):s===TR.PACKED_2X2_FLOAT16?i=this.gpgpu.createFloat16PackedMatrixTexture(e[0],e[1]):s===TR.UNPACKED_FLOAT32?i=this.gpgpu.createFloat32MatrixTexture(e[0],e[1]):s===TR.UNPACKED_FLOAT16?i=this.gpgpu.createFloat16MatrixTexture(e[0],e[1]):s===TR.PACKED_4X1_UNSIGNED_BYTE&&(i=this.gpgpu.createUnsignedBytesMatrixTexture(e[0],e[1])),this.usedTextures[r].push(i),this.numUsedTextures++,this._numBytesAllocated+=a,this.log(),i}releaseTexture(e,t,n,s){if(null==this.freeTextures)return;const r=_D(n,s),a=RD(t,r,s);a in this.freeTextures||(this.freeTextures[a]=[]);const i=AD(t,r,this.gpgpu.gl,this.gpgpu.textureConfig,s),o=He().get("WEBGL_DELETE_TEXTURE_THRESHOLD");-1!==o&&this._numBytesAllocated>o?(this.gpgpu.deleteMatrixTexture(e.texture),this._numBytesAllocated-=i):(this.freeTextures[a].push(e),this.numFreeTextures++,this._numBytesFree+=i),this.numUsedTextures--;const l=this.usedTextures[a],u=l.indexOf(e);if(u<0)throw new Error("Cannot release a texture that was never provided by this texture manager");l.splice(u,1),this.log()}log(){if(!this.logEnabled)return;const e=this.numFreeTextures+this.numUsedTextures;console.log("Free/Used",`${this.numFreeTextures} / ${this.numUsedTextures}`,`(${e})`);const t=this._numBytesFree/this._numBytesAllocated;console.log(`Bytes allocated: ${this._numBytesAllocated}`),console.log(`Bytes unused: ${this._numBytesFree} (${Math.round(100*t)}%)`)}get numBytesAllocated(){return this._numBytesAllocated}get numBytesFree(){return this._numBytesFree}getNumUsedTextures(){return this.numUsedTextures}getNumFreeTextures(){return this.numFreeTextures}dispose(){if(null!=this.freeTextures){for(const e in this.freeTextures)this.freeTextures[e].forEach((e=>{this.gpgpu.deleteMatrixTexture(e.texture)}));for(const e in this.usedTextures)this.usedTextures[e].forEach((e=>{this.gpgpu.deleteMatrixTexture(e.texture)}));this.freeTextures=null,this.usedTextures=null,this.numUsedTextures=0,this.numFreeTextures=0,this._numBytesAllocated=0,this._numBytesFree=0}}}function AD(e,t,n,s,r){const a=function(e,t){switch(e){case TR.PACKED_2X2_FLOAT32:return FF(t);case TR.PACKED_2X2_FLOAT16:return DF(t);case TR.UNPACKED_FLOAT32:return AF(t);case TR.UNPACKED_FLOAT16:return _F(t);case TR.PACKED_4X1_UNSIGNED_BYTE:return RF(t);default:throw new Error(`Unknown physical texture type ${e}`)}}(t,s);let i;if(r){const[t,n]=ER(e[0],e[1]);i=t*n}else{const[t,n]=CR(e[0],e[1]);i=t*n}const o=function(e,t){const n=e;if(t===n.R32F)return 4;if(t===n.R16F)return 2;if(t===n.RGBA32F)return 16;if(t===e.RGBA)return 16;if(t===n.RGBA16F)return 8;if(t===n.RGBA8)return 4;throw new Error(`Unknown internal format ${t}`)}(n,a);return i*o}function _D(e,t){if(e===NR.UPLOAD)return TR.PACKED_2X2_FLOAT32;if(e===NR.RENDER||null==e)return function(e){return He().getBool("WEBGL_RENDER_FLOAT32_ENABLED")?e?TR.PACKED_2X2_FLOAT32:TR.UNPACKED_FLOAT32:e?TR.PACKED_2X2_FLOAT16:TR.UNPACKED_FLOAT16}(t);if(e===NR.DOWNLOAD||e===NR.PIXELS)return TR.PACKED_4X1_UNSIGNED_BYTE;throw new Error(`Unknown logical texture type ${e}`)}function RD(e,t,n){return`${e[0]}_${e[1]}_${t}_${n}`}class FD{constructor(e,t){this.variableNames=["A"],this.outputShape=e,this.enableShapeUniforms=kF(this.outputShape.length),this.userCode=`\n      float unaryOperation(float x) {\n        ${t}\n      }\n\n      void main() {\n        float x = getAAtOutCoords();\n        float y = unaryOperation(x);\n\n        setOutput(y);\n      }\n    `}}const DD="return abs(x);",OD="return x;";class MD{constructor(e,t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e,this.enableShapeUniforms=kF(this.outputShape.length),this.userCode=`\n      vec4 unaryOperation(vec4 x) {\n        ${t}\n      }\n\n      void main() {\n        vec4 x = getAAtOutCoords();\n        vec4 y = unaryOperation(x);\n\n        setOutput(y);\n      }\n    `}}class LD{constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!1,this.outputShape=e,this.enableShapeUniforms=kF(this.outputShape.length);const t=e.length,n=TD("rc",t),s=gF(t),r=function(e,t){if(1===e)return"rc";let n="";for(let s=0;s<e;s++)n+=t[s],s<e-1&&(n+=",");return n}(t,n),a=n.slice(-2),i=t<=1?"rc":`vec2(${a.join(",")})`;this.userCode=`\n      void main() {\n        ${s} rc = getOutputCoords();\n        vec4 packedInput = getA(${r});\n\n        setOutput(getChannel(packedInput, ${i}));\n      }\n    `}}const zD=wp,PD={},BD=He().getNumber("CPU_HANDOFF_SIZE_THRESHOLD");class WD extends q{constructor(e){if(super(),this.pendingRead=new WeakMap,this.pendingDisposal=new WeakSet,this.dataRefCount=new WeakMap,this.numBytesInGPU=0,this.uploadWaitMs=0,this.downloadWaitMs=0,this.lastGlFlushTime=0,this.warnedAboutMemory=!1,this.pendingDeletes=0,this.disposed=!1,!He().getBool("HAS_WEBGL"))throw new Error("WebGL is not supported on this device");let t;if(null!=e){if(e instanceof OF)t=e;else{const n=IR(He().getNumber("WEBGL_VERSION"),e);t=new OF(n)}this.binaryCache={},this.gpgpuCreatedLocally=!1}else{const e=IR(He().getNumber("WEBGL_VERSION"));t=new OF(e),this.binaryCache=((n=He().getNumber("WEBGL_VERSION"))in PD||(PD[n]={}),PD[n]),this.gpgpuCreatedLocally=!0}var n;this.gpgpu=t,this.canvas=this.gpgpu.gl.canvas,this.textureManager=new ED(this.gpgpu),this.numMBBeforeWarning=null==He().global.screen?1024:He().global.screen.height*He().global.screen.width*window.devicePixelRatio*600/1024/1024,this.texData=new j(this,Yo())}nextDataId(){return WD.nextDataId++}numDataIds(){return this.texData.numDataIds()-this.pendingDeletes}write(e,t,n){if((He().getBool("WEBGL_CHECK_NUMERICAL_PROBLEMS")||He().getBool("DEBUG"))&&this.checkNumericalProblems(e),"complex64"===n&&null!=e)throw new Error("Cannot write to a complex64 dtype. Please use tf.complex(real, imag).");const s={id:this.nextDataId()};return this.texData.set(s,{shape:t,dtype:n,values:e,usage:NR.UPLOAD,refCount:1}),s}refCount(e){return this.texData.has(e)?this.texData.get(e).refCount:0}incRef(e){this.texData.get(e).refCount++}decRef(e){this.texData.has(e)&&this.texData.get(e).refCount--}move(e,t,n,s,r){if(He().getBool("DEBUG")&&this.checkNumericalProblems(t),"complex64"===s)throw new Error("Cannot write to a complex64 dtype. Please use tf.complex(real, imag).");this.texData.set(e,{shape:n,dtype:s,values:t,usage:NR.UPLOAD,refCount:r})}disposeIntermediateTensorInfo(e){this.disposeData(e.dataId)}readSync(e){const t=this.texData.get(e),{values:n,dtype:s,complexTensorInfos:r,slice:a,shape:i,isPacked:o}=t;if(null!=a){let t;t=o?new MD(i,OD):new FD(i,OD);const n=this.runWebGLProgram(t,[{dataId:e,shape:i,dtype:s}],s),r=this.readSync(n.dataId);return this.disposeIntermediateTensorInfo(n),r}if(null!=n)return this.convertAndCacheOnCPU(e);if("string"===s)return n;const l=null!=this.activeTimers;let u,c;return l&&(u=Or()),c="complex64"===s?uf(this.readSync(r.real.dataId),this.readSync(r.imag.dataId)):this.getValuesFromTexture(e),l&&(this.downloadWaitMs+=Or()-u),this.convertAndCacheOnCPU(e,c)}async read(e){if(this.pendingRead.has(e)){const t=this.pendingRead.get(e);return new Promise((e=>t.push(e)))}const t=this.texData.get(e),{values:n,shape:s,slice:r,dtype:a,complexTensorInfos:i,isPacked:o}=t;if(null!=r){let t;t=o?new MD(s,OD):new FD(s,OD);const n=this.runWebGLProgram(t,[{dataId:e,shape:s,dtype:a}],a),r=this.read(n.dataId);return this.disposeIntermediateTensorInfo(n),r}if(null!=n)return this.convertAndCacheOnCPU(e);if(He().getBool("DEBUG")&&!He().getBool("WEBGL_DOWNLOAD_FLOAT_ENABLED")&&2===He().getNumber("WEBGL_VERSION"))throw new Error("tensor.data() with WEBGL_DOWNLOAD_FLOAT_ENABLED=false and WEBGL_VERSION=2 not yet supported.");let l,u,c=null;if("complex64"!==a&&He().get("WEBGL_BUFFER_SUPPORTED")){l=this.decode(e);const t=this.texData.get(l.dataId);c=this.gpgpu.createBufferFromTexture(t.texture.texture,...$R(s))}if(this.pendingRead.set(e,[]),"complex64"!==a&&await this.gpgpu.createAndWaitForFence(),"complex64"===a){const e=await Promise.all([this.read(i.real.dataId),this.read(i.imag.dataId)]);u=uf(e[0],e[1])}else if(null==c)u=this.getValuesFromTexture(e);else{const e=oe(s);u=this.gpgpu.downloadFloat32MatrixFromBuffer(c,e)}if(null!=l&&this.disposeIntermediateTensorInfo(l),null!=c){const e=this.gpgpu.gl;_R(e,(()=>e.deleteBuffer(c)))}const h=this.convertAndCacheOnCPU(e,u),p=this.pendingRead.get(e);return this.pendingRead.delete(e),p.forEach((e=>e(h))),this.pendingDisposal.has(e)&&(this.pendingDisposal.delete(e),this.disposeData(e)&&Yo().removeDataId(e,this),this.pendingDeletes--),h}readToGPU(e,t={}){const n=this.texData.get(e),{values:s,shape:r,slice:a,dtype:i,isPacked:o,texture:l}=n;if("complex64"===i)throw new Error("Does not support reading texture for complex64 dtype.");if(null!=a){let n;n=o?new MD(r,OD):new FD(r,OD);const s=this.runWebGLProgram(n,[{dataId:e,shape:r,dtype:i}],i),a=this.readToGPU(s,t);return this.disposeIntermediateTensorInfo(s),a}if(null==l)throw null!=s?new Error("Data is not on GPU but on CPU."):new Error("There is no data on GPU or CPU.");const u=this.decode(e,t.customTexShape),c=Yo().makeTensorFromTensorInfo(u),h=this.texData.get(u.dataId);return Object.assign({tensorRef:c},h.texture)}bufferSync(e){const t=this.readSync(e.dataId);if("string"===e.dtype)try{const n=t.map((e=>zr(e)));return $i(e.shape,e.dtype,n)}catch(e){throw new Error("Failed to decode encoded string bytes into utf-8")}return $i(e.shape,e.dtype,t)}checkNumericalProblems(e){if(null!=e)for(let t=0;t<e.length;t++){const n=e[t];if(!RR(n)){if(He().getBool("WEBGL_RENDER_FLOAT32_CAPABLE"))throw Error(`The value ${n} cannot be represented with your current settings. Consider enabling float32 rendering: 'tf.env().set('WEBGL_RENDER_FLOAT32_ENABLED', true);'`);throw Error(`The value ${n} cannot be represented on this device.`)}}}getValuesFromTexture(e){const{shape:t,dtype:n,isPacked:s}=this.texData.get(e),r=oe(t);if(He().getBool("WEBGL_DOWNLOAD_FLOAT_ENABLED")){const n=this.decode(e),s=this.texData.get(n.dataId),a=this.gpgpu.downloadMatrixFromPackedTexture(s.texture.texture,...$R(t)).subarray(0,r);return this.disposeIntermediateTensorInfo(n),a}const a=He().getBool("WEBGL_PACK")&&!0===s,i=a?HR(t):t,o=a?new TF(i):new NF(i),l=this.runWebGLProgram(o,[{shape:i,dtype:n,dataId:e}],"float32"),u=this.texData.get(l.dataId),c=this.gpgpu.downloadByteEncodedFloatMatrixFromOutputTexture(u.texture.texture,u.texShape[0],u.texShape[1]).subarray(0,r);return this.disposeIntermediateTensorInfo(l),c}timerAvailable(){return He().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0}time(e){const t=this.activeTimers,n=[];let s=!1;null==this.programTimersStack?(this.programTimersStack=n,s=!0):this.activeTimers.push(n),this.activeTimers=n,e();const r=ie(this.activeTimers.map((e=>e.query))).filter((e=>null!=e)),a=ie(this.activeTimers.map((e=>e.name))).filter((e=>null!=e));this.activeTimers=t,s&&(this.programTimersStack=null);const i={uploadWaitMs:this.uploadWaitMs,downloadWaitMs:this.downloadWaitMs,kernelMs:null,wallMs:null};return(async()=>{if(He().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0){const e=await Promise.all(r);i.kernelMs=ee(e),i.getExtraProfileInfo=()=>e.map(((e,t)=>({name:a[t],ms:e}))).map((e=>`${e.name}: ${e.ms}`)).join(", ")}else i.kernelMs={error:"WebGL query timers are not supported in this environment."};return this.uploadWaitMs=0,this.downloadWaitMs=0,i})()}memory(){return{unreliable:!1,numBytesInGPU:this.numBytesInGPU,numBytesInGPUAllocated:this.textureManager.numBytesAllocated,numBytesInGPUFree:this.textureManager.numBytesFree}}startTimer(){return He().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0?this.gpgpu.beginQuery():{startMs:Or(),endMs:null}}endTimer(e){return He().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0?(this.gpgpu.endQuery(),e):(e.endMs=Or(),e)}async getQueryTime(e){if(He().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0)return this.gpgpu.waitForQueryAndGetTime(e);const t=e;return t.endMs-t.startMs}disposeData(e,t=!1){if(this.pendingDisposal.has(e))return!1;if(!this.texData.has(e))return!0;if(t?this.texData.get(e).refCount=0:this.texData.get(e).refCount--,!t&&this.texData.get(e).refCount>0)return!1;if(this.pendingRead.has(e))return this.pendingDisposal.add(e),this.pendingDeletes++,!1;this.releaseGPUData(e);const{complexTensorInfos:n}=this.texData.get(e);return null!=n&&(this.disposeData(n.real.dataId,t),this.disposeData(n.imag.dataId,t)),this.texData.delete(e),!0}releaseGPUData(e){const{texture:t,dtype:n,texShape:s,usage:r,isPacked:a,slice:i}=this.texData.get(e),o=i&&i.origDataId||e,l=this.dataRefCount.get(o);l>1?this.dataRefCount.set(o,l-1):(this.dataRefCount.delete(o),null!=t&&(this.numBytesInGPU-=this.computeBytes(s,n),this.textureManager.releaseTexture(t,s,r,a)));const u=this.texData.get(e);u.texture=null,u.texShape=null,u.isPacked=!1,u.slice=null}getTexture(e){return this.uploadToGPU(e),this.texData.get(e).texture.texture}getDataInfo(e){return this.texData.get(e)}shouldExecuteOnCPU(e,t=BD){return He().getBool("WEBGL_CPU_FORWARD")&&e.every((e=>null==this.texData.get(e.dataId).texture&&oe(e.shape)<t))}getGPGPUContext(){return this.gpgpu}where(e){ir("tf.where() in webgl locks the UI thread. Call tf.whereAsync() instead");const t=e.dataSync();return zD(e.shape,t)}packedUnaryOp(e,t,n){const s=new MD(e.shape,t),r=this.compileAndRun(s,[e],n);return Yo().makeTensorFromTensorInfo(r)}abs(e){if(this.shouldExecuteOnCPU([e])&&"complex64"!==e.dtype){const t=cD(this.texData.get(e.dataId).values);return this.makeOutput(e.shape,e.dtype,t)}if(He().getBool("WEBGL_PACK_UNARY_OPERATIONS"))return this.packedUnaryOp(e,DD,e.dtype);const t=new FD(e.shape,DD),n=this.compileAndRun(t,[e]);return Yo().makeTensorFromTensorInfo(n)}makeTensorInfo(e,t,n){let s;if("string"===t&&null!=n&&n.length>0&&Ce(n[0])){const r=n.map((e=>Lr(e)));s=this.write(r,e,t)}else s=this.write(n,e,t);return this.texData.get(s).usage=null,{dataId:s,shape:e,dtype:t}}makeOutput(e,t,n){return Yo().makeTensorFromTensorInfo(this.makeTensorInfo(e,t,n),this)}unpackTensor(e){const t=new LD(e.shape);return this.runWebGLProgram(t,[e],e.dtype)}packTensor(e){const t=new CD(e.shape);return this.runWebGLProgram(t,[e],e.dtype,null,!0)}packedReshape(e,t){const n=[UR(e.shape),...GR(e.shape)],s={dtype:e.dtype,shape:n,dataId:e.dataId},r=[UR(t),...GR(t)],a=new $D(r,n),i=[n],o=this.runWebGLProgram(a,[s],e.dtype,i,!0);return{dataId:o.dataId,shape:t,dtype:o.dtype}}decode(e,t){const n=this.texData.get(e),{isPacked:s,shape:r,dtype:a}=n;null!=t&&se(oe(r)<=t[0]*t[1]*4,(()=>"customTexShape is too small. Row * Column * 4 should be equal or larger than the size of the tensor data."));const i=HR(r);let o;o=s?new SF(i):new IF(i);const l=[null!=t?t:$R(i)];return{dtype:a,shape:r,dataId:this.runWebGLProgram(o,[{shape:i,dtype:a,dataId:e}],a,l,!0,t).dataId}}runWebGLProgram(e,t,n,s,r=!1,a){const i=this.makeTensorInfo(e.outputShape,n),o=this.texData.get(i.dataId);if(e.packedOutput&&(o.isPacked=!0),e.outPackingScheme===SR.DENSE){const t=null!=a?a:$R(e.outputShape);o.texShape=t.map((e=>2*e))}if(null!=e.outTexUsage&&(o.usage=e.outTexUsage),0===oe(i.shape))return o.values=xe(i.dtype,0),i;const l=[],u=t.map((t=>{if("complex64"===t.dtype)throw new Error("GPGPUProgram does not support complex64 input. For complex64 dtypes, please separate the program into real and imaginary parts.");let n=this.texData.get(t.dataId);if(null==n.texture){if(!e.packedInputs&&oe(t.shape)<=He().getNumber("WEBGL_SIZE_UPLOAD_UNIFORM"))return{shape:t.shape,texData:null,isUniform:!0,uniformValues:n.values};e.packedInputs&&(n.isPacked=!0,n.shape=t.shape)}if(this.uploadToGPU(t.dataId),!!n.isPacked!=!!e.packedInputs)t=n.isPacked?this.unpackTensor(t):this.packTensor(t),l.push(t),n=this.texData.get(t.dataId);else if(n.isPacked&&!qR(n.shape,t.shape)){const e=t,s=t.shape;t.shape=n.shape,t=this.packedReshape(t,s),l.push(t),n=this.texData.get(t.dataId),e.shape=s}return{shape:t.shape,texData:n,isUniform:!1}}));this.uploadToGPU(i.dataId);const c={shape:i.shape,texData:o,isUniform:!1},h=function(e,t,n){let s="";t.concat(n).forEach((t=>{const r=null!=t.texData&&null!=t.texData.slice&&t.texData.slice.flatOffset>0;if(e.enableShapeUniforms&&!t.isUniform){const a=t.texData.texShape,{useSqueezeShape:i,uniformShape:o,keptDims:l}=yF(e.packedInputs,t.shape,a);let u="",c="",h="";if(1===o.length&&e.packedInputs){const e=[Math.ceil(a[0]/2),Math.ceil(a[1]/2)];u=`${e[0]>1}_${e[1]>1}`}else if(2!==o.length||e.packedInputs){if(o.length>2&&!e.packedInputs){const e=Fe(o);h=`${e[0]===a[1]}_${e[e.length-1]===a[1]}`}}else c=`${o[0]>1}_${o[1]>1}`;const p=t.shape.length,d=2===o.length&&ue(t.shape,a),f=1===oe(t.shape),m=Qi(t.shape,n.shape),g=!e.packedInputs&&p===n.shape.length&&ue(a,n.texData.texShape),y=e.packedInputs||o.length>2?"":`${a[0]>1}_${a[1]>1}`;s+=`${p}_${g}_${i?l:""}_${o.length}_${f}_${m}_${d}_${u}_${c}_${h}_${y}_${r}`}else{const e=t.isUniform?"uniform":t.texData.texShape;s+=`${t.shape}_${e}_${r}`}}));const r=e.userCode;let a=e.constructor.name;return a+="_"+s+"_"+r+`${He().getNumber("WEBGL_VERSION")}`,a}(e,u,c),p=this.getAndSaveBinary(h,(()=>function(e,t,n,s){const r=n.map(((e,n)=>{const s={logicalShape:e.shape,texShape:e.isUniform?null:e.texData.texShape,isUniform:e.isUniform,isPacked:!e.isUniform&&e.texData.isPacked,flatOffset:null};return null!=e.texData&&null!=e.texData.slice&&e.texData.slice.flatOffset>0&&(s.flatOffset=e.texData.slice.flatOffset),{name:t.variableNames[n],shapeInfo:s}})),a=r.map((e=>e.shapeInfo)),i={logicalShape:s.shape,texShape:s.texData.texShape,isUniform:!1,isPacked:s.texData.isPacked,flatOffset:null},o=oF(r,i,t),l=function(e,t){const n=VR(e,(()=>e.createShader(e.FRAGMENT_SHADER)),"Unable to create fragment WebGLShader.");if(_R(e,(()=>e.shaderSource(n,t))),_R(e,(()=>e.compileShader(n))),He().get("ENGINE_COMPILE_ONLY"))return n;if(!1===e.getShaderParameter(n,e.COMPILE_STATUS))throw OR(t,e.getShaderInfoLog(n)),new Error("Failed to compile fragment shader.");return n}(e.gl,o),u=e.createProgram(l);return He().get("ENGINE_COMPILE_ONLY")?{program:t,fragmentShader:l,source:o,webGLProgram:u,inShapeInfos:a,outShapeInfo:i,uniformLocations:null,customUniformLocations:null,infLoc:null,nanLoc:null,inShapesLocations:null,inTexShapesLocations:null,outShapeLocation:null,outShapeStridesLocation:null,outTexShapeLocation:null}:Object.assign({program:t,fragmentShader:l,source:o,webGLProgram:u,inShapeInfos:a,outShapeInfo:i},vF(e,t,u))}(this.gpgpu,e,u,c))),d=null!=this.activeTimers;let f;d&&(f=this.startTimer()),He().get("ENGINE_COMPILE_ONLY")||function(e,t,n,s,r){t.program.enableShapeUniforms||(wF(t.inShapeInfos,n),wF([t.outShapeInfo],[s]));const a=s.texData.texture,i=s.texData.texShape;s.texData.isPacked?e.setOutputPackedMatrixTexture(a.texture,i[0],i[1]):e.setOutputMatrixTexture(a.texture,i[0],i[1]),e.setProgram(t.webGLProgram),1===He().getNumber("WEBGL_VERSION")&&null!==t.infLoc&&e.gl.uniform1f(t.infLoc,1/0),null!==t.nanLoc&&e.gl.uniform1f(t.nanLoc,NaN),n.forEach(((n,s)=>{const r=t.program.variableNames[s],a=t.uniformLocations[r],i=t.uniformLocations[`offset${r}`],o=t.inShapesLocations[`${r}Shape`],l=t.inTexShapesLocations[`${r}TexShape`];if(o){const{uniformShape:s}=yF(t.program.packedInputs,n.shape,n.texData.texShape);switch(s.length){case 1:e.gl.uniform1iv(o,new Int32Array(s));break;case 2:e.gl.uniform2iv(o,new Int32Array(s));break;case 3:e.gl.uniform3iv(o,new Int32Array(s));break;case 4:e.gl.uniform4iv(o,new Int32Array(s))}}if(l&&e.gl.uniform2i(l,n.texData.texShape[0],n.texData.texShape[1]),null!=a)if(n.isUniform)if(oe(n.shape)<2)e.gl.uniform1f(a,n.uniformValues[0]);else{let t=n.uniformValues;t instanceof Float32Array||(t=new Float32Array(t)),e.gl.uniform1fv(a,t)}else null!=n.texData.slice&&null!=i&&e.gl.uniform1i(i,n.texData.slice.flatOffset),e.setInputMatrixTexture(n.texData.texture.texture,a,s)}));const o=t.outShapeLocation;if(o)switch(s.shape.length){case 1:e.gl.uniform1iv(o,new Int32Array(s.shape));break;case 2:e.gl.uniform2iv(o,new Int32Array(s.shape));break;case 3:e.gl.uniform3iv(o,new Int32Array(s.shape));break;case 4:e.gl.uniform4iv(o,new Int32Array(s.shape))}if(t.outShapeStridesLocation){const n=Fe(s.shape);switch(s.shape.length){case 2:e.gl.uniform1iv(t.outShapeStridesLocation,new Int32Array(n));break;case 3:e.gl.uniform2iv(t.outShapeStridesLocation,new Int32Array(n));break;case 4:e.gl.uniform3iv(t.outShapeStridesLocation,new Int32Array(n))}}t.outTexShapeLocation&&e.gl.uniform2i(t.outTexShapeLocation,s.texData.texShape[0],s.texData.texShape[1]),t.program.customUniforms&&r&&t.program.customUniforms.forEach(((n,s)=>{const a=t.customUniformLocations[s],i=r[s];if("float"===n.type)e.gl.uniform1fv(a,i);else if("vec2"===n.type)e.gl.uniform2fv(a,i);else if("vec3"===n.type)e.gl.uniform3fv(a,i);else if("vec4"===n.type)e.gl.uniform4fv(a,i);else if("int"===n.type)e.gl.uniform1iv(a,i);else if("ivec2"===n.type)e.gl.uniform2iv(a,i);else if("ivec3"===n.type)e.gl.uniform3iv(a,i);else{if("ivec4"!==n.type)throw Error(`uniform type ${n.type} is not supported yet.`);e.gl.uniform4iv(a,i)}})),e.executeProgram()}(this.gpgpu,p,u,c,s),l.forEach((e=>this.disposeIntermediateTensorInfo(e))),d&&(f=this.endTimer(f),this.activeTimers.push({name:e.constructor.name,query:this.getQueryTime(f)}));const m=He().get("WEBGL_FLUSH_THRESHOLD");if(m>0){const e=Or();e-this.lastGlFlushTime>m&&(this.gpgpu.gl.flush(),this.lastGlFlushTime=e)}if(!He().getBool("WEBGL_LAZILY_UNPACK")&&o.isPacked&&!1===r){const e=this.unpackTensor(i);return this.disposeIntermediateTensorInfo(i),e}return i}compileAndRun(e,t,n,s,r=!1){return n=n||t[0].dtype,this.runWebGLProgram(e,t,n,s,r)}getAndSaveBinary(e,t){return e in this.binaryCache||(this.binaryCache[e]=t()),this.binaryCache[e]}getTextureManager(){return this.textureManager}dispose(){this.disposed||(He().getBool("IS_TEST")||Object.keys(this.binaryCache).forEach((e=>{this.gpgpu.deleteProgram(this.binaryCache[e].webGLProgram),delete this.binaryCache[e]})),this.textureManager.dispose(),null!=this.canvas&&"undefined"!=typeof HTMLCanvasElement&&this.canvas instanceof HTMLCanvasElement?this.canvas.remove():this.canvas=null,this.gpgpuCreatedLocally&&(this.gpgpu.program=null,this.gpgpu.dispose()),this.disposed=!0)}floatPrecision(){return null==this.floatPrecisionValue&&(this.floatPrecisionValue=Qo((()=>{if(!He().get("WEBGL_RENDER_FLOAT32_ENABLED")){const e=He().getBool("DEBUG");He().set("DEBUG",!1);const t=this.abs(Tl(1e-8)).dataSync()[0];if(He().set("DEBUG",e),t>0)return 32}return 16}))),this.floatPrecisionValue}epsilon(){return 32===this.floatPrecision()?1e-7:1e-4}uploadToGPU(e){const t=this.texData.get(e),{shape:n,dtype:s,values:r,texture:a,usage:i,isPacked:o}=t;if(null!=a)return;const l=null!=this.activeTimers;let u;l&&(u=Or());let c=t.texShape;if(null==c&&(c=function(e,t=!1){let n=He().getNumber("WEBGL_MAX_TEXTURE_SIZE");if(t&&(n*=2,1===(e=e.map(((t,n)=>n>=e.length-2?J(e[n]):e[n]))).length&&(e=[2,e[0]])),2!==e.length){const t=be(e);e=t.newShape}let s=oe(e);if(e.length<=1&&s<=n)return[1,s];if(2===e.length&&e[0]<=n&&e[1]<=n)return e;if(3===e.length&&e[0]*e[1]<=n&&e[2]<=n)return[e[0]*e[1],e[2]];if(3===e.length&&e[0]<=n&&e[1]*e[2]<=n)return[e[0],e[1]*e[2]];if(4===e.length&&e[0]*e[1]*e[2]<=n&&e[3]<=n)return[e[0]*e[1]*e[2],e[3]];if(4===e.length&&e[0]<=n&&e[1]*e[2]*e[3]<=n)return[e[0],e[1]*e[2]*e[3]];if(t){const t=UR(e);let n=2,r=2;return e.length&&([n,r]=GR(e)),s=t*(n/2)*(r/2),pe(s).map((e=>2*e))}return pe(s)}(n,o),t.texShape=c),null!=r){const e=HR(n);let a,i=c[1],h=c[0];const p=r instanceof Uint8Array||r instanceof Uint8ClampedArray;!o&&p||([i,h]=ER(c[0],c[1])),a=o?new $F(e,p):new CF(e,p);const d=p?[h,i]:c,f=this.makeTensorInfo(d,s),m=this.texData.get(f.dataId);m.usage=p?NR.PIXELS:NR.UPLOAD,m.texShape=d,this.gpgpu.uploadDenseMatrixToTexture(this.getTexture(f.dataId),i,h,r);const g=[[h,i]],y=!0,b=this.runWebGLProgram(a,[f],s,g,y),x=this.texData.get(b.dataId);t.texShape=x.texShape,t.isPacked=x.isPacked,t.usage=x.usage,He().get("ENGINE_COMPILE_ONLY")?this.disposeData(b.dataId):(t.texture=x.texture,t.values=null,this.texData.delete(b.dataId)),this.disposeIntermediateTensorInfo(f),l&&(this.uploadWaitMs+=Or()-u)}else{const e=this.acquireTexture(c,i,s,o);t.texture=e}}convertAndCacheOnCPU(e,t){const n=this.texData.get(e),{dtype:s}=n;return this.releaseGPUData(e),null!=t&&(n.values=function(e,t){if("float32"===t||"complex64"===t)return e;if("int32"===t||"bool"===t){const n="int32"===t?new Int32Array(e.length):new Uint8Array(e.length);for(let t=0;t<n.length;++t)n[t]=Math.round(e[t]);return n}throw new Error(`Unknown dtype ${t}`)}(t,s)),n.values}acquireTexture(e,t,n,s){if(this.numBytesInGPU+=this.computeBytes(e,n),!this.warnedAboutMemory&&this.numBytesInGPU>1024*this.numMBBeforeWarning*1024){const e=(this.numBytesInGPU/1024/1024).toFixed(2);this.warnedAboutMemory=!0,console.warn(`High memory usage in GPU: ${e} MB, most likely due to a memory leak`)}return this.textureManager.acquireTexture(e,t,s)}computeBytes(e,t){return e[0]*e[1]*Ne(t)}checkCompileCompletion(){for(const[,e]of Object.entries(this.binaryCache))this.checkCompletion_(e)}async checkCompileCompletionAsync(){const e=[];if(this.gpgpu.parallelCompilationExtension){for(const[,t]of Object.entries(this.binaryCache))e.push(this.checkCompletionAsync_(t));return Promise.all(e)}for(const[,t]of Object.entries(this.binaryCache)){const n=new Promise((e=>{try{this.checkCompletion_(t),e(!0)}catch(e){throw e}}));e.push(n)}return Promise.all(e)}async checkCompletionAsync_(e){return this.gpgpu.gl.getProgramParameter(e.webGLProgram,this.gpgpu.parallelCompilationExtension.COMPLETION_STATUS_KHR)?this.checkCompletion_(e):(await Ud(),this.checkCompletionAsync_(e))}checkCompletion_(e){if(!1===this.gpgpu.gl.getProgramParameter(e.webGLProgram,this.gpgpu.gl.LINK_STATUS)){if(console.log(this.gpgpu.gl.getProgramInfoLog(e.webGLProgram)),!1===this.gpgpu.gl.getShaderParameter(e.fragmentShader,this.gpgpu.gl.COMPILE_STATUS))throw OR(e.source,this.gpgpu.gl.getShaderInfoLog(e.fragmentShader)),new Error("Failed to compile fragment shader.");throw new Error("Failed to link vertex and fragment shaders.")}return!0}getUniformLocations(){for(const[,e]of Object.entries(this.binaryCache)){const{uniformLocations:t,customUniformLocations:n,infLoc:s,nanLoc:r,inShapesLocations:a,inTexShapesLocations:i,outShapeLocation:o,outShapeStridesLocation:l,outTexShapeLocation:u}=vF(this.gpgpu,e.program,e.webGLProgram);e.uniformLocations=t,e.customUniformLocations=n,e.infLoc=s,e.nanLoc=r,e.inShapesLocations=a,e.inTexShapesLocations=i,e.outShapeLocation=o,e.outShapeStridesLocation=l,e.outTexShapeLocation=u}}}WD.nextDataId=0,ka()&&ul("webgl",(()=>new WD),2);class VD{constructor(e,t,n){this.variableNames=["A","B"],this.outputShape=to(t,n),this.enableShapeUniforms=kF(this.outputShape.length),this.userCode=`\n      float binaryOperation(float a, float b) {\n        ${e}\n      }\n\n      void main() {\n        float a = getAAtOutCoords();\n        float b = getBAtOutCoords();\n        setOutput(binaryOperation(a, b));\n      }\n    `}}class UD{constructor(e,t,n,s=!1){this.variableNames=["A","B"],this.supportsBroadcasting=!0,this.packedInputs=!0,this.packedOutput=!0,this.outputShape=to(t,n);const r=this.outputShape.length;this.enableShapeUniforms=kF(r);let a="";if(s)if(0===r||1===oe(this.outputShape))a="\n          result.y = 0.;\n          result.z = 0.;\n          result.w = 0.;\n        ";else if(a=`\n          ${gF(r)} coords = getOutputCoords();\n        `,1===r)this.enableShapeUniforms?a+="\n            result.y = (coords + 1) >= outShape ? 0. : result.y;\n            result.z = 0.;\n            result.w = 0.;\n          ":a+=`\n            result.y = (coords + 1) >= ${this.outputShape[0]} ? 0. : result.y;\n            result.z = 0.;\n            result.w = 0.;\n          `;else{const e=TD("coords",r);this.enableShapeUniforms?a+=`\n            bool nextRowOutOfBounds =\n              (${e[r-2]} + 1) >= outShape[${r} - 2];\n            bool nextColOutOfBounds =\n              (${e[r-1]} + 1) >= outShape[${r} - 1];\n            result.y = nextColOutOfBounds ? 0. : result.y;\n            result.z = nextRowOutOfBounds ? 0. : result.z;\n            result.w = nextColOutOfBounds || nextRowOutOfBounds ? 0. : result.w;\n          `:a+=`\n            bool nextRowOutOfBounds =\n              (${e[r-2]} + 1) >= ${this.outputShape[r-2]};\n            bool nextColOutOfBounds =\n              (${e[r-1]} + 1) >= ${this.outputShape[r-1]};\n            result.y = nextColOutOfBounds ? 0. : result.y;\n            result.z = nextRowOutOfBounds ? 0. : result.z;\n            result.w = nextColOutOfBounds || nextRowOutOfBounds ? 0. : result.w;\n          `}this.userCode=`\n      vec4 binaryOperation(vec4 a, vec4 b) {\n        ${e}\n      }\n\n      void main() {\n        vec4 a = getAAtOutCoords();\n        vec4 b = getBAtOutCoords();\n\n        vec4 result = binaryOperation(a, b);\n        ${a}\n\n        setOutput(result);\n      }\n    `}}function GD(e){const{inputs:t,backend:n}=e,{x:s}=t;return n.incRef(s.dataId),{dataId:s.dataId,shape:s.shape,dtype:s.dtype}}const HD={kernelName:hn,backendName:"webgl",kernelFunc:GD};function jD(e){const{inputs:t,backend:n}=e,{real:s,imag:r}=t,a=n.makeTensorInfo(s.shape,"complex64"),i=n.texData.get(a.dataId),o=GD({inputs:{x:s},backend:n}),l=GD({inputs:{x:r},backend:n});return i.complexTensorInfos={real:o,imag:l},a}const qD={kernelName:kt,backendName:"webgl",kernelFunc:jD},KD="return (a < 0.) ? b * a : a;",XD="\n  vec4 aLessThanZero = vec4(lessThan(a, vec4(0.)));\n  return (aLessThanZero * (b * a)) + ((vec4(1.0) - aLessThanZero) * a);\n",YD={kernelName:yn,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{alpha:a}=s,i=n.makeTensorInfo([],"float32",Fr(a,"float32")),o=He().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new UD(XD,r.shape,i.shape):new VD(KD,r.shape,i.shape),l=n.runWebGLProgram(o,[r,i],"float32");return n.disposeIntermediateTensorInfo(i),l}},ZD="return (a < 0.) ? b * a : a;",JD="\n  vec4 aLessThanZero = vec4(lessThan(a, vec4(0.)));\n  return (aLessThanZero * (b * a)) + ((vec4(1.0) - aLessThanZero) * a);\n",QD={kernelName:ts,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{x:s,alpha:r}=t,a=He().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new UD(JD,s.shape,r.shape):new VD(ZD,s.shape,r.shape);return n.runWebGLProgram(a,[s,r],"float32")}};function eO({opSnippet:e,packedOpSnippet:t,cpuKernelImpl:n,dtype:s}){return({inputs:r,backend:a})=>{const{x:i}=r,o=a,l=s||i.dtype;if(o.shouldExecuteOnCPU([i])&&null!=n){const e=o.texData.get(i.dataId),t=n(e.values,l);return o.makeTensorInfo(i.shape,l,t)}let u;return u=He().getBool("WEBGL_PACK_UNARY_OPERATIONS")&&null!=t?new MD(i.shape,t):new FD(i.shape,e),o.runWebGLProgram(u,[i],l)}}function tO({opSnippet:e,packedOpSnippet:t,checkOutOfBounds:n=!1,supportsComplex:s=!1,cpuKernelImpl:r,dtype:a}){return({inputs:i,backend:o})=>{const{a:l,b:u}=i,c=o;if(s&&"complex64"===l.dtype){const t=c.texData.get(l.dataId),n=c.texData.get(u.dataId),[s,r]=[[t.complexTensorInfos.real,n.complexTensorInfos.real],[t.complexTensorInfos.imag,n.complexTensorInfos.imag]].map((t=>{const[n,s]=t,r={dataId:n.dataId,dtype:n.dtype,shape:l.shape},a={dataId:s.dataId,dtype:s.dtype,shape:u.shape},i=new VD(e,l.shape,u.shape);return c.runWebGLProgram(i,[r,a],ia(n.dtype,s.dtype))})),a=jD({inputs:{real:s,imag:r},backend:c});return c.disposeIntermediateTensorInfo(s),c.disposeIntermediateTensorInfo(r),a}const h=a||ia(l.dtype,u.dtype);if(("string"===l.dtype||"string"===u.dtype||c.shouldExecuteOnCPU([l,u]))&&null!=r){const e=c.texData.get(l.dataId).values,t=c.texData.get(u.dataId).values,n="string"===l.dtype?Bf(e):e,s="string"===l.dtype?Bf(t):t,[a,i]=r(l.shape,u.shape,n,s,h),o=c.makeTensorInfo(i,h);return c.texData.get(o.dataId).values=a,o}let p;return p=He().getBool("WEBGL_PACK_BINARY_OPERATIONS")&&null!=t?new UD(t,l.shape,u.shape,n):new VD(e,l.shape,u.shape),c.runWebGLProgram(p,[l,u],h)}}function nO(e,t=!1){if("linear"===e)return"return x;";if("relu"===e)return t?"\n  vec4 result = x * vec4(greaterThanEqual(x, vec4(0.0)));\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n":"if (isnan(x)) return x;\n  return (x < 0.0) ? 0.0 : x;\n";if("elu"===e)return t?"\n  vec4 result;\n\n  result.r = (x.r >= 0.0) ? x.r : (exp(x.r) - 1.0);\n  result.g = (x.g >= 0.0) ? x.g : (exp(x.g) - 1.0);\n  result.b = (x.b >= 0.0) ? x.b : (exp(x.b) - 1.0);\n  result.a = (x.a >= 0.0) ? x.a : (exp(x.a) - 1.0);\n\n  return result;\n":"return (x >= 0.0) ? x : (exp(x) - 1.0);";if("relu6"===e)return t?"\n  vec4 result = min(x, vec4(6.)) * vec4(greaterThanEqual(x, vec4(0.0)));\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n":"if (isnan(x)) return x;\n  return (x < 0.0) ? 0.0 : min(6.0, x);\n";if("prelu"===e)return t?JD:ZD;if("leakyrelu"===e)return t?XD:KD;if("sigmoid"===e)return"return 1.0 / (1.0 + exp(-1.0 * x));";throw new Error(`Activation ${e} has not been implemented for the WebGL backend.`)}class sO{constructor(e,t,n,s=!1,r=!1,a=!1,i=null,o=!1,l=!1){this.variableNames=["matrixA","matrixB"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=n,this.enableShapeUniforms=kF(this.outputShape.length);const u=s?e[1]:e[2],c=Math.ceil(u/2),h=s?"i * 2, rc.y":"rc.y, i * 2",p=r?"rc.z, i * 2":"i * 2, rc.z",d=s?["a.xxyy","a.zzww"]:["a.xxzz","a.yyww"],f=r?["b.xzxz","b.ywyw"]:["b.xyxy","b.zwzw"];let m="",g="";i&&(m=o?`vec4 activation(vec4 a) {\n          vec4 b = getPreluActivationWeightsAtOutCoords();\n          ${i}\n        }`:l?`vec4 activation(vec4 a) {\n          vec4 b = getLeakyreluAlphaAtOutCoords();\n          ${i}\n        }`:`vec4 activation(vec4 x) {\n          ${i}\n        }`,g="result = activation(result);");const y=a?"result += getBiasAtOutCoords();":"";a&&this.variableNames.push("bias"),o&&this.variableNames.push("preluActivationWeights"),l&&this.variableNames.push("leakyreluAlpha");let b="rc.x",x="rc.x";e[0]<t[0]?b=`int(min(float(rc.x), ${e[0]-1}.))`:t[0]<e[0]&&(x=`int(min(float(rc.x), ${t[0]-1}.))`),this.userCode=`\n      ${m}\n      // Don't use uniform for sharedDimensionPacked for performance.\n      const float sharedDimension = ${c}.0;\n\n      vec4 dot2x2ARowBCol(ivec3 rc) {\n        vec4 result = vec4(0);\n        for (int i = 0; i < ${c}; i++) {\n          int batchA = ${b};\n          int batchB = ${x};\n          vec4 a = getMatrixA(batchA, ${h});\n          vec4 b = getMatrixB(batchB, ${p});\n\n          // These swizzled products need to be separately added.\n          // See: https://github.com/tensorflow/tfjs/issues/1735\n          result += (${d[0]} * ${f[0]});\n          result += (${d[1]} * ${f[1]});\n        }\n        return result;\n      }\n\n      void main() {\n        ivec3 rc = getOutputCoords();\n        vec4 result = dot2x2ARowBCol(rc);\n\n        ${y}\n\n        ${g}\n\n        setOutput(result);\n      }\n    `}}class rO{constructor(e,t,n){this.variableNames=["AReal","AImag","BReal","BImag"],this.outputShape=to(t,n),this.userCode=`\n      float binaryOpComplex(\n          float areal, float aimag, float breal, float bimag) {\n        ${e}\n      }\n\n      void main() {\n        float areal = getARealAtOutCoords();\n        float aimag = getAImagAtOutCoords();\n        float breal = getBRealAtOutCoords();\n        float bimag = getBImagAtOutCoords();\n        setOutput(binaryOpComplex(areal, aimag, breal, bimag));\n      }\n    `}}const aO="return a * b;";function iO(e){const{inputs:t,backend:n}=e,{a:s,b:r}=t,a=ia(s.dtype,r.dtype);if("complex64"===s.dtype){const e=n.texData.get(s.dataId),t=n.texData.get(r.dataId),a=new rO("return areal * breal - aimag * bimag;",s.shape,r.shape),i=new rO("return areal * bimag + aimag * breal;",s.shape,r.shape),o=[{dataId:e.complexTensorInfos.real.dataId,dtype:e.complexTensorInfos.real.dtype,shape:s.shape},{dataId:e.complexTensorInfos.imag.dataId,dtype:e.complexTensorInfos.imag.dtype,shape:s.shape},{dataId:t.complexTensorInfos.real.dataId,dtype:t.complexTensorInfos.real.dtype,shape:r.shape},{dataId:t.complexTensorInfos.imag.dataId,dtype:t.complexTensorInfos.imag.dtype,shape:r.shape}],l=n.runWebGLProgram(a,o,"float32"),u=n.runWebGLProgram(i,o,"float32"),c=jD({inputs:{real:l,imag:u},backend:n});return n.disposeIntermediateTensorInfo(l),n.disposeIntermediateTensorInfo(u),c}if(n.shouldExecuteOnCPU([s,r])){const e=n.texData.get(s.dataId),t=n.texData.get(r.dataId),[i,o]=nD(s.shape,r.shape,e.values,t.values,a),l=n.makeTensorInfo(o,a);return n.texData.get(l.dataId).values=i,l}let i;return i=He().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new UD(aO,s.shape,r.shape):new VD(aO,s.shape,r.shape),n.runWebGLProgram(i,[s,r],a)}const oO={kernelName:Un,backendName:"webgl",kernelFunc:iO};function lO(e){const{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{shape:a}=s,i=n,o=oe(r.shape),l=ge(a,o),u=oe(l);se(o===u,(()=>`The new shape (${l}) has ${u} elements and the old shape (${r.shape}) has ${o} elements. The new shape and old shape must have the same number of elements.`));const c=i.texData.get(r.dataId);return!c.isPacked||qR(r.shape,l)||null!==c.texture&&qR(c.shape,l)?(i.incRef(r.dataId),{dataId:r.dataId,shape:l,dtype:r.dtype}):function(e,t,n){const s=[UR(e.shape),...GR(e.shape)],r={dtype:e.dtype,shape:s,dataId:e.dataId},a=[UR(t),...GR(t)],i=new $D(a,s),o=[s],l=n.runWebGLProgram(i,[r],e.dtype,o,!0);return{dataId:l.dataId,shape:t,dtype:l.dtype}}(r,l,i)}const uO={kernelName:os,backendName:"webgl",kernelFunc:lO};class cO{constructor(e,t){this.variableNames=["x"];const{windowSize:n,batchSize:s,inSize:r,outSize:a}=e;this.outputShape=[s,a];const i=4*Math.floor(n/4),o=n%4;let l="sumValue += dot(values, ones);";if(null!=t){const e=1/t;l=`sumValue += dot(values * ${ce(e)?e.toPrecision(2):e}, ones);`}let u="";r%n>0&&(u=`\n        if (inIdx < 0 || inIdx >= ${r}) {\n          return 0.0;\n        }\n      `),this.userCode=`\n      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);\n\n      float getValue(int batch, int inIdx) {\n        ${u}\n        return getX(batch, inIdx);\n      }\n\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n        int outIdx = coords[1];\n        int inOffset = outIdx * ${n};\n\n        float sumValue = 0.0;\n\n        for (int i = 0; i < ${i}; i += 4) {\n          int inIdx = inOffset + i;\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            getValue(batch, inIdx + 3)\n          );\n\n          ${l}\n        }\n\n        int inIdx = inOffset + ${i};\n        if (${1===o}) {\n          vec4 values = vec4(getValue(batch, inIdx), 0.0, 0.0, 0.0);\n\n          ${l}\n        } else if (${2===o}) {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1), 0.0, 0.0);\n\n          ${l}\n        } else if (${3===o}) {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2), 0.0);\n\n          ${l}\n        }\n        setOutput(sumValue);\n      }\n    `}}class hO{constructor(e,t){this.variableNames=["x"];const{windowSize:n,batchSize:s,inSize:r,outSize:a}=e;this.outputShape=[s,a];let i="0.0",o="";"prod"===t?i="1.0":"min"===t?(i="1.0 / 1e-20",o="min"):"max"===t&&(i="-1.0 / 1e-20",o="max");let l=`${t}(${t}(${t}(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])`;"sum"===t?l="sumValue":"prod"===t?l="prodValue":"all"===t?l="allValue":"any"===t&&(l="anyValue");const u=4*Math.floor(n/4),c=n%4;let h=`\n      if (${"sum"===t}) {\n        sumValue += dot(values, ones);\n      } else if (${"prod"===t}) {\n        vec2 tmp = vec2(values[0], values[1]) * vec2(values[2], values[3]);\n        prodValue *= tmp[0] * tmp[1];\n      } else {\n        minMaxValue = ${o}(values, minMaxValue);\n        if (${"min"===t} || ${"max"===t}) {\n          minMaxValue = ${o}(values, minMaxValue);\n          bvec4 isNaN = isnan(values);\n          if (isNaN.r || isNaN.g || isNaN.b || isNaN.a) {\n            minMaxValue = vec4(NAN);\n          }\n        }\n      }\n    `,p="vec4";"all"===t?(i="1.0",h="\n        bool reducedAllValue = all(values);\n        float floatedReducedAllValue = float(reducedAllValue);\n        allValue = float(allValue >= 1.0 && floatedReducedAllValue >= 1.0);\n      ",p="bvec4"):"any"===t&&(i="0.0",h="\n        bool reducedAnyValue = any(values);\n        float floatedReducedAnyValue = float(reducedAnyValue);\n        anyValue = float(anyValue >= 1.0 || floatedReducedAnyValue >= 1.0);\n      ",p="bvec4");let d="";r%n>0&&(d=`\n        if (inIdx < 0 || inIdx >= ${r}) {\n          return initializationValue;\n        }\n      `),this.userCode=`\n      const float initializationValue = ${i};\n      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);\n\n      float getValue(int batch, int inIdx) {\n        ${d}\n        return getX(batch, inIdx);\n      }\n\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n        int outIdx = coords[1];\n        int inOffset = outIdx * ${n};\n\n        vec4 minMaxValue = vec4(${i});\n        float prodValue = 1.0;\n        float sumValue = 0.0;\n        float allValue = 1.0;\n        float anyValue = 0.0;\n\n        for (int i = 0; i < ${u}; i += 4) {\n          int inIdx = inOffset + i;\n          ${p} values = ${p}(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            getValue(batch, inIdx + 3)\n          );\n\n          ${h}\n        }\n\n        int inIdx = inOffset + ${u};\n        if (${1===c}) {\n          ${p} values = ${p}(\n            getValue(batch, inIdx),\n            initializationValue,\n            initializationValue,\n            initializationValue\n          );\n\n          ${h}\n        } else if (${2===c}) {\n          ${p} values = ${p}(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            initializationValue,\n            initializationValue\n          );\n\n          ${h}\n        } else if (${3===c}) {\n          ${p} values = ${p}(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            initializationValue\n          );\n\n          ${h}\n        }\n        setOutput(${l});\n      }\n    `}}function pO(e,t,n,s){const r=function(e){const t=[];for(;0===t.length||1!==t[t.length-1].outSize;){const n=t.length?t[t.length-1].outSize:e[1],s=qd(n);t.push({inSize:n,windowSize:s,outSize:Math.ceil(n/s)})}return t}(e.shape);let a=e;for(let i=0;i<r.length;i++){const{inSize:o,windowSize:l,outSize:u}=r[i];let c,h;c="mean"===n?0===i?new cO({windowSize:l,inSize:o,batchSize:e.shape[0],outSize:u},o):new cO({windowSize:l,inSize:o,batchSize:e.shape[0],outSize:u}):new hO({windowSize:l,inSize:o,batchSize:e.shape[0],outSize:u},n),h=a,a=s.runWebGLProgram(c,[a],t),h.dataId!==e.dataId&&s.disposeIntermediateTensorInfo(h)}return a}class dO{constructor(e,t){this.variableNames=["A"];const n=new Array(e.length);for(let s=0;s<n.length;s++)n[s]=e[t[s]];this.outputShape=n,this.rank=n.length;const s=gF(this.rank),r=function(e){const t=e.length;if(t>6)throw Error(`Transpose for rank ${t} is not yet supported`);const n=["resRC.x","resRC.y","resRC.z","resRC.w","resRC.u","resRC.v"],s=new Array(t);for(let t=0;t<e.length;t++)s[e[t]]=n[t];return s.join()}(t);this.userCode=`\n    void main() {\n      ${s} resRC = getOutputCoords();\n      setOutput(getA(${r}));\n    }\n    `}}class fO{constructor(e,t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0;const n=new Array(e.length);for(let s=0;s<n.length;s++)n[s]=e[t[s]];if(this.outputShape=n,this.rank=n.length,this.rank>6)throw Error(`Packed transpose for rank ${this.rank} is not yet supported.`);const s=gF(this.rank),r=ND("rc",this.rank),a=new Array(this.rank);for(let e=0;e<t.length;e++)a[t[e]]=r[e];const i=`vec2(${a.slice(-2).join()})`,o=`++${r[this.rank-1]} < ${n[this.rank-1]}`,l=`getChannel(getA(${a.join()}), ${i})`;this.userCode=`\n    void main() {\n      ${s} rc = getOutputCoords();\n      vec4 result = vec4(0.);\n      result[0] = ${l};\n      if(${o}) {\n        result[1] = ${l};\n      }\n      --${r[this.rank-1]};\n      if(++${r[this.rank-2]} < ${n[this.rank-2]}) {\n        result[2] = ${l};\n        if(${o}) {\n          result[3] = ${l};\n        }\n      }\n      setOutput(result);\n    }\n    `}}function mO(e,t,n){const s=He().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new fO(e.shape,t):new dO(e.shape,t);return n.runWebGLProgram(s,[e],e.dtype)}function gO(e){const{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{axis:a,keepDims:i}=s;return function(e,t,n,s){const r=t,a=e.shape.length,i=ye(r,e.shape);let o=i;const l=uc(o,a),u=null!=l;let c=e;u&&(c=mO(e,l,s),o=hc(o.length,a)),lc("sum",o,a);const[h,p]=ic(c.shape,o);let d=h;n&&(d=oc(h,i));const f=oe(p),m=lO({inputs:{x:c},attrs:{shape:[oe(e.shape)/f,f]},backend:s}),g=pO(m,oa(e.dtype),"sum",s),y=lO({inputs:{x:g},attrs:{shape:d},backend:s});return s.disposeIntermediateTensorInfo(m),s.disposeIntermediateTensorInfo(g),u&&s.disposeIntermediateTensorInfo(c),y}(r,a,i,n)}const yO={kernelName:Cs,backendName:"webgl",kernelFunc:gO};function bO(e){const{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{perm:a}=s,i=n,o=r.shape.length,l=new Array(o);for(let e=0;e<l.length;e++)l[e]=r.shape[a[e]];let u;if(i.shouldExecuteOnCPU([r])){const e=i.texData.get(r.dataId).values,t=ID(e,r.shape,r.dtype,a,l);u=i.makeTensorInfo(l,r.dtype),i.texData.get(u.dataId).values=t}else u=mO(r,a,i);return u}const xO={kernelName:Ks,backendName:"webgl",kernelFunc:bO};function vO({a:e,b:t,transposeA:n,transposeB:s,backend:r,bias:a=null,preluActivationWeights:i=null,leakyreluAlpha:o=0,activation:l=null}){const u=e.shape.length,c=t.shape.length,h=n?e.shape[u-2]:e.shape[u-1],p=s?t.shape[c-1]:t.shape[c-2],d=n?e.shape[u-1]:e.shape[u-2],f=s?t.shape[c-2]:t.shape[c-1],m=e.shape.slice(0,-2),g=t.shape.slice(0,-2),y=oe(m),b=oe(g),x=to(e.shape.slice(0,-2),t.shape.slice(0,-2)).concat([d,f]);se(h===p,(()=>`Error in matMul: inner shapes (${h}) and (${p}) of Tensors with shapes ${e.shape} and ${t.shape} and transposeA=${n} and transposeB=${s} must match.`));const v=n?[y,h,d]:[y,d,h],w=s?[b,f,p]:[b,p,f],k=lO({inputs:{x:e},backend:r,attrs:{shape:v}}),I=lO({inputs:{x:t},backend:r,attrs:{shape:w}}),S=[k,I],N=Math.max(y,b),T=n?k.shape[1]:k.shape[2],C=null!=a,$=null!=i,E="leakyrelu"===l,A=null!=l?nO(l,!0):null;let _;if((1===d||1===f)&&T>1e3&&!1===(C||$||E||null!=A)){let e=k,t=I;n&&(e=bO({inputs:{x:k},backend:r,attrs:{perm:[0,2,1]}}),S.push(e)),s&&(t=bO({inputs:{x:I},backend:r,attrs:{perm:[0,2,1]}}),S.push(t));const a=1===f;let i=e;1!==f&&(i=lO({inputs:{x:e},backend:r,attrs:{shape:[N,T,1]}}),S.push(i));const o=1===f?2:1;let l=t;a&&(l=lO({inputs:{x:t},backend:r,attrs:{shape:[N,1,T]}}),S.push(l));const u=iO({inputs:{a:i,b:l},backend:r});_=gO({inputs:{x:u},backend:r,attrs:{axis:o,keepDims:!0}}),S.push(u)}else{const l=ia(e.dtype,t.dtype),u=new sO(v,w,[N,d,f],n,s,C,A,$,E),c=[k,I];if(null!=a&&c.push(a),$&&c.push(i),E){const e=r.makeTensorInfo([],"float32",Fr(o,"float32"));c.push(e),S.push(e)}_=r.runWebGLProgram(u,c,l)}const R=lO({inputs:{x:_},backend:r,attrs:{shape:x}});S.push(_);for(const e of S)r.disposeIntermediateTensorInfo(e);return R}const wO={kernelName:sr,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{a:r,b:a,bias:i,preluActivationWeights:o}=t,{transposeA:l,transposeB:u,activation:c,leakyreluAlpha:h}=s;return vO({a:r,b:a,transposeA:l,transposeB:u,backend:n,bias:i,preluActivationWeights:o,leakyreluAlpha:h,activation:c})}},kO="return abs(x);",IO={kernelName:Ye,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{x:s}=t;if(n.shouldExecuteOnCPU([s])&&"complex64"!==s.dtype){const e=n.texData.get(s.dataId),t=cD(e.values);return n.makeTensorInfo(s.shape,s.dtype,t)}let r;return r=He().getBool("WEBGL_PACK_UNARY_OPERATIONS")?new MD(s.shape,kO):new FD(s.shape,kO),n.runWebGLProgram(r,[s],s.dtype)}},SO=eO({opSnippet:"if (isnan(x)) return x;\n  if (abs(x) > 1.) {\n    return NAN;\n  }\n  return acos(x);\n"}),NO={kernelName:Ze,backendName:"webgl",kernelFunc:SO},TO=eO({opSnippet:"if (isnan(x)) return x;\n  if (x < 1.0) return NAN;\nreturn log(x + sqrt(x * x - 1.0));"}),CO={kernelName:Je,backendName:"webgl",kernelFunc:TO},$O="return a + b;",EO=tO({opSnippet:$O,packedOpSnippet:$O,supportsComplex:!0,cpuKernelImpl:MF}),AO={kernelName:Qe,backendName:"webgl",kernelFunc:EO};class _O{constructor(e,t){this.outputShape=[],this.outputShape=e,this.variableNames=t.map(((e,t)=>`T${t}`));const n=[];this.variableNames.forEach((e=>{n.push(`float v${e} = get${e}AtOutCoords();`)}));const s=this.variableNames.map((e=>`v${e}`)).join(" + ");this.userCode=`\n      void main() {\n        ${n.join("\n        ")}\n\n        float result = ${s};\n        setOutput(result);\n      }\n    `}}class RO{constructor(e,t){this.outputShape=[],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e,this.variableNames=t.map(((e,t)=>`T${t}`));const n=[];this.variableNames.forEach((e=>{n.push(`vec4 v${e} = get${e}AtOutCoords();`)}));const s=this.variableNames.map((e=>`v${e}`)).join(" + ");this.userCode=`\n      void main() {\n        ${n.join("\n        ")}\n\n        vec4 result = ${s};\n        setOutput(result);\n      }\n    `}}const FO={kernelName:et,backendName:"webgl",kernelFunc:function e(t){const{inputs:n,backend:s}=t,r=n;if(1===r.length)return GD({inputs:{x:r[0]},backend:s});if(r.length>He().get("WEBGL_MAX_TEXTURES_IN_SHADER")){const t=Math.floor(r.length/2),n=e({inputs:r.slice(0,t),backend:s}),a=e({inputs:r.slice(t),backend:s});return e({inputs:[n,a],backend:s})}const a=r.map((e=>e.dtype)).reduce(((e,t)=>ia(e,t))),i=r.map((e=>e.shape)),o=He().getBool("WEBGL_PACK")?new RO(r[0].shape,i):new _O(r[0].shape,i);return s.runWebGLProgram(o,r,a)}},DO={kernelName:tt,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{axis:a,keepDims:i}=s,o=r.shape.length,l=ye(a,r.shape);let u=l;const c=uc(u,o);let h=r;null!=c&&(h=bO({inputs:{x:r},backend:n,attrs:{perm:c}}),u=hc(u.length,o)),lc("all",u,o);const[p,d]=ic(h.shape,u),f=lO({inputs:{x:h},backend:n,attrs:{shape:[-1,oe(d)]}}),m=pO(f,f.dtype,"all",n);let g;return g=lO(i?{inputs:{x:m},backend:n,attrs:{shape:oc(p,l)}}:{inputs:{x:m},backend:n,attrs:{shape:p}}),n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(m),null!=c&&n.disposeIntermediateTensorInfo(h),g}},OO={kernelName:nt,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{axis:a,keepDims:i}=s,o=r.shape.length,l=ye(a,r.shape);let u=l;const c=uc(u,o);let h=r;null!=c&&(h=bO({inputs:{x:r},backend:n,attrs:{perm:c}}),u=hc(u.length,o)),lc("any",u,o);const[p,d]=ic(h.shape,u),f=lO({inputs:{x:h},backend:n,attrs:{shape:[-1,oe(d)]}}),m=pO(f,f.dtype,"any",n);let g;return g=lO(i?{inputs:{x:m},backend:n,attrs:{shape:oc(p,l)}}:{inputs:{x:m},backend:n,attrs:{shape:p}}),n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(m),null!=c&&n.disposeIntermediateTensorInfo(h),g}};class MO{constructor(e,t,n){this.variableNames=["A"];const{windowSize:s,batchSize:r,outSize:a}=e;n||this.variableNames.push("bestIndicesA"),this.outputShape=[r,a];const i="max"===t?">":"<",o=n?"inOffset + i;":"round(getBestIndicesA(batch, inOffset + i));";this.userCode=`\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n        int outIdx = coords[1];\n        int inOffset = outIdx * ${s};\n\n        int bestIndex = inOffset;\n        float bestValue = getA(batch, bestIndex);\n\n        for (int i = 0; i < ${s}; i++) {\n          int inIdx = ${o};\n          float candidate = getA(batch, inIdx);\n          if (candidate ${i} bestValue) {\n            bestValue = candidate;\n            bestIndex = inIdx;\n          }\n        }\n        setOutput(float(bestIndex));\n      }\n    `}}class LO{constructor(e,t,n,s){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,se(e.length>2,(()=>`Packed arg${n.charAt(0).toUpperCase()+n.slice(1)} supports only inputs with rank above 2.`));const r=e[e.length-1],a=Math.ceil(r/t);this.outputShape=e.slice(0,-1),a>1&&this.outputShape.push(a),s||this.variableNames.push("bestIndicesA");const i=this.outputShape,o=i.length,l=gF(o),u=TD("coords",o);let c,h;if(1===a){h=o+1;const e=gF(h);c=`\n        ${e} sourceLocR = ${e}(${u.join()}, 0);\n        ++${u[o-1]};\n        ${e} sourceLocG = ${e}(${u.join()}, 0);\n        ++${u[o-2]};\n        ${e} sourceLocA = ${e}(${u.join()}, 0);\n        --${u[o-1]};\n        ${e} sourceLocB = ${e}(${u.join()}, 0);\n        --${u[o-2]};`}else h=o,c=`\n        ${l} sourceLocR = coords;\n        ++${u[o-1]};\n        ${l} sourceLocG = coords;\n        ++${u[o-2]};\n        ${l} sourceLocA = coords;\n        --${u[o-1]};\n        ${l} sourceLocB = coords;\n        --${u[o-2]};`;const p=["x","y","z","w","u","v"].slice(0,h),d="."+p[h-1],f=p.map((e=>"int "+e)),m=TD("sourceLocR",h-1).concat("inIdx.r"),g=TD("sourceLocG",h-1).concat("inIdx.g"),y=TD("sourceLocB",h-1).concat("inIdx.b"),b=TD("sourceLocA",h-1).concat("inIdx.a"),x="max"===n?"greaterThan":"lessThan",v=s?"":`\n          inIdx = round(vec4(getBestIndicesAChannel(${m.join()}),\n                             getBestIndicesAChannel(${g.join()}),\n                             getBestIndicesAChannel(${y.join()}),\n                             getBestIndicesAChannel(${b.join()})));`,w=`vec4(\n            getAChannel(${m.join()}),\n            hasNextCol ? getAChannel(${g.join()}) : 0.,\n            hasNextRow ? getAChannel(${y.join()}) : 0.,\n            hasNextRow && hasNextCol ? getAChannel(${b.join()}) : 0.)`,k=s?"":`\n      float getBestIndicesAChannel(${f.join()}) {\n        return getChannel(getBestIndicesA(${p.join()}),\n                                          vec2(${p.slice(-2).join()}));\n      }`;this.userCode=`\n      float getAChannel(${f.join()}) {\n        return getChannel(getA(${p.join()}),\n                               vec2(${p.slice(-2).join()}));\n      }\n      ${k}\n      void main() {\n        ${l} coords = getOutputCoords();\n        bool hasNextCol = ${u[o-1]} < ${i[o-1]-1};\n        bool hasNextRow = ${u[o-2]} < ${i[o-2]-1};\n        ${c}\n        ivec4 srcIdx = ivec4(sourceLocR${d}, sourceLocG${d},\n          sourceLocB${d}, sourceLocA${d}) * ${t};\n        ivec4 inIdx = srcIdx;\n        vec4 bestIndex = vec4(inIdx);\n        vec4 bestValue = ${w};\n\n        for (int i = 0; i < ${t}; i++) {\n          inIdx = srcIdx;\n          ${v}\n          vec4 candidate = ${w};\n          bvec4 nan = isnan(candidate);\n          bvec4 replace = bvec4(\n            vec4(${x}(candidate, bestValue)) * (vec4(1.0) - vec4(nan)));\n\n          bestValue = vec4(replace.x  ? candidate.x : bestValue.x,\n                           replace.y  ? candidate.y : bestValue.y,\n                           replace.z  ? candidate.z : bestValue.z,\n                           replace.w  ? candidate.w : bestValue.w);\n          bestIndex = mix(bestIndex, vec4(inIdx), vec4(replace));\n          srcIdx++;\n        }\n        setOutput(bestIndex);\n      }\n    `}}function zO(e,t,n,s=null){let r=t.shape[0],a=t.shape[1];null!=s&&(r=s.shape[0],a=s.shape[1]);const i=qd(a),o={windowSize:i,inSize:a,batchSize:r,outSize:Math.ceil(a/i)},l=new MO(o,n,null==s),u=[t];null!=s&&u.push(s);const c=e.runWebGLProgram(l,u,"int32");if(1===c.shape[1])return c;const h=zO(e,t,n,c);return e.disposeIntermediateTensorInfo(c),h}function PO(e,t,n,s=null){const r=null!=s?s.shape:t.shape,a=qd(r[r.length-1]),i=new LO(r,a,n,null==s),o=null==s?[t]:[t,s],l=e.runWebGLProgram(i,o,"int32");if(l.shape.length===t.shape.length){const s=PO(e,t,n,l);return e.disposeIntermediateTensorInfo(l),s}return l}function BO(e,t,n,s){const r=[n];if(lc("arg"+s.charAt(0).toUpperCase()+s.slice(1),r,t.shape.length),!He().getBool("WEBGL_PACK_REDUCE")||t.shape.length<=2){const n=[],a=e.texData.get(t.dataId);let i=t;null!==a&&a.isPacked&&(i=e.unpackTensor(t),n.push(i));const[o,l]=ic(i.shape,r),u=oe(l),c=lO({inputs:{x:i},backend:e,attrs:{shape:[-1,u]}});n.push(c);const h=zO(e,c,s);n.push(h);const p=lO({inputs:{x:h},backend:e,attrs:{shape:o}});return n.forEach((t=>e.disposeIntermediateTensorInfo(t))),p}return PO(e,t,s)}const WO={kernelName:st,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{axis:a}=s;let i=ye(a,r.shape);const o=uc(i,r.shape.length);let l=r;const u=[];null!=o&&(l=bO({inputs:{x:r},backend:n,attrs:{perm:o}}),u.push(l),i=hc(i.length,l.shape.length)),lc("argMax",[i[0]],l.shape.length);const c=BO(n,l,i[0],"max");return u.forEach((e=>n.disposeIntermediateTensorInfo(e))),c}},VO={kernelName:rt,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{axis:a}=s;let i=ye(a,r.shape);const o=uc(i,r.shape.length);let l=r;const u=[];null!=o&&(l=bO({inputs:{x:r},backend:n,attrs:{perm:o}}),u.push(l),i=hc(i.length,l.shape.length)),lc("argMin",[i[0]],l.shape.length);const c=BO(n,l,i[0],"min");return u.forEach((e=>n.disposeIntermediateTensorInfo(e))),c}},UO=eO({opSnippet:"if (isnan(x)) return x;\n  if (abs(x) > 1.) {\n    return NAN;\n  }\n  return asin(x);\n"}),GO={kernelName:at,backendName:"webgl",kernelFunc:UO},HO=eO({opSnippet:"if (isnan(x)) return x;return log(x + sqrt(x * x + 1.0));"}),jO={kernelName:it,backendName:"webgl",kernelFunc:HO},qO=eO({opSnippet:"if (isnan(x)) return x;\n  return atan(x);\n"}),KO={kernelName:ot,backendName:"webgl",kernelFunc:qO},XO=tO({opSnippet:"\n  if (isnan(a)) return a;\n  if (isnan(b)) return b;\n\n  return atan(a, b);\n",packedOpSnippet:"\n  vec4 result = atan(a, b);\n  vec4 isNaN = min(vec4(isnan(a)) + vec4(isnan(b)), vec4(1.0));\n  \n  result.r = isNaN.r > 0. ? NAN : result.r;\n  result.g = isNaN.g > 0. ? NAN : result.g;\n  result.b = isNaN.b > 0. ? NAN : result.b;\n  result.a = isNaN.a > 0. ? NAN : result.a;\n\n  return result;\n"}),YO={kernelName:ut,backendName:"webgl",kernelFunc:XO},ZO=eO({opSnippet:"if (isnan(x)) return x;\n  if ((x < -1.0) || (x > 1.0)) return NAN;\nreturn (log(1.0 + x) - log(1.0 - x)) / 2.0;"}),JO={kernelName:lt,backendName:"webgl",kernelFunc:ZO};class QO{constructor(e,t,n,s=!1,r=!1){if(this.variableNames=["x"],"avg"===t&&n)throw new Error("Cannot compute positions for average pool.");const a=e.filterWidth,i=e.strideHeight,o=e.strideWidth,l=e.dilationHeight,u=e.dilationWidth,c=e.effectiveFilterHeight,h=e.effectiveFilterWidth,p=e.padInfo.top,d=e.padInfo.left;this.outputShape=e.outShape;const f="avg"===t,m=`((batch  * ${e.inHeight} + xR) * ${e.inWidth} + xC) * ${e.inChannels} + d`,g=`(xR * ${e.inWidth} + xC) * ${e.inChannels} + d`;let y="0.0";if(f||(y="-1.0 / 1e-20"),n){const t=">=";return void(this.userCode=`\n        const ivec2 strides = ivec2(${i}, ${o});\n        const ivec2 pads = ivec2(${p}, ${d});\n\n        void main() {\n          ivec4 coords = getOutputCoords();\n          int batch = coords[0];\n          int d = coords[3];\n\n          ivec2 xRCCorner = coords.yz * strides - pads;\n          int xRCorner = xRCCorner.x;\n          int xCCorner = xRCCorner.y;\n\n          // max/min x(?, ?, d) to get y(yR, yC, d).\n          // ? = to be determined\n          float minMaxValue = 0.0;\n          float minMaxValueFound = 0.0;\n          int minMaxPosition = 0;\n          float avgValue = 0.0;\n\n          for (int wR = 0; wR < ${c};\n              wR += ${l}) {\n            int xR = xRCorner + wR;\n\n            if (xR < 0 || xR >= ${e.inHeight}) {\n              continue;\n            }\n\n            for (int wC = 0; wC < ${h};\n                wC += ${u}) {\n              int xC = xCCorner + wC;\n\n              if (xC < 0 || xC >= ${e.inWidth}) {\n                continue;\n              }\n\n              float value = getX(batch, xR, xC, d);\n\n              // If a min / max value has already been found, use it. If not,\n              // use the current value.\n              float currMinMaxValue = mix(\n                  value, minMaxValue, minMaxValueFound);\n              if (value ${t} currMinMaxValue) {\n                minMaxValue = value;\n                minMaxValueFound = 1.0;\n                minMaxPosition = ${s?r?m:g:`wR * ${h} + wC`};\n              }\n            }\n          }\n          setOutput(float(minMaxPosition));\n        }\n      `)}let b=`${t}(${t}(${t}(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])`;"avg"===t&&(b="avgValue / count");const x=4*Math.floor(a/4),v=a%4,w=`\n      if (${f}) {\n        avgValue += dot(values, ones);\n      } else {\n        minMaxValue = max(values, minMaxValue);\n      }\n    `;this.userCode=`\n      const ivec2 strides = ivec2(${i}, ${o});\n      const ivec2 pads = ivec2(${p}, ${d});\n      const float initializationValue = ${y};\n      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);\n\n      float count = 0.0;\n\n      float getValue(int batch, int xR, int xC, int d) {\n        if (xC < 0 || xC >= ${e.inWidth}) {\n          return initializationValue;\n        }\n        count += 1.0;\n        return getX(batch, xR, xC, d);\n      }\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords[0];\n        int d = coords[3];\n\n        ivec2 xRCCorner = coords.yz * strides - pads;\n        int xRCorner = xRCCorner.x;\n        int xCCorner = xRCCorner.y;\n\n        // max/min x(?, ?, d) to get y(yR, yC, d).\n        // ? = to be determined\n        vec4 minMaxValue = vec4(${y});\n        float avgValue = 0.0;\n        count = 0.0;\n\n        for (int wR = 0; wR < ${c};\n            wR += ${l}) {\n          int xR = xRCorner + wR;\n\n          if (xR < 0 || xR >= ${e.inHeight}) {\n            continue;\n          }\n\n          for (int wC = 0; wC < ${x}; wC += 4) {\n            int xC = xCCorner + wC * ${u};\n\n            vec4 values = vec4(\n              getValue(batch, xR, xC, d),\n              getValue(batch, xR, xC + ${u}, d),\n              getValue(batch, xR, xC + 2 * ${u}, d),\n              getValue(batch, xR, xC + 3 * ${u}, d)\n            );\n\n            ${w}\n          }\n\n          int xC = xCCorner + ${x};\n          if (${1===v}) {\n            vec4 values = vec4(\n              getValue(batch, xR, xC, d),\n              initializationValue,\n              initializationValue,\n              initializationValue\n            );\n\n            ${w}\n          } else if (${2===v}) {\n            vec4 values = vec4(\n              getValue(batch, xR, xC, d),\n              getValue(batch, xR, xC + ${u}, d),\n              initializationValue,\n              initializationValue\n            );\n\n            ${w}\n          } else if (${3===v}) {\n            vec4 values = vec4(\n              getValue(batch, xR, xC, d),\n              getValue(batch, xR, xC + ${u}, d),\n              getValue(batch, xR, xC + 2 * ${u}, d),\n              initializationValue\n            );\n\n            ${w}\n          }\n        }\n        setOutput(${b});\n      }\n    `}}class eM{constructor(e,t,n,s=!1,r=!1){if(this.variableNames=["x"],"avg"===t&&n)throw new Error("Cannot compute positions for average pool.");const a=e.filterWidth,i=e.strideDepth,o=e.strideHeight,l=e.strideWidth,u=e.dilationDepth,c=e.dilationHeight,h=e.dilationWidth,p=e.effectiveFilterDepth,d=e.effectiveFilterHeight,f=e.effectiveFilterWidth,m=e.padInfo.front,g=e.padInfo.top,y=e.padInfo.left;this.outputShape=e.outShape;const b="avg"===t;let x="0.0";if(b||(x="-1.0 / 1e-20"),n){const t=">=";return void(this.userCode=`\n        const ivec3 strides =\n            ivec3(${i}, ${o}, ${l});\n        const ivec3 pads = ivec3(${m}, ${g}, ${y});\n\n        void main() {\n          ivec5 coords = getOutputCoords();\n          int batch = coords.x;\n          int ch = coords.u;\n\n          ivec3 xCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;\n          int xDCorner = xCorner.x;\n          int xRCorner = xCorner.y;\n          int xCCorner = xCorner.z;\n\n          // max/min x(?, ?, ?, ch) to get y(yD, yR, yC, ch).\n          // ? = to be determined\n          float minMaxValue = 0.0;\n          float minMaxValueFound = 0.0;\n          int minMaxPosition = 0;\n\n          for (int wD = 0; wD < ${p};\n              wD += ${u}) {\n            int xD = xDCorner + wD;\n\n            if (xD < 0 || xD >= ${e.inDepth}) {\n              continue;\n            }\n\n            for (int wR = 0; wR < ${d};\n                wR += ${c}) {\n              int xR = xRCorner + wR;\n\n              if (xR < 0 || xR >= ${e.inHeight}) {\n                continue;\n              }\n\n              for (int wC = 0; wC < ${f};\n                  wC += ${h}) {\n                int xC = xCCorner + wC;\n\n                if (xC < 0 || xC >= ${e.inWidth}) {\n                  continue;\n                }\n\n                float value = getX(batch, xD, xR, xC, ch);\n\n                // If a min / max value has already been found, use it. If not,\n                // use the current value.\n                float currMinMaxValue = mix(\n                    value, minMaxValue, minMaxValueFound);\n                if (value ${t} currMinMaxValue) {\n                  minMaxValue = value;\n                  minMaxValueFound = 1.0;\n                  minMaxPosition = ${s?r?`(((batch * ${e.inDepth} + xD) * ${e.inHeight} + xR) * ${e.inWidth} + xC) * ${e.inChannels} + ch`:`((xD * ${e.inHeight} + xR) * ${e.inWidth} + xC) * ${e.inChannels} + ch`:`wD * ${d} * ${f} +\n                      wR * ${f} + wC`};\n                }\n              }\n            }\n          }\n          setOutput(float(minMaxPosition));\n        }\n      `)}let v=`${t}(${t}(${t}(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])`;"avg"===t&&(v="avgValue / count");const w=4*Math.floor(a/4),k=a%4,I=`\n      if (${b}) {\n        avgValue += dot(values, ones);\n      } else {\n        minMaxValue = max(values, minMaxValue);\n      }\n    `;this.userCode=`\n      const ivec3 strides =\n        ivec3(${i}, ${o}, ${l});\n      const ivec3 pads = ivec3(${m}, ${g}, ${y});\n      const float initializationValue = ${x};\n      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);\n\n      float count = 0.0;\n\n      float getValue(int batch, int xD, int xR, int xC, int ch) {\n        if (xC < 0 || xC >= ${e.inWidth}) {\n          return initializationValue;\n        }\n        count += 1.0;\n        return getX(batch, xD, xR, xC, ch);\n      }\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int ch = coords.u;\n\n        ivec3 xCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;\n        int xDCorner = xCorner.x;\n        int xRCorner = xCorner.y;\n        int xCCorner = xCorner.z;\n\n        // max/min x(?, ?, ?, d) to get y(yD, yR, yC, ch).\n        // ? = to be determined\n        vec4 minMaxValue = vec4(${x});\n        float avgValue = 0.0;\n        count = 0.0;\n\n        for (int wD = 0; wD < ${p};\n            wD += ${u}) {\n          int xD = xDCorner + wD;\n\n          if (xD < 0 || xD >= ${e.inDepth}) {\n            continue;\n          }\n\n          for (int wR = 0; wR < ${d};\n            wR += ${c}) {\n            int xR = xRCorner + wR;\n\n            if (xR < 0 || xR >= ${e.inHeight}) {\n              continue;\n            }\n\n            for (int wC = 0; wC < ${w}; wC += 4) {\n              int xC = xCCorner + wC * ${h};\n\n              vec4 values = vec4(\n                getValue(batch, xD, xR, xC, ch),\n                getValue(batch, xD, xR, xC + ${h}, ch),\n                getValue(batch, xD, xR, xC + 2 * ${h}, ch),\n                getValue(batch, xD, xR, xC + 3 * ${h}, ch)\n              );\n\n              ${I}\n            }\n\n            int xC = xCCorner + ${w};\n            if (${1===k}) {\n              vec4 values = vec4(\n                getValue(batch, xD, xR, xC, ch),\n                initializationValue,\n                initializationValue,\n                initializationValue\n              );\n\n              ${I}\n            } else if (${2===k}) {\n              vec4 values = vec4(\n                getValue(batch, xD, xR, xC, ch),\n                getValue(batch, xD, xR, xC + ${h}, ch),\n                initializationValue,\n                initializationValue\n              );\n\n              ${I}\n            } else if (${3===k}) {\n              vec4 values = vec4(\n                getValue(batch, xD, xR, xC, ch),\n                getValue(batch, xD, xR, xC + ${h}, ch),\n                getValue(batch, xD, xR, xC + 2 * ${h}, ch),\n                initializationValue\n              );\n\n              ${I}\n            }\n          }\n          setOutput(${v});\n        }\n      }\n    `}}const tM={kernelName:ct,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:r}=t;QR(r,"avgPool");const{filterSize:a,strides:i,pad:o,dimRoundingMode:l}=s;se(cu(i,1),(()=>`Error in avgPool: Either strides or dilations must be 1. Got strides ${i} and dilations '1'`));const u=eu(r.shape,a,i,1,o,l);if(1===u.filterWidth&&1===u.filterHeight&&ue(u.inShape,u.outShape))return GD({inputs:{x:r},backend:n});const c=new QO(u,"avg",!1);return n.runWebGLProgram(c,[r],"float32")}},nM={kernelName:pt,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{filterSize:a,strides:i,pad:o,dimRoundingMode:l,dataFormat:u}=s,c=tu(r.shape,a,i,[1,1,1],o,l,u),h=new eM(c,"avg",!1);return n.runWebGLProgram(h,[r],"float32")}};class sM{constructor(e){this.variableNames=["dy"],this.outputShape=e.inShape;const t=e.filterHeight,n=e.filterWidth,s=e.strideHeight,r=e.strideWidth,a=e.dilationHeight,i=e.dilationWidth,o=e.effectiveFilterHeight,l=e.effectiveFilterWidth,u=o-1-e.padInfo.top,c=l-1-e.padInfo.left,h=1/(t*n);this.userCode=`\n      const ivec2 pads = ivec2(${u}, ${c});\n      const float avgMultiplier = float(${h});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n\n        ivec2 dyRCCorner = coords.yz - pads;\n        int dyRCorner = dyRCCorner.x;\n        int dyCCorner = dyRCCorner.y;\n\n        // Convolve dy(?, ?, d) with pos mask(:, :, d) to get dx(xR, xC, d).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        for (int wR = 0; wR < ${o};\n            wR += ${a}) {\n          float dyR = float(dyRCorner + wR) / ${s}.0;\n\n          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {\n            continue;\n          }\n          int idyR = int(dyR);\n\n          for (int wC = 0; wC < ${l};\n            wC+= ${i}) {\n            float dyC = float(dyCCorner + wC) / ${r}.0;\n\n            if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||\n                fract(dyC) > 0.0) {\n              continue;\n            }\n            int idyC = int(dyC);\n\n            float dyValue = getDy(b, idyR, idyC, d);\n\n            dotProd += dyValue * avgMultiplier;\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class rM{constructor(e){this.variableNames=["dy"],this.outputShape=e.inShape;const t=e.filterDepth,n=e.filterHeight,s=e.filterWidth,r=e.strideDepth,a=e.strideHeight,i=e.strideWidth,o=e.dilationDepth,l=e.dilationHeight,u=e.dilationWidth,c=e.effectiveFilterDepth,h=e.effectiveFilterHeight,p=e.effectiveFilterWidth,d=c-1-e.padInfo.front,f=h-1-e.padInfo.top,m=p-1-e.padInfo.left,g=1/(t*n*s);this.userCode=`\n      const ivec3 pads = ivec3(${d}, ${f}, ${m});\n      const float avgMultiplier = float(${g});\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int ch = coords.u;\n\n        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;\n        int dyDCorner = dyCorner.x;\n        int dyRCorner = dyCorner.y;\n        int dyCCorner = dyCorner.z;\n\n        // Convolve dy(?, ?, ?, d) with pos mask(:, :, :, ch) to get\n        // dx(xD, xR, xC, ch).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n\n        for (int wD = 0; wD < ${c};\n            wD += ${o}) {\n          float dyD = float(dyDCorner + wD) / ${r}.0;\n\n          if (dyD < 0.0 || dyD >= ${e.outDepth}.0 || fract(dyD) > 0.0) {\n            continue;\n          }\n          int idyD = int(dyD);\n\n          for (int wR = 0; wR < ${h};\n              wR += ${l}) {\n            float dyR = float(dyRCorner + wR) / ${a}.0;\n\n            if (dyR < 0.0 || dyR >= ${e.outHeight}.0 ||\n                fract(dyR) > 0.0) {\n              continue;\n            }\n            int idyR = int(dyR);\n\n            for (int wC = 0; wC < ${p};\n                wC += ${u}) {\n              float dyC = float(dyCCorner + wC) / ${i}.0;\n\n              if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||\n                  fract(dyC) > 0.0) {\n                continue;\n              }\n              int idyC = int(dyC);\n\n              float dyValue = getDy(batch, idyD, idyR, idyC, ch);\n\n              dotProd += dyValue * avgMultiplier;\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}const aM={kernelName:dt,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{dy:r,input:a}=t,i=a,{filterSize:o,strides:l,pad:u,dimRoundingMode:c}=s,h=tu(i.shape,o,l,[1,1,1],u,c),p=new rM(h);return n.runWebGLProgram(p,[r],i.dtype)}},iM={kernelName:ht,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{dy:r,input:a}=t,i=a;QR([r,a],"avgPoolGrad");const{filterSize:o,strides:l,pad:u}=s,c=eu(i.shape,o,l,1,u),h=new sM(c);return n.runWebGLProgram(h,[r],i.dtype)}},oM={kernelName:ft,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{a:r,b:a}=t,{transposeA:i,transposeB:o}=s;return vO({a:r,b:a,transposeA:i,transposeB:o,backend:n})}};class lM{constructor(e,t,n,s,r,a){this.outputShape=[],this.variableNames=["x","mean","variance"],to(e,t),to(e,n);let i="0.0";null!=s&&(to(e,s),this.variableNames.push("offset"),i="getOffsetAtOutCoords()");let o="1.0";null!=r&&(to(e,r),this.variableNames.push("scale"),o="getScaleAtOutCoords()"),this.outputShape=e,this.userCode=`\n      void main() {\n        float x = getXAtOutCoords();\n        float mean = getMeanAtOutCoords();\n        float variance = getVarianceAtOutCoords();\n        float offset = ${i};\n        float scale = ${o};\n        float inv = scale * inversesqrt(variance + float(${a}));\n        setOutput(dot(vec3(x, -mean, offset), vec3(inv, inv, 1)));\n      }\n    `}}class uM{constructor(e,t,n,s,r,a){this.packedInputs=!0,this.packedOutput=!0,this.variableNames=["x","mean","variance"],to(e,t),to(e,n);let i="vec4(0.0)";null!=s&&(to(e,s),this.variableNames.push("offset"),i="getOffsetAtOutCoords()");let o="vec4(1.0)";null!=r&&(to(e,r),this.variableNames.push("scale"),o="getScaleAtOutCoords()"),this.outputShape=e,this.userCode=`\n      void main() {\n        vec4 offset = ${i};\n        vec4 scale = ${o};\n\n        vec4 x = getXAtOutCoords();\n        vec4 mean = getMeanAtOutCoords();\n        vec4 variance = getVarianceAtOutCoords();\n\n        vec4 inv = scale * inversesqrt(variance + vec4(${a}));\n\n        setOutput((x - mean) * inv + offset);\n      }\n    `}}const cM={kernelName:an,backendName:"webgl",kernelFunc:({inputs:e,backend:t,attrs:n})=>{const{x:s,mean:r,variance:a,offset:i,scale:o}=e;se(r.shape.length===a.shape.length,(()=>"Batch normalization gradient requires mean and variance to have equal ranks.")),se(null==i||r.shape.length===i.shape.length,(()=>"Batch normalization gradient requires mean and offset to have equal ranks.")),se(null==o||r.shape.length===o.shape.length,(()=>"Batch normalization gradient requires mean and scale to have equal ranks."));let{varianceEpsilon:l}=n;null==l&&(l=.001);const u=[s,r,a];let c=null;null!=i&&(c=i.shape,u.push(i));let h=null;null!=o&&(h=o.shape,u.push(o));const p=He().getBool("WEBGL_PACK_NORMALIZATION")?new uM(s.shape,r.shape,a.shape,c,h,l):new lM(s.shape,r.shape,a.shape,c,h,l);return t.runWebGLProgram(p,u,u[0].dtype)}};class hM{constructor(e){this.variableNames=["source"],this.outputShape=e,this.rank=e.length;const t=gF(this.rank);this.customUniforms=[{name:"start",arrayIndex:this.rank,type:"int"}];const n=function(e){if(1===e)return"sourceLoc";if(e<=6)return pM.slice(0,e).map((e=>"sourceLoc."+e)).join(",");throw Error(`Slicing for rank ${e} is not yet supported`)}(this.rank);let s;s=`\n        ${t} sourceLoc;\n        ${t} coords = getOutputCoords();\n        ${e.map(((e,t)=>`sourceLoc.${pM[t]} = start[${t}] + coords.${pM[t]};`)).join("\n")}\n      `,this.userCode=`\n      void main() {\n        ${s}\n        setOutput(getSource(${n}));\n      }\n    `}}const pM=["x","y","z","w","u","v"];class dM{constructor(e){this.variableNames=["source"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e,this.rank=e.length,this.customUniforms=[{name:"start",arrayIndex:this.rank,type:"int"}];const t=gF(this.rank),n=TD("coords",this.rank),s=TD("sourceLoc",this.rank),r=1===this.rank?"sourceLoc":`vec2(${s.slice(-2).join()})`,a=`getChannel(getSource(${s.join()}), ${r})`,i=`\n      result.x = ${a};\n      if (++${n[this.rank-1]} < ${e[this.rank-1]}) {\n        ++${s[this.rank-1]};\n        result.y = ${a};\n        --${s[this.rank-1]};\n      }\n    `,o=1===this.rank?"":`\n      --${n[this.rank-1]};\n      if (++${n[this.rank-2]} < ${e[this.rank-2]}) {\n        ++${s[this.rank-2]};\n        result.z = ${a};\n        if (++${n[this.rank-1]} < ${e[this.rank-1]}) {\n          ++${s[this.rank-1]};\n          result.w = ${a};\n        }\n      }\n    `,l=this.rank<=4?`sourceLoc = coords +\n            ${t}(${e.map(((e,t)=>`start[${t}]`)).join()});`:e.map(((e,t)=>`${s[t]} = ${n[t]} + start[${t}];`)).join("\n");this.userCode=`\n      void main() {\n        ${t} coords = getOutputCoords();\n        ${t} sourceLoc;\n        ${l}\n        vec4 result = vec4(0.);\n        ${i}\n        ${o}\n        setOutput(result);\n      }\n    `}}function fM(e){const{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{begin:a,size:i}=s,[o,l]=Co(r,a,i);if(po(r,o,l),0===oe(l))return n.makeTensorInfo(l,r.dtype,[]);if(n.shouldExecuteOnCPU([r])||"string"===r.dtype){const e=n.texData.get(r.dataId),t=hD(e.values,o,l,r.shape,r.dtype);return n.makeTensorInfo(l,r.dtype,t)}const{isPacked:u}=n.texData.get(r.dataId),c=No(r.shape,o,l);if(u||!c){const e=He().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new dM(l):new hM(l),t=[o];return n.runWebGLProgram(e,[r],r.dtype,t)}return n.uploadToGPU(r.dataId),function(e,t,n,s){const r=s.texData.get(e.dataId),a=s.makeTensorInfo(n,e.dtype),i=s.texData.get(a.dataId);Object.assign(i,r),i.refCount=1,i.shape=n,i.dtype=e.dtype;let o=To(t,Fe(e.shape));r.slice&&(o+=r.slice.flatOffset),i.slice={flatOffset:o,origDataId:r.slice&&r.slice.origDataId||e.dataId};const l=s.dataRefCount.get(i.slice.origDataId)||1;return s.dataRefCount.set(i.slice.origDataId,l+1),a}(r,o,l,n)}const mM={kernelName:vs,backendName:"webgl",kernelFunc:fM},gM={kernelName:mt,backendName:"webgl",kernelFunc:e=>{const{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{blockShape:a,crops:i}=s;se(r.shape.length<=4,(()=>"batchToSpaceND for rank > 4 with a WebGL backend not implemented yet"));const o=a.reduce(((e,t)=>e*t)),l=Xd(r.shape,a,o),u=Yd(l.length,a.length),c=Zd(r.shape,a,o),h=Jd(i,a.length),p=Qd(c,i,a.length),d=[],f=lO({inputs:{x:r},backend:n,attrs:{shape:l}}),m=bO({inputs:{x:f},backend:n,attrs:{perm:u}}),g=lO({inputs:{x:m},backend:n,attrs:{shape:c}}),y=fM({inputs:{x:g},backend:n,attrs:{begin:h,size:p}});return d.push(f),d.push(m),d.push(g),d.forEach((e=>n.disposeIntermediateTensorInfo(e))),y}},yM={kernelName:gt,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:r,weights:a}=t,{size:i}=s,o=n.readSync(r.dataId),l=n.readSync(a.dataId),u=LF(o,l,a.dtype,a.shape,i);return n.makeTensorInfo([i],a.dtype,u)}},bM={kernelName:bt,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{s0:s,s1:r}=t,a=n.readSync(s.dataId),i=n.readSync(r.dataId),o=to(Array.from(a),Array.from(i));return n.makeTensorInfo([o.length],"int32",Int32Array.from(o))}},xM=tO({opSnippet:"return float(a != b);",cpuKernelImpl:rD,dtype:"bool"}),vM={kernelName:Hn,backendName:"webgl",kernelFunc:xM};function wM(e){const{inputs:t,backend:n}=e,{input:s}=t;return GD({inputs:{x:n.texData.get(s.dataId).complexTensorInfos.real},backend:n})}const kM={kernelName:rs,backendName:"webgl",kernelFunc:wM},IM={kernelName:xt,backendName:"webgl",kernelFunc:function e(t){const{inputs:n,backend:s,attrs:r}=t,{x:a}=n,{dtype:i}=r;if("complex64"===i){if("complex64"===a.dtype)return GD({inputs:{x:a},backend:s});const t=eh(a.shape),n=e({inputs:{x:a},backend:s,attrs:{dtype:"float32"}}),r=jD({inputs:{real:n,imag:t},backend:s});return t.dispose(),s.disposeIntermediateTensorInfo(n),r}if("complex64"===a.dtype){const t=wM({inputs:{input:a},backend:s}),n=e({inputs:{x:t},backend:s,attrs:{dtype:i}});return s.disposeIntermediateTensorInfo(t),n}if(!Ie(a.dtype,i)){const e=GD({inputs:{x:a},backend:s});return{dataId:e.dataId,shape:e.shape,dtype:i}}if("int32"===i)return function(e,t){const n=new FD(e.shape,"return float(int(x));"),s=t.runWebGLProgram(n,[e],"int32");return{dataId:s.dataId,shape:s.shape,dtype:s.dtype}}(a,s);if("bool"===i){const e=s.makeTensorInfo([],"bool",xe("bool",1)),t=xM({inputs:{a,b:e},backend:s});return s.disposeIntermediateTensorInfo(e),t}throw new Error(`Error in Cast: failed to cast ${a.dtype} to ${i}`)}},SM="return ceil(x);",NM=eO({opSnippet:SM,packedOpSnippet:SM,cpuKernelImpl:PF}),TM={kernelName:vt,backendName:"webgl",kernelFunc:NM};class CM{constructor(e){this.variableNames=["A"],this.customUniforms=[{name:"minVal",type:"float"},{name:"maxVal",type:"float"}],this.outputShape=e,this.userCode="\n\n      void main() {\n        float value = getAAtOutCoords();\n        if (isnan(value)) {\n          setOutput(value);\n          return;\n        }\n\n        setOutput(clamp(value, minVal, maxVal));\n      }\n    "}}class $M{constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"minVal",type:"float"},{name:"maxVal",type:"float"}],this.outputShape=e,this.userCode="\n      void main() {\n        vec4 value = getAAtOutCoords();\n\n        if (any(isnan(value))) {\n          setOutput(value);\n          return;\n        }\n\n        setOutput(clamp(value, vec4(minVal), vec4(maxVal)));\n      }\n    "}}const EM={kernelName:wt,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{clipValueMin:a,clipValueMax:i}=s;let o;o=He().getBool("WEBGL_PACK_CLIP")?new $M(r.shape):new CM(r.shape);const l=[[a],[i]];return n.runWebGLProgram(o,[r],r.dtype,l)}};class AM{constructor(e){this.variableNames=["real","imag"],this.outputShape=e,this.userCode="\n      void main() {\n        float re = abs(getRealAtOutCoords());\n        float im = abs(getImagAtOutCoords());\n        float mx = max(re, im);\n\n        // sadly the length function in glsl is not underflow-safe\n        // (at least not on Intel GPUs). So the safe solution is\n        // to ensure underflow-safety in all cases.\n        setOutput(\n          mx == 0.0 ? 0.0 : mx * length(vec2(1, min(re, im)/mx))\n        );\n      }\n    "}}function _M(e,t){return{dataId:t.dataId,dtype:t.dtype,shape:e.shape}}const RM={kernelName:It,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{x:s}=t,r=n.texData.get(s.dataId),a=new AM(s.shape),i=[_M(s,r.complexTensorInfos.real),_M(s,r.complexTensorInfos.imag)];return n.runWebGLProgram(a,i,i[0].dtype)}};class FM{constructor(e){this.outputShape=[],this.outputShape=Hd(e,1),this.variableNames=e.map(((e,t)=>`T${t}`));const t=new Array(e.length-1);t[0]=e[0][1];for(let n=1;n<t.length;n++)t[n]=t[n-1]+e[n][1];const n=[`if (yC < ${t[0]}) setOutput(getT0(yR, yC));`];for(let e=1;e<t.length;e++){const s=t[e-1];n.push(`else if (yC < ${t[e]}) setOutput(getT${e}(yR, yC-${s}));`)}const s=t.length,r=t[t.length-1];n.push(`else setOutput(getT${s}(yR, yC-${r}));`),this.userCode=`\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int yR = coords.x;\n        int yC = coords.y;\n\n        ${n.join("\n        ")}\n      }\n    `}}class DM{constructor(e,t){this.packedInputs=!0,this.packedOutput=!0,this.outputShape=[],this.outputShape=Hd(e,t);const n=this.outputShape,s=n.length,r=gF(s),a=TD("coords",s),i=["x","y","z","w","u","v"].slice(0,s);this.variableNames=e.map(((e,t)=>`T${t}`));const o=new Array(e.length-1);o[0]=e[0][t];for(let n=1;n<o.length;n++)o[n]=o[n-1]+e[n][t];const l=i[t],u=i.slice(-2),c=i.join();let h=`if (${l} < ${o[0]}) {\n        return getChannel(\n            getT0(${c}), vec2(${u.join()}));\n        }`;for(let e=1;e<o.length;e++){const t=o[e-1];h+=`\n        if (${l} < ${o[e]}  && ${l} >= ${o[e-1]}) {\n          return getChannel(\n            getT${e}(${OM(i,l,t)}),\n            vec2(${OM(u,l,t)}));\n        }`}const p=o.length,d=o[o.length-1];h+=`\n        return getChannel(\n          getT${p}(${OM(i,l,d)}),\n          vec2(${OM(u,l,d)}));`,this.userCode=`\n      float getValue(${i.map((e=>"int "+e))}) {\n        ${h}\n      }\n\n      void main() {\n        ${r} coords = getOutputCoords();\n        vec4 result = vec4(getValue(${a}), 0., 0., 0.);\n\n        ${a[s-1]} = ${a[s-1]} + 1;\n        if (${a[s-1]} < ${n[s-1]}) {\n          result.g = getValue(${a});\n        }\n\n        ${a[s-2]} = ${a[s-2]} + 1;\n        if (${a[s-2]} < ${n[s-2]}) {\n          result.a = getValue(${a});\n        }\n\n        ${a[s-1]} = ${a[s-1]} - 1;\n        if (${a[s-2]} < ${n[s-2]} &&\n            ${a[s-1]} < ${n[s-1]}) {\n          result.b = getValue(${a});\n        }\n        setOutput(result);\n      }\n    `}}function OM(e,t,n){const s=e.indexOf(t);return e.map(((e,t)=>t===s?`${e} - ${n}`:e)).join()}function MM(e){const{inputs:t,backend:n}=e,{input:s}=t;return GD({inputs:{x:n.texData.get(s.dataId).complexTensorInfos.imag},backend:n})}const LM={kernelName:dn,backendName:"webgl",kernelFunc:MM};function zM(e,t,n){const s=e[0].dtype;if("complex64"===s){const s=e.map((e=>wM({inputs:{input:e},backend:n}))),r=e.map((e=>MM({inputs:{input:e},backend:n}))),a=zM(s,t,n),i=zM(r,t,n),o=jD({inputs:{real:a,imag:i},backend:n});return s.forEach((e=>n.disposeIntermediateTensorInfo(e))),r.forEach((e=>n.disposeIntermediateTensorInfo(e))),n.disposeIntermediateTensorInfo(a),n.disposeIntermediateTensorInfo(i),o}let r=n.shouldExecuteOnCPU(e);if("string"===s&&(r=!0),r){const r=e.map((e=>{const s=oe(e.shape.slice(t));return lO({inputs:{x:e},backend:n,attrs:{shape:[-1,s]}})})),a=r.map((e=>({vals:n.readSync(e.dataId),shape:e.shape}))),i=Hd(r.map((e=>e.shape)),1),o=1===r[0].shape[0],l=BF(a,i,s,o),u=Hd(e.map((e=>e.shape)),t),c=n.makeTensorInfo(u,s,l);return r.forEach((e=>n.disposeIntermediateTensorInfo(e))),c}if(e.length>He().getNumber("WEBGL_MAX_TEXTURES_IN_SHADER")){const s=Math.floor(e.length/2),r=zM(e.slice(0,s),t,n),a=zM(e.slice(s),t,n),i=zM([r,a],t,n);return n.disposeIntermediateTensorInfo(r),n.disposeIntermediateTensorInfo(a),i}if(He().getBool("WEBGL_PACK_ARRAY_OPERATIONS")&&e[0].shape.length>1){const r=new DM(e.map((e=>e.shape)),t);return n.runWebGLProgram(r,e,s)}const{tensors2D:a,outShape:i}=function(e,t,n){const s=Hd(e.map((e=>e.shape)),t);return{tensors2D:e.map((e=>lO({inputs:{x:e},attrs:{shape:[-1,oe(e.shape.slice(t))]},backend:n}))),outShape:s}}(e,t,n),o=new FM(a.map((e=>e.shape))),l=n.runWebGLProgram(o,a,s);a.forEach((e=>n.disposeIntermediateTensorInfo(e)));const u=lO({inputs:{x:l},attrs:{shape:i},backend:n});return n.disposeIntermediateTensorInfo(l),u}function PM(e){const{inputs:t,backend:n,attrs:s}=e,{axis:r}=s,a=ye(r,t[0].shape)[0],i=Hd(t.map((e=>e.shape)),a);if(0===oe(i))return n.makeTensorInfo(i,t[0].dtype,[]);const o=t.filter((e=>oe(e.shape)>0));return 1===o.length?GD({inputs:{x:o[0]},backend:n}):(Gd(o.map((e=>e.shape)),a),zM(o,a,n))}const BM={kernelName:St,backendName:"webgl",kernelFunc:PM};class WM{constructor(e,t=!1,n=null,s=!1,r=!1){this.variableNames=["x","W"],this.outputShape=e.outShape;const a=e.padInfo.top,i=e.padInfo.left,o=e.strideHeight,l=e.strideWidth,u=e.dilationHeight,c=e.dilationWidth,h=e.filterHeight,p=e.filterWidth,d=4*Math.floor(e.inChannels/4),f=e.inChannels%4,m="channelsLast"===e.dataFormat,g=m?1:2,y=m?2:3,b=m?3:1;let x="",v="";n&&(x=s?`float activation(float a) {\n          float b = getPreluActivationWeightsAtOutCoords();\n          ${n}\n        }`:r?`float activation(float a) {\n          float b = getLeakyreluAlphaAtOutCoords();\n          ${n}\n        }`:`\n          float activation(float x) {\n            ${n}\n          }\n        `,v="result = activation(result);");const w=t?"result += getBiasAtOutCoords();":"";t&&this.variableNames.push("bias"),s&&this.variableNames.push("preluActivationWeights"),r&&this.variableNames.push("leakyreluAlpha"),this.userCode=`\n      ${x}\n\n      const ivec2 strides = ivec2(${o}, ${l});\n      const ivec2 pads = ivec2(${a}, ${i});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords[0];\n        int d2 = coords[${b}];\n\n        ivec2 xRCCorner =\n            ivec2(coords[${g}], coords[${y}]) * strides - pads;\n        int xRCorner = xRCCorner.x;\n        int xCCorner = xRCCorner.y;\n\n        // Convolve x(?, ?, d1) with w(:, :, d1, d2) to get y(yR, yC, d2).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        for (int wR = 0; wR < ${h}; wR++) {\n          int xR = xRCorner + wR * ${u};\n\n          if (xR < 0 || xR >= ${e.inHeight}) {\n            continue;\n          }\n\n          for (int wC = 0; wC < ${p}; wC++) {\n            int xC = xCCorner + wC * ${c};\n\n            if (xC < 0 || xC >= ${e.inWidth}) {\n              continue;\n            }\n\n            for (int d1 = 0; d1 < ${d}; d1 += 4) {\n              vec4 wValues = vec4(\n                getW(wR, wC, d1, d2),\n                getW(wR, wC, d1 + 1, d2),\n                getW(wR, wC, d1 + 2, d2),\n                getW(wR, wC, d1 + 3, d2)\n              );\n\n              if (${m}) {\n                vec4 xValues = vec4(\n                  getX(batch, xR, xC, d1),\n                  getX(batch, xR, xC, d1 + 1),\n                  getX(batch, xR, xC, d1 + 2),\n                  getX(batch, xR, xC, d1 + 3)\n                );\n                dotProd += dot(xValues, wValues);\n              } else {\n                vec4 xValues = vec4(\n                  getX(batch, d1, xR, xC),\n                  getX(batch, d1 + 1, xR, xC),\n                  getX(batch, d1 + 2, xR, xC),\n                  getX(batch, d1 + 3, xR, xC)\n                );\n                dotProd += dot(xValues, wValues);\n              }\n            }\n\n            if (${1===f}) {\n\n              if (${m}) {\n                dotProd +=\n                    getX(batch, xR, xC, ${d}) *\n                    getW(wR, wC, ${d}, d2);\n              } else {\n                dotProd +=\n                    getX(batch, ${d}, xR, xC) *\n                    getW(wR, wC, ${d}, d2);\n              }\n\n            } else if (${2===f}) {\n              vec2 wValues = vec2(\n                getW(wR, wC, ${d}, d2),\n                getW(wR, wC, ${d} + 1, d2)\n              );\n\n              if (${m}) {\n                vec2 xValues = vec2(\n                  getX(batch, xR, xC, ${d}),\n                  getX(batch, xR, xC, ${d} + 1)\n                );\n                dotProd += dot(xValues, wValues);\n              } else {\n                vec2 xValues = vec2(\n                  getX(batch, ${d}, xR, xC),\n                  getX(batch, ${d} + 1, xR, xC)\n                );\n                dotProd += dot(xValues, wValues);\n              }\n\n            } else if (${3===f}) {\n              vec3 wValues = vec3(\n                getW(wR, wC, ${d}, d2),\n                getW(wR, wC, ${d} + 1, d2),\n                getW(wR, wC, ${d} + 2, d2)\n              );\n\n              if (${m}) {\n                vec3 xValues = vec3(\n                  getX(batch, xR, xC, ${d}),\n                  getX(batch, xR, xC, ${d} + 1),\n                  getX(batch, xR, xC, ${d} + 2)\n                );\n                dotProd += dot(xValues, wValues);\n              } else {\n                vec3 xValues = vec3(\n                  getX(batch, ${d}, xR, xC),\n                  getX(batch, ${d} + 1, xR, xC),\n                  getX(batch, ${d} + 2, xR, xC)\n                );\n                dotProd += dot(xValues, wValues);\n              }\n\n            }\n          }\n        }\n\n        float result = dotProd;\n        ${w}\n        ${v}\n        setOutput(result);\n      }\n    `}}class VM{constructor(e){this.variableNames=["x","W"],this.outputShape=e.outShape;const t=e.padInfo.front,n=e.padInfo.top,s=e.padInfo.left,r=e.strideDepth,a=e.strideHeight,i=e.strideWidth,o=e.dilationDepth,l=e.dilationHeight,u=e.dilationWidth,c=e.filterDepth,h=e.filterHeight,p=e.filterWidth,d=4*Math.floor(e.inChannels/4),f=e.inChannels%4;this.userCode=`\n      const ivec3 strides = ivec3(${r}, ${a}, ${i});\n      const ivec3 pads = ivec3(${t}, ${n}, ${s});\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int d2 = coords.u;\n\n        ivec3 xFRCCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;\n        int xFCorner = xFRCCorner.x;\n        int xRCorner = xFRCCorner.y;\n        int xCCorner = xFRCCorner.z;\n\n        // Convolve x(?, ?, ?, d1) with w(:, :, :, d1, d2) to get\n        // y(yF, yR, yC, d2). ? = to be determined. : = across all\n        // values in that axis.\n        float dotProd = 0.0;\n        for (int wF = 0; wF < ${c}; wF++) {\n          int xF = xFCorner + wF * ${o};\n\n          if (xF < 0 || xF >= ${e.inDepth}) {\n            continue;\n          }\n\n          for (int wR = 0; wR < ${h}; wR++) {\n            int xR = xRCorner + wR * ${l};\n\n            if (xR < 0 || xR >= ${e.inHeight}) {\n              continue;\n            }\n\n            for (int wC = 0; wC < ${p}; wC++) {\n              int xC = xCCorner + wC * ${u};\n\n              if (xC < 0 || xC >= ${e.inWidth}) {\n                continue;\n              }\n\n              for (int d1 = 0; d1 < ${d}; d1 += 4) {\n                vec4 xValues = vec4(\n                  getX(batch, xF, xR, xC, d1),\n                  getX(batch, xF, xR, xC, d1 + 1),\n                  getX(batch, xF, xR, xC, d1 + 2),\n                  getX(batch, xF, xR, xC, d1 + 3)\n                );\n                vec4 wValues = vec4(\n                  getW(wF, wR, wC, d1, d2),\n                  getW(wF, wR, wC, d1 + 1, d2),\n                  getW(wF, wR, wC, d1 + 2, d2),\n                  getW(wF, wR, wC, d1 + 3, d2)\n                );\n\n                dotProd += dot(xValues, wValues);\n              }\n\n              if (${1===f}) {\n                dotProd +=\n                  getX(batch, xF, xR, xC, ${d}) *\n                  getW(wF, wR, wC, ${d}, d2);\n              } else if (${2===f}) {\n                vec2 xValues = vec2(\n                  getX(batch, xF, xR, xC, ${d}),\n                  getX(batch, xF, xR, xC, ${d} + 1)\n                );\n                vec2 wValues = vec2(\n                  getW(wF, wR, wC, ${d}, d2),\n                  getW(wF, wR, wC, ${d} + 1, d2)\n                );\n                dotProd += dot(xValues, wValues);\n              } else if (${3===f}) {\n                vec3 xValues = vec3(\n                  getX(batch, xF, xR, xC, ${d}),\n                  getX(batch, xF, xR, xC, ${d} + 1),\n                  getX(batch, xF, xR, xC, ${d} + 2)\n                );\n                vec3 wValues = vec3(\n                  getW(wF, wR, wC, ${d}, d2),\n                  getW(wF, wR, wC, ${d} + 1, d2),\n                  getW(wF, wR, wC, ${d} + 2, d2)\n                );\n                dotProd += dot(xValues, wValues);\n              }\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class UM{constructor(e,t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"inputShape",type:"ivec3"},{name:"pad",type:"ivec2"},{name:"stride",type:"ivec2"},{name:"dilation",type:"ivec2"},{name:"inChannels",type:"int"},{name:"itemsPerBlockRow",type:"int"},{name:"outWidth",type:"int"}],this.outputShape=e,this.enableShapeUniforms=kF(this.outputShape.length);const{dataFormat:n}=t,s=tF(),r="channelsLast"===n,a=r?0:1,i=r?1:2,o=this.enableShapeUniforms?"if(blockIndex < outShape[1] && pos < outShape[0]) {":`if(blockIndex < ${e[1]} && pos < ${e[0]}) {`;let l="";for(let e=0;e<=1;e++)for(let t=0;t<=1;t++)l+=`\n          blockIndex = rc.y + ${t};\n          pos = rc.x + ${e};\n\n          ${o}\n            offsetY = int(blockIndex / outWidth) * stride[0] - pad[0];\n            d0 = offsetY + dilation[0] * (pos / itemsPerBlockRow);\n\n            if(d0 < inputShape[${a}] && d0 >= 0) {\n              // Use custom imod instead mod. On Intel GPU, mod may generate\n              // unexpected value.\n              // https://github.com/tensorflow/tfjs/issues/5447\n              offsetX = imod(blockIndex, outWidth) * stride[1] - pad[1];\n              d1 = offsetX + dilation[1] * (imod(pos, itemsPerBlockRow) /\n                  inChannels);\n\n              if(d1 < inputShape[${i}] && d1 >= 0) {\n\n                ch = imod(pos, inChannels);\n\n                if (${r}) {\n                  innerDims = vec2(d1, ch);\n                  result[${2*e+t}] = getChannel(\n                    getA(d0, int(innerDims.x),\n                    int(innerDims.y)), innerDims);\n                } else {\n                  innerDims = vec2(d0, d1);\n                  result[${2*e+t}] = getChannel(\n                    getA(ch, int(innerDims.x),\n                    int(innerDims.y)), innerDims);\n                }\n              }\n            }\n          }\n        `;this.userCode=`\n      void main() {\n        ivec2 rc = getOutputCoords();\n\n        vec4 result = vec4(0);\n\n        int blockIndex, pos, offsetY, d0, offsetX, d1, ch;\n        vec2 innerDims;\n\n        ${l}\n\n        ${s.output} = result;\n      }\n    `}}function GM(e,t,n,s){const r=e.shape;if(se(r.length<=1||3===r.length,(()=>`WebGL conv2d only supports scalar, 1-D Tensor or 3-D Tensor PReLU activation weights but got a tensor of rank-${r.length}.`)),1===r.length){const e=n?t[3]:t[1];se(1===r[0]||r[0]===e,(()=>`WebGL conv2d PReLU activation weights (${r}) is not compatible with the number of output channels (${e}).`))}else if(3===r.length){try{to(r,t)}catch(e){throw Error(`WebGL conv2d PReLU activation weights (${r}) is not compatible with the output shape of the conv2d (${t}).`)}if(!n)return bO({inputs:{x:e},backend:s,attrs:{perm:[1,2,0]}})}return e}function HM({x:e,filter:t,convInfo:n,backend:s,bias:r=null,preluActivationWeights:a=null,leakyreluAlpha:i=0,activation:o=null}){const l=e.shape,u=s.texData.get(e.dataId),c=n.inChannels,h=l[0]*l[1]*l[2],p=n.outChannels,d="channelsLast"===n.dataFormat;let f;const m=[];if(null!=a){const e=GM(a,n.outShape,d,s);e.dataId!==a.dataId&&(m.push(e),a=e)}if((1!==h&&1!==p||!(c>1e3))&&u.isPacked&&d&&null!=u.texture&&l[2]%2!=0&&ue(u.shape.slice(-3),l.slice(-3))){const c=l[0]*l[1]*(l[2]+1),h={dataId:e.dataId,shape:[1,c,n.inChannels],dtype:e.dtype},p=u.shape;u.shape=u.shape.slice(),u.shape[u.shape.length-2]++,se(qR(u.shape,h.shape),(()=>`packed reshape ${u.shape} to ${h.shape} isn't free`));const d=lO({inputs:{x:t},backend:s,attrs:{shape:[1,n.inChannels,n.outChannels]}});m.push(d);const g=vO({a:h,b:d,backend:s,transposeA:!1,transposeB:!1,bias:r,activation:o,preluActivationWeights:a,leakyreluAlpha:i}),y=s.texData.get(g.dataId);se(y.isPacked,(()=>"batchMatMul result is expected to be packed")),u.shape=p,y.shape=n.outShape,f=GD({inputs:{x:g},backend:s}),f.shape=n.outShape,m.push(g)}else{const l=d?e:bO({inputs:{x:e},backend:s,attrs:{perm:[0,2,3,1]}}),u=l.shape,c=lO({inputs:{x:l},backend:s,attrs:{shape:[1,u[0]*u[1]*u[2],n.inChannels]}}),h=lO({inputs:{x:t},backend:s,attrs:{shape:[1,n.inChannels,n.outChannels]}}),p=vO({a:c,b:h,transposeA:!1,transposeB:!1,backend:s,bias:r,activation:o,preluActivationWeights:a,leakyreluAlpha:i}),g=lO({inputs:{x:p},backend:s,attrs:{shape:[n.batchSize,n.outHeight,n.outWidth,n.outChannels]}});f=d?g:bO({inputs:{x:g},backend:s,attrs:{perm:[0,3,1,2]}}),d||(m.push(l),m.push(g)),m.push(c),m.push(h),m.push(p)}for(const e of m)s.disposeIntermediateTensorInfo(e);return f}function jM({x:e,filter:t,convInfo:n,backend:s,bias:r=null,preluActivationWeights:a=null,leakyreluAlpha:i=0,activation:o=null}){const{filterWidth:l,filterHeight:u,inChannels:c,outWidth:h,outHeight:p,dataFormat:d}=n,f="channelsLast"===d,m=l*u*c,g=p*h,y=[m,g],b=[];if(null!=a){const e=GM(a,n.outShape,f,s);e.dataId!==a.dataId&&(b.push(e),a=e)}const x=lO({inputs:{x:e},backend:s,attrs:{shape:e.shape.slice(1)}}),v=lO({inputs:{x:t},backend:s,attrs:{shape:[1,m,oe(t.shape)/m]}});b.push(x),b.push(v);const w=new UM(y,n),k=[x.shape,[n.padInfo.top,n.padInfo.left],[n.strideHeight,n.strideWidth],[n.dilationHeight,n.dilationWidth],[n.inChannels],[n.filterWidth*n.inChannels],[n.outWidth]],I=s.runWebGLProgram(w,[x],"float32",k),S=lO({inputs:{x:I},backend:s,attrs:{shape:[1,y[0],y[1]]}});b.push(I),b.push(S);const N=null!=r,T=null!=a,C="leakyrelu"===o,$=o?nO(o,!0):null,E=new sO(S.shape,v.shape,[1,g,n.outChannels],!0,!1,N,$,T,C),A=[S,v];if(r&&A.push(r),T&&A.push(a),C){const e=s.makeTensorInfo([],"float32",Fr(i,"float32"));A.push(e),b.push(e)}const _=s.runWebGLProgram(E,A,"float32"),R=lO({inputs:{x:_},backend:s,attrs:{shape:[1,p,h,n.outChannels]}}),F=f?R:bO({inputs:{x:R},backend:s,attrs:{perm:[0,3,1,2]}});f||b.push(R),b.push(_);for(const e of b)s.disposeIntermediateTensorInfo(e);return F}const qM={kernelName:Nt,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:r,filter:a}=t,{strides:i,pad:o,dataFormat:l,dilations:u,dimRoundingMode:c}=s,h=hu(l),p=nu(r.shape,a.shape,i,u,o,c,!1,h);let d;if(1!==p.filterHeight||1!==p.filterWidth||1!==p.dilationHeight||1!==p.dilationWidth||1!==p.strideHeight||1!==p.strideWidth||"SAME"!==p.padInfo.type&&"VALID"!==p.padInfo.type)if(He().getBool("WEBGL_CONV_IM2COL")&&1===r.shape[0])d=jM({x:r,filter:a,convInfo:p,backend:n});else{const e=new WM(p);d=n.runWebGLProgram(e,[r,a],"float32")}else d=HM({x:r,filter:a,convInfo:p,backend:n});const f=lO({inputs:{x:d},backend:n,attrs:{shape:p.outShape}});return n.disposeIntermediateTensorInfo(d),f}};class KM{constructor(e){this.variableNames=["x","dy"],this.outputShape=e.filterShape;const t=e.strideHeight,n=e.strideWidth,s=e.padInfo.top,r=e.padInfo.left,a="channelsLast"===e.dataFormat;this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int wR = coords.x;\n        int wC = coords.y;\n        int d1 = coords.z;\n        int d2 = coords.w;\n\n        // Convolve x(?, ?, d1) with dy(:, :, d2) to get dw(wR, wC, d1, d2).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n\n        for (int b = 0; b < ${e.batchSize}; b++) {\n          for (int yR = 0; yR < ${e.outHeight}; yR++) {\n            int xR = wR + yR * ${t} - ${s};\n\n            if (xR < 0 || xR >= ${e.inHeight}) {\n              continue;\n            }\n\n            for (int yC = 0; yC < ${e.outWidth}; yC++) {\n              int xC = wC + yC * ${n} - ${r};\n\n              if (xC < 0 || xC >= ${e.inWidth}) {\n                continue;\n              }\n\n              if (${a}) {\n                float dyValue = getDy(b, yR, yC, d2);\n                float xValue = getX(b, xR, xC, d1);\n                dotProd += (xValue * dyValue);\n              } else {\n                float dyValue = getDy(b, d2, yR, yC);\n                float xValue = getX(b, d1, xR, xC);\n                dotProd += (xValue * dyValue);\n              }\n\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class XM{constructor(e){this.variableNames=["dy","W"],this.outputShape=e.inShape;const t=e.filterHeight,n=e.filterWidth,s=e.strideHeight,r=e.strideWidth,a="channelsLast"===e.dataFormat,i=t-1-e.padInfo.top,o=n-1-e.padInfo.left,l=a?1:2,u=a?2:3,c=a?3:1;this.userCode=`\n      const ivec2 pads = ivec2(${i}, ${o});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords[0];\n        int d1 = coords[${c}];\n\n        ivec2 dyCorner = ivec2(coords[${l}], coords[${u}]) - pads;\n        int dyRCorner = dyCorner.x;\n        int dyCCorner = dyCorner.y;\n\n        // Convolve dy(?, ?, d2) with w(:, :, d1, d2) to compute dx(xR, xC, d1).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        for (int wR = 0; wR < ${t}; wR++) {\n          float dyR = float(dyRCorner + wR) / ${s}.0;\n\n          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {\n            continue;\n          }\n          int idyR = int(dyR);\n\n          int wRPerm = ${t} - 1 - wR;\n\n          for (int wC = 0; wC < ${n}; wC++) {\n            float dyC = float(dyCCorner + wC) / ${r}.0;\n\n            if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||\n                fract(dyC) > 0.0) {\n              continue;\n            }\n            int idyC = int(dyC);\n\n            int wCPerm = ${n} - 1 - wC;\n\n            for (int d2 = 0; d2 < ${e.outChannels}; d2++) {\n\n              if (${a}) {\n                float xValue = getDy(batch, idyR, idyC, d2);\n                float wValue = getW(wRPerm, wCPerm, d1, d2);\n                dotProd += xValue * wValue;\n              } else {\n                float xValue = getDy(batch, d2, idyR, idyC);\n                float wValue = getW(wRPerm, wCPerm, d1, d2);\n                dotProd += xValue * wValue;\n              }\n\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class YM{constructor(e){this.variableNames=["x","dy"],this.outputShape=e.filterShape;const t=e.strideDepth,n=e.strideHeight,s=e.strideWidth,r=e.padInfo.front,a=e.padInfo.top,i=e.padInfo.left;this.userCode=`\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int wF = coords.x;\n        int wR = coords.y;\n        int wC = coords.z;\n        int d1 = coords.w;\n        int d2 = coords.u;\n\n        float dotProd = 0.0;\n\n        for (int b = 0; b < ${e.batchSize}; b++) {\n          for (int yF = 0; yF < ${e.outDepth}; yF++) {\n            int xF = wF + yF * ${t} - ${r};\n\n            if (xF < 0 || xF >= ${e.inDepth}) {\n              continue;\n            }\n\n            for (int yR = 0; yR < ${e.outHeight}; yR++) {\n              int xR = wR + yR * ${n} - ${a};\n\n              if (xR < 0 || xR >= ${e.inHeight}) {\n                continue;\n              }\n\n              for (int yC = 0; yC < ${e.outWidth}; yC++) {\n                int xC = wC + yC * ${s} - ${i};\n\n                if (xC < 0 || xC >= ${e.inWidth}) {\n                  continue;\n                }\n\n                float dyValue = getDy(b, yF, yR, yC, d2);\n                float xValue = getX(b, xF, xR, xC, d1);\n                dotProd += (xValue * dyValue);\n              }\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class ZM{constructor(e){this.variableNames=["dy","W"],this.outputShape=e.inShape;const t=e.filterDepth,n=e.filterHeight,s=e.filterWidth,r=e.strideDepth,a=e.strideHeight,i=e.strideWidth,o=t-1-e.padInfo.front,l=n-1-e.padInfo.top,u=s-1-e.padInfo.left;this.userCode=`\n      const ivec3 pads = ivec3(${o}, ${l}, ${u});\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int d1 = coords.u;\n\n\n        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;\n        int dyFCorner = dyCorner.x;\n        int dyRCorner = dyCorner.y;\n        int dyCCorner = dyCorner.z;\n\n        float dotProd = 0.0;\n        for (int wF = 0; wF < ${t}; wF++) {\n          float dyF = float(dyFCorner + wF) / ${r}.0;\n\n          if (dyF < 0.0 || dyF >= ${e.outDepth}.0 || fract(dyF) > 0.0) {\n            continue;\n          }\n          int idyF = int(dyF);\n\n          int wFPerm = ${t} - 1 - wF;\n\n          for (int wR = 0; wR < ${n}; wR++) {\n            float dyR = float(dyRCorner + wR) / ${a}.0;\n\n            if (dyR < 0.0 || dyR >= ${e.outHeight}.0 ||\n              fract(dyR) > 0.0) {\n              continue;\n            }\n            int idyR = int(dyR);\n\n            int wRPerm = ${n} - 1 - wR;\n\n            for (int wC = 0; wC < ${s}; wC++) {\n              float dyC = float(dyCCorner + wC) / ${i}.0;\n\n              if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||\n                  fract(dyC) > 0.0) {\n                continue;\n              }\n              int idyC = int(dyC);\n\n              int wCPerm = ${s} - 1 - wC;\n\n              for (int d2 = 0; d2 < ${e.outChannels}; d2++) {\n                float xValue = getDy(batch, idyF, idyR, idyC, d2);\n                float wValue = getW(wFPerm, wRPerm, wCPerm, d1, d2);\n                dotProd += xValue * wValue;\n              }\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}const JM={kernelName:Tt,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:r,dy:a}=t,{strides:i,pad:o,dataFormat:l,dimRoundingMode:u,filterShape:c}=s,h=hu(l),p=nu(r.shape,c,i,1,o,u,!1,h),d=new KM(p);return n.runWebGLProgram(d,[r,a],"float32")}},QM={kernelName:Ct,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{dy:r,filter:a}=t,{inputShape:i,strides:o,pad:l,dataFormat:u,dimRoundingMode:c}=s,h=hu(u),p=nu(i,a.shape,o,1,l,c,!1,h),d=new XM(p);return n.runWebGLProgram(d,[r,a],"float32")}},eL={kernelName:$t,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:r,filter:a}=t,{strides:i,pad:o,dilations:l}=s,u=su(r.shape,a.shape,i,l,o),c=new VM(u);return n.runWebGLProgram(c,[r,a],"float32")}},tL={kernelName:Et,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:r,dy:a}=t,{strides:i,pad:o,filterShape:l}=s,u=su(r.shape,l,i,1,o),c=new YM(u);return n.runWebGLProgram(c,[r,a],"float32")}},nL={kernelName:At,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{dy:r,filter:a}=t,{pad:i,strides:o,inputShape:l}=s,u=su(l,a.shape,o,1,i),c=new ZM(u);return n.runWebGLProgram(c,[r,a],"float32")}},sL=eO({opSnippet:"if (isnan(x)) return x;\n  return cos(x);\n"}),rL={kernelName:_t,backendName:"webgl",kernelFunc:sL},aL=eO({opSnippet:"\n  float e2x = exp(-x);\n  return (e2x + 1.0 / e2x) / 2.0;\n"}),iL={kernelName:Rt,backendName:"webgl",kernelFunc:aL};class oL{constructor(e,t,n,s,r){this.variableNames=["Image","Boxes","BoxInd"],this.outputShape=[];const[a,i,o,l]=e,[u]=t,[c,h]=n;this.outputShape=[u,c,h,l];const p="bilinear"===s?1:0,[d,f]=[i-1+".0",o-1+".0"],[m,g,y]=c>1?[""+(i-1)/(c-1),"(y2-y1) * height_ratio",`y1*${d} + float(y)*(height_scale)`]:["0.0","0.0",`0.5 * (y1+y2) * ${d}`],[b,x,v]=h>1?[""+(o-1)/(h-1),"(x2-x1) * width_ratio",`x1*${f} + float(x)*(width_scale)`]:["0.0","0.0",`0.5 * (x1+x2) * ${f}`];this.userCode=`\n      const float height_ratio = float(${m});\n      const float width_ratio = float(${b});\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int y = coords[1];\n        int x = coords[2];\n        int d = coords[3];\n\n        // get box vals\n        float y1 = getBoxes(b,0);\n        float x1 = getBoxes(b,1);\n        float y2 = getBoxes(b,2);\n        float x2 = getBoxes(b,3);\n\n        // get image in batch index\n        int bInd = round(getBoxInd(b));\n        if(bInd < 0 || bInd >= ${a}) {\n          return;\n        }\n\n        float height_scale = ${g};\n        float width_scale = ${x};\n\n        float in_y = ${y};\n        if( in_y < 0.0 || in_y > ${d} ) {\n          setOutput(float(${r}));\n          return;\n        }\n        float in_x = ${v};\n        if( in_x < 0.0 || in_x > ${f} ) {\n          setOutput(float(${r}));\n          return;\n        }\n\n        vec2 sourceFracIndexCR = vec2(in_x,in_y);\n        if(${p} == 1) {\n          // Compute the four integer indices.\n          ivec2 sourceFloorCR = ivec2(sourceFracIndexCR);\n          ivec2 sourceCeilCR = ivec2(ceil(sourceFracIndexCR));\n\n          float topLeft = getImage(b, sourceFloorCR.y, sourceFloorCR.x, d);\n          float bottomLeft = getImage(b, sourceCeilCR.y, sourceFloorCR.x, d);\n          float topRight = getImage(b, sourceFloorCR.y, sourceCeilCR.x, d);\n          float bottomRight = getImage(b, sourceCeilCR.y, sourceCeilCR.x, d);\n\n          vec2 fracCR = sourceFracIndexCR - vec2(sourceFloorCR);\n\n          float top = topLeft + (topRight - topLeft) * fracCR.x;\n          float bottom = bottomLeft + (bottomRight - bottomLeft) * fracCR.x;\n          float newValue = top + (bottom - top) * fracCR.y;\n          setOutput(newValue);\n        } else {\n          // Compute the coordinators of nearest neighbor point.\n          ivec2 sourceNearestCR = ivec2(floor(\n            sourceFracIndexCR + vec2(0.5,0.5)));\n          float newValue = getImage(b, sourceNearestCR.y, sourceNearestCR.x, d);\n          setOutput(newValue);\n        }\n      }\n    `}}const lL={kernelName:Ot,backendName:"webgl",kernelFunc:e=>{const{inputs:t,backend:n,attrs:s}=e,{image:r,boxes:a,boxInd:i}=t,{cropSize:o,method:l,extrapolationValue:u}=s,c=new oL(r.shape,a.shape,o,l,u);return n.runWebGLProgram(c,[r,a,i],"float32")}};var uL;!function(e){e.Prod="*",e.Sum="+"}(uL||(uL={}));class cL{constructor(e,t,n,s){this.variableNames=["x"],this.customUniforms=[{name:"index",type:"float"}],this.op=e,this.outputShape=t;const r=t.length,a=this.op===uL.Prod?"1.0":"0.0",i=n?a:`getX(${hL(r,"coords",this.op)})`,o=t[t.length-1];let l="",u="";n?(l=s?"end != "+(o-1):"end != 0",u=s?"end + 1":"end - 1"):(l=s?`end + pow2 < ${o}`:"end >= pow2",u=s?"end + pow2":"end - pow2"),this.userCode=`\n      void main() {\n        ${gF(r)} coords = getOutputCoords();\n        int end = ${pL(r,"coords",this.op)};\n        float val = ${i};\n        int pow2 = int(pow(2.0, index));\n        if (${l}) {\n          int idx = ${u};\n          ${pL(r,"coords",this.op)} = idx;\n          val ${this.op}= getX(${hL(r,"coords",this.op)});\n        }\n        setOutput(val);\n      }\n    `}}function hL(e,t,n){if(1===e)return`${t}`;if(2===e)return`${t}.x, ${t}.y`;if(3===e)return`${t}.x, ${t}.y, ${t}.z`;if(4===e)return`${t}.x, ${t}.y, ${t}.z, ${t}.w`;throw Error(`Cumulative ${n} for rank ${e} is not yet supported`)}function pL(e,t,n){if(1===e)return`${t}`;if(2===e)return`${t}.y`;if(3===e)return`${t}.z`;if(4===e)return`${t}.w`;throw Error(`Cumulative ${n} for rank ${e} is not yet supported`)}function dL(e,t,n,s,r,a){const i=t.shape.length,o=uc([s],i);let l=t;null!=o&&(l=bO({inputs:{x:t},backend:n,attrs:{perm:o}}));const u=hc(1,i)[0];if(u!==i-1)throw new Error(`WebGL cumprod shader expects an inner-most axis=${t.shape.length-1} but got axis=${s}`);const c=l.shape[u];let h=GD({inputs:{x:l},backend:n});for(let t=0;t<=Math.ceil(Math.log2(c))-1;t++){const s=new cL(e,l.shape,!1,a),r=[[t]],i=h;h=n.runWebGLProgram(s,[h],h.dtype,r),n.disposeIntermediateTensorInfo(i)}if(r){const t=new cL(e,l.shape,r,a),s=h;h=n.runWebGLProgram(t,[h],h.dtype),n.disposeIntermediateTensorInfo(s)}if(null!=o){const e=bO({inputs:{x:h},backend:n,attrs:{perm:cc(o)}});return n.disposeIntermediateTensorInfo(h),n.disposeIntermediateTensorInfo(l),e}return h}const fL={kernelName:Ft,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{axis:a,exclusive:i,reverse:o}=s;return dL(uL.Prod,r,n,a,i,o)}},mL={kernelName:Dt,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{axis:a,exclusive:i,reverse:o}=s;return dL(uL.Sum,r,n,a,i,o)}},gL={kernelName:Mt,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:r,weights:a}=t,{size:i,binaryOutput:o}=s;if(1===r.shape.length){const e=n.readSync(r.dataId),t=n.readSync(a.dataId),s=LF(e,t,a.dtype,a.shape,i);return n.makeTensorInfo([i],a.dtype,s)}if(2===r.shape.length){const e=n.bufferSync(r),t=n.bufferSync(a),s=zF(e,t,i,o);return n.makeTensorInfo(s.shape,a.dtype,s.values)}throw new Error(`Error in denseBincount: input must be at most rank 2, but got rank${r.shape.length}.`)}};class yL{constructor(e,t,n){this.variableNames=["x"],this.outputShape=[],this.outputShape=e,this.blockSize=t,this.dataFormat=n,this.userCode=`\n    void main() {\n      ivec4 coords = getOutputCoords();\n      int b = coords[0];\n      int h = ${this.getHeightCoordString()};\n      int w = ${this.getWidthCoordString()};\n      int d = ${this.getDepthCoordString()};\n\n      int in_h = h / ${t};\n      int offset_h = imod(h, ${t});\n      int in_w = w / ${t};\n      int offset_w = imod(w, ${t});\n      int offset_d = (offset_h * ${t} + offset_w) *\n        ${this.getOutputDepthSize()};\n      int in_d = d + offset_d;\n\n      float result = ${this.getInputSamplingString()};\n      setOutput(result);\n    }\n  `}getHeightCoordString(){return"NHWC"===this.dataFormat?"coords[1]":"coords[2]"}getWidthCoordString(){return"NHWC"===this.dataFormat?"coords[2]":"coords[3]"}getDepthCoordString(){return"NHWC"===this.dataFormat?"coords[3]":"coords[1]"}getOutputDepthSize(){return"NHWC"===this.dataFormat?this.outputShape[3]:this.outputShape[1]}getInputSamplingString(){return"NHWC"===this.dataFormat?"getX(b, in_h, in_w, in_d)":"getX(b, in_d, in_h, in_w)"}}const bL={kernelName:Lt,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{blockSize:a,dataFormat:i}=s,o=r.shape[0],l=("NHWC"===i?r.shape[1]:r.shape[2])*a,u=("NHWC"===i?r.shape[2]:r.shape[3])*a,c=("NHWC"===i?r.shape[3]:r.shape[1])/(a*a),h=new yL("NHWC"===i?[o,l,u,c]:[o,c,l,u],a,i);return n.runWebGLProgram(h,[r],r.dtype)}};class xL{constructor(e,t=!1,n=null,s=!1,r=!1){this.variableNames=["x","W"],this.customUniforms=[{name:"pads",type:"ivec2"},{name:"strides",type:"ivec2"},{name:"dilations",type:"ivec2"},{name:"inDims",type:"ivec2"}],this.outputShape=e.outShape,this.enableShapeUniforms=kF(this.outputShape.length);const a=e.filterHeight,i=e.filterWidth,o=e.outChannels/e.inChannels;let l="",u="";n&&(l=s?`float activation(float a) {\n          float b = getPreluActivationWeightsAtOutCoords();\n          ${n}\n        }`:r?`float activation(float a) {\n          float b = getLeakyreluAlphaAtOutCoords();\n          ${n}\n        }`:`\n          float activation(float x) {\n            ${n}\n          }\n        `,u="result = activation(result);");const c=t?"result += getBiasAtOutCoords();":"";t&&this.variableNames.push("bias"),s&&this.variableNames.push("preluActivationWeights"),r&&this.variableNames.push("leakyreluAlpha"),this.userCode=`\n      ${l}\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords.x;\n        ivec2 xRCCorner = coords.yz * strides - pads;\n        int d2 = coords.w;\n        int d1 = d2 / ${o};\n        int q = d2 - d1 * ${o};\n\n        int xRCorner = xRCCorner.x;\n        int xCCorner = xRCCorner.y;\n\n        // Convolve x(?, ?, d1) with w(:, :, d1, q) to get y(yR, yC, d2).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        // TO DO(dsmilkov): Flatten the two for loops and vec4 the operations.\n        for (int wR = 0; wR < ${a}; wR++) {\n          int xR = xRCorner + wR * dilations[0];\n\n          if (xR < 0 || xR >= inDims[0]) {\n            continue;\n          }\n\n          for (int wC = 0; wC < ${i}; wC++) {\n            int xC = xCCorner + wC * dilations[1];\n\n            if (xC < 0 || xC >= inDims[1]) {\n              continue;\n            }\n\n            float xVal = getX(batch, xR, xC, d1);\n            float wVal = getW(wR, wC, d1, q);\n            dotProd += xVal * wVal;\n          }\n        }\n\n        float result = dotProd;\n        ${c}\n        ${u}\n        setOutput(result);\n      }\n    `}}class vL{constructor(e,t=!1,n=null,s=!1,r=!1){this.variableNames=["x","W"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"pads",type:"ivec2"},{name:"strides",type:"ivec2"},{name:"dilations",type:"ivec2"},{name:"inDims",type:"ivec2"}],this.outputShape=e.outShape,this.enableShapeUniforms=kF(this.outputShape.length);const a=e.outChannels/e.inChannels,i=e.padInfo.left,o=e.strideWidth,l=e.dilationWidth,u=e.filterHeight,c=e.filterWidth,h=c;let p="\n      int xR; int xC; int xCOffset;\n      vec4 wTexel; vec4 previous; vec4 final;";for(let e=0;e<c;e++)p+=`\n          vec4 xTexelC${2*e};\n          int xTexelC${2*e}Ready;\n          vec4 xTexelC${2*e+1};\n          int xTexelC${2*e+1}Ready;\n          vec4 xC${e};`;p+=`\n    for (int r = 0; r < ${u}; r++) {\n      `;for(let e=0;e<c;e++)p+=`\n          xTexelC${2*e} = vec4(0.0);\n          xTexelC${2*e}Ready = 0;\n          xTexelC${2*e+1} = vec4(0.0);\n          xTexelC${2*e+1}Ready = 0;\n          xC${e} = vec4(0.0);`;p+="\n        xR = xRCorner + r * dilations[0];\n        if (xR >=0 && xR < inDims[0]) {\n      ";for(let e=0;e<(h+1)/2;e++){const t=2*e;if(p+=`\n          xC = xCCorner + ${t*l};\n          `,1===o){if(t<c&&(i%2==1?(p+=`\n                xCOffset = xC + 1;\n                if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${t}Ready == 0) {\n                  xTexelC${t} = getX(batch, xR, xCOffset, d1);\n\n                  // Need to manually clear unused channels in case\n                  // we're reading from recycled texture.\n                  if (xCOffset + 1 >= inDims[1]) {\n                    xTexelC${t}.zw = vec2(0.0);\n                  }\n                  xTexelC${t}Ready = 1;\n                }\n              `,p+=1===l&&t>0?`\n                xC${t} = vec4(xTexelC${t-2}.zw, xTexelC${t}.xy);\n                `:`\n                  xCOffset = xC + 1 - 2;\n\n                  if (xCOffset >= 0 && xCOffset < inDims[1]) {\n                    previous = getX(batch, xR, xCOffset, d1);\n\n                    // Need to manually clear unused channels in case\n                    // we're reading from recycled texture.\n                    if (xCOffset + 1 >= inDims[1]) {\n                      previous.zw = vec2(0.0);\n                    }\n\n                    xC${t} = vec4(previous.zw, xTexelC${t}.xy);\n                  } else {\n                    xC${t} = vec4(0.0, 0.0, xTexelC${t}.xy);\n                  }\n                  `):p+=`\n                if (xC >= 0 && xC < inDims[1] && xTexelC${t}Ready == 0) {\n                  xTexelC${t} = getX(batch, xR, xC, d1);\n                  if (xC + 1 >= inDims[1]) {\n                    xTexelC${t}.zw = vec2(0.0);\n                  }\n                  xTexelC${t}Ready = 1;\n                }\n\n                xC${t} = xTexelC${t};\n                `,t+1<c)){const e=i%2==0?J(l):l;l%2==0&&i%2==1||l%2!=0&&i%2!=1?(p+=`\n                  xCOffset = xC + imod(pads[1], 2) + ${e};\n\n                  if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${t+1}Ready == 0) {\n                    xTexelC${t+1} = getX(batch, xR, xCOffset, d1);\n\n                    // Need to manually clear unused channels in case\n                    // we're reading from recycled texture.\n                    if (xCOffset + 1 >= inDims[1]) {\n                      xTexelC${t+1}.zw = vec2(0.0);\n                    }\n                    xTexelC${t+1}Ready = 1;\n                  }\n                  `,l>1&&(p+=`\n                    xCOffset -= 2;\n                    if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${t}Ready == 0) {\n                      xTexelC${t} = getX(batch, xR, xCOffset, d1);\n                      xTexelC${t}Ready = 1;\n                    }\n                    `),p+=`\n                  xC${t+1} = vec4(xTexelC${t}.zw, xTexelC${t+1}.xy);\n                  `):p+=1===e?`\n                    xC${t+1} = xTexelC${t};\n                    `:`\n                    xCOffset = xC + ${e};\n\n                    if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${t+1}Ready == 0) {\n                      xTexelC${t+1} = getX(batch, xR, xCOffset, d1);\n                      if (xCOffset + 1 >= inDims[1]) {\n                        xTexelC${t+1}.zw = vec2(0.0);\n                      }\n                      xTexelC${t+1}Ready = 1;\n                    }\n\n                    xC${t+1} = xTexelC${t+1};\n                    `}}else t<c&&(i%2==1?(p+=`\n                xCOffset = xC + 1 - strides[1];\n                if(xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${t}Ready == 0) {\n                  xTexelC${t} = getX(batch, xR, xCOffset, d1);\n                  // Need to manually clear unused channels in case\n                  // we're reading from recycled texture.\n                  if (xCOffset + 1 >= inDims[1]) {\n                    xTexelC${t}.zw = vec2(0.0);\n                  }\n                  xTexelC${t}Ready = 1;\n                }\n\n                if(xC + 1 >= 0 && xC + 1 < inDims[1] && xTexelC${t+1}Ready == 0) {\n                  xTexelC${t+1} = getX(batch, xR, xC + 1, d1);\n                  // Need to manually clear unused channels in case\n                  // we're reading from recycled texture.\n                  if (xC + 2 >= inDims[1]) {\n                    xTexelC${t+1}.zw = vec2(0.0);\n                  }\n                  xTexelC${t+1}Ready = 1;\n                }\n\n                xC${t} = vec4(xTexelC${t}.zw, xTexelC${t+1}.zw);\n              `,t+1<c&&(p+=`\n                  final = vec4(0.0);\n                  xCOffset = xC + 1 + strides[1];\n                  if(xCOffset >= 0 && xCOffset < inDims[1]) {\n                    final = getX(batch, xR, xCOffset, d1);\n                  }\n                  xC${t+1} = vec4(xTexelC${t+1}.xy, final.xy);\n                `)):(p+=`\n                if(xC >= 0 && xC < inDims[1] && xTexelC${t}Ready == 0) {\n                  xTexelC${t} = getX(batch, xR, xC, d1);\n                  if (xC + 1 >= inDims[1]) {\n                    xTexelC${t}.zw = vec2(0.0);\n                  }\n                  xTexelC${t}Ready = 1;\n                }\n\n                xCOffset = xC + strides[1];\n                if(xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${t+1}Ready == 0) {\n                  xTexelC${t+1} = getX(batch, xR, xCOffset, d1);\n                  if (xCOffset + 1 >= inDims[1]) {\n                    xTexelC${t+1}.zw = vec2(0.);\n                  }\n                  xTexelC${t+1}Ready = 1;\n                }\n\n                xC${t} = vec4(\n                  xTexelC${t}.xy, xTexelC${t+1}.xy);\n              `,t+1<c&&(p+=`\n                  xC${t+1} = vec4(xTexelC${t}.zw, xTexelC${t+1}.zw);\n                `)));t<c&&(p+=`\n            wTexel = getW(r, ${t}, d1, q);\n            dotProd += xC${t} * vec4(wTexel.xz, wTexel.xz);\n          `,t+1<c&&(p+=`\n              wTexel = getW(r, ${t+1}, d1, q);\n              dotProd += xC${t+1} * vec4(wTexel.xz, wTexel.xz);\n            `))}p+="\n    }\n  ",p+="\n      }\n    ";let d="",f="";n&&(d=s?`vec4 activation(vec4 a) {\n          vec4 b = getPreluActivationWeightsAtOutCoords();\n          ${n}\n        }`:r?`vec4 activation(vec4 a) {\n          vec4 b = getLeakyreluAlphaAtOutCoords();\n          ${n}\n        }`:`vec4 activation(vec4 x) {\n          ${n}\n        }`,f="result = activation(result);");const m=t?"result += getBiasAtOutCoords();":"";t&&this.variableNames.push("bias"),s&&this.variableNames.push("preluActivationWeights"),r&&this.variableNames.push("leakyreluAlpha"),this.userCode=`\n      ${d}\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords.x;\n        ivec2 xRCCorner = coords.yz * strides - pads;\n        int d2 = coords.w;\n        int d1 = d2 / ${a};\n        int q = d2 - d1 * ${a};\n        int xRCorner = xRCCorner.x;\n        int xCCorner = xRCCorner.y;\n\n        //intialize dotProd with a small epsilon seems to reduce GPU accuracy loss.\n        vec4 dotProd = vec4(0.000000000000001);\n\n        ${p}\n\n        vec4 result = dotProd - vec4(0.000000000000001);\n        ${m}\n        ${f}\n        setOutput(result);\n      }\n    `}}const wL={kernelName:zt,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:r,filter:a}=t,{strides:i,pad:o,dilations:l,dimRoundingMode:u}=s;let c=l;null==c&&(c=[1,1]),se(cu(i,c),(()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${i} and dilations '${c}'`));const h=nu(r.shape,a.shape,i,c,o,u,!0);let p;p=He().getBool("WEBGL_PACK_DEPTHWISECONV")&&h.strideWidth<=2&&h.outChannels/h.inChannels==1?new vL(h):new xL(h);const d=[[h.padInfo.top,h.padInfo.left],[h.strideHeight,h.strideWidth],[h.dilationHeight,h.dilationWidth],[h.inHeight,h.inWidth]];return n.runWebGLProgram(p,[r,a],"float32",d)}};class kL{constructor(e){this.variableNames=["x","dy"],this.outputShape=e.filterShape;const t=e.strideHeight,n=e.strideWidth,s=e.padInfo.top,r=e.padInfo.left,a=e.outChannels/e.inChannels;this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int wR = coords.x;\n        int wC = coords.y;\n        int d1 = coords.z;\n        int dm = coords.w;\n        int d2 = d1 * ${a} + dm;\n\n        float dotProd = 0.0;\n\n        // TO DO: Vec4 over the batch size\n        for (int b = 0; b < ${e.batchSize}; b++) {\n          for (int yR = 0; yR < ${e.outHeight}; yR++) {\n            int xR = wR + yR * ${t} - ${s};\n\n            if (xR < 0 || xR >= ${e.inHeight}) {\n              continue;\n            }\n\n            for (int yC = 0; yC < ${e.outWidth}; yC++) {\n              int xC = wC + yC * ${n} - ${r};\n\n              if (xC < 0 || xC >= ${e.inWidth}) {\n                continue;\n              }\n\n              float dyValue = getDy(b, yR, yC, d2);\n              float xValue = getX(b, xR, xC, d1);\n              dotProd += (xValue * dyValue);\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class IL{constructor(e){this.variableNames=["dy","W"],this.outputShape=e.inShape;const t=e.filterHeight,n=e.filterWidth,s=e.strideHeight,r=e.strideWidth,a=t-1-e.padInfo.top,i=n-1-e.padInfo.left,o=e.outChannels/e.inChannels;this.userCode=`\n      const ivec2 pads = ivec2(${a}, ${i});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords[0];\n        int d1 = coords[3];\n        ivec2 dyCorner = coords.yz - pads;\n        int dyRCorner = dyCorner.x;\n        int dyCCorner = dyCorner.y;\n\n        float dotProd = 0.0;\n\n        for (int wR = 0; wR < ${t}; wR++) {\n          float dyR = float(dyRCorner + wR) / ${s}.0;\n\n          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {\n            continue;\n          }\n          int idyR = int(dyR);\n\n          int wRPerm = ${t} - 1 - wR;\n\n          for (int wC = 0; wC < ${n}; wC++) {\n            float dyC = float(dyCCorner + wC) / ${r}.0;\n\n            if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||\n                fract(dyC) > 0.0) {\n              continue;\n            }\n            int idyC = int(dyC);\n\n            int wCPerm = ${n} - 1 - wC;\n\n            // TO DO: Vec4 over the channelMul\n            for (int dm = 0; dm < ${o}; dm++) {\n              int d2 = d1 * ${o} + dm;\n              float xValue = getDy(batch, idyR, idyC, d2);\n              float wValue = getW(wRPerm, wCPerm, d1, dm);\n              dotProd += xValue * wValue;\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}const SL={kernelName:Pt,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:r,dy:a}=t,{strides:i,dilations:o,pad:l,dimRoundingMode:u,filterShape:c}=s,h=nu(r.shape,c,i,o,l,u,!0),p=new kL(h);return n.runWebGLProgram(p,[r,a],"float32")}},NL={kernelName:Bt,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{dy:r,filter:a}=t,{strides:i,dilations:o,pad:l,dimRoundingMode:u,inputShape:c}=s,h=nu(c,a.shape,i,o,l,u,!0),p=new IL(h);return n.runWebGLProgram(p,[r,a],"float32")}};class TL{constructor(e){this.variableNames=["X"],this.outputShape=[e,e],this.userCode="\n      void main() {\n          ivec2 coords = getOutputCoords();\n          float val = coords[0] == coords[1] ? getX(coords[0]) : 0.0;\n          setOutput(val);\n      }\n    "}}const CL={kernelName:Wt,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{x:s}=t,r=[...s.shape,...s.shape],a=oe(s.shape),i=lO({inputs:{x:s},backend:n,attrs:{shape:[a]}}),o=new TL(a),l=n.runWebGLProgram(o,[i],i.dtype),u=lO({inputs:{x:l},backend:n,attrs:{shape:r}});return n.disposeIntermediateTensorInfo(i),n.disposeIntermediateTensorInfo(l),u}};class $L{constructor(e){this.variableNames=["x","W"],this.outputShape=e.outShape;const{inHeight:t,inWidth:n,padInfo:s,strideHeight:r,strideWidth:a,filterHeight:i,filterWidth:o,dilationHeight:l,dilationWidth:u}=e,{top:c,left:h}=s;this.userCode=`\n      const ivec2 strides = ivec2(${r}, ${a});\n      const ivec2 pads = ivec2(${c}, ${h});\n      const float neg_infinity = -3.4e38;\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords.x;\n        int d1 = coords.w;\n        ivec2 outTopLeftCorner =\n            coords.yz * strides - pads;\n        int hBeg = outTopLeftCorner.x;\n        int wBeg = outTopLeftCorner.y;\n\n        float curVal = neg_infinity;\n        for (int h = 0; h < ${i}; h++) {\n          int hIn = hBeg + h * ${l};\n\n          if (hIn >= 0 && hIn < ${t}) {\n            for (int w = 0; w < ${o}; w++) {\n              int wIn = wBeg + w * ${u};\n\n              if (wIn >= 0 && wIn < ${n}) {\n                float xVal = getX(batch, hIn, wIn, d1);\n                float wVal = getW(h, w, d1);\n\n                float val = xVal + wVal;\n                if (val > curVal) {\n                  curVal = val;\n                }\n              }\n            }\n          }\n        }\n\n        float result = curVal;\n        setOutput(result);\n      }\n    `}}const EL={kernelName:Vt,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:r,filter:a}=t,{strides:i,pad:o,dilations:l}=s,u=Ql(r.shape,a.shape,i,o,"NHWC",l);let c;const h=new $L(u);c=n.runWebGLProgram(h,[r,a],"float32");const p=lO({inputs:{x:c},backend:n,attrs:{shape:u.outShape}});return n.disposeIntermediateTensorInfo(c),p}},AL={kernelName:jt,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{equation:r}=s,a=t,{allDims:i,summedDims:o,idDims:l}=bf(r,a.length);vf(i.length,l,a);const{path:u,steps:c}=wf(o,l),h=c.length;let p=null,d=i.length;const f=[];for(let e=0;e<h;++e){for(const t of c[e]){const{permutationIndices:e,expandDims:s}=xf(d,l[t]);let r;kf(e)?r=a[t]:(r=bO({inputs:{x:a[t]},backend:n,attrs:{perm:e}}),f.push(r));const i=r.shape.slice();for(let e=0;e<s.length;++e)i.splice(s[e],0,1);ue(r.shape,i)||(r=lO({inputs:{x:r},backend:n,attrs:{shape:i}}),f.push(r)),null===p?p=r:(p=iO({inputs:{a:r,b:p},backend:n}),f.push(p))}e<h-1&&(u[e]>=0&&(p=gO({inputs:{x:p},backend:n,attrs:{axis:u[e]-(i.length-d),keepDims:!1}}),f.push(p)),d--)}for(const e of f)e!==p&&n.disposeIntermediateTensorInfo(e);return p}},_L=eO({opSnippet:"return (x >= 0.0) ? x : (exp(x) - 1.0);",packedOpSnippet:"\n  vec4 result;\n\n  result.r = (x.r >= 0.0) ? x.r : (exp(x.r) - 1.0);\n  result.g = (x.g >= 0.0) ? x.g : (exp(x.g) - 1.0);\n  result.b = (x.b >= 0.0) ? x.b : (exp(x.b) - 1.0);\n  result.a = (x.a >= 0.0) ? x.a : (exp(x.a) - 1.0);\n\n  return result;\n"}),RL={kernelName:qt,backendName:"webgl",kernelFunc:_L},FL={kernelName:Kt,backendName:"webgl",kernelFunc:e=>{const{inputs:t,backend:n}=e,{dy:s,y:r}=t,a=He().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new UD("\n  vec4 bGTEZero = vec4(greaterThanEqual(b, vec4(0.)));\n  return (bGTEZero * a) + ((vec4(1.0) - bGTEZero) * (a * (b + vec4(1.0))));\n",s.shape,r.shape):new VD("return (b >= 1.0) ? a : a * (b + 1.0);",s.shape,r.shape);return n.runWebGLProgram(a,[s,r],s.dtype)}},DL=tO({opSnippet:"return float(a == b);",packedOpSnippet:"\n  return vec4(equal(a, b));\n",dtype:"bool",cpuKernelImpl:WF}),OL={kernelName:Yt,backendName:"webgl",kernelFunc:DL},ML=eO({opSnippet:`\n  // Error function is calculated approximately with elementary function.\n  // See "Handbook of Mathematical Functions with Formulas,\n  // Graphs, and Mathematical Tables", Abramowitz and Stegun.\n  float p = ${nf};\n  float a1 = ${sf};\n  float a2 = ${rf};\n  float a3 = ${af};\n  float a4 = ${of};\n  float a5 = ${lf};\n\n  float sign = sign(x);\n  x = abs(x);\n  float t = 1.0 / (1.0 + p * x);\n  return sign * (1.0 - (((((a5*t + a4)*t) + a3)*t + a2)*t + a1)*t*exp(-x*x));\n`}),LL={kernelName:Xt,backendName:"webgl",kernelFunc:ML},zL=eO({opSnippet:"if (isnan(x)) return x;\n  return exp(x);\n",packedOpSnippet:"\n  vec4 result = exp(x);\n  bvec4 isNaN = isnan(x);\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n",cpuKernelImpl:VF,dtype:"float32"}),PL={kernelName:Zt,backendName:"webgl",kernelFunc:zL};function BL(e){const{inputs:t,attrs:n,backend:s}=e,{dim:r}=n,{input:a}=t,i=a.shape.length,o=a.shape.slice();let l=r;return r<0&&(se(-(i+1)<=r,(()=>`Axis must be in the interval [${-(i+1)}, ${i}]`)),l=i+r+1),o.splice(l,0,1),lO({inputs:{x:a},backend:s,attrs:{shape:o}})}const WL={kernelName:Jt,backendName:"webgl",kernelFunc:BL},VL="return exp(x) - 1.0;",UL=eO({opSnippet:VL,packedOpSnippet:VL,cpuKernelImpl:UF}),GL={kernelName:Qt,backendName:"webgl",kernelFunc:UL};class HL{constructor(e,t,n){this.variableNames=["real","imag"];const s=t[1];this.outputShape=t;const r=n?`2.0 * ${Math.PI}`:`-2.0 * ${Math.PI}`,a=n?`${s}.0`:"1.0";let i;if("real"===e)i="return real * expR - imag * expI;";else{if("imag"!==e)throw new Error(`FFT component must be either "real" or "imag", got ${e}.`);i="return real * expI + imag * expR;"}this.userCode=`\n      const float exponentMultiplier = ${r};\n\n      float unaryOpComplex(float real, float expR, float imag, float expI) {\n        ${i}\n      }\n\n      float mulMatDFT(int batch, int index) {\n        float indexRatio = float(index) / float(${s});\n        float exponentMultiplierTimesIndexRatio =\n            exponentMultiplier * indexRatio;\n\n        float result = 0.0;\n\n        for (int i = 0; i < ${s}; i++) {\n          // x = (-2|2 * PI / N) * index * i;\n          float x = exponentMultiplierTimesIndexRatio * float(i);\n          float expR = cos(x);\n          float expI = sin(x);\n          float real = getReal(batch, i);\n          float imag = getImag(batch, i);\n\n          result +=\n              unaryOpComplex(real, expR, imag, expI) / ${a};\n        }\n\n        return result;\n      }\n\n      void main() {\n        ivec2 coords = getOutputCoords();\n        setOutput(mulMatDFT(coords[0], coords[1]));\n      }\n    `}}function jL(e,t,n){const s=n.texData.get(e.dataId),r=oe(e.shape),a=e.shape[e.shape.length-1],i=lO({inputs:{x:e},backend:n,attrs:{shape:[r/a,a]}}),o=i.shape,l=new HL("real",o,t),u=new HL("imag",o,t),c=[{dataId:s.complexTensorInfos.real.dataId,dtype:s.complexTensorInfos.real.dtype,shape:o},{dataId:s.complexTensorInfos.imag.dataId,dtype:s.complexTensorInfos.imag.dtype,shape:o}],h=n.runWebGLProgram(l,c,"float32"),p=n.runWebGLProgram(u,c,"float32"),d=jD({inputs:{real:h,imag:p},backend:n});n.disposeIntermediateTensorInfo(h),n.disposeIntermediateTensorInfo(p);const f=lO({inputs:{x:d},backend:n,attrs:{shape:e.shape}});return n.disposeIntermediateTensorInfo(i),n.disposeIntermediateTensorInfo(d),f}const qL={kernelName:en,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{input:s}=t;return jL(s,!1,n)}};class KL{constructor(e,t){this.outputShape=[],this.customUniforms=[{name:"value",type:"float"}],this.variableNames=["x"],this.outputShape=e,this.userCode="\n      void main() {\n        // Input can be obtained from uniform value.\n        setOutput(value);\n      }\n    "}}function XL(e){const{backend:t,attrs:n}=e,{shape:s,value:r}=n;let{dtype:a}=n;if(a=a||Ae(r),"string"===a){const e=ve(a,oe(s));return e.fill(r),t.makeTensorInfo(s,a,e)}{const e=new KL(s,r),n=[[r]];return t.runWebGLProgram(e,[],a,n)}}const YL={kernelName:tn,backendName:"webgl",kernelFunc:XL};class ZL{constructor(e){this.variableNames=["Image"],this.outputShape=[];const t=e[2];this.outputShape=e,this.userCode=`\n        void main() {\n          ivec4 coords = getOutputCoords();\n          int x = coords[2];\n\n          int coordX = ${t} - x - 1;\n          float outputValue;\n          if(coordX >= 0 && coordX < ${t}) {\n            outputValue = getImage(coords[0], coords[1], coordX, coords[3]);\n          } else {\n            outputValue = getImage(coords[0], coords[1], coords[2], coords[3]);\n          }\n          setOutput(outputValue);\n        }\n    `}}const JL={kernelName:nn,backendName:"webgl",kernelFunc:({inputs:e,backend:t})=>{const{image:n}=e,s=t,r=new ZL(n.shape);return s.runWebGLProgram(r,[n],n.dtype)}},QL="return floor(x);",ez=eO({opSnippet:QL,packedOpSnippet:QL,cpuKernelImpl:GF}),tz={kernelName:sn,backendName:"webgl",kernelFunc:ez},nz=tO({opSnippet:"\n  float s = sign(a) * sign(b);\n  int ia = round(a);\n  int ib = round(b);\n  if (ib != 0) {\n    // Windows (D3D) wants guaranteed non-zero int division at compile-time.\n    return float(idiv(ia, ib, s));\n  } else {\n    return NAN;\n  }\n",packedOpSnippet:"\n  ivec4 ia = round(a);\n  ivec4 ib = round(b);\n  bvec4 cond = notEqual(ib, ivec4(0));\n  ivec4 result = ivec4(0);\n  vec4 s = sign(a) * sign(b);\n\n  // Windows (D3D) wants guaranteed non-zero int division at compile-time.\n  if (cond[0]) {\n    result[0] = idiv(ia[0], ib[0], s[0]);\n  }\n  if (cond[1]) {\n    result[1] = idiv(ia[1], ib[1], s[1]);\n  }\n  if (cond[2]) {\n    result[2] = idiv(ia[2], ib[2], s[2]);\n  }\n  if (cond[3]) {\n    result[3] = idiv(ia[3], ib[3], s[3]);\n  }\n  return vec4(result);\n",dtype:"int32"}),sz={kernelName:rn,backendName:"webgl",kernelFunc:nz};class rz{constructor(e){this.variableNames=["A"];const t=tF(),[n,s]=e;this.outputShape=e,this.userCode=`\n      void main() {\n        ivec3 coords = getOutputCoords();\n        int texR = coords[0];\n        int texC = coords[1];\n        int depth = coords[2];\n        vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${s}.0, ${n}.0);\n\n        vec4 values = ${t.texture2D}(A, uv);\n        float value;\n        if (depth == 0) {\n          value = values.r;\n        } else if (depth == 1) {\n          value = values.g;\n        } else if (depth == 2) {\n          value = values.b;\n        } else if (depth == 3) {\n          value = values.a;\n        }\n\n        setOutput(floor(value * 255.0 + 0.5));\n      }\n    `}}class az{constructor(e){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0;const t=tF(),[n,s]=e;this.outputShape=e,this.userCode=`\n      void main() {\n        ivec3 coords = getOutputCoords();\n        int texR = coords[0];\n        int texC = coords[1];\n        int depth = coords[2];\n\n        vec4 result = vec4(0.);\n\n        for(int row=0; row<=1; row++) {\n          for(int col=0; col<=1; col++) {\n            texC = coords[1] + row;\n            depth = coords[2] + col;\n\n            vec2 uv = (vec2(texC, texR) + halfCR) /\n                       vec2(${s}.0, ${n}.0);\n            vec4 values = ${t.texture2D}(A, uv);\n            float value;\n            if (depth == 0) {\n              value = values.r;\n            } else if (depth == 1) {\n              value = values.g;\n            } else if (depth == 2) {\n              value = values.b;\n            } else if (depth == 3) {\n              value = values.a;\n            }\n\n            result[row * 2 + col] = floor(value * 255.0 + 0.5);\n          }\n        }\n\n        ${t.output} = result;\n      }\n    `}}const iz={kernelName:tr,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e;let{pixels:r}=t;const{numChannels:a}=s,i="undefined"!=typeof HTMLVideoElement&&r instanceof HTMLVideoElement,o="undefined"!=typeof HTMLImageElement&&r instanceof HTMLImageElement,[l,u]=i?[r.videoWidth,r.videoHeight]:[r.width,r.height],c=[u,l],h=[u,l,a];(o||i)&&(null==oz&&(oz=document.createElement("canvas").getContext("2d")),oz.canvas.width=l,oz.canvas.height=u,oz.drawImage(r,0,0,l,u),r=oz.canvas);const p=n.makeTensorInfo(c,"int32");n.texData.get(p.dataId).usage=NR.PIXELS,n.gpgpu.uploadPixelDataToTexture(n.getTexture(p.dataId),r);const d=He().getBool("WEBGL_PACK")?new az(h):new rz(h),f=n.runWebGLProgram(d,[p],"int32");return n.disposeData(p.dataId),f}};let oz;const lz={kernelName:rr,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:r,filter:a,bias:i,preluActivationWeights:o}=t,{strides:l,pad:u,dataFormat:c,dilations:h,dimRoundingMode:p,activation:d,leakyreluAlpha:f}=s,m=hu(c),g=nu(r.shape,a.shape,l,h,u,p,!1,m);let y;const b=[];if(1!==g.filterHeight||1!==g.filterWidth||1!==g.dilationHeight||1!==g.dilationWidth||1!==g.strideHeight||1!==g.strideWidth||"SAME"!==g.padInfo.type&&"VALID"!==g.padInfo.type)if(He().getBool("WEBGL_CONV_IM2COL")&&1===r.shape[0])y=jM({x:r,filter:a,convInfo:g,backend:n,bias:i,activation:d,preluActivationWeights:o,leakyreluAlpha:f});else{const e=null!=i,t=null!=o,s="leakyrelu"===d,l=d?nO(d,!1):null,u=new WM(g,e,l,t,s),c=[r,a];if(i&&c.push(i),o&&c.push(o),s){const e=n.makeTensorInfo([],"float32",Fr(f,"float32"));c.push(e),b.push(e)}y=n.runWebGLProgram(u,c,"float32")}else y=HM({x:r,filter:a,convInfo:g,backend:n,bias:i,activation:d,preluActivationWeights:o,leakyreluAlpha:f});const x=lO({inputs:{x:y},backend:n,attrs:{shape:g.outShape}});return b.push(y),b.forEach((e=>n.disposeIntermediateTensorInfo(e))),x}},uz={kernelName:ar,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:r,filter:a,bias:i,preluActivationWeights:o}=t,{strides:l,pad:u,dilations:c,dimRoundingMode:h,activation:p,leakyreluAlpha:d}=s,f=[];let m=c;null==m&&(m=[1,1]),se(cu(l,m),(()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${l} and dilations '${m}'`));const g=nu(r.shape,a.shape,l,m,u,h,!0),y=He().getBool("WEBGL_PACK_DEPTHWISECONV")&&g.strideWidth<=2&&g.outChannels/g.inChannels==1,b=p?nO(p,y):null,x=[r,a],v=null!=i,w=null!=o,k="leakyrelu"===p;if(v&&x.push(i),w&&x.push(o),k){const e=n.makeTensorInfo([],"float32",Fr(d,"float32"));x.push(e),f.push(e)}let I;I=y?new vL(g,v,b,w,k):new xL(g,v,b,w,k);const S=[[g.padInfo.top,g.padInfo.left],[g.strideHeight,g.strideWidth],[g.dilationHeight,g.dilationWidth],[g.inHeight,g.inWidth]],N=n.runWebGLProgram(I,x,"float32",S);return f.forEach((e=>n.disposeIntermediateTensorInfo(e))),N}};class cz{constructor(e,t,n){this.sliceDim=e,this.strides=t,this.variableNames=["x","indices"],this.outputShape=n;const s=gF(t.length),r=gF(n.length),a=this.sliceDim>1?"strides[j]":"strides";this.userCode=`\n        ${s} strides = ${s}(${this.strides});\n         void main() {\n          ${r} coords = getOutputCoords();\n          int flattenIndex = 0;\n          for (int j = 0; j < ${this.sliceDim}; j++) {\n            int index = round(getIndices(coords[0], j));\n            flattenIndex += index * ${a};\n          }\n          setOutput(getX(flattenIndex, coords[1]));\n        }\n      `}}const hz={kernelName:ln,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{params:s,indices:r}=t,a=r.shape,i=a[a.length-1],o=oe(s.shape),[l,u,c,h]=lo(s,r),p=lO({inputs:{x:r},backend:n,attrs:{shape:[u,i]}}),d=lO({inputs:{x:s},backend:n,attrs:{shape:[oe(s.shape)/c,c]}});if(n.shouldExecuteOnCPU([s,r])||"string"===s.dtype){const e=n.readSync(r.dataId),t=n.bufferSync(s),a=HF(e,t,s.dtype,u,i,c,h,s.shape,o);return n.makeTensorInfo(l,s.dtype,a.values)}const f=new cz(i,h,[u,c]),m=n.runWebGLProgram(f,[d,p],d.dtype),g=lO({inputs:{x:m},backend:n,attrs:{shape:l}});return n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(d),n.disposeIntermediateTensorInfo(m),g}};class pz{constructor(e,t){this.variableNames=["A","indices"],this.outputShape=t,this.rank=t.length;const n=gF(this.rank),s=function(e,t){const n=["resRC.x","resRC.y","resRC.z","resRC.w"],s=[];for(let t=0;t<e.length;t++)2===t?s.push("index"):s.push(`${n[t]}`);return s.join()}(e);this.userCode=`\n      void main() {\n        ${n} resRC = getOutputCoords();\n        int index = int(getIndices(resRC.x, resRC.z));\n        float inBounds = (index >= 0) && (index < ${e[2]}) ? 1.0 : 0.0;\n        setOutput(inBounds * getA(${s}));\n      }\n    `}}function dz(e){const{inputs:t,backend:n,attrs:s}=e,{x:r,indices:a}=t,{axis:i,batchDims:o}=s,l=ye(i,r.shape)[0];if(He().get("DEBUG")){const e=n.readSync(a.dataId),t=r.shape[l];for(let n=0;n<e.length;++n){const s=e[n];se(s<=t-1&&s>=0,(()=>`GatherV2: the index value ${s} is not in [0, ${t-1}]`))}}const u=Pf(r,a,l,o),c=oe(a.shape),h=[],p=lO({inputs:{x:r},backend:n,attrs:{shape:[u.batchSize,u.outerSize,u.dimSize,u.sliceSize]}}),d=lO({inputs:{x:a},backend:n,attrs:{shape:[u.batchSize,c/u.batchSize]}});h.push(p),h.push(d);const f=[u.batchSize,u.outerSize,c/u.batchSize,u.sliceSize];if(n.shouldExecuteOnCPU([r,a])||"string"===r.dtype){const e=n.bufferSync(d),t=n.bufferSync(p),s=jF(t,e,f);return h.forEach((e=>n.disposeIntermediateTensorInfo(e))),n.makeTensorInfo(u.outputShape,s.dtype,s.values)}const m=new pz(p.shape,f),g=n.runWebGLProgram(m,[p,d],p.dtype);h.push(g);const y=lO({inputs:{x:g},backend:n,attrs:{shape:u.outputShape}});return h.forEach((e=>n.disposeIntermediateTensorInfo(e))),y}const fz={kernelName:on,backendName:"webgl",kernelFunc:dz},mz=tO({opSnippet:"return float(a > b);",packedOpSnippet:"\n  return vec4(greaterThan(a, b));\n",cpuKernelImpl:qF,dtype:"bool"}),gz={kernelName:un,backendName:"webgl",kernelFunc:mz},yz=tO({opSnippet:"return float(a >= b);",packedOpSnippet:"\n  return vec4(greaterThanEqual(a, b));\n",dtype:"bool",cpuKernelImpl:KF}),bz={kernelName:cn,backendName:"webgl",kernelFunc:yz},xz={kernelName:pn,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{input:s}=t;return jL(s,!0,n)}},vz=eO({opSnippet:"return float(!isnan(x) && !isinf(x));",dtype:"bool"}),wz={kernelName:fn,backendName:"webgl",kernelFunc:vz},kz=eO({opSnippet:"return float(isinf(x));",dtype:"bool"}),Iz={kernelName:mn,backendName:"webgl",kernelFunc:kz},Sz=eO({opSnippet:"return float(isnan(x));",dtype:"bool"}),Nz={kernelName:gn,backendName:"webgl",kernelFunc:Sz},Tz=tO({opSnippet:"return float(a < b);",packedOpSnippet:"\n  return vec4(lessThan(a, b));\n",cpuKernelImpl:XF,dtype:"bool"}),Cz={kernelName:bn,backendName:"webgl",kernelFunc:Tz},$z=tO({opSnippet:"return float(a <= b);",packedOpSnippet:"\n  return vec4(lessThanEqual(a, b));\n",cpuKernelImpl:YF,dtype:"bool"}),Ez={kernelName:xn,backendName:"webgl",kernelFunc:$z},Az={kernelName:vn,backendName:"webgl",kernelFunc:function(e){const{backend:t,attrs:n}=e,{start:s,stop:r,num:a}=n,i=ZF(s,r,a);return t.makeTensorInfo([i.length],"float32",i)}},_z=eO({opSnippet:"if (isnan(x)) return x;\n  return x < 0.0 ? 0./0. : log(x);\n",packedOpSnippet:"\n  vec4 result = log(x);\n  bvec4 isNaN = isnan(x);\n  result.r = isNaN.r ? x.r : (x.r < 0.0 ? 0./0. : result.r);\n  result.g = isNaN.g ? x.g : (x.g < 0.0 ? 0./0. : result.g);\n  result.b = isNaN.b ? x.b : (x.b < 0.0 ? 0./0. : result.b);\n  result.a = isNaN.a ? x.a : (x.a < 0.0 ? 0./0. : result.a);\n  return result;\n",cpuKernelImpl:JF}),Rz={kernelName:wn,backendName:"webgl",kernelFunc:_z},Fz=eO({opSnippet:"if (isnan(x)) return x;\n  return log(1.0 + x);\n"}),Dz={kernelName:kn,backendName:"webgl",kernelFunc:Fz},Oz=tO({opSnippet:"return float(a >= 1.0 && b >= 1.0);",packedOpSnippet:"\n  return vec4(\n    vec4(greaterThanEqual(a, vec4(1.0))) *\n    vec4(greaterThanEqual(b, vec4(1.0))));\n",dtype:"bool"}),Mz={kernelName:In,backendName:"webgl",kernelFunc:Oz},Lz=eO({opSnippet:"return float(!(x >= 1.0));"}),zz={kernelName:Sn,backendName:"webgl",kernelFunc:Lz},Pz=tO({opSnippet:"return float(a >= 1.0 || b >= 1.0);",packedOpSnippet:"\n  return min(\n    vec4(greaterThanEqual(a, vec4(1.0))) +\n    vec4(greaterThanEqual(b, vec4(1.0))),\n    vec4(1.0));\n",dtype:"bool"}),Bz={kernelName:Nn,backendName:"webgl",kernelFunc:Pz};class Wz{constructor(e,t,n,s,r){this.variableNames=["x"],this.outputShape=[];const a=t,i=e[3]-1;let o;this.outputShape=e;const l=`float(${n}) + float(${s}) * sum`;o=.5===r?`inversesqrt(${l})`:1===r?`1.0/(${l})`:`exp(log(${l}) * float(-${r}));`,this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int r = coords[1];\n        int c = coords[2];\n        int d = coords[3];\n        float x = getX(b, r, c, d);\n        float sum = 0.0;\n        for (int j = -${a}; j <= ${a}; j++) {\n          int idx = d + j;\n          if (idx >= 0 && idx <=  ${i}) {\n            float z = getX(b, r, c, idx);\n            sum += z * z;\n          }\n        }\n        float val = x * ${o};\n        setOutput(val);\n      }\n    `}}class Vz{constructor(e,t,n,s,r){this.variableNames=["x"],this.outputShape=[],this.packedInputs=!0,this.packedOutput=!0;const a=t,i=e[3]-1;let o;this.outputShape=e;const l=`float(${n}) + float(${s}) * sum`;o=.5===r?`inversesqrt(${l})`:1===r?`1.0/(${l})`:`exp(log(${l}) * float(-${r}));`,this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords.x;\n        int r = coords.y;\n        int c = coords.z;\n        int d = coords.w;\n\n        bool hasNextCol = d < ${this.outputShape[3]};\n        bool hasNextRow = c < ${this.outputShape[2]};\n\n        vec4 sum = vec4(0.);\n        vec4 xFragAtOutputCoords = getX(b, r, c, d);\n\n        vec4 xAtOutputCoords = vec4(\n          getChannel(xFragAtOutputCoords, vec2(c, d)),\n          hasNextCol ?\n            getChannel(xFragAtOutputCoords, vec2(c, d + 1)) : 0.0,\n          hasNextRow ?\n            getChannel(xFragAtOutputCoords , vec2(c + 1, d)) : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getChannel(xFragAtOutputCoords, vec2(c + 1, d + 1)) : 0.0\n        );\n\n        int firstChannel = d - ${a};\n        vec2 cache = vec2(0.);\n        if(firstChannel >= 0){\n          vec4 firstChannelFrag = getX(b, r, c, firstChannel);\n          cache.x = getChannel(firstChannelFrag, vec2(c, firstChannel));\n            if(hasNextRow){\n              cache.y = getChannel(firstChannelFrag, vec2(c + 1, firstChannel));\n            }\n        }\n\n        ivec2 depth = ivec2(d, d + 1);\n        for (int j = - ${a}; j <= ${a}; j++) {\n          ivec2 idx = depth + j;\n          bvec2 aboveLowerBound = greaterThanEqual(idx, ivec2(0));\n          bvec2 belowUpperBound = lessThanEqual(idx, ivec2(${i}));\n\n          bool depthInRange = aboveLowerBound.x && belowUpperBound.x;\n          bool depthPlusOneInRange = aboveLowerBound.y && belowUpperBound.y;\n\n          if(depthInRange || depthPlusOneInRange){\n            vec4 z = vec4(0.);\n            vec4 xFragAtCurrentDepth;\n            z.xz = cache.xy;\n            if(depthPlusOneInRange && hasNextCol){\n              xFragAtCurrentDepth = idx.y != d ?\n                getX(b, r, c, idx.y) : xFragAtOutputCoords;\n              z.y = getChannel(xFragAtCurrentDepth, vec2(c, idx.y));\n              if(hasNextRow){\n                z.w = getChannel(xFragAtCurrentDepth, vec2(c + 1, idx.y));\n              }\n            }\n            cache.xy = z.yw;\n            sum += z * z;\n          }\n        }\n        vec4 result = xAtOutputCoords * ${o};\n        setOutput(result);\n      }\n    `}}const Uz={kernelName:$n,backendName:"webgl",kernelFunc:e=>{const{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{depthRadius:a,bias:i,alpha:o,beta:l}=s,u=He().getBool("WEBGL_PACK_NORMALIZATION")?new Vz(r.shape,a,i,o,l):new Wz(r.shape,a,i,o,l);return n.runWebGLProgram(u,[r],r.dtype)}};class Gz{constructor(e,t,n,s,r){this.variableNames=["inputImage","outputImage","dy"],this.outputShape=[],this.outputShape=e,this.depth=e[3],this.depthRadius=t,this.bias=n,this.alpha=s,this.beta=r,this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int r = coords[1];\n        int c = coords[2];\n\n        float result = 0.0;\n        for (int d = 0; d < ${this.depth}; ++d) {\n          int depthBegin = int(max(0.0, float(d - ${t})));\n          int depthEnd = int(min(float(${this.depth}),\n              float(d + ${t} + 1)));\n\n          const int MIN_DEPTH_BEGIN = 0;\n          const int MAX_DEPTH_END = ${this.depth};\n\n          float norm = 0.0;\n          for (int k = MIN_DEPTH_BEGIN; k < MAX_DEPTH_END; ++k) {\n            if (k < depthBegin){\n              continue;\n            }\n            else if (k >= depthBegin && k < depthEnd) {\n              norm += getInputImage(b, r, c, k) * getInputImage(b, r, c, k);\n            }\n            else {\n              break;\n            }\n          }\n\n          norm = float(${s}) * norm + float(${n});\n\n          for(int k = MIN_DEPTH_BEGIN; k < MAX_DEPTH_END; ++k){\n            if (k < depthBegin){\n              continue;\n            }\n            else if (k >= depthBegin && k < depthEnd){\n              float dyi = -2.0 * float(${s})\n                * float(${r})\n                * getInputImage(b ,r ,c, k) * getOutputImage(b, r, c, d)\n                / norm;\n              if (k == d) {\n                dyi += pow(norm, -1.0 * ${r});\n              }\n              if (k == coords[3]) {\n                dyi *= getDy(b, r, c, d);\n                result += dyi;\n              }\n            }\n            else {\n              break;\n            }\n          }\n      }\n      setOutput(result);\n      }\n    `}}const Hz={kernelName:En,backendName:"webgl",kernelFunc:e=>{const{inputs:t,backend:n,attrs:s}=e,{x:r,y:a,dy:i}=t,{depthRadius:o,bias:l,alpha:u,beta:c}=s,h=new Gz(r.shape,o,l,u,c);return n.runWebGLProgram(h,[r,a,i],r.dtype)}};function jz(e){const{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{reductionIndices:a,keepDims:i}=s,o=r.shape.length,l=ye(a,r.shape);let u=l;const c=uc(u,o),h=null!=c,p=n.shouldExecuteOnCPU([r]);let d=r;if(h){if(p){const e=n.texData.get(d.dataId).values,t=new Array(o);for(let e=0;e<t.length;e++)t[e]=r.shape[c[e]];const s=ID(e,r.shape,r.dtype,c,t);d=n.makeTensorInfo(t,r.dtype),n.texData.get(d.dataId).values=s}else d=mO(r,c,n);u=hc(u.length,o)}lc("max",u,o);const[f,m]=ic(d.shape,u);let g,y=f;if(i&&(y=oc(f,l)),p){const e=n.texData.get(d.dataId).values,t=QF(e,oe(m),y,r.dtype);g=n.makeTensorInfo(y,r.dtype),n.texData.get(g.dataId).values=t}else g=function(e,t,n,s){const r=oe(t),a=lO({inputs:{x:e},attrs:{shape:[oe(e.shape)/r,r]},backend:s}),i=pO(a,e.dtype,"max",s),o=lO({inputs:{x:i},attrs:{shape:n},backend:s});return s.disposeIntermediateTensorInfo(a),s.disposeIntermediateTensorInfo(i),o}(d,m,y,n);return h&&n.disposeIntermediateTensorInfo(d),g}const qz={kernelName:An,backendName:"webgl",kernelFunc:jz},Kz=tO({opSnippet:"\n  if (isnan(a)) return a;\n  if (isnan(b)) return b;\n\n  return max(a, b);\n",packedOpSnippet:"\n  vec4 result = vec4(max(a, b));\n  vec4 isNaN = min(vec4(isnan(a)) + vec4(isnan(b)), vec4(1.0));\n  \n  result.r = isNaN.r > 0. ? NAN : result.r;\n  result.g = isNaN.g > 0. ? NAN : result.g;\n  result.b = isNaN.b > 0. ? NAN : result.b;\n  result.a = isNaN.a > 0. ? NAN : result.a;\n\n  return result;\n",cpuKernelImpl:eD}),Xz={kernelName:_n,backendName:"webgl",kernelFunc:Kz},Yz={kernelName:Rn,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:r}=t;QR(r,"maxPool");const{filterSize:a,strides:i,pad:o,dimRoundingMode:l}=s;se(cu(i,1),(()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${i} and dilations '1'`));const u=eu(r.shape,a,i,1,o,l);if(1===u.filterWidth&&1===u.filterHeight&&ue(u.inShape,u.outShape))return GD({inputs:{x:r},backend:n});const c=new QO(u,"max",!1);return n.runWebGLProgram(c,[r],r.dtype)}},Zz={kernelName:Dn,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{filterSize:a,strides:i,pad:o,dataFormat:l,dimRoundingMode:u}=s,c=tu(r.shape,a,i,[1,1,1],o,u,l),h=new eM(c,"max",!1);return n.runWebGLProgram(h,[r],r.dtype)}};class Jz{constructor(e){this.variableNames=["dy","maxPos"],this.outputShape=e.inShape;const t=e.strideHeight,n=e.strideWidth,s=e.dilationHeight,r=e.effectiveFilterHeight,a=e.effectiveFilterWidth,i=r-1-e.padInfo.top,o=a-1-e.padInfo.left,l=r*a-1;this.userCode=`\n      const ivec2 pads = ivec2(${i}, ${o});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n\n        ivec2 dyRCCorner = coords.yz - pads;\n        int dyRCorner = dyRCCorner.x;\n        int dyCCorner = dyRCCorner.y;\n\n        // Convolve dy(?, ?, d) with pos mask(:, :, d) to get dx(xR, xC, d).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        for (int wR = 0; wR < ${r};\n          wR += ${s}) {\n          float dyR = float(dyRCorner + wR) / ${t}.0;\n\n          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {\n            continue;\n          }\n          int idyR = int(dyR);\n\n          for (int wC = 0; wC < ${a}; wC++) {\n            float dyC = float(dyCCorner + wC) / ${n}.0;\n\n            if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||\n                fract(dyC) > 0.0) {\n              continue;\n            }\n            int idyC = int(dyC);\n\n            float dyValue = getDy(b, idyR, idyC, d);\n            int maxPosValue = ${l} - int(getMaxPos(b, idyR, idyC, d));\n\n            // Get the current value, check it against the value from the\n            // position matrix.\n            int curPosValue = wR * ${a} + wC;\n            float mask = float(maxPosValue == curPosValue ? 1.0 : 0.0);\n\n            dotProd += dyValue * mask;\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class Qz{constructor(e){this.variableNames=["dy","maxPos"],this.outputShape=e.inShape;const t=e.strideDepth,n=e.strideHeight,s=e.strideWidth,r=e.dilationDepth,a=e.dilationHeight,i=e.dilationWidth,o=e.effectiveFilterDepth,l=e.effectiveFilterHeight,u=e.effectiveFilterWidth,c=o-1-e.padInfo.front,h=l-1-e.padInfo.top,p=u-1-e.padInfo.left,d=o*l*u-1;this.userCode=`\n      const ivec3 pads = ivec3(${c}, ${h}, ${p});\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int ch = coords.u;\n\n        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;\n        int dyDCorner = dyCorner.x;\n        int dyRCorner = dyCorner.y;\n        int dyCCorner = dyCorner.z;\n\n        // Convolve dy(?, ?, ?, ch) with pos mask(:, :, :, d) to get\n        // dx(xD, xR, xC, ch).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n\n        for (int wD = 0; wD < ${o};\n           wD += ${r}) {\n          float dyD = float(dyDCorner + wD) / ${t}.0;\n\n          if (dyD < 0.0 || dyD >= ${e.outDepth}.0 || fract(dyD) > 0.0) {\n            continue;\n          }\n          int idyD = int(dyD);\n\n          for (int wR = 0; wR < ${l};\n              wR += ${a}) {\n            float dyR = float(dyRCorner + wR) / ${n}.0;\n\n            if (dyR < 0.0 || dyR >= ${e.outHeight}.0 ||\n                fract(dyR) > 0.0) {\n              continue;\n            }\n            int idyR = int(dyR);\n\n            for (int wC = 0; wC < ${u};\n                wC += ${i}) {\n              float dyC = float(dyCCorner + wC) / ${s}.0;\n\n              if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||\n                  fract(dyC) > 0.0) {\n                continue;\n              }\n              int idyC = int(dyC);\n\n              float dyValue = getDy(batch, idyD, idyR, idyC, ch);\n              int maxPosValue = ${d} -\n                  int(getMaxPos(batch, idyD, idyR, idyC, ch));\n\n              // Get the current value, check it against the value from the\n              // position matrix.\n              int curPosValue =\n                  wD * ${l} * ${u} +\n                  wR * ${u} + wC;\n              float mask = float(maxPosValue == curPosValue ? 1.0 : 0.0);\n\n              dotProd += dyValue * mask;\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}const eP={kernelName:On,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{dy:r,input:a}=t,i=a,{filterSize:o,strides:l,pad:u,dimRoundingMode:c}=s,h=tu(i.shape,o,l,[1,1,1],u,c),p=new eM(h,"max",!0),d=n.runWebGLProgram(p,[i],i.dtype),f=new Qz(h),m=n.runWebGLProgram(f,[r,d],i.dtype);return n.disposeIntermediateTensorInfo(d),m}},tP={kernelName:Fn,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{dy:r,input:a,output:i}=t,o=a;QR([a,i],"maxPoolGrad");const{filterSize:l,strides:u,pad:c,dimRoundingMode:h}=s,p=eu(o.shape,l,u,1,c,h),d=new QO(p,"max",!0),f=n.runWebGLProgram(d,[o],o.dtype),m=new Jz(p),g=n.runWebGLProgram(m,[r,f],o.dtype);return n.disposeIntermediateTensorInfo(f),g}},nP={kernelName:Mn,backendName:"webgl",kernelFunc:({inputs:e,attrs:t,backend:n})=>{const{x:s}=e,{filterSize:r,strides:a,pad:i,includeBatchInIndex:o}=t,l=n;se(4===s.shape.length,(()=>`Error in maxPool: input must be rank 4 but got rank ${s.shape.length}.`));const u=[1,1];se(cu(a,u),(()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${a} and dilations '${u}'`));const c=eu(s.shape,r,a,u,i),[h,p]=function(e,t,n,s){let r=new QO(n,"max",!1);const a=s.runWebGLProgram(r,[e],"float32");return r=new QO(n,"max",!0,!0,t),[a,s.runWebGLProgram(r,[e],"float32")]}(s,o,c,l);return[h,p]}},sP={kernelName:Ln,backendName:"webgl",kernelFunc:({inputs:e,attrs:t,backend:n})=>{const{x:s}=e,{keepDims:r,axis:a}=t,i=n,o=s.shape.length,l=ye(a,s.shape);let u=l;const c=uc(u,o),h=null!=c,p=i.shouldExecuteOnCPU([s]),d=[];let f=s;if(h){if(p){const e=i.texData.get(f.dataId).values,t=new Array(o);for(let e=0;e<t.length;e++)t[e]=s.shape[c[e]];const n=ID(e,s.shape,s.dtype,c,t);f=i.makeTensorInfo(t,s.dtype),i.texData.get(f.dataId).values=n}else f=mO(s,c,i);d.push(f),u=hc(u.length,o)}lc("sum",u,o);const[m,g]=ic(f.shape,u);let y=m;r&&(y=oc(m,l));const b=function(e,t,n,s){const r=oe(t),a=lO({inputs:{x:e},attrs:{shape:[oe(e.shape)/r,r]},backend:s}),i=pO(a,"float32","mean",s),o=lO({inputs:{x:i},attrs:{shape:n},backend:s});return s.disposeIntermediateTensorInfo(a),s.disposeIntermediateTensorInfo(i),o}(f,g,y,i);for(const e of d)i.disposeIntermediateTensorInfo(e);return b}},rP={kernelName:zn,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{axis:a,keepDims:i}=s,o=r.shape.length,l=ye(a,r.shape);let u=l;const c=uc(u,o);let h=r;null!=c&&(h=bO({inputs:{x:r},backend:n,attrs:{perm:c}}),u=hc(u.length,r.shape.length)),lc("min",u,o);const[p,d]=ic(h.shape,u),f=lO({inputs:{x:h},backend:n,attrs:{shape:[-1,oe(d)]}}),m=pO(f,f.dtype,"min",n);let g;return g=lO(i?{inputs:{x:m},backend:n,attrs:{shape:oc(p,l)}}:{inputs:{x:m},backend:n,attrs:{shape:p}}),n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(m),null!=c&&n.disposeIntermediateTensorInfo(h),g}},aP=tO({opSnippet:"\n  if (isnan(a)) return a;\n  if (isnan(b)) return b;\n\n  return min(a, b);\n",packedOpSnippet:"\n  vec4 result = vec4(min(a, b));\n  vec4 isNaN = min(vec4(isnan(a)) + vec4(isnan(b)), vec4(1.0));\n  \n  result.r = isNaN.r > 0. ? NAN : result.r;\n  result.g = isNaN.g > 0. ? NAN : result.g;\n  result.b = isNaN.b > 0. ? NAN : result.b;\n  result.a = isNaN.a > 0. ? NAN : result.a;\n\n  return result;\n",cpuKernelImpl:tD}),iP={kernelName:Pn,backendName:"webgl",kernelFunc:aP};class oP{constructor(e,t,n){this.variableNames=["x"],this.outputShape=t.map(((t,n)=>t[0]+e[n]+t[1]));const s=e.length,r=gF(s),a=t.map((e=>e[0])).join(","),i=t.map(((t,n)=>t[0]+e[n])).join(","),o=["coords[0]","coords[1]","coords[2]","coords[3]"].slice(0,s),l="reflect"===n?0:1;this.userCode=1!==s?`\n      ${r} start = ${r}(${a});\n      ${r} end = ${r}(${i});\n\n      void main() {\n        ${r} outC = getOutputCoords();\n        for (int i = 0; i < ${s}; i++) {\n          if (outC[i] < start[i]) {\n            outC[i] = start[i] * 2 - outC[i] - ${l};\n          } else if(outC[i] >= end[i]) {\n            outC[i] = (end[i] - 1) * 2 - outC[i] + ${l};\n          }\n        }\n        ${r} coords = outC - start;\n        setOutput(getX(${o}));\n      }\n    `:`\n        int start = ${a};\n        int end = ${i};\n\n        void main() {\n          int outC = getOutputCoords();\n          if (outC < start) {\n            outC = start * 2 - outC - ${l};\n          } else if(outC >= end) {\n            outC = (end - 1) * 2 - outC + ${l};\n          }\n          setOutput(getX(outC - start));\n        }\n      `}}class lP{constructor(e,t,n){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=t.map(((t,n)=>t[0]+e[n]+t[1]));const s=e.length,r=gF(s),a=t.map((e=>e[0])).join(","),i=t.map(((t,n)=>t[0]+e[n])).join(","),o=TD("rc",s),l=TD("source",s),u=`${o[s-1]} < ${this.outputShape[s-1]}`,c=1===s?"source":`vec2(${l.slice(-2).join()})`,h="reflect"===n?0:1;let p="";if(1===s){const e=`\n        ${r} source = rc;\n        if (source < start) {\n          source = start * 2 - source - ${h};\n        } else if (source >= end) {\n          source = (end - 1) * 2 - source + ${h};\n        }\n        source -= start;\n      `;p=`\n        ${r} rc = outputLoc;\n        ${e}\n        result[0] = getChannel(getX(${l.join()}), ${c});\n        ${o[s-1]} += 1;\n        if(${u}) {\n          ${e}\n          result[1] = getChannel(getX(${l.join()}), ${c});\n        }\n      `}else{const e=`\n        ${r} source = rc;\n        ${r} lt = ${r}(lessThan(source, start));\n        ${r} gte = ${r}(greaterThanEqual(source, end));\n        ${r} orig = 1 - (lt + gte);\n        source = orig * source +\n                lt * (start * 2 - source - ${h}) +\n                gte * ((end - 1) * 2 - source + ${h});\n        source -= start;\n      `;p=`\n        ${r} rc = outputLoc;\n        ${e}\n        result[0] = getChannel(getX(${l.join()}), ${c});\n        ${o[s-1]} += 1;\n        if(${u}) {\n          ${e}\n          result[1] = getChannel(getX(${l.join()}), ${c});\n        }\n        rc = outputLoc;\n        ${o[s-2]} += 1;\n        if(${o[s-2]} < ${this.outputShape[s-2]}) {\n          ${e}\n          result[2] = getChannel(getX(${l.join()}), ${c});\n          ${o[s-1]} += 1;\n          if(${u}) {\n            ${e}\n            result[3] = getChannel(getX(${l.join()}), ${c});\n          }\n        }\n      `}this.userCode=`\n      const ${r} start = ${r}(${a});\n      const ${r} end = ${r}(${i});\n\n      void main() {\n        ${r} outputLoc = getOutputCoords();\n        vec4 result = vec4(0.);\n        ${p}\n        setOutput(result);\n      }\n    `}}const uP={kernelName:Bn,backendName:"webgl",kernelFunc:({inputs:e,backend:t,attrs:n})=>{const{x:s}=e,{paddings:r,mode:a}=n,i=He().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new lP(s.shape,r,a):new oP(s.shape,r,a);return t.runWebGLProgram(i,[s],s.dtype)}},cP=tO({opSnippet:"if (b == 0.0) return NAN;\n  return mod(a, b);",packedOpSnippet:"\n  vec4 result = mod(a, b);\n  vec4 isNaN = vec4(equal(b, vec4(0.0)));\n  \n  result.r = isNaN.r > 0. ? NAN : result.r;\n  result.g = isNaN.g > 0. ? NAN : result.g;\n  result.b = isNaN.b > 0. ? NAN : result.b;\n  result.a = isNaN.a > 0. ? NAN : result.a;\n\n  return result;\n"}),hP={kernelName:Wn,backendName:"webgl",kernelFunc:cP};class pP{constructor(e,t,n){this.variableNames=["probs"],this.customUniforms=[{name:"seed",type:"float"}],this.outputShape=[e,n],this.userCode=`\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n\n        float r = random(seed);\n        float cdf = 0.0;\n\n        for (int i = 0; i < ${t-1}; i++) {\n          cdf += getProbs(batch, i);\n\n          if (r < cdf) {\n            setOutput(float(i));\n            return;\n          }\n        }\n\n        // If no other event happened, last event happened.\n        setOutput(float(${t-1}));\n      }\n    `}}const dP=tO({opSnippet:"\nif (a == b) {\n  return 1.0;\n};\nreturn a / b;",packedOpSnippet:"\n  // vec4 one = vec4(equal(a, b));\n  // return one + (vec4(1.0) - one) * a / b;\n  vec4 result = a / b;\n  if(a.x == b.x) {\n    result.x = 1.;\n  }\n  if(a.y == b.y) {\n    result.y = 1.;\n  }\n  if(a.z == b.z) {\n    result.z = 1.;\n  }\n  if(a.w == b.w) {\n    result.w = 1.;\n  }\n\n  return result;\n",checkOutOfBounds:!0}),fP={kernelName:Ht,backendName:"webgl",kernelFunc:dP},mP="return a - b;",gP=tO({opSnippet:mP,packedOpSnippet:mP,supportsComplex:!0,cpuKernelImpl:vD}),yP={kernelName:Vs,backendName:"webgl",kernelFunc:gP};function bP(e){const{inputs:t,backend:n,attrs:s}=e,{logits:r}=t,{dim:a}=s,i=ye([a],r.shape),o=jz({inputs:{x:r},backend:n,attrs:{reductionIndices:i,keepDims:!1}}),l=oc(o.shape,i),u=lO({inputs:{x:o},backend:n,attrs:{shape:l}}),c=gP({inputs:{a:r,b:u},backend:n}),h=zL({inputs:{x:c},backend:n}),p=gO({inputs:{x:h},backend:n,attrs:{axis:i,keepDims:!1}}),d=lO({inputs:{x:p},backend:n,attrs:{shape:l}}),f=dP({inputs:{a:h,b:d},backend:n});return n.disposeIntermediateTensorInfo(o),n.disposeIntermediateTensorInfo(u),n.disposeIntermediateTensorInfo(c),n.disposeIntermediateTensorInfo(h),n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(d),f}const xP={kernelName:As,backendName:"webgl",kernelFunc:bP},vP={kernelName:Vn,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{logits:r}=t,{numSamples:a,seed:i,normalized:o}=s,l=o?r:bP({inputs:{logits:r},backend:n,attrs:{dim:r.shape.length-1}}),u=l.shape[0],c=l.shape[1],h=new pP(u,c,a),p=[[i]],d=n.runWebGLProgram(h,[l],"int32",p);return o||n.disposeIntermediateTensorInfo(l),d}},wP={kernelName:Gn,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{x:s}=t;if(n.shouldExecuteOnCPU([s])){const e=n.texData.get(s.dataId),[t,r]=sD(e.values,s.shape,s.dtype);return n.makeTensorInfo(r,s.dtype,t)}let r;return r=He().getBool("WEBGL_PACK_UNARY_OPERATIONS")?new MD(s.shape,"\n  vec4 result = -x;\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n"):new FD(s.shape,"if (isnan(x)) return x;\n  return -x;\n"),n.runWebGLProgram(r,[s],s.dtype)}},kP=ed,IP={kernelName:jn,backendName:"webgl",kernelFunc:function(e){ir("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");const{inputs:t,backend:n,attrs:s}=e,{boxes:r,scores:a}=t,{maxOutputSize:i,iouThreshold:o,scoreThreshold:l}=s,u=n.readSync(r.dataId),c=n.readSync(a.dataId),{selectedIndices:h}=kP(u,c,i,o,l);return n.makeTensorInfo([h.length],"int32",new Int32Array(h))}},SP=td,NP={kernelName:qn,backendName:"webgl",kernelFunc:function(e){ir("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");const{inputs:t,backend:n,attrs:s}=e,{boxes:r,scores:a}=t,{maxOutputSize:i,iouThreshold:o,scoreThreshold:l,padToMaxOutputSize:u}=s,c=n.readSync(r.dataId),h=n.readSync(a.dataId),{selectedIndices:p,validOutputs:d}=SP(c,h,i,o,l,u);return[n.makeTensorInfo([p.length],"int32",new Int32Array(p)),n.makeTensorInfo([],"int32",new Int32Array([d]))]}},TP=nd,CP={kernelName:Kn,backendName:"webgl",kernelFunc:function(e){ir("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");const{inputs:t,backend:n,attrs:s}=e,{boxes:r,scores:a}=t,{maxOutputSize:i,iouThreshold:o,scoreThreshold:l,softNmsSigma:u}=s,c=n.readSync(r.dataId),h=n.readSync(a.dataId),p=i,d=o,f=l,m=u,{selectedIndices:g,selectedScores:y}=TP(c,h,p,d,f,m);return[n.makeTensorInfo([g.length],"int32",new Int32Array(g)),n.makeTensorInfo([y.length],"float32",new Float32Array(y))]}};class $P{constructor(e,t,n,s){this.variableNames=["indices"],this.outputShape=[e,t],this.userCode=`\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int index = round(getIndices(coords.x));\n        setOutput(mix(float(${s}), float(${n}),\n                      float(index == coords.y)));\n      }\n    `}}const EP={kernelName:Yn,backendName:"webgl",kernelFunc:e=>{const{inputs:t,backend:n,attrs:s}=e,{indices:r}=t,{depth:a,onValue:i,offValue:o}=s,l=oe(r.shape),u=new $P(l,a,i,o),c=lO({inputs:{x:r},backend:n,attrs:{shape:[l]}}),h=n.runWebGLProgram(u,[c],r.dtype);n.disposeIntermediateTensorInfo(c);const p=lO({inputs:{x:h},backend:n,attrs:{shape:[...r.shape,a]}});return n.disposeIntermediateTensorInfo(h),p}};function AP(e){const{inputs:t,backend:n}=e,{x:s}=t;if("complex64"===s.dtype){const e=wM({inputs:{input:s},backend:n}),t=AP({inputs:{x:e},backend:n}),r=MM({inputs:{input:s},backend:n}),a=AP({inputs:{x:r},backend:n}),i=jD({inputs:{real:t,imag:a},backend:n});return n.disposeIntermediateTensorInfo(e),n.disposeIntermediateTensorInfo(t),n.disposeIntermediateTensorInfo(r),n.disposeIntermediateTensorInfo(a),i}return XL({attrs:{shape:s.shape,dtype:s.dtype,value:"string"===s.dtype?"":0},backend:n})}const _P={kernelName:Qs,backendName:"webgl",kernelFunc:AP},RP={kernelName:Xn,backendName:"webgl",kernelFunc:function e(t){const{inputs:n,backend:s}=t,{x:r}=n;if("string"===r.dtype)throw new Error("onesLike is not supported under string dtype");if("complex64"===r.dtype){const t=wM({inputs:{input:r},backend:s}),n=e({inputs:{x:t},backend:s}),a=MM({inputs:{input:r},backend:s}),i=AP({inputs:{x:a},backend:s}),o=jD({inputs:{real:n,imag:i},backend:s});return s.disposeIntermediateTensorInfo(t),s.disposeIntermediateTensorInfo(n),s.disposeIntermediateTensorInfo(a),s.disposeIntermediateTensorInfo(i),o}return XL({attrs:{shape:r.shape,dtype:r.dtype,value:1},backend:s})}},FP={kernelName:Zn,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{axis:r}=s;if(1===t.length)return BL({inputs:{input:t[0]},backend:n,attrs:{dim:r}});const a=t[0].shape,i=t[0].dtype;t.forEach((e=>{re(a,e.shape,"All tensors passed to stack must have matching shapes"),se(i===e.dtype,(()=>"All tensors passed to stack must have matching dtypes"))}));const o=[],l=PM({inputs:t.map((e=>{const t=BL({inputs:{input:e},backend:n,attrs:{dim:r}});return o.push(t),t})),backend:n,attrs:{axis:r}});return o.forEach((e=>n.disposeIntermediateTensorInfo(e))),l}};class DP{constructor(e,t,n){this.variableNames=["x"],this.customUniforms=[{name:"value",type:"float"}],this.outputShape=t.map(((t,n)=>t[0]+e[n]+t[1]));const s=e.length,r=gF(s),a=t.map((e=>e[0])).join(","),i=t.map(((t,n)=>t[0]+e[n])).join(","),o=["coords[0]","coords[1]","coords[2]","coords[3]"].slice(0,s);this.userCode=1!==s?`\n      ${r} start = ${r}(${a});\n      ${r} end = ${r}(${i});\n\n      void main() {\n        ${r} outC = getOutputCoords();\n        if (any(lessThan(outC, start)) || any(greaterThanEqual(outC, end))) {\n          setOutput(value);\n        } else {\n          ${r} coords = outC - start;\n          setOutput(getX(${o}));\n        }\n      }\n    `:`\n        int start = ${a};\n        int end = ${i};\n\n        void main() {\n          int outC = getOutputCoords();\n          if (outC < start || outC >= end) {\n            setOutput(value);\n          } else {\n            setOutput(getX(outC - start));\n          }\n        }\n      `}}class OP{constructor(e,t,n){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"value",type:"float"}],this.outputShape=t.map(((t,n)=>t[0]+e[n]+t[1]));const s=e.length,r=gF(s),a=t.map((e=>e[0])).join(","),i=t.map(((t,n)=>t[0]+e[n])).join(","),o=TD("rc",s),l=TD("source",s),u=`${o[s-1]} < ${this.outputShape[s-1]}`,c=1===s?"source":`vec2(${l.slice(-2).join()})`,h=[`${r} rc = outputLoc;`,`${o[s-1]} += 1;\n       if(${u}) {\n      `,1===s?"":`}\n       rc = outputLoc;\n       ${o[s-2]} += 1;\n       if(${o[s-2]} < ${this.outputShape[s-2]}) {`,1===s?"":`  ${o[s-1]} += 1;\n         if(${u}) {`],p=1===s?"rc < start || rc >= end":"any(lessThan(rc, start)) || any(greaterThanEqual(rc, end))";let d="";for(let e=0,t=1===s?2:4;e<t;e++)d+=`\n        ${h[e]}\n        if (${p}) {\n          result[${e}] = float(value);\n        } else {\n          ${r} source = rc - start;\n          result[${e}] = getChannel(getX(${l.join()}), ${c});\n        }\n      `;d+=1===s?"} ":"}}",this.userCode=`\n      const ${r} start = ${r}(${a});\n      const ${r} end = ${r}(${i});\n\n      void main() {\n        ${r} outputLoc = getOutputCoords();\n        vec4 result = vec4(0.);\n        ${d}\n        setOutput(result);\n      }\n    `}}const MP=e=>{const{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{paddings:a,constantValue:i}=s;if(0===oe(r.shape)){const e=a.map(((e,t)=>e[0]+r.shape[t]+e[1]));return XL({backend:n,attrs:{shape:e,value:i,dtype:r.dtype}})}const o=He().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new OP(r.shape,a,i):new DP(r.shape,a,i),l=[[i]];return n.runWebGLProgram(o,[r],r.dtype,l)},LP={kernelName:Jn,backendName:"webgl",kernelFunc:MP},zP=tO({opSnippet:"\n  if(a < 0.0 && floor(b) < b){\n    return NAN;\n  }\n  if (b == 0.0) {\n    return 1.0;\n  }\n  return (round(mod(b, 2.0)) != 1) ?\n      pow(abs(a), b) : sign(a) * pow(abs(a), b);\n",packedOpSnippet:"\n  // isModRound1 has 1 for components with round(mod(b, 2.0)) == 1, 0 otherwise.\n  vec4 isModRound1 = vec4(equal(round(mod(b, 2.0)), ivec4(1)));\n  vec4 multiplier = sign(a) * isModRound1 + (vec4(1.0) - isModRound1);\n  vec4 result = multiplier * pow(abs(a), b);\n\n  // Ensure that a^0 = 1, including 0^0 = 1 as this correspond to TF and JS\n  bvec4 isExpZero = equal(b, vec4(0.0));\n  result.r = isExpZero.r ? 1.0 : result.r;\n  result.g = isExpZero.g ? 1.0 : result.g;\n  result.b = isExpZero.b ? 1.0 : result.b;\n  result.a = isExpZero.a ? 1.0 : result.a;\n\n  vec4 isNaN = vec4(lessThan(a, vec4(0.0))) * vec4(lessThan(floor(b), b));\n  \n  result.r = isNaN.r > 0. ? NAN : result.r;\n  result.g = isNaN.g > 0. ? NAN : result.g;\n  result.b = isNaN.b > 0. ? NAN : result.b;\n  result.a = isNaN.a > 0. ? NAN : result.a;\n\n  return result;\n"}),PP={kernelName:es,backendName:"webgl",kernelFunc:zP},BP={kernelName:ns,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{axis:a,keepDims:i}=s,o=r.shape.length,l=[],u=ye(a,r.shape);let c=u;const h=uc(c,o);let p,d=r;if(null!=h&&(d=bO({inputs:{x:r},backend:n,attrs:{perm:h}}),c=hc(c.length,o),l.push(d)),lc("prod",c,o),n.shouldExecuteOnCPU([d])){const e=n.texData.get(d.dataId).values,{outVals:t,outShape:s,outDtype:r}=aD(d.shape,d.dtype,e,c);p=n.makeTensorInfo(s,r,t)}else{const[e,t]=ic(d.shape,c),s=oe(t),a=lO({inputs:{x:d},backend:n,attrs:{shape:[-1,s]}}),i=pO(a,oa(r.dtype),"prod",n);p=lO({inputs:{x:i},backend:n,attrs:{shape:e}}),l.push(a),l.push(i)}if(i){l.push(p);const e=oc(p.shape,u);p=lO({inputs:{x:p},backend:n,attrs:{shape:e}})}return l.forEach((e=>n.disposeIntermediateTensorInfo(e))),p}},WP=e=>{const{backend:t,attrs:n}=e,{start:s,stop:r,step:a,dtype:i}=n,o=iD(s,r,a,i);return t.makeTensorInfo([o.length],i,o)},VP={kernelName:ss,backendName:"webgl",kernelFunc:WP},UP=eO({opSnippet:"return 1.0 / x;"}),GP={kernelName:as,backendName:"webgl",kernelFunc:UP},HP=eO({opSnippet:"if (isnan(x)) return x;\n  return (x < 0.0) ? 0.0 : x;\n",packedOpSnippet:"\n  vec4 result = x * vec4(greaterThanEqual(x, vec4(0.0)));\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n"}),jP={kernelName:is,backendName:"webgl",kernelFunc:HP},qP=eO({opSnippet:"if (isnan(x)) return x;\n  return (x < 0.0) ? 0.0 : min(6.0, x);\n",packedOpSnippet:"\n  vec4 result = min(x, vec4(6.)) * vec4(greaterThanEqual(x, vec4(0.0)));\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n"}),KP={kernelName:ps,backendName:"webgl",kernelFunc:qP};class XP{constructor(e,t,n,s,r){this.variableNames=["A"],this.outputShape=[];const[a,i,o,l]=e;this.outputShape=[a,t,n,l];const u=[s&&t>1?i-1:i,s&&n>1?o-1:o],c=[s&&t>1?t-1:t,s&&n>1?n-1:n];let h;h=r?"(vec2(yRC) + vec2(0.5)) * effectiveInputOverOutputRatioRC - vec2(0.5)":"vec2(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`\n      const vec2 effectiveInputOverOutputRatioRC = vec2(\n          ${u[0]/c[0]},\n          ${u[1]/c[1]});\n      const vec2 inputShapeRC = vec2(${i}.0, ${o}.0);\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        ivec2 yRC = coords.yz;\n\n        // Fractional source index.\n        vec2 sourceFracIndexRC = ${h};\n\n        // Compute the four integer indices.\n        ivec2 sourceFloorRC = ivec2(max(sourceFracIndexRC, vec2(0.0)));\n        ivec2 sourceCeilRC = ivec2(\n          min(inputShapeRC - 1.0, ceil(sourceFracIndexRC)));\n\n        float topLeft = getA(b, sourceFloorRC.x, sourceFloorRC.y, d);\n        float bottomLeft = getA(b, sourceCeilRC.x, sourceFloorRC.y, d);\n        float topRight = getA(b, sourceFloorRC.x, sourceCeilRC.y, d);\n        float bottomRight = getA(b, sourceCeilRC.x, sourceCeilRC.y, d);\n\n        vec2 fracRC = sourceFracIndexRC - vec2(sourceFloorRC);\n\n        float top = topLeft + (topRight - topLeft) * fracRC.y;\n        float bottom = bottomLeft + (bottomRight - bottomLeft) * fracRC.y;\n        float newValue = top + (bottom - top) * fracRC.x;\n\n        setOutput(newValue);\n      }\n    `}}class YP{constructor(e,t,n,s,r){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=[];const[a,i,o,l]=e;this.outputShape=[a,t,n,l];const u=[s&&t>1?i-1:i,s&&n>1?o-1:o],c=[s&&t>1?t-1:t,s&&n>1?n-1:n];let h;h=r?"(vec3(yRC) + vec3(0.5)) * effectiveInputOverOutputRatioRC - vec3(0.5)":"vec3(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`\n      const vec3 effectiveInputOverOutputRatioRC = vec3(\n          ${u[0]/c[0]},\n          ${u[1]/c[1]},\n          ${u[1]/c[1]});\n      const vec3 inputShapeRC = vec3(${i}.0, ${o}.0,\n                                     ${o}.0);\n\n      float getAValue(int b, int r, int c, int d) {\n        return getChannel(getA(b, r, c, d), vec2(c, d));\n      }\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        // Calculate values for next column in yRC.z.\n        ivec3 yRC = coords.yzz + ivec3(0, 0, 1);\n\n        // Fractional source index.\n        vec3 sourceFracIndexRC = ${h};\n\n        // Compute the four integer indices.\n        ivec3 sourceFloorRC = ivec3(max(sourceFracIndexRC, vec3(0.0)));\n        ivec3 sourceCeilRC = ivec3(\n          min(inputShapeRC - 1.0, ceil(sourceFracIndexRC)));\n\n        // Should we calculate next column and row elements in 2x2 packed cell.\n        bool hasNextCol = d < ${l-1};\n        bool hasNextRow = coords.z < ${n-1};\n\n        // In parallel, construct four corners for all four components in\n        // packed 2x2 cell.\n        vec4 topLeft = vec4(\n          getAValue(b, sourceFloorRC.x, sourceFloorRC.y, d),\n          hasNextCol ? getAValue(b, sourceFloorRC.x, sourceFloorRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceFloorRC.x, sourceFloorRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceFloorRC.x, sourceFloorRC.z, d + 1) : 0.0);\n\n        vec4 bottomLeft = vec4(\n          getAValue(b, sourceCeilRC.x, sourceFloorRC.y, d),\n          hasNextCol ? getAValue(b, sourceCeilRC.x, sourceFloorRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceCeilRC.x, sourceFloorRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceCeilRC.x, sourceFloorRC.z, d + 1) : 0.0);\n\n        vec4 topRight = vec4(\n          getAValue(b, sourceFloorRC.x, sourceCeilRC.y, d),\n          hasNextCol ? getAValue(b, sourceFloorRC.x, sourceCeilRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceFloorRC.x, sourceCeilRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceFloorRC.x, sourceCeilRC.z, d + 1) : 0.0);\n\n        vec4 bottomRight = vec4(\n          getAValue(b, sourceCeilRC.x, sourceCeilRC.y, d),\n          hasNextCol ? getAValue(b, sourceCeilRC.x, sourceCeilRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceCeilRC.x, sourceCeilRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceCeilRC.x, sourceCeilRC.z, d + 1) : 0.0);\n\n        vec3 fracRC = sourceFracIndexRC - vec3(sourceFloorRC);\n\n        vec4 top = mix(topLeft, topRight, fracRC.yyzz);\n        vec4 bottom = mix(bottomLeft, bottomRight, fracRC.yyzz);\n        vec4 newValue = mix(top, bottom, fracRC.x);\n\n        setOutput(newValue);\n      }\n    `}}const ZP={kernelName:cs,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{images:r}=t,{alignCorners:a,halfPixelCenters:i,size:o}=s,[l,u]=o,c=He().getBool("WEBGL_PACK_IMAGE_OPERATIONS")?new YP(r.shape,l,u,a,i):new XP(r.shape,l,u,a,i);return n.runWebGLProgram(c,[r],"float32")}};class JP{constructor(e,t,n){this.variableNames=["dy"],this.outputShape=[],this.outputShape=t;const[,s,r]=t,[,a,i]=e,o=[n&&a>1?s-1:s,n&&i>1?r-1:r],l=[n&&a>1?a-1:a,n&&i>1?i-1:i],u=o[0]/l[0],c=o[1]/l[1],h=1/u,p=1/c,d=2*Math.ceil(h)+2,f=2*Math.ceil(p)+2;this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        int r = coords[1];\n        int c = coords[2];\n\n        float accumulator = 0.0;\n\n        const float heightScale = float(${u});\n        const float widthScale = float(${c});\n\n        const float invHeightScale = float(${h});\n        const float invWidthScale = float(${p});\n\n        const int winHeight = int(${d});\n        const int winWidth = int(${f});\n\n        // Compute bounds for where in dy we will look\n        float startRLerp = floor(float(r) * invHeightScale);\n        int startDyR = int(startRLerp - float(winHeight / 2));\n\n        float startCLerp = floor(float(c) * invWidthScale);\n        int startDyC = int(startCLerp - float(winWidth / 2));\n\n        // Loop over dy\n        for (int dyROffset = 0; dyROffset < winHeight; dyROffset++) {\n          int dyR = dyROffset + startDyR;\n\n          // Guard against the window exceeding the bounds of dy\n          if (dyR < 0 || dyR >= ${a}) {\n            continue;\n          }\n\n          for (int dyCOffset = 0; dyCOffset < winWidth; dyCOffset++) {\n            int dyC = dyCOffset + startDyC;\n\n            // Guard against the window exceeding the bounds of dy\n            if (dyC < 0 || dyC >= ${i}) {\n              continue;\n            }\n\n            float dxR = float(dyR) * heightScale;\n            int topDxRIndex = int(floor(dxR));\n            int bottomDxRIndex = int(min(ceil(dxR), ${s-1}.0));\n            float dxRLerp = dxR - float(topDxRIndex);\n            float inverseDxRLerp = 1.0 - dxRLerp;\n\n            float dxC = float(dyC) * widthScale;\n            int leftDxCIndex = int(floor(dxC));\n            int rightDxCIndex = int(min(ceil(dxC), ${r-1}.0));\n            float dxCLerp = dxC - float(leftDxCIndex);\n            float inverseDxCLerp = 1.0 - dxCLerp;\n\n            if (r == topDxRIndex && c == leftDxCIndex) {\n              // topLeft\n              accumulator +=\n                getDy(b, dyR, dyC, d) * inverseDxRLerp * inverseDxCLerp;\n            }\n\n            if (r == topDxRIndex && c == rightDxCIndex) {\n              // topRight\n              accumulator += getDy(b, dyR, dyC, d) * inverseDxRLerp * dxCLerp;\n            }\n\n            if (r == bottomDxRIndex && c == leftDxCIndex) {\n              // bottomLeft\n              accumulator += getDy(b, dyR, dyC, d) * dxRLerp * inverseDxCLerp;\n            }\n\n            if (r == bottomDxRIndex && c == rightDxCIndex) {\n              // bottomRight\n              accumulator += getDy(b, dyR, dyC, d) * dxRLerp * dxCLerp;\n            }\n          }\n        }\n        // End loop over dy\n\n        setOutput(accumulator);\n      }\n    `}}const QP={kernelName:hs,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{images:r,dy:a}=t,{alignCorners:i}=s,o=new JP(a.shape,r.shape,i);return n.runWebGLProgram(o,[a],a.dtype)}};class eB{constructor(e,t,n,s,r){this.variableNames=["A"],this.outputShape=[];const[a,i,o,l]=e;this.outputShape=[a,t,n,l];const u=[s&&t>1?i-1:i,s&&n>1?o-1:o],c=[s&&t>1?t-1:t,s&&n>1?n-1:n],h=s?"0.5":"0.0";let p;p=r?"max((vec2(yRC) + vec2(0.5)) * effectiveInputOverOutputRatioRC, vec2(0.0))":"vec2(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`\n      const vec2 effectiveInputOverOutputRatioRC = vec2(\n          ${u[0]/c[0]},\n          ${u[1]/c[1]});\n      const vec2 inputShapeRC = vec2(${i}.0, ${o}.0);\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        ivec2 yRC = coords.yz;\n\n        // Fractional source index.\n        vec2 sourceFracIndexRC = ${p};\n\n        // Compute the coordinators of nearest neighbor point.\n        ivec2 sourceNearestRC = ivec2(\n          min(inputShapeRC - 1.0, floor(sourceFracIndexRC + ${h})));\n        float newValue = getA(b, sourceNearestRC.x, sourceNearestRC.y, d);\n\n        setOutput(newValue);\n      }\n    `}}class tB{constructor(e,t,n,s,r){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=[];const[a,i,o,l]=e;this.outputShape=[a,t,n,l];const u=[s&&t>1?i-1:i,s&&n>1?o-1:o],c=[s&&t>1?t-1:t,s&&n>1?n-1:n],h=s?"0.5":"0.0";let p;p=r?"max((vec3(yRC) + vec3(0.5)) * effectiveInputOverOutputRatioRC, vec3(0.0))":"vec3(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`\n      const vec3 effectiveInputOverOutputRatioRC = vec3(\n          ${u[0]/c[0]},\n          ${u[1]/c[1]},\n          ${u[1]/c[1]});\n      const vec3 inputShapeRC = vec3(${i}.0, ${o}.0,\n                                     ${o}.0);\n\n      float getAValue(int b, int r, int c, int d) {\n        return getChannel(getA(b, r, c, d), vec2(c, d));\n      }\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        // Calculate values for next column in yRC.z.\n        ivec3 yRC = coords.yzz + ivec3(0, 0, 1);\n\n        // Fractional source index.\n        vec3 sourceFracIndexRC = ${p};\n\n        // Compute the coordinators of nearest neighbor point.\n        ivec3 sourceNearestRC = ivec3(\n          min(inputShapeRC - 1.0, floor(sourceFracIndexRC + ${h})));\n\n        // Should we calculate next column and row elements in 2x2 packed cell.\n        bool hasNextCol = d < ${l-1};\n        bool hasNextRow = coords.z < ${n-1};\n\n        vec4 newValue = vec4(\n          getAValue(b, sourceNearestRC.x, sourceNearestRC.y, d),\n          hasNextCol ? getAValue(b, sourceNearestRC.x, sourceNearestRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceNearestRC.x, sourceNearestRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceNearestRC.x, sourceNearestRC.z, d + 1) : 0.0);\n\n        setOutput(newValue);\n      }\n    `}}const nB={kernelName:ls,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{images:r}=t,{alignCorners:a,halfPixelCenters:i,size:o}=s,[l,u]=o,c=He().getBool("WEBGL_PACK_IMAGE_OPERATIONS")?new tB(r.shape,l,u,a,i):new eB(r.shape,l,u,a,i);return n.runWebGLProgram(c,[r],r.dtype)}};class sB{constructor(e,t,n){this.variableNames=["dy"],this.outputShape=[],this.outputShape=t;const[,s,r]=t,[,a,i]=e,o=[n&&a>1?s-1:s,n&&i>1?r-1:r],l=[n&&a>1?a-1:a,n&&i>1?i-1:i],u=o[0]/l[0],c=o[1]/l[1],h=1/u,p=1/c,d=2*Math.ceil(h)+2,f=2*Math.ceil(p)+2;this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        int r = coords[1];\n        int c = coords[2];\n\n        float accumulator = 0.0;\n\n        const float heightScale = float(${u});\n        const float widthScale = float(${c});\n\n        const float invHeightScale = float(${h});\n        const float invWidthScale = float(${p});\n\n        const int winHeight = int(${d});\n        const int winWidth = int(${f});\n\n        // Compute bounds for where in dy we will look\n        float startRLerp = floor(float(r) * invHeightScale);\n        int startDyR = int(floor(startRLerp - float(winHeight / 2)));\n\n        float startCLerp = floor(float(c) * invWidthScale);\n        int startDyC = int(floor(startCLerp - float(winWidth / 2)));\n\n        // Loop over dy\n        for (int dyROffset = 0; dyROffset < winHeight; dyROffset++) {\n          int dyR = dyROffset + startDyR;\n\n          // Guard against the window exceeding the bounds of dy\n          if (dyR < 0 || dyR >= ${a}) {\n            continue;\n          }\n\n          for (int dyCOffset = 0; dyCOffset < winWidth; dyCOffset++) {\n            int dyC = dyCOffset + startDyC;\n\n            // Guard against the window exceeding the bounds of dy\n            if (dyC < 0 || dyC >= ${i}) {\n              continue;\n            }\n\n            float sourceFracRow =\n              float(${o[0]}) *\n                (float(dyR) / float(${l[0]}));\n\n            float sourceFracCol =\n                float(${o[1]}) *\n                  (float(dyC) / float(${l[1]}));\n\n            int sourceNearestRow = int(min(\n                float(int(${s}) - 1),\n                ${n} ? float(round(sourceFracRow)) :\n                                  float(floor(sourceFracRow))));\n\n            int sourceNearestCol = int(min(\n                float(int(${r}) - 1),\n                ${n} ? float(round(sourceFracCol)) :\n                                  float(floor(sourceFracCol))));\n\n            if (r == sourceNearestRow && c == sourceNearestCol) {\n              accumulator += getDy(b, dyR, dyC, d);\n            }\n          }\n        }\n        // End loop over dy\n\n        setOutput(accumulator);\n      }\n    `}}const rB={kernelName:us,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{images:r,dy:a}=t,{alignCorners:i}=s,o=new sB(a.shape,r.shape,i);return n.runWebGLProgram(o,[a],a.dtype)}};class aB{constructor(e,t){this.variableNames=["x"];const n=e.length;if(n>4)throw new Error(`WebGL backend: Reverse of rank-${n} tensor is not yet supported`);if(this.outputShape=e,1===n)return void(this.userCode=`\n        void main() {\n          int coord = getOutputCoords();\n          setOutput(getX(${e[0]} - coord - 1));\n        }\n      `);const s=e.map(((n,s)=>(n=>-1!==t.indexOf(n)&&1!==e[n]?`${e[n]} - coords[${n}] - 1`:`coords[${n}]`)(s))).join(","),r=gF(n);this.userCode=`\n      void main() {\n        ${r} coords = getOutputCoords();\n        setOutput(getX(${s}));\n      }\n    `}}class iB{constructor(e,t){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0;const n=e.length;if(n>4)throw new Error(`WebGL backend: Reverse of rank-${n} tensor is not yet supported`);this.outputShape=e;const s=TD("rc",n),r=`${s[n-1]} + 1 < ${this.outputShape[n-1]}`,a=`${s[n-2]} + 1 < ${this.outputShape[n-2]}`,i=gF(n);function o(n){const s=e.map(((s,r)=>function(n,s){return-1!==t.indexOf(n)&&1!==e[n]?`${e[n]} - ${s[n]} - 1`:`${s[n]}`}(r,n)));return`getChannel(getX(${s.join(",")}), vec2(${s.slice(-2).join(",")}))`}this.userCode=1===n?`\n        void main(){\n          int rc = getOutputCoords();\n          vec4 result = vec4(0.);\n          result.r = getChannel(getX(${e[0]} - rc - 1),\n            ${e[0]} - rc - 1);\n          if(${r}){\n              result.g = getChannel(getX(${e[0]} - (rc  + 1) - 1),\n                ${e[0]} - (rc  + 1) - 1);\n          }\n          setOutput(result);\n        }\n      `:`\n        void main() {\n          ${i} rc = getOutputCoords();\n          vec4 result = vec4(0.);\n          result.r = ${function(e){return o(e)}(s.slice())};\n          if(${r}){\n            result.g = ${function(e){return e[n-1]="("+e[n-1]+" + 1)",o(e)}(s.slice())};\n          }\n          if(${a}) {\n            result.b = ${function(e){return e[n-2]="("+e[n-2]+" + 1)",o(e)}(s.slice())};\n            if(${r}) {\n              result.a = ${function(e){return e[n-1]="("+e[n-1]+" + 1)",e[n-2]="("+e[n-2]+" + 1)",o(e)}(s.slice())};\n            }\n          }\n          setOutput(result);\n        }\n    `}}const oB={kernelName:ds,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{dims:a}=s,i=r.shape.length,o=ye(a,r.shape);if(0===i)return GD({inputs:{x:r},backend:n});const l=He().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new iB(r.shape,o):new aB(r.shape,o);return n.runWebGLProgram(l,[r],r.dtype)}};class lB{constructor(e,t){this.variableNames=["Image"],this.outputShape=[],this.customUniforms=[{name:"params",type:"vec4"}];const n=e[1],s=e[2];this.outputShape=e;let r="";r="number"==typeof t?`float outputValue = ${t.toFixed(2)};`:`\n        vec3 fill = vec3(${t.join(",")});\n        float outputValue = fill[coords[3]];`,this.userCode=`\n        void main() {\n          ivec4 coords = getOutputCoords();\n          int x = coords[2];\n          int y = coords[1];\n          float coordXFloat = (float(x) - params[0]) * params[3] -\n            (float(y) - params[1]) * params[2];\n          float coordYFloat = (float(x) - params[0]) * params[2] +\n            (float(y) - params[1]) * params[3];\n          int coordX = int(round(coordXFloat + params[0]));\n          int coordY = int(round(coordYFloat + params[1]));\n          ${r}\n          if(coordX >= 0 && coordX < ${s} && coordY >= 0 && coordY < ${n}) {\n            outputValue = getImage(coords[0], coordY, coordX, coords[3]);\n          }\n          setOutput(outputValue);\n        }\n    `}}const uB={kernelName:nr,backendName:"webgl",kernelFunc:({inputs:e,attrs:t,backend:n})=>{const{image:s}=e,{radians:r,fillValue:a,center:i}=t,o=n,l=new lB(s.shape,a),[u,c]=Kd(i,s.shape[1],s.shape[2]),h=[[u,c,Math.sin(r),Math.cos(r)]];return o.runWebGLProgram(l,[s],s.dtype,h)}},cB=eO({opSnippet:"\n  // OpenGL ES does not support round function.\n  // The algorithm is based on banker's rounding.\n  float base = floor(x);\n  if ((x - base) < 0.5) {\n    return floor(x);\n  } else if ((x - base) > 0.5) {\n    return ceil(x);\n  } else {\n    if (mod(base, 2.0) == 0.0) {\n      return base;\n    } else {\n      return base + 1.0;\n    }\n  }\n"}),hB={kernelName:fs,backendName:"webgl",kernelFunc:cB},pB=eO({opSnippet:"return inversesqrt(x);",cpuKernelImpl:oD}),dB={kernelName:ms,backendName:"webgl",kernelFunc:pB};class fB{constructor(e,t,n,s,r,a,i=!0){this.variableNames=["updates","indices","defaultValue"],this.outputShape=a;const o=gF(r.length),l=gF(a.length);let u="";1===n?u="i":2===n&&(u="i, j");const c=`getIndices(${u})`;let h="";1===s?h="i":2===s&&(h="i, coords[1]");const p=`getUpdates(${h})`,d=t>1?"strides[j]":"strides";this.userCode=`\n        ${o} strides = ${o}(${r});\n\n        void main() {\n          ${l} coords = getOutputCoords();\n          float sum = 0.0;\n          bool found = false;\n          for (int i = 0; i < ${e}; i++) {\n            int flattenedIndex = 0;\n            for (int j = 0; j < ${t}; j++) {\n              int index = round(${c});\n              flattenedIndex += index * ${d};\n            }\n            if (flattenedIndex == coords[0]) {\n              sum += ${p};\n              found = true;\n            }\n          }\n          setOutput(mix(getDefaultValue(), sum, float(found)));\n        }\n      `}}const mB={kernelName:gs,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{indices:r,updates:a}=t,{shape:i}=s,{sliceRank:o,numUpdates:l,sliceSize:u,strides:c,outputSize:h}=ho(0,r,i),p=[h/u,u];if(0===h)return n.makeTensorInfo(i,r.dtype);const d=lO({inputs:{x:r},backend:n,attrs:{shape:[l,o]}}),f=lO({inputs:{x:a},backend:n,attrs:{shape:[l,u]}}),m=n.makeTensorInfo([],"float32",new Float32Array([0])),g=new fB(l,o,d.shape.length,f.shape.length,c,p),y=n.runWebGLProgram(g,[f,d,m],f.dtype),b=lO({inputs:{x:y},backend:n,attrs:{shape:i}});return n.disposeIntermediateTensorInfo(d),n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(y),n.disposeIntermediateTensorInfo(m),b}};class gB{constructor(e,t,n,s){this.variableNames=["sortedSequence","values"],this.customUniforms=[{name:"numInputs",type:"int"}],this.outputShape=[e,n];const r=`for (int i = 0; i < ${Math.ceil(Math.log2(t+1))}; ++i) { if (left >= right) break;`,a=2===He().getNumber("WEBGL_VERSION")?"while (left < right) {":r,i="left"===s?"<":"<=";this.userCode=`\n       int findBound(int batch, float value) {\n         int left = 0;\n         int right = numInputs;\n         int mid;\n         ${a}\n           mid = (left + right) / 2;\n           if (getSortedSequence(batch, mid) ${i} value) {\n             left = mid + 1;\n           } else {\n             right = mid;\n           }\n         }\n         return right;\n       }\n\n       void main() {\n         ivec2 coords = getOutputCoords();\n         int batch = coords[0];\n         int valueIndex = coords[1];\n\n         float value = getValues(batch, valueIndex);\n\n         setOutput(float(findBound(batch, value)));\n       }\n     `}}const yB={kernelName:ys,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{sortedSequence:r,values:a}=t,{side:i}=s,o=new gB(r.shape[0],r.shape[1],a.shape[1],i),l=[[r.shape[1]]];return n.runWebGLProgram(o,[r,a],"int32",l)}};class bB{constructor(e,t,n){let s,r;if(this.variableNames=["c","a","b"],this.outputShape=t,n>4)throw Error(`Where for rank ${n} is not yet supported`);if(1===n)r="resRC",s="resRC";else{const n=["resRC.x","resRC.y","resRC.z","resRC.w"],a=[],i=[];for(let s=0;s<t.length;s++)i.push(`${n[s]}`),s<e&&a.push(`${n[s]}`);s=a.join(),r=i.join()}const a=gF(n);this.userCode=`\n      void main() {\n        ${a} resRC = getOutputCoords();\n        float cVal = getC(${s});\n        if (cVal >= 1.0) {\n          setOutput(getA(${r}));\n        } else {\n          setOutput(getB(${r}));\n        }\n      }\n    `}}const xB={kernelName:bs,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{condition:s,t:r,e:a}=t,i=new bB(s.shape.length,r.shape,r.shape.length);return n.runWebGLProgram(i,[s,r,a],ia(r.dtype,a.dtype))}},vB=eO({opSnippet:`\n  // Stable and Attracting Fixed Point (0, 1) for Normalized Weights.\n  // see: https://arxiv.org/abs/1706.02515\n  float scaleAlpha = ${ef};\n  float scale = ${tf};\n  return (x >= 0.0) ? scale * x : scaleAlpha * (exp(x) - 1.0);\n`}),wB={kernelName:xs,backendName:"webgl",kernelFunc:vB},kB=eO({opSnippet:"if (isnan(x)) return x;\n  return 1.0 / (1.0 + exp(-1.0 * x));\n",packedOpSnippet:"\n  vec4 result = 1.0 / (1.0 + exp(-1.0 * x));\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n",cpuKernelImpl:uD}),IB={kernelName:Ss,backendName:"webgl",kernelFunc:kB},SB=eO({opSnippet:"\n  if (isnan(x)) { return 0.0; }\n  return sign(x);\n"}),NB={kernelName:Is,backendName:"webgl",kernelFunc:SB},TB=eO({opSnippet:"if (isnan(x)) return x;\n  return sin(x);\n"}),CB={kernelName:ws,backendName:"webgl",kernelFunc:TB},$B=eO({opSnippet:"\n  float e2x = exp(x);\n  return (e2x - 1.0 / e2x) / 2.0;\n"}),EB={kernelName:ks,backendName:"webgl",kernelFunc:$B},AB=eO({opSnippet:"\n  float epsilon = 1.1920928955078125e-7;\n  float threshold = log(epsilon) + 2.0;\n\n  bool too_large = x > -threshold;\n  bool too_small = x < threshold;\n\n  float result;\n  float exp_x = exp(x);\n\n  if (too_large){\n    result = x;\n  }\n  else if (too_small){\n    result = exp_x;\n  }\n  else{\n    result = log(exp_x + 1.0);\n  }\n  return result;\n"}),_B={kernelName:Ns,backendName:"webgl",kernelFunc:AB},RB={kernelName:$s,backendName:"webgl",kernelFunc:e=>{const{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{blockShape:a,paddings:i}=s;se(r.shape.length<=4,(()=>"spaceToBatchND for rank > 4 with a WebGL backend not implemented yet"));const o=a.reduce(((e,t)=>e*t)),l=[[0,0]];l.push(...i);for(let e=1+a.length;e<r.shape.length;++e)l.push([0,0]);const u=[],c=MP({inputs:{x:r},backend:n,attrs:{paddings:l,constantValue:0}}),h=Xd(c.shape,a,o,!1),p=Yd(h.length,a.length,!1),d=Zd(c.shape,a,o,!1),f=lO({inputs:{x:c},backend:n,attrs:{shape:h}}),m=bO({inputs:{x:f},backend:n,attrs:{perm:p}}),g=lO({inputs:{x:m},backend:n,attrs:{shape:d}});return u.push(c),u.push(f),u.push(m),u.forEach((e=>n.disposeIntermediateTensorInfo(e))),g}},FB={kernelName:_s,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{indices:s,values:r,denseShape:a,defaultValue:i}=t;if(1!==a.shape.length)throw new Error(`Dense shape must be a vector, saw:\n         ${a.shape}`);if(2!==s.shape.length)throw new Error(`Indices must be a matrix, saw:\n         ${s.shape}`);if(1!==r.shape.length)throw new Error(`Values must be a vector, saw:\n         ${r.shape}`);if(0!==i.shape.length)throw new Error(`Default value must be a scalar, saw:\n        ${i.shape}`);const o=n.readSync(s.dataId),l=n.readSync(r.dataId),u=n.readSync(a.dataId),c=n.readSync(i.dataId)[0],[h,p,d,f,m]=pD(o,s.shape,s.dtype,l,r.dtype,u,c);return[n.makeTensorInfo(p,s.dtype,h),n.makeTensorInfo([p[0]],r.dtype,d),n.makeTensorInfo([f.length],"bool",new Uint8Array(f.map((e=>Number(e))))),n.makeTensorInfo([m.length],s.dtype,new Int32Array(m))]}},DB={kernelName:Rs,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{inputIndices:s,inputShape:r,newShape:a}=t;if(2!==s.shape.length)throw new Error(`Input indices should be a matrix but received shape ${s.shape}`);if(1!==r.shape.length)throw new Error(`Input shape should be a vector but received shape ${r.shape}`);if(1!==a.shape.length)throw new Error(`Target shape should be a vector but received shape ${a.shape}`);const i=Array.from(n.readSync(r.dataId)),o=n.readSync(s.dataId),l=Array.from(n.readSync(a.dataId)),[u,c,h]=dD(o,s.shape,s.dtype,i,l);return[n.makeTensorInfo(c,s.dtype,u),n.makeTensorInfo([h.length],a.dtype,new Int32Array(h))]}},OB={kernelName:Fs,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{data:s,indices:r,segmentIds:a}=t;if(s.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(1!==r.shape.length)throw new Error(`Indices should be a vector but received shape\n              ${r.shape}`);if(1!==a.shape.length)throw new Error(`Segment ids should be a vector but received shape\n              ${a.shape}`);const i=n.readSync(s.dataId),o=n.readSync(r.dataId),l=n.readSync(a.dataId),[u,c]=fD(i,s.shape,s.dtype,o,l,!0);return n.makeTensorInfo(c,s.dtype,u)}},MB={kernelName:Ds,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{data:s,indices:r,segmentIds:a}=t;if(s.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(1!==r.shape.length)throw new Error(`Indices should be a vector but received shape\n             ${r.shape}`);if(1!==a.shape.length)throw new Error(`Segment ids should be a vector but received shape\n             ${a.shape}`);const i=n.readSync(s.dataId),o=n.readSync(r.dataId),l=n.readSync(a.dataId),[u,c]=fD(i,s.shape,s.dtype,o,l);return n.makeTensorInfo(c,s.dtype,u)}},LB={kernelName:Os,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{sparseIndices:r,sparseValues:a,defaultValue:i}=t,{outputShape:o}=s,{sliceRank:l,numUpdates:u,sliceSize:c,strides:h,outputSize:p}=ho(0,r,o);if("string"===a.dtype){const e=n.bufferSync(r),t=n.bufferSync(a),s=zr(n.readSync(i.dataId)[0]),d=lD(e,t,o,p,c,u,l,h,s,!1);return n.makeTensorInfo(o,d.dtype,d.values)}const d=new fB(u,l,r.shape.length,a.shape.length,h,[p,1],!1),f=n.runWebGLProgram(d,[a,r,i],a.dtype),m=lO({inputs:{x:f},backend:n,attrs:{shape:o}});return n.disposeIntermediateTensorInfo(f),m}},zB={kernelName:Es,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{numOrSizeSplits:a,axis:i}=s,o=ye(i,r.shape)[0],l=Sf(r,a,o),u=r.shape.length,c=new Array(u).fill(0),h=r.shape.slice();return l.map((e=>{const t=[...h];t[o]=e;const s=fM({inputs:{x:r},backend:n,attrs:{begin:c,size:t}});return c[o]+=e,s}))}},PB="return sqrt(x);",BB=eO({opSnippet:PB,packedOpSnippet:PB,cpuKernelImpl:mD}),WB={kernelName:Ts,backendName:"webgl",kernelFunc:BB},VB=eO({opSnippet:"return x * x;"}),UB={kernelName:Ls,backendName:"webgl",kernelFunc:VB},GB="return (a - b) * (a - b);",HB=tO({opSnippet:GB,packedOpSnippet:GB}),jB={kernelName:Ms,backendName:"webgl",kernelFunc:HB},qB={kernelName:er,backendName:"webgl",kernelFunc:function({inputs:e,attrs:t,backend:n}){const{x:s}=e,r=`if (isnan(x)) return x;\n    return x > 0.0 ? 1.0 : float(${t.alpha});\n  `,a=new FD(s.shape,r);return n.runWebGLProgram(a,[s],s.dtype)}};class KB{constructor(e,t,n){this.variableNames=["x"],this.outputShape=n;const s=n.length,r=gF(n.length),a=gF(n.length);let i="";if(1===s)i="coords * strides + begin";else{let e=0;i=n.map(((t,s)=>(e++,1===n.length?`coords * strides[${s}] + begin[${s}]`:`coords[${e-1}] * strides[${s}] + begin[${s}]`))).join(",")}this.userCode=`\n      ${r} begin = ${r}(${e});\n      ${r} strides = ${r}(${t});\n\n      void main() {\n        ${a} coords = getOutputCoords();\n        setOutput(getX(${i}));\n      }\n    `}}const XB={kernelName:zs,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{begin:a,end:i,strides:o,beginMask:l,endMask:u,ellipsisMask:c,newAxisMask:h,shrinkAxisMask:p}=s,{finalShapeSparse:d,finalShape:f,isIdentity:m,sliceDim0:g,isSimpleSlice:y,begin:b,end:x,strides:v}=$o(r.shape,a,i,o,l,u,c,h,p);let w;if(m)w=lO({inputs:{x:r},backend:n,attrs:{shape:f}});else if(g||y){se(r.shape.length>=1,(()=>`Input must have rank at least 1, got: ${r.shape.length}`));const e=mo(b,x,v),t=fM({inputs:{x:r},backend:n,attrs:{begin:b,size:e}});w=lO({inputs:{x:t},backend:n,attrs:{shape:f}}),n.disposeIntermediateTensorInfo(t)}else if(n.shouldExecuteOnCPU([r])){const e=n.readSync(r.dataId),t=$i(r.shape,r.dtype,e),s=gD(d,t,v,b);w=n.makeTensorInfo(f,r.dtype,s.values)}else{const e=new KB(b,v,d);w=n.runWebGLProgram(e,[r],r.dtype)}const k=lO({inputs:{x:w},backend:n,attrs:{shape:f}});return n.disposeIntermediateTensorInfo(w),k}},YB={kernelName:Ps,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{separator:r,nGramWidths:a,leftPad:i,rightPad:o,padWidth:l,preserveShortSequences:u}=s,{data:c,dataSplits:h}=t,p=n.readSync(c.dataId),d=n.readSync(h.dataId),[f,m]=yD(p,d,r,a,i,o,l,u);return[n.makeTensorInfo([f.length],"string",f),n.makeTensorInfo(h.shape,"int32",m)]}},ZB={kernelName:Bs,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{skipEmpty:r}=s,{input:a,delimiter:i}=t;if("string"!==a.dtype)throw new Error("Input must be of datatype string");if(1!==a.shape.length)throw new Error(`Input must be a vector, got shape: ${a.shape}`);if(0!==i.shape.length)throw new Error(`Delimiter must be a scalar, got shape: ${i.shape}`);const o=n.readSync(a.dataId),l=n.readSync(i.dataId)[0],[u,c,h]=bD(o,l,r),p=c.length;return[n.makeTensorInfo([p,2],"int32",u),n.makeTensorInfo([p],"string",c),n.makeTensorInfo([2],"int32",new Int32Array(h))]}},JB={kernelName:Ws,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{numBuckets:r}=s,{input:a}=t;if("string"!==a.dtype)throw new Error("Input must be of datatype string");if(r<=0)throw new Error("Number of buckets must be at least 1");const i=n.readSync(a.dataId),o=xD(i,r);return n.makeTensorInfo(a.shape,"int32",o)}},QB=eO({opSnippet:"return tan(x);"}),eW={kernelName:Us,backendName:"webgl",kernelFunc:QB},tW=eO({opSnippet:"\n  float e2x = exp(-2.0 * abs(x));\n  return sign(x) * (1.0 - e2x) / (1.0 + e2x);\n"}),nW={kernelName:Gs,backendName:"webgl",kernelFunc:tW};class sW{constructor(e,t){this.variableNames=["A"];const n=new Array(e.length);for(let s=0;s<n.length;s++)n[s]=e[s]*t[s];this.outputShape=n,this.rank=n.length;const s=gF(this.rank),r=function(e){const t=e.length;if(t>5)throw Error(`Tile for rank ${t} is not yet supported`);if(1===t)return`imod(resRC, ${e[0]})`;const n=["resRC.x","resRC.y","resRC.z","resRC.w","resRC.u"],s=[];for(let t=0;t<e.length;t++)s.push(`imod(${n[t]}, ${e[t]})`);return s.join()}(e);this.userCode=`\n      void main() {\n        ${s} resRC = getOutputCoords();\n        setOutput(getA(${r}));\n      }\n    `}}function rW(e){const{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{reps:a}=s;if("string"===r.dtype||r.shape.length>5){const e=n.readSync(r.dataId),t="string"===r.dtype?e.map((e=>zr(e))):e,s=$i(r.shape,r.dtype,t),i=wD(s,a);return n.makeTensorInfo(i.shape,i.dtype,i.values)}const i=new sW(r.shape,a);return n.runWebGLProgram(i,[r],r.dtype)}const aW={kernelName:Hs,backendName:"webgl",kernelFunc:rW};class iW{constructor(e){this.variableNames=["x","indices"],this.customUniforms=[{name:"n",type:"int"},{name:"firstPass",type:"int"},{name:"negativeInf",type:"float"},{name:"dir",type:"int"},{name:"inc",type:"int"}],this.outputShape=e,this.userCode="\n       void main() {\n         ivec2 coords = getOutputCoords();\n         int batch = coords[0];\n         int elemIdx = coords[1];\n\n         // We compare elements pair-wise within a group of size 2 * inc.\n         // The comparing rule for each group alternates between ascending\n         // and descending. Within each group, we compare each pair at\n         // positions i and i+inc. To decide whether an element at position i\n         // is x0 or x1, we mod it by 2 * inc, if the result is smaller than\n         // inc, it is in the first half of the group, we denote it as x0,\n         // otherwise we denote it as x1.\n         // For example, as shown in the Bitonic top K paper referenced above,\n         // Figure5(a) shows that element[1] is in the\n         // second half of the group when group size is 2, but it is in the\n         // first half of the group when group size is 4.\n\n         bool isFirstInPair = imod(elemIdx, 2 * inc) < inc;\n         int i = isFirstInPair ? elemIdx : elemIdx - inc;\n\n         int i0 = firstPass == 1 ? i : int(getIndices(batch, i));\n         int i1 = firstPass == 1 ? i + inc : int(getIndices(batch, i + inc));\n         float x0 = i0 < n ? getX(batch, i0) : negativeInf;\n         float x1 = i1 < n ? getX(batch, i1) : negativeInf;\n\n         // Denotes which direction indices are in (ascending or descending).\n         bool reverse = imod(elemIdx, 2 * dir) >= dir;\n         bool isGreater = x0 > x1 || (x0 == x1 && i1 > i0);\n         if (reverse == isGreater) { // Elements in opposite order of direction\n           int iTemp = i0;\n           i0 = i1;\n           i1 = iTemp;\n         }\n         if (isFirstInPair) {\n            setOutput(float(i0));\n         } else {\n            setOutput(float(i1));\n         }\n       }\n     "}}class oW{constructor(e){this.variableNames=["x","indices"],this.customUniforms=[{name:"n",type:"int"},{name:"firstPass",type:"int"},{name:"k",type:"int"}],this.outputShape=e,this.userCode="\n    void main() {\n         // Takes max of indices (0, k), (1, k + 1), (2, k + 2) ...\n         ivec2 coords = getOutputCoords();\n         int batch = coords[0];\n         int elemIdx = coords[1];\n\n         // The output size is half of the previous size.\n         // If the previous sequence is | | | | _ _ _ _  | | | |  _ _ _ _ (k=4),\n         // we only need to output the indices at positions |, the indices at\n         // positions _ can be thrown away, see Figure5(b) After Phase 2\n         // (Merge phase) in the Bitonic Top K paper referenced above.\n         // For example, the paper shows we only need to output the orange bars.\n         // The output sequence should look like this | | | | | | | |.\n         // Because the sequence is halved, to map the output index back\n         // to the previous sequence to find the corresponding value,\n         // we need to double the index. When we double the index,\n         // we basically interpolate a position, so 2i looks like\n         // | _ | _ | _ | _ | _ | _ | _. We move the | to the first k position\n         // of each 2k positions by - elemIdx % k. E.g. for output at\n         // index 4,5,6,7, we want to get the corresponding element at\n         // original index 8,9,10,11, for output at index 8,9,10,11,\n         // we want to get the corresponding element at original index\n         // 16,17,18,19, so on and so forth.\n\n         int i = elemIdx < k ? elemIdx : (elemIdx * 2 - imod(elemIdx, k));\n         int i0 = firstPass == 1 ? i : int(getIndices(batch, i));\n         int i1 = firstPass == 1 ? i + k : int(getIndices(batch, i + k));\n\n         float x0 = getX(batch, i0);\n         float x1 = i1 < n ? getX(batch, i1) : x0;\n\n         setOutput(x0 >= x1 ? float(i0) : float(i1));\n       }\n     "}}function lW(e,t){null!==t&&e.disposeIntermediateTensorInfo(t)}function uW(e){let t=1;for(;t<e;)t*=2;return t}const cW={kernelName:js,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{k:a,sorted:i}=s,o=He().getNumber("TOPK_LAST_DIM_CPU_HANDOFF_SIZE_THRESHOLD"),l=He().getNumber("TOPK_K_CPU_HANDOFF_THRESHOLD"),u=r.shape,c=u[u.length-1];if(n.shouldExecuteOnCPU([r])||c<o||a>l){const e=n.readSync(r.dataId),[t,s]=kD(e,u,r.dtype,a,i);return[n.makeTensorInfo(t.shape,t.dtype,t.values),n.makeTensorInfo(s.shape,s.dtype,s.values)]}if(0===a)return u[u.length-1]=0,[n.makeTensorInfo(u,r.dtype,[]),n.makeTensorInfo(u,"int32",[])];if(1===c)return[r,XL({attrs:{shape:u,dtype:"int32",value:0},backend:n})];const h=n.texData.get(r.dataId),p=null!==h&&h.isPacked,d=p?n.unpackTensor(r):r,f=oe(u)/c,m=lO({inputs:{x:d},attrs:{shape:[f,c]},backend:n});p&&lW(n,d);const g=uW(a),y=uW(c);let b=null;const x=()=>null===b?[m,m]:[m,b],v=(e,t,s)=>{const r=x(),a=new iW(s),i=[[c],[null===b?1:0],[Number.NEGATIVE_INFINITY],[e],[t]],o=b;b=n.runWebGLProgram(a,r,"int32",i),lW(n,o)};for(let e=1;e<g;e*=2){const t=2*e;for(let n=e;n>=1;n/=2)v(t,n,[f,y])}for(let e=y;e>g;e/=2){const t=x(),s=new oW([f,e/2]),r=[[c],[null===b?1:0],[g]],a=b;b=n.runWebGLProgram(s,t,"int32",r),lW(n,a);const i=g/2,o=2*i;for(let e=i;e>=1;e/=2)v(o,e,b.shape)}let w=b;b=fM({inputs:{x:b},backend:n,attrs:{begin:0,size:[f,a]}}),lW(n,w);let k=dz({inputs:{x:m,indices:b},backend:n,attrs:{axis:1,batchDims:1}});lW(n,m);const I=u.slice(0,-1);I.push(a),w=b,b=lO({inputs:{x:b},attrs:{shape:I},backend:n}),lW(n,w);const S=k;return k=lO({inputs:{x:k},attrs:{shape:I},backend:n}),lW(n,S),[k,b]}};class hW{constructor(e,t,n,s,r,a){this.variableNames=["Image","Transforms"],this.outputShape=a;const i="nearest"===n?1:2;let o;switch(s){case"constant":default:o=1;break;case"reflect":o=2;break;case"wrap":o=3;break;case"nearest":o=4}this.userCode=`\n            float mapCoord(float outCoord, float len) {\n              float inCoord = outCoord;\n              if(${o} == 2) {\n                if (inCoord < 0.0) {\n                  if (len <= 1.0) {\n                    inCoord = 0.0;\n                  } else {\n                    float sz2 = 2.0 * len;\n                    if (inCoord < sz2) {\n                      inCoord = sz2 * float(int(float(-inCoord / sz2))) +\n                      inCoord;\n                    }\n                    inCoord = inCoord < -len ? inCoord + sz2 : -inCoord - 1.0;\n                  }\n                } else if (inCoord > len - 1.0) {\n                  if (len <= 1.0) {\n                    inCoord = 0.0;\n                  } else {\n                    float sz2 = 2.0 * len;\n                    inCoord -= sz2 * float(int(float(inCoord / sz2)));\n                    if (inCoord >= len) {\n                      inCoord = sz2 - inCoord - 1.0;\n                    }\n                  }\n                }\n                return clamp(inCoord, 0.0, len - 1.0);\n              } else if (${o} == 3) {\n                if (inCoord < 0.0) {\n                  if (len <= 1.0) {\n                    inCoord = 0.0;\n                  } else {\n                    float sz = len - 1.0;\n                    inCoord += len * (float(int(float(-inCoord / sz))) + 1.0);\n                  }\n                } else if (inCoord > len - 1.0) {\n                  if (len <= 1.0) {\n                    inCoord = 0.0;\n                  } else {\n                    float sz = len - 1.0;\n                    inCoord -= len * float(int(float(inCoord / sz)));\n                  }\n                }\n                return clamp(inCoord, 0.0, len - 1.0);\n              } else if (${o} == 4) {\n                return clamp(outCoord, 0.0, len - 1.0);\n              } else {\n                return outCoord;\n              }\n            }\n\n            float readWithFillValue(int batch, int coordY, int coordX,\n              int channel) {\n              float outputValue;\n              if (0 <= coordY && coordY < ${e} && 0 <= coordX && coordX < ${t}) {\n                  outputValue = getImage(batch, coordY, coordX, channel);\n              } else {\n                outputValue = float(${r});\n              }\n              return outputValue;\n            }\n\n            void main() {\n              ivec4 coords = getOutputCoords();\n              float outputValue;\n              int batch = coords[0];\n              int x = coords[2];\n              int y = coords[1];\n              int channel = coords[3];\n              float xf = float(x);\n              float yf = float(y);\n              float a1 = getTransforms(batch, 0);\n              float a2 = getTransforms(batch, 1);\n              float a3 = getTransforms(batch, 2);\n              float b1 = getTransforms(batch, 3);\n              float b2 = getTransforms(batch, 4);\n              float b3 = getTransforms(batch, 5);\n              float c1 = getTransforms(batch, 6);\n              float c2 = getTransforms(batch, 7);\n              float projection = c1 * xf + c2 * yf + 1.0;\n              if (projection == 0.0) {\n                outputValue = float(${r});\n              } else {\n                float inX = (a1 * xf + a2 * yf + a3) / projection;\n                float inY = (b1 * xf + b2 * yf + b3) / projection;\n                float mapX = mapCoord(inX, float(${t}));\n                float mapY = mapCoord(inY, float(${e}));\n\n                if (${i} == 1) {\n                  int coordY = int(round(mapY));\n                  int coordX = int(round(mapX));\n                  outputValue = readWithFillValue(batch, coordY, coordX,\n                    channel);\n                } else {\n                  float yFloor = floor(mapY);\n                  float xFloor = floor(mapX);\n                  float yCeil = yFloor + 1.0;\n                  float xCeil = xFloor + 1.0;\n                  float valueYFloor = (xCeil - mapX) *\n                  readWithFillValue(batch, int(yFloor), int(xFloor), channel) +\n                  (mapX - xFloor) *\n                  readWithFillValue(batch, int(yFloor), int(xCeil), channel);\n                  float valueYCeil = (xCeil - mapX) *\n                  readWithFillValue(batch, int(yCeil), int(xFloor), channel) +\n                  (mapX - xFloor) *\n                  readWithFillValue(batch, int(yCeil), int(xCeil), channel);\n                  outputValue = (yCeil - mapY) * valueYFloor +\n                  (mapY - yFloor) * valueYCeil;\n                }\n              }\n              setOutput(outputValue);\n            }\n        `}}const pW={kernelName:qs,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{image:r,transforms:a}=t,{interpolation:i,fillMode:o,fillValue:l,outputShape:u}=s,[c,h,p,d]=r.shape,[f,m]=null!=u?u:[h,p],g=new hW(h,p,i,o,l,[c,f,m,d]);return n.runWebGLProgram(g,[r,a],"float32")}},dW={kernelName:Xs,backendName:"webgl",kernelFunc:function(e){const{inputs:t,attrs:n,backend:s}=e,{axis:r}=n,{x:a}=t;QR(a,"unique"),console.warn("WARNING: ","UI might be locked temporarily as data is being downloaded");const i=s.readSync(a.dataId),{outputValues:o,outputShape:l,indices:u}=SD(i,r,a.shape,a.dtype);return[s.makeTensorInfo(l,a.dtype,o),s.makeTensorInfo([u.length],"int32",u)]}},fW={kernelName:Ys,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{value:r}=t;let{axis:a}=s;a<0&&(a+=r.shape.length);const i=r,o=i.shape.length,l=r.shape[a],u=new Array(o-1);let c=0;for(let e=0;e<o;e++)e!==a&&(u[c++]=i.shape[e]);const h=[],p=new Array(o).fill(0),d=i.shape.slice();d[a]=1;const f=new Array(l);for(let e=0;e<f.length;e++){p[a]=e;const t=fM({inputs:{x:i},backend:n,attrs:{begin:p,size:d}}),s=lO({inputs:{x:t},backend:n,attrs:{shape:u}});f[e]=s,h.push(t)}return h.forEach((e=>n.disposeIntermediateTensorInfo(e))),f}};class mW{constructor(e,t){this.variableNames=["x","segmentIds"];const n=e.windowSize,s=e.batchSize,r=e.inSize,a=e.numSegments,i=a*Math.ceil(r/n);this.outputShape=[s,i];const o=4*Math.floor(n/4),l=n%4,u="\n        sumValue += dot(values, segFilter);\n    ";let c="";r%n>0&&(c=`\n        if (inIdx < 0 || inIdx >= ${r}) {\n          return initializationValue;\n        }\n      `);let h="";r%n>0&&(h=`\n        if (inIdx < 0 || inIdx >= ${r}) {\n          return -1.0;\n        }\n      `),this.userCode=`\n      const float initializationValue = 0.0;\n\n      float getValue(int batch, int inIdx) {\n        ${c}\n        return getX(batch, inIdx);\n      }\n\n      float getSegmentIdAtIndex(int inIdx) {\n        ${h}\n        return getSegmentIds(inIdx);\n      }\n\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n        int outIdx = coords[1];\n        int inOffset = int(floor(float(outIdx) / float(\n          ${a})) * float(${n}));\n        int currentSeg = int(mod(float(outIdx), float(${a})));\n\n        float sumValue = 0.0;\n\n        for (int i = 0; i < ${o}; i += 4) {\n          int inIdx = inOffset + i;\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            getValue(batch, inIdx + 3)\n          );\n\n          vec4 segFilter = vec4(\n            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 2)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 3)) == currentSeg ? 1 : 0\n          );\n\n          ${u}\n        }\n\n        int inIdx = inOffset + ${o};\n        if (${1===l}) {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            initializationValue,\n            initializationValue,\n            initializationValue\n          );\n\n          int inIdxSeg = int(getSegmentIdAtIndex(inIdx));\n\n          vec4 segFilter = vec4(\n            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,\n            0,\n            0,\n            0\n          );\n\n          ${u}\n        } else if (${2===l}) {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            initializationValue,\n            initializationValue\n          );\n\n          vec4 segFilter = vec4(\n            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,\n              0,\n              0\n          );\n\n          ${u}\n        } else if (${3===l}) {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            initializationValue\n          );\n\n          vec4 segFilter = vec4(\n            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 2)) == currentSeg ? 1 : 0,\n            0\n          );\n\n          ${u}\n        }\n        setOutput(sumValue);\n      }\n    `}}const gW={kernelName:Zs,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:r,segmentIds:a}=t,{numSegments:i}=s,o=r.shape.length,l=[];let u=0;const c=uc([u],o);let h=r;null!=c&&(h=bO({inputs:{x:r},backend:n,attrs:{perm:c}}),l.push(h),u=hc(1,o)[0]);const p=zf(h.shape,u,i),d=oe([h.shape[u]]),f=lO({inputs:{x:h},backend:n,attrs:{shape:[-1,d]}});l.push(f);const m=oa(r.dtype),g=(e,t,s,r,a)=>{const i=e.shape[0],o=e.shape[1],u=Lf(o,a),c=new mW({windowSize:u,inSize:o,batchSize:i,numSegments:a},t),h=n.compileAndRun(c,[e,s],r);if(l.push(h),h.shape[1]===a)return h;const p=WP({backend:n,attrs:{start:0,stop:a,step:1,dtype:"float32"}}),d=rW({inputs:{x:p},backend:n,attrs:{reps:[o/u]}});return l.push(p),l.push(d),g(h,t,d,r,a)},y=lO({inputs:{x:g(f,"unsortedSegmentSum",a,m,i)},backend:n,attrs:{shape:p}});let b=y;if(null!=c){l.push(y);const e=cc(c);b=bO({inputs:{x:b},backend:n,attrs:{perm:e}})}return l.forEach((e=>n.disposeIntermediateTensorInfo(e))),b}},yW=[wO,IO,NO,CO,AO,FO,DO,OO,WO,VO,GO,jO,KO,YO,JO,tM,nM,aM,iM,oM,cM,gM,yM,bM,IM,TM,EM,qD,RM,BM,qM,JM,QM,eL,tL,nL,rL,iL,lL,fL,mL,gL,bL,wL,SL,NL,CL,EL,AL,RL,FL,OL,LL,PL,WL,GL,qL,YL,JL,tz,sz,iz,lz,uz,hz,fz,gz,bz,HD,xz,LM,wz,Iz,Nz,YD,Cz,Ez,Az,Rz,Dz,Mz,zz,Bz,Uz,Hz,qz,Xz,Yz,Zz,eP,tP,nP,sP,rP,iP,uP,hP,vP,oO,wP,IP,NP,CP,vM,EP,RP,FP,LP,PP,QD,BP,VP,kM,fP,GP,jP,KP,uO,ZP,QP,nB,rB,oB,uB,hB,dB,mB,yB,xB,wB,IB,NB,CB,EB,mM,xP,_B,RB,FB,DB,OB,MB,LB,zB,WB,UB,jB,qB,XB,YB,ZB,JB,yP,yO,eW,nW,aW,cW,pW,xO,dW,fW,gW,_P];for(const e of yW)dr(e);const bW={"tfjs-core":Go,"tfjs-backend-cpu":"3.17.0","tfjs-backend-webgl":"3.17.0","tfjs-data":lT,"tfjs-layers":Ix,"tfjs-converter":eN,tfjs:"3.17.0"}},720:e=>{e.exports=n;var t=null;try{t=new WebAssembly.Instance(new WebAssembly.Module(new Uint8Array([0,97,115,109,1,0,0,0,1,13,2,96,0,1,127,96,4,127,127,127,127,1,127,3,7,6,0,1,1,1,1,1,6,6,1,127,1,65,0,11,7,50,6,3,109,117,108,0,1,5,100,105,118,95,115,0,2,5,100,105,118,95,117,0,3,5,114,101,109,95,115,0,4,5,114,101,109,95,117,0,5,8,103,101,116,95,104,105,103,104,0,0,10,191,1,6,4,0,35,0,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,126,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,127,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,128,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,129,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,130,34,4,66,32,135,167,36,0,32,4,167,11])),{}).exports}catch(e){}function n(e,t,n){this.low=0|e,this.high=0|t,this.unsigned=!!n}function s(e){return!0===(e&&e.__isLong__)}n.prototype.__isLong__,Object.defineProperty(n.prototype,"__isLong__",{value:!0}),n.isLong=s;var r={},a={};function i(e,t){var n,s,i;return t?(i=0<=(e>>>=0)&&e<256)&&(s=a[e])?s:(n=l(e,(0|e)<0?-1:0,!0),i&&(a[e]=n),n):(i=-128<=(e|=0)&&e<128)&&(s=r[e])?s:(n=l(e,e<0?-1:0,!1),i&&(r[e]=n),n)}function o(e,t){if(isNaN(e))return t?y:g;if(t){if(e<0)return y;if(e>=d)return k}else{if(e<=-f)return I;if(e+1>=f)return w}return e<0?o(-e,t).neg():l(e%p|0,e/p|0,t)}function l(e,t,s){return new n(e,t,s)}n.fromInt=i,n.fromNumber=o,n.fromBits=l;var u=Math.pow;function c(e,t,n){if(0===e.length)throw Error("empty string");if("NaN"===e||"Infinity"===e||"+Infinity"===e||"-Infinity"===e)return g;if("number"==typeof t?(n=t,t=!1):t=!!t,(n=n||10)<2||36<n)throw RangeError("radix");var s;if((s=e.indexOf("-"))>0)throw Error("interior hyphen");if(0===s)return c(e.substring(1),t,n).neg();for(var r=o(u(n,8)),a=g,i=0;i<e.length;i+=8){var l=Math.min(8,e.length-i),h=parseInt(e.substring(i,i+l),n);if(l<8){var p=o(u(n,l));a=a.mul(p).add(o(h))}else a=(a=a.mul(r)).add(o(h))}return a.unsigned=t,a}function h(e,t){return"number"==typeof e?o(e,t):"string"==typeof e?c(e,t):l(e.low,e.high,"boolean"==typeof t?t:e.unsigned)}n.fromString=c,n.fromValue=h;var p=4294967296,d=p*p,f=d/2,m=i(1<<24),g=i(0);n.ZERO=g;var y=i(0,!0);n.UZERO=y;var b=i(1);n.ONE=b;var x=i(1,!0);n.UONE=x;var v=i(-1);n.NEG_ONE=v;var w=l(-1,2147483647,!1);n.MAX_VALUE=w;var k=l(-1,-1,!0);n.MAX_UNSIGNED_VALUE=k;var I=l(0,-2147483648,!1);n.MIN_VALUE=I;var S=n.prototype;S.toInt=function(){return this.unsigned?this.low>>>0:this.low},S.toNumber=function(){return this.unsigned?(this.high>>>0)*p+(this.low>>>0):this.high*p+(this.low>>>0)},S.toString=function(e){if((e=e||10)<2||36<e)throw RangeError("radix");if(this.isZero())return"0";if(this.isNegative()){if(this.eq(I)){var t=o(e),n=this.div(t),s=n.mul(t).sub(this);return n.toString(e)+s.toInt().toString(e)}return"-"+this.neg().toString(e)}for(var r=o(u(e,6),this.unsigned),a=this,i="";;){var l=a.div(r),c=(a.sub(l.mul(r)).toInt()>>>0).toString(e);if((a=l).isZero())return c+i;for(;c.length<6;)c="0"+c;i=""+c+i}},S.getHighBits=function(){return this.high},S.getHighBitsUnsigned=function(){return this.high>>>0},S.getLowBits=function(){return this.low},S.getLowBitsUnsigned=function(){return this.low>>>0},S.getNumBitsAbs=function(){if(this.isNegative())return this.eq(I)?64:this.neg().getNumBitsAbs();for(var e=0!=this.high?this.high:this.low,t=31;t>0&&0==(e&1<<t);t--);return 0!=this.high?t+33:t+1},S.isZero=function(){return 0===this.high&&0===this.low},S.eqz=S.isZero,S.isNegative=function(){return!this.unsigned&&this.high<0},S.isPositive=function(){return this.unsigned||this.high>=0},S.isOdd=function(){return 1==(1&this.low)},S.isEven=function(){return 0==(1&this.low)},S.equals=function(e){return s(e)||(e=h(e)),(this.unsigned===e.unsigned||this.high>>>31!=1||e.high>>>31!=1)&&this.high===e.high&&this.low===e.low},S.eq=S.equals,S.notEquals=function(e){return!this.eq(e)},S.neq=S.notEquals,S.ne=S.notEquals,S.lessThan=function(e){return this.comp(e)<0},S.lt=S.lessThan,S.lessThanOrEqual=function(e){return this.comp(e)<=0},S.lte=S.lessThanOrEqual,S.le=S.lessThanOrEqual,S.greaterThan=function(e){return this.comp(e)>0},S.gt=S.greaterThan,S.greaterThanOrEqual=function(e){return this.comp(e)>=0},S.gte=S.greaterThanOrEqual,S.ge=S.greaterThanOrEqual,S.compare=function(e){if(s(e)||(e=h(e)),this.eq(e))return 0;var t=this.isNegative(),n=e.isNegative();return t&&!n?-1:!t&&n?1:this.unsigned?e.high>>>0>this.high>>>0||e.high===this.high&&e.low>>>0>this.low>>>0?-1:1:this.sub(e).isNegative()?-1:1},S.comp=S.compare,S.negate=function(){return!this.unsigned&&this.eq(I)?I:this.not().add(b)},S.neg=S.negate,S.add=function(e){s(e)||(e=h(e));var t=this.high>>>16,n=65535&this.high,r=this.low>>>16,a=65535&this.low,i=e.high>>>16,o=65535&e.high,u=e.low>>>16,c=0,p=0,d=0,f=0;return d+=(f+=a+(65535&e.low))>>>16,p+=(d+=r+u)>>>16,c+=(p+=n+o)>>>16,c+=t+i,l((d&=65535)<<16|(f&=65535),(c&=65535)<<16|(p&=65535),this.unsigned)},S.subtract=function(e){return s(e)||(e=h(e)),this.add(e.neg())},S.sub=S.subtract,S.multiply=function(e){if(this.isZero())return g;if(s(e)||(e=h(e)),t)return l(t.mul(this.low,this.high,e.low,e.high),t.get_high(),this.unsigned);if(e.isZero())return g;if(this.eq(I))return e.isOdd()?I:g;if(e.eq(I))return this.isOdd()?I:g;if(this.isNegative())return e.isNegative()?this.neg().mul(e.neg()):this.neg().mul(e).neg();if(e.isNegative())return this.mul(e.neg()).neg();if(this.lt(m)&&e.lt(m))return o(this.toNumber()*e.toNumber(),this.unsigned);var n=this.high>>>16,r=65535&this.high,a=this.low>>>16,i=65535&this.low,u=e.high>>>16,c=65535&e.high,p=e.low>>>16,d=65535&e.low,f=0,y=0,b=0,x=0;return b+=(x+=i*d)>>>16,y+=(b+=a*d)>>>16,b&=65535,y+=(b+=i*p)>>>16,f+=(y+=r*d)>>>16,y&=65535,f+=(y+=a*p)>>>16,y&=65535,f+=(y+=i*c)>>>16,f+=n*d+r*p+a*c+i*u,l((b&=65535)<<16|(x&=65535),(f&=65535)<<16|(y&=65535),this.unsigned)},S.mul=S.multiply,S.divide=function(e){if(s(e)||(e=h(e)),e.isZero())throw Error("division by zero");var n,r,a;if(t)return this.unsigned||-2147483648!==this.high||-1!==e.low||-1!==e.high?l((this.unsigned?t.div_u:t.div_s)(this.low,this.high,e.low,e.high),t.get_high(),this.unsigned):this;if(this.isZero())return this.unsigned?y:g;if(this.unsigned){if(e.unsigned||(e=e.toUnsigned()),e.gt(this))return y;if(e.gt(this.shru(1)))return x;a=y}else{if(this.eq(I))return e.eq(b)||e.eq(v)?I:e.eq(I)?b:(n=this.shr(1).div(e).shl(1)).eq(g)?e.isNegative()?b:v:(r=this.sub(e.mul(n)),a=n.add(r.div(e)));if(e.eq(I))return this.unsigned?y:g;if(this.isNegative())return e.isNegative()?this.neg().div(e.neg()):this.neg().div(e).neg();if(e.isNegative())return this.div(e.neg()).neg();a=g}for(r=this;r.gte(e);){n=Math.max(1,Math.floor(r.toNumber()/e.toNumber()));for(var i=Math.ceil(Math.log(n)/Math.LN2),c=i<=48?1:u(2,i-48),p=o(n),d=p.mul(e);d.isNegative()||d.gt(r);)d=(p=o(n-=c,this.unsigned)).mul(e);p.isZero()&&(p=b),a=a.add(p),r=r.sub(d)}return a},S.div=S.divide,S.modulo=function(e){return s(e)||(e=h(e)),t?l((this.unsigned?t.rem_u:t.rem_s)(this.low,this.high,e.low,e.high),t.get_high(),this.unsigned):this.sub(this.div(e).mul(e))},S.mod=S.modulo,S.rem=S.modulo,S.not=function(){return l(~this.low,~this.high,this.unsigned)},S.and=function(e){return s(e)||(e=h(e)),l(this.low&e.low,this.high&e.high,this.unsigned)},S.or=function(e){return s(e)||(e=h(e)),l(this.low|e.low,this.high|e.high,this.unsigned)},S.xor=function(e){return s(e)||(e=h(e)),l(this.low^e.low,this.high^e.high,this.unsigned)},S.shiftLeft=function(e){return s(e)&&(e=e.toInt()),0==(e&=63)?this:e<32?l(this.low<<e,this.high<<e|this.low>>>32-e,this.unsigned):l(0,this.low<<e-32,this.unsigned)},S.shl=S.shiftLeft,S.shiftRight=function(e){return s(e)&&(e=e.toInt()),0==(e&=63)?this:e<32?l(this.low>>>e|this.high<<32-e,this.high>>e,this.unsigned):l(this.high>>e-32,this.high>=0?0:-1,this.unsigned)},S.shr=S.shiftRight,S.shiftRightUnsigned=function(e){if(s(e)&&(e=e.toInt()),0==(e&=63))return this;var t=this.high;return e<32?l(this.low>>>e|t<<32-e,t>>>e,this.unsigned):l(32===e?t:t>>>e-32,0,this.unsigned)},S.shru=S.shiftRightUnsigned,S.shr_u=S.shiftRightUnsigned,S.toSigned=function(){return this.unsigned?l(this.low,this.high,!1):this},S.toUnsigned=function(){return this.unsigned?this:l(this.low,this.high,!0)},S.toBytes=function(e){return e?this.toBytesLE():this.toBytesBE()},S.toBytesLE=function(){var e=this.high,t=this.low;return[255&t,t>>>8&255,t>>>16&255,t>>>24,255&e,e>>>8&255,e>>>16&255,e>>>24]},S.toBytesBE=function(){var e=this.high,t=this.low;return[e>>>24,e>>>16&255,e>>>8&255,255&e,t>>>24,t>>>16&255,t>>>8&255,255&t]},n.fromBytes=function(e,t,s){return s?n.fromBytesLE(e,t):n.fromBytesBE(e,t)},n.fromBytesLE=function(e,t){return new n(e[0]|e[1]<<8|e[2]<<16|e[3]<<24,e[4]|e[5]<<8|e[6]<<16|e[7]<<24,t)},n.fromBytesBE=function(e,t){return new n(e[4]<<24|e[5]<<16|e[6]<<8|e[7],e[0]<<24|e[1]<<16|e[2]<<8|e[3],t)}},842:function(e,t,n){var s;s=function(){return function(e){var t={};function n(s){if(t[s])return t[s].exports;var r=t[s]={i:s,l:!1,exports:{}};return e[s].call(r.exports,r,r.exports,n),r.l=!0,r.exports}return n.m=e,n.c=t,n.d=function(e,t,s){n.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:s})},n.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},n.t=function(e,t){if(1&t&&(e=n(e)),8&t)return e;if(4&t&&"object"==typeof e&&e&&e.__esModule)return e;var s=Object.create(null);if(n.r(s),Object.defineProperty(s,"default",{enumerable:!0,value:e}),2&t&&"string"!=typeof e)for(var r in e)n.d(s,r,function(t){return e[t]}.bind(null,r));return s},n.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return n.d(t,"a",t),t},n.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},n.p="",n(n.s=21)}([function(e,t){var s={};e.exports=s,function(){s._nextId=0,s._seed=0,s._nowStartTime=+new Date,s._warnedOnce={},s._decomp=null,s.extend=function(e,t){var n,r;"boolean"==typeof t?(n=2,r=t):(n=1,r=!0);for(var a=n;a<arguments.length;a++){var i=arguments[a];if(i)for(var o in i)r&&i[o]&&i[o].constructor===Object?e[o]&&e[o].constructor!==Object?e[o]=i[o]:(e[o]=e[o]||{},s.extend(e[o],r,i[o])):e[o]=i[o]}return e},s.clone=function(e,t){return s.extend({},t,e)},s.keys=function(e){if(Object.keys)return Object.keys(e);var t=[];for(var n in e)t.push(n);return t},s.values=function(e){var t=[];if(Object.keys){for(var n=Object.keys(e),s=0;s<n.length;s++)t.push(e[n[s]]);return t}for(var r in e)t.push(e[r]);return t},s.get=function(e,t,n,s){t=t.split(".").slice(n,s);for(var r=0;r<t.length;r+=1)e=e[t[r]];return e},s.set=function(e,t,n,r,a){var i=t.split(".").slice(r,a);return s.get(e,t,0,-1)[i[i.length-1]]=n,n},s.shuffle=function(e){for(var t=e.length-1;t>0;t--){var n=Math.floor(s.random()*(t+1)),r=e[t];e[t]=e[n],e[n]=r}return e},s.choose=function(e){return e[Math.floor(s.random()*e.length)]},s.isElement=function(e){return"undefined"!=typeof HTMLElement?e instanceof HTMLElement:!!(e&&e.nodeType&&e.nodeName)},s.isArray=function(e){return"[object Array]"===Object.prototype.toString.call(e)},s.isFunction=function(e){return"function"==typeof e},s.isPlainObject=function(e){return"object"==typeof e&&e.constructor===Object},s.isString=function(e){return"[object String]"===toString.call(e)},s.clamp=function(e,t,n){return e<t?t:e>n?n:e},s.sign=function(e){return e<0?-1:1},s.now=function(){if("undefined"!=typeof window&&window.performance){if(window.performance.now)return window.performance.now();if(window.performance.webkitNow)return window.performance.webkitNow()}return Date.now?Date.now():new Date-s._nowStartTime},s.random=function(t,n){return n=void 0!==n?n:1,(t=void 0!==t?t:0)+e()*(n-t)};var e=function(){return s._seed=(9301*s._seed+49297)%233280,s._seed/233280};s.colorToNumber=function(e){return 3==(e=e.replace("#","")).length&&(e=e.charAt(0)+e.charAt(0)+e.charAt(1)+e.charAt(1)+e.charAt(2)+e.charAt(2)),parseInt(e,16)},s.logLevel=1,s.log=function(){console&&s.logLevel>0&&s.logLevel<=3&&console.log.apply(console,["matter-js:"].concat(Array.prototype.slice.call(arguments)))},s.info=function(){console&&s.logLevel>0&&s.logLevel<=2&&console.info.apply(console,["matter-js:"].concat(Array.prototype.slice.call(arguments)))},s.warn=function(){console&&s.logLevel>0&&s.logLevel<=3&&console.warn.apply(console,["matter-js:"].concat(Array.prototype.slice.call(arguments)))},s.warnOnce=function(){var e=Array.prototype.slice.call(arguments).join(" ");s._warnedOnce[e]||(s.warn(e),s._warnedOnce[e]=!0)},s.deprecated=function(e,t,n){e[t]=s.chain((function(){s.warnOnce("🔅 deprecated 🔅",n)}),e[t])},s.nextId=function(){return s._nextId++},s.indexOf=function(e,t){if(e.indexOf)return e.indexOf(t);for(var n=0;n<e.length;n++)if(e[n]===t)return n;return-1},s.map=function(e,t){if(e.map)return e.map(t);for(var n=[],s=0;s<e.length;s+=1)n.push(t(e[s]));return n},s.topologicalSort=function(e){var t=[],n=[],r=[];for(var a in e)n[a]||r[a]||s._topologicalSort(a,n,r,e,t);return t},s._topologicalSort=function(e,t,n,r,a){var i=r[e]||[];n[e]=!0;for(var o=0;o<i.length;o+=1){var l=i[o];n[l]||t[l]||s._topologicalSort(l,t,n,r,a)}n[e]=!1,t[e]=!0,a.push(e)},s.chain=function(){for(var e=[],t=0;t<arguments.length;t+=1){var n=arguments[t];n._chained?e.push.apply(e,n._chained):e.push(n)}var s=function(){for(var t,n=new Array(arguments.length),s=0,r=arguments.length;s<r;s++)n[s]=arguments[s];for(s=0;s<e.length;s+=1){var a=e[s].apply(t,n);void 0!==a&&(t=a)}return t};return s._chained=e,s},s.chainPathBefore=function(e,t,n){return s.set(e,t,s.chain(n,s.get(e,t)))},s.chainPathAfter=function(e,t,n){return s.set(e,t,s.chain(s.get(e,t),n))},s.setDecomp=function(e){s._decomp=e},s.getDecomp=function(){var e=s._decomp;try{e||"undefined"==typeof window||(e=window.decomp),e||void 0===n.g||(e=n.g.decomp)}catch(t){e=null}return e}}()},function(e,t){var n={};e.exports=n,n.create=function(e){var t={min:{x:0,y:0},max:{x:0,y:0}};return e&&n.update(t,e),t},n.update=function(e,t,n){e.min.x=1/0,e.max.x=-1/0,e.min.y=1/0,e.max.y=-1/0;for(var s=0;s<t.length;s++){var r=t[s];r.x>e.max.x&&(e.max.x=r.x),r.x<e.min.x&&(e.min.x=r.x),r.y>e.max.y&&(e.max.y=r.y),r.y<e.min.y&&(e.min.y=r.y)}n&&(n.x>0?e.max.x+=n.x:e.min.x+=n.x,n.y>0?e.max.y+=n.y:e.min.y+=n.y)},n.contains=function(e,t){return t.x>=e.min.x&&t.x<=e.max.x&&t.y>=e.min.y&&t.y<=e.max.y},n.overlaps=function(e,t){return e.min.x<=t.max.x&&e.max.x>=t.min.x&&e.max.y>=t.min.y&&e.min.y<=t.max.y},n.translate=function(e,t){e.min.x+=t.x,e.max.x+=t.x,e.min.y+=t.y,e.max.y+=t.y},n.shift=function(e,t){var n=e.max.x-e.min.x,s=e.max.y-e.min.y;e.min.x=t.x,e.max.x=t.x+n,e.min.y=t.y,e.max.y=t.y+s}},function(e,t){var n={};e.exports=n,n.create=function(e,t){return{x:e||0,y:t||0}},n.clone=function(e){return{x:e.x,y:e.y}},n.magnitude=function(e){return Math.sqrt(e.x*e.x+e.y*e.y)},n.magnitudeSquared=function(e){return e.x*e.x+e.y*e.y},n.rotate=function(e,t,n){var s=Math.cos(t),r=Math.sin(t);n||(n={});var a=e.x*s-e.y*r;return n.y=e.x*r+e.y*s,n.x=a,n},n.rotateAbout=function(e,t,n,s){var r=Math.cos(t),a=Math.sin(t);s||(s={});var i=n.x+((e.x-n.x)*r-(e.y-n.y)*a);return s.y=n.y+((e.x-n.x)*a+(e.y-n.y)*r),s.x=i,s},n.normalise=function(e){var t=n.magnitude(e);return 0===t?{x:0,y:0}:{x:e.x/t,y:e.y/t}},n.dot=function(e,t){return e.x*t.x+e.y*t.y},n.cross=function(e,t){return e.x*t.y-e.y*t.x},n.cross3=function(e,t,n){return(t.x-e.x)*(n.y-e.y)-(t.y-e.y)*(n.x-e.x)},n.add=function(e,t,n){return n||(n={}),n.x=e.x+t.x,n.y=e.y+t.y,n},n.sub=function(e,t,n){return n||(n={}),n.x=e.x-t.x,n.y=e.y-t.y,n},n.mult=function(e,t){return{x:e.x*t,y:e.y*t}},n.div=function(e,t){return{x:e.x/t,y:e.y/t}},n.perp=function(e,t){return{x:(t=!0===t?-1:1)*-e.y,y:t*e.x}},n.neg=function(e){return{x:-e.x,y:-e.y}},n.angle=function(e,t){return Math.atan2(t.y-e.y,t.x-e.x)},n._temp=[n.create(),n.create(),n.create(),n.create(),n.create(),n.create()]},function(e,t,n){var s={};e.exports=s;var r=n(2),a=n(0);s.create=function(e,t){for(var n=[],s=0;s<e.length;s++){var r=e[s],a={x:r.x,y:r.y,index:s,body:t,isInternal:!1};n.push(a)}return n},s.fromPath=function(e,t){var n=[];return e.replace(/L?\s*([-\d.e]+)[\s,]*([-\d.e]+)*/gi,(function(e,t,s){n.push({x:parseFloat(t),y:parseFloat(s)})})),s.create(n,t)},s.centre=function(e){for(var t,n,a,i=s.area(e,!0),o={x:0,y:0},l=0;l<e.length;l++)a=(l+1)%e.length,t=r.cross(e[l],e[a]),n=r.mult(r.add(e[l],e[a]),t),o=r.add(o,n);return r.div(o,6*i)},s.mean=function(e){for(var t={x:0,y:0},n=0;n<e.length;n++)t.x+=e[n].x,t.y+=e[n].y;return r.div(t,e.length)},s.area=function(e,t){for(var n=0,s=e.length-1,r=0;r<e.length;r++)n+=(e[s].x-e[r].x)*(e[s].y+e[r].y),s=r;return t?n/2:Math.abs(n)/2},s.inertia=function(e,t){for(var n,s,a=0,i=0,o=e,l=0;l<o.length;l++)s=(l+1)%o.length,a+=(n=Math.abs(r.cross(o[s],o[l])))*(r.dot(o[s],o[s])+r.dot(o[s],o[l])+r.dot(o[l],o[l])),i+=n;return t/6*(a/i)},s.translate=function(e,t,n){n=void 0!==n?n:1;var s,r=e.length,a=t.x*n,i=t.y*n;for(s=0;s<r;s++)e[s].x+=a,e[s].y+=i;return e},s.rotate=function(e,t,n){if(0!==t){var s,r,a,i,o=Math.cos(t),l=Math.sin(t),u=n.x,c=n.y,h=e.length;for(i=0;i<h;i++)r=(s=e[i]).x-u,a=s.y-c,s.x=u+(r*o-a*l),s.y=c+(r*l+a*o);return e}},s.contains=function(e,t){for(var n,s=t.x,r=t.y,a=e.length,i=e[a-1],o=0;o<a;o++){if(n=e[o],(s-i.x)*(n.y-i.y)+(r-i.y)*(i.x-n.x)>0)return!1;i=n}return!0},s.scale=function(e,t,n,a){if(1===t&&1===n)return e;var i,o;a=a||s.centre(e);for(var l=0;l<e.length;l++)i=e[l],o=r.sub(i,a),e[l].x=a.x+o.x*t,e[l].y=a.y+o.y*n;return e},s.chamfer=function(e,t,n,s,i){t="number"==typeof t?[t]:t||[8],n=void 0!==n?n:-1,s=s||2,i=i||14;for(var o=[],l=0;l<e.length;l++){var u=e[l-1>=0?l-1:e.length-1],c=e[l],h=e[(l+1)%e.length],p=t[l<t.length?l:t.length-1];if(0!==p){var d=r.normalise({x:c.y-u.y,y:u.x-c.x}),f=r.normalise({x:h.y-c.y,y:c.x-h.x}),m=Math.sqrt(2*Math.pow(p,2)),g=r.mult(a.clone(d),p),y=r.normalise(r.mult(r.add(d,f),.5)),b=r.sub(c,r.mult(y,m)),x=n;-1===n&&(x=1.75*Math.pow(p,.32)),(x=a.clamp(x,s,i))%2==1&&(x+=1);for(var v=Math.acos(r.dot(d,f))/x,w=0;w<x;w++)o.push(r.add(r.rotate(g,v*w),b))}else o.push(c)}return o},s.clockwiseSort=function(e){var t=s.mean(e);return e.sort((function(e,n){return r.angle(t,e)-r.angle(t,n)})),e},s.isConvex=function(e){var t,n,s,r,a=0,i=e.length;if(i<3)return null;for(t=0;t<i;t++)if(s=(t+2)%i,r=(e[n=(t+1)%i].x-e[t].x)*(e[s].y-e[n].y),(r-=(e[n].y-e[t].y)*(e[s].x-e[n].x))<0?a|=1:r>0&&(a|=2),3===a)return!1;return 0!==a||null},s.hull=function(e){var t,n,s=[],a=[];for((e=e.slice(0)).sort((function(e,t){var n=e.x-t.x;return 0!==n?n:e.y-t.y})),n=0;n<e.length;n+=1){for(t=e[n];a.length>=2&&r.cross3(a[a.length-2],a[a.length-1],t)<=0;)a.pop();a.push(t)}for(n=e.length-1;n>=0;n-=1){for(t=e[n];s.length>=2&&r.cross3(s[s.length-2],s[s.length-1],t)<=0;)s.pop();s.push(t)}return s.pop(),a.pop(),s.concat(a)}},function(e,t,n){var s={};e.exports=s;var r=n(0);s.on=function(e,t,n){for(var s,r=t.split(" "),a=0;a<r.length;a++)s=r[a],e.events=e.events||{},e.events[s]=e.events[s]||[],e.events[s].push(n);return n},s.off=function(e,t,n){if(t){"function"==typeof t&&(n=t,t=r.keys(e.events).join(" "));for(var s=t.split(" "),a=0;a<s.length;a++){var i=e.events[s[a]],o=[];if(n&&i)for(var l=0;l<i.length;l++)i[l]!==n&&o.push(i[l]);e.events[s[a]]=o}}else e.events={}},s.trigger=function(e,t,n){var s,a,i,o,l=e.events;if(l&&r.keys(l).length>0){n||(n={}),s=t.split(" ");for(var u=0;u<s.length;u++)if(i=l[a=s[u]]){(o=r.clone(n,!1)).name=a,o.source=e;for(var c=0;c<i.length;c++)i[c].apply(e,[o])}}}},function(e,t,n){var s={};e.exports=s;var r=n(4),a=n(0),i=n(1),o=n(6);s.create=function(e){return a.extend({id:a.nextId(),type:"composite",parent:null,isModified:!1,bodies:[],constraints:[],composites:[],label:"Composite",plugin:{},cache:{allBodies:null,allConstraints:null,allComposites:null}},e)},s.setModified=function(e,t,n,r){if(e.isModified=t,t&&e.cache&&(e.cache.allBodies=null,e.cache.allConstraints=null,e.cache.allComposites=null),n&&e.parent&&s.setModified(e.parent,t,n,r),r)for(var a=0;a<e.composites.length;a++){var i=e.composites[a];s.setModified(i,t,n,r)}},s.add=function(e,t){var n=[].concat(t);r.trigger(e,"beforeAdd",{object:t});for(var i=0;i<n.length;i++){var o=n[i];switch(o.type){case"body":if(o.parent!==o){a.warn("Composite.add: skipped adding a compound body part (you must add its parent instead)");break}s.addBody(e,o);break;case"constraint":s.addConstraint(e,o);break;case"composite":s.addComposite(e,o);break;case"mouseConstraint":s.addConstraint(e,o.constraint)}}return r.trigger(e,"afterAdd",{object:t}),e},s.remove=function(e,t,n){var a=[].concat(t);r.trigger(e,"beforeRemove",{object:t});for(var i=0;i<a.length;i++){var o=a[i];switch(o.type){case"body":s.removeBody(e,o,n);break;case"constraint":s.removeConstraint(e,o,n);break;case"composite":s.removeComposite(e,o,n);break;case"mouseConstraint":s.removeConstraint(e,o.constraint)}}return r.trigger(e,"afterRemove",{object:t}),e},s.addComposite=function(e,t){return e.composites.push(t),t.parent=e,s.setModified(e,!0,!0,!1),e},s.removeComposite=function(e,t,n){var r=a.indexOf(e.composites,t);if(-1!==r&&s.removeCompositeAt(e,r),n)for(var i=0;i<e.composites.length;i++)s.removeComposite(e.composites[i],t,!0);return e},s.removeCompositeAt=function(e,t){return e.composites.splice(t,1),s.setModified(e,!0,!0,!1),e},s.addBody=function(e,t){return e.bodies.push(t),s.setModified(e,!0,!0,!1),e},s.removeBody=function(e,t,n){var r=a.indexOf(e.bodies,t);if(-1!==r&&s.removeBodyAt(e,r),n)for(var i=0;i<e.composites.length;i++)s.removeBody(e.composites[i],t,!0);return e},s.removeBodyAt=function(e,t){return e.bodies.splice(t,1),s.setModified(e,!0,!0,!1),e},s.addConstraint=function(e,t){return e.constraints.push(t),s.setModified(e,!0,!0,!1),e},s.removeConstraint=function(e,t,n){var r=a.indexOf(e.constraints,t);if(-1!==r&&s.removeConstraintAt(e,r),n)for(var i=0;i<e.composites.length;i++)s.removeConstraint(e.composites[i],t,!0);return e},s.removeConstraintAt=function(e,t){return e.constraints.splice(t,1),s.setModified(e,!0,!0,!1),e},s.clear=function(e,t,n){if(n)for(var r=0;r<e.composites.length;r++)s.clear(e.composites[r],t,!0);return t?e.bodies=e.bodies.filter((function(e){return e.isStatic})):e.bodies.length=0,e.constraints.length=0,e.composites.length=0,s.setModified(e,!0,!0,!1),e},s.allBodies=function(e){if(e.cache&&e.cache.allBodies)return e.cache.allBodies;for(var t=[].concat(e.bodies),n=0;n<e.composites.length;n++)t=t.concat(s.allBodies(e.composites[n]));return e.cache&&(e.cache.allBodies=t),t},s.allConstraints=function(e){if(e.cache&&e.cache.allConstraints)return e.cache.allConstraints;for(var t=[].concat(e.constraints),n=0;n<e.composites.length;n++)t=t.concat(s.allConstraints(e.composites[n]));return e.cache&&(e.cache.allConstraints=t),t},s.allComposites=function(e){if(e.cache&&e.cache.allComposites)return e.cache.allComposites;for(var t=[].concat(e.composites),n=0;n<e.composites.length;n++)t=t.concat(s.allComposites(e.composites[n]));return e.cache&&(e.cache.allComposites=t),t},s.get=function(e,t,n){var r,a;switch(n){case"body":r=s.allBodies(e);break;case"constraint":r=s.allConstraints(e);break;case"composite":r=s.allComposites(e).concat(e)}return r?0===(a=r.filter((function(e){return e.id.toString()===t.toString()}))).length?null:a[0]:null},s.move=function(e,t,n){return s.remove(e,t),s.add(n,t),e},s.rebase=function(e){for(var t=s.allBodies(e).concat(s.allConstraints(e)).concat(s.allComposites(e)),n=0;n<t.length;n++)t[n].id=a.nextId();return e},s.translate=function(e,t,n){for(var r=n?s.allBodies(e):e.bodies,a=0;a<r.length;a++)o.translate(r[a],t);return e},s.rotate=function(e,t,n,r){for(var a=Math.cos(t),i=Math.sin(t),l=r?s.allBodies(e):e.bodies,u=0;u<l.length;u++){var c=l[u],h=c.position.x-n.x,p=c.position.y-n.y;o.setPosition(c,{x:n.x+(h*a-p*i),y:n.y+(h*i+p*a)}),o.rotate(c,t)}return e},s.scale=function(e,t,n,r,a){for(var i=a?s.allBodies(e):e.bodies,l=0;l<i.length;l++){var u=i[l],c=u.position.x-r.x,h=u.position.y-r.y;o.setPosition(u,{x:r.x+c*t,y:r.y+h*n}),o.scale(u,t,n)}return e},s.bounds=function(e){for(var t=s.allBodies(e),n=[],r=0;r<t.length;r+=1){var a=t[r];n.push(a.bounds.min,a.bounds.max)}return i.create(n)}},function(e,t,n){var s={};e.exports=s;var r=n(3),a=n(2),i=n(7),o=(n(16),n(0)),l=n(1),u=n(11);!function(){s._inertiaScale=4,s._nextCollidingGroupId=1,s._nextNonCollidingGroupId=-1,s._nextCategory=1,s.create=function(t){var n={id:o.nextId(),type:"body",label:"Body",parts:[],plugin:{},angle:0,vertices:r.fromPath("L 0 0 L 40 0 L 40 40 L 0 40"),position:{x:0,y:0},force:{x:0,y:0},torque:0,positionImpulse:{x:0,y:0},constraintImpulse:{x:0,y:0,angle:0},totalContacts:0,speed:0,angularSpeed:0,velocity:{x:0,y:0},angularVelocity:0,isSensor:!1,isStatic:!1,isSleeping:!1,motion:0,sleepThreshold:60,density:.001,restitution:0,friction:.1,frictionStatic:.5,frictionAir:.01,collisionFilter:{category:1,mask:4294967295,group:0},slop:.05,timeScale:1,render:{visible:!0,opacity:1,strokeStyle:null,fillStyle:null,lineWidth:null,sprite:{xScale:1,yScale:1,xOffset:0,yOffset:0}},events:null,bounds:null,chamfer:null,circleRadius:0,positionPrev:null,anglePrev:0,parent:null,axes:null,area:0,mass:0,inertia:0,_original:null},s=o.extend(n,t);return e(s,t),s},s.nextGroup=function(e){return e?s._nextNonCollidingGroupId--:s._nextCollidingGroupId++},s.nextCategory=function(){return s._nextCategory=s._nextCategory<<1,s._nextCategory};var e=function(e,t){t=t||{},s.set(e,{bounds:e.bounds||l.create(e.vertices),positionPrev:e.positionPrev||a.clone(e.position),anglePrev:e.anglePrev||e.angle,vertices:e.vertices,parts:e.parts||[e],isStatic:e.isStatic,isSleeping:e.isSleeping,parent:e.parent||e}),r.rotate(e.vertices,e.angle,e.position),u.rotate(e.axes,e.angle),l.update(e.bounds,e.vertices,e.velocity),s.set(e,{axes:t.axes||e.axes,area:t.area||e.area,mass:t.mass||e.mass,inertia:t.inertia||e.inertia});var n=e.isStatic?"#14151f":o.choose(["#f19648","#f5d259","#f55a3c","#063e7b","#ececd1"]),i=e.isStatic?"#555":"#ccc",c=e.isStatic&&null===e.render.fillStyle?1:0;e.render.fillStyle=e.render.fillStyle||n,e.render.strokeStyle=e.render.strokeStyle||i,e.render.lineWidth=e.render.lineWidth||c,e.render.sprite.xOffset+=-(e.bounds.min.x-e.position.x)/(e.bounds.max.x-e.bounds.min.x),e.render.sprite.yOffset+=-(e.bounds.min.y-e.position.y)/(e.bounds.max.y-e.bounds.min.y)};s.set=function(e,t,n){var r;for(r in"string"==typeof t&&(r=t,(t={})[r]=n),t)if(Object.prototype.hasOwnProperty.call(t,r))switch(n=t[r],r){case"isStatic":s.setStatic(e,n);break;case"isSleeping":i.set(e,n);break;case"mass":s.setMass(e,n);break;case"density":s.setDensity(e,n);break;case"inertia":s.setInertia(e,n);break;case"vertices":s.setVertices(e,n);break;case"position":s.setPosition(e,n);break;case"angle":s.setAngle(e,n);break;case"velocity":s.setVelocity(e,n);break;case"angularVelocity":s.setAngularVelocity(e,n);break;case"parts":s.setParts(e,n);break;case"centre":s.setCentre(e,n);break;default:e[r]=n}},s.setStatic=function(e,t){for(var n=0;n<e.parts.length;n++){var s=e.parts[n];s.isStatic=t,t?(s._original={restitution:s.restitution,friction:s.friction,mass:s.mass,inertia:s.inertia,density:s.density,inverseMass:s.inverseMass,inverseInertia:s.inverseInertia},s.restitution=0,s.friction=1,s.mass=s.inertia=s.density=1/0,s.inverseMass=s.inverseInertia=0,s.positionPrev.x=s.position.x,s.positionPrev.y=s.position.y,s.anglePrev=s.angle,s.angularVelocity=0,s.speed=0,s.angularSpeed=0,s.motion=0):s._original&&(s.restitution=s._original.restitution,s.friction=s._original.friction,s.mass=s._original.mass,s.inertia=s._original.inertia,s.density=s._original.density,s.inverseMass=s._original.inverseMass,s.inverseInertia=s._original.inverseInertia,s._original=null)}},s.setMass=function(e,t){var n=e.inertia/(e.mass/6);e.inertia=n*(t/6),e.inverseInertia=1/e.inertia,e.mass=t,e.inverseMass=1/e.mass,e.density=e.mass/e.area},s.setDensity=function(e,t){s.setMass(e,t*e.area),e.density=t},s.setInertia=function(e,t){e.inertia=t,e.inverseInertia=1/e.inertia},s.setVertices=function(e,t){t[0].body===e?e.vertices=t:e.vertices=r.create(t,e),e.axes=u.fromVertices(e.vertices),e.area=r.area(e.vertices),s.setMass(e,e.density*e.area);var n=r.centre(e.vertices);r.translate(e.vertices,n,-1),s.setInertia(e,s._inertiaScale*r.inertia(e.vertices,e.mass)),r.translate(e.vertices,e.position),l.update(e.bounds,e.vertices,e.velocity)},s.setParts=function(e,t,n){var a;for(t=t.slice(0),e.parts.length=0,e.parts.push(e),e.parent=e,a=0;a<t.length;a++){var i=t[a];i!==e&&(i.parent=e,e.parts.push(i))}if(1!==e.parts.length){if(n=void 0===n||n){var o=[];for(a=0;a<t.length;a++)o=o.concat(t[a].vertices);r.clockwiseSort(o);var l=r.hull(o),u=r.centre(l);s.setVertices(e,l),r.translate(e.vertices,u)}var c=s._totalProperties(e);e.area=c.area,e.parent=e,e.position.x=c.centre.x,e.position.y=c.centre.y,e.positionPrev.x=c.centre.x,e.positionPrev.y=c.centre.y,s.setMass(e,c.mass),s.setInertia(e,c.inertia),s.setPosition(e,c.centre)}},s.setCentre=function(e,t,n){n?(e.positionPrev.x+=t.x,e.positionPrev.y+=t.y,e.position.x+=t.x,e.position.y+=t.y):(e.positionPrev.x=t.x-(e.position.x-e.positionPrev.x),e.positionPrev.y=t.y-(e.position.y-e.positionPrev.y),e.position.x=t.x,e.position.y=t.y)},s.setPosition=function(e,t){var n=a.sub(t,e.position);e.positionPrev.x+=n.x,e.positionPrev.y+=n.y;for(var s=0;s<e.parts.length;s++){var i=e.parts[s];i.position.x+=n.x,i.position.y+=n.y,r.translate(i.vertices,n),l.update(i.bounds,i.vertices,e.velocity)}},s.setAngle=function(e,t){var n=t-e.angle;e.anglePrev+=n;for(var s=0;s<e.parts.length;s++){var i=e.parts[s];i.angle+=n,r.rotate(i.vertices,n,e.position),u.rotate(i.axes,n),l.update(i.bounds,i.vertices,e.velocity),s>0&&a.rotateAbout(i.position,n,e.position,i.position)}},s.setVelocity=function(e,t){e.positionPrev.x=e.position.x-t.x,e.positionPrev.y=e.position.y-t.y,e.velocity.x=t.x,e.velocity.y=t.y,e.speed=a.magnitude(e.velocity)},s.setAngularVelocity=function(e,t){e.anglePrev=e.angle-t,e.angularVelocity=t,e.angularSpeed=Math.abs(e.angularVelocity)},s.translate=function(e,t){s.setPosition(e,a.add(e.position,t))},s.rotate=function(e,t,n){if(n){var r=Math.cos(t),a=Math.sin(t),i=e.position.x-n.x,o=e.position.y-n.y;s.setPosition(e,{x:n.x+(i*r-o*a),y:n.y+(i*a+o*r)}),s.setAngle(e,e.angle+t)}else s.setAngle(e,e.angle+t)},s.scale=function(e,t,n,a){var i=0,o=0;a=a||e.position;for(var c=0;c<e.parts.length;c++){var h=e.parts[c];r.scale(h.vertices,t,n,a),h.axes=u.fromVertices(h.vertices),h.area=r.area(h.vertices),s.setMass(h,e.density*h.area),r.translate(h.vertices,{x:-h.position.x,y:-h.position.y}),s.setInertia(h,s._inertiaScale*r.inertia(h.vertices,h.mass)),r.translate(h.vertices,{x:h.position.x,y:h.position.y}),c>0&&(i+=h.area,o+=h.inertia),h.position.x=a.x+(h.position.x-a.x)*t,h.position.y=a.y+(h.position.y-a.y)*n,l.update(h.bounds,h.vertices,e.velocity)}e.parts.length>1&&(e.area=i,e.isStatic||(s.setMass(e,e.density*i),s.setInertia(e,o))),e.circleRadius&&(t===n?e.circleRadius*=t:e.circleRadius=null)},s.update=function(e,t,n,s){var i=Math.pow(t*n*e.timeScale,2),o=1-e.frictionAir*n*e.timeScale,c=e.position.x-e.positionPrev.x,h=e.position.y-e.positionPrev.y;e.velocity.x=c*o*s+e.force.x/e.mass*i,e.velocity.y=h*o*s+e.force.y/e.mass*i,e.positionPrev.x=e.position.x,e.positionPrev.y=e.position.y,e.position.x+=e.velocity.x,e.position.y+=e.velocity.y,e.angularVelocity=(e.angle-e.anglePrev)*o*s+e.torque/e.inertia*i,e.anglePrev=e.angle,e.angle+=e.angularVelocity,e.speed=a.magnitude(e.velocity),e.angularSpeed=Math.abs(e.angularVelocity);for(var p=0;p<e.parts.length;p++){var d=e.parts[p];r.translate(d.vertices,e.velocity),p>0&&(d.position.x+=e.velocity.x,d.position.y+=e.velocity.y),0!==e.angularVelocity&&(r.rotate(d.vertices,e.angularVelocity,e.position),u.rotate(d.axes,e.angularVelocity),p>0&&a.rotateAbout(d.position,e.angularVelocity,e.position,d.position)),l.update(d.bounds,d.vertices,e.velocity)}},s.applyForce=function(e,t,n){e.force.x+=n.x,e.force.y+=n.y;var s=t.x-e.position.x,r=t.y-e.position.y;e.torque+=s*n.y-r*n.x},s._totalProperties=function(e){for(var t={mass:0,area:0,inertia:0,centre:{x:0,y:0}},n=1===e.parts.length?0:1;n<e.parts.length;n++){var s=e.parts[n],r=s.mass!==1/0?s.mass:1;t.mass+=r,t.area+=s.area,t.inertia+=s.inertia,t.centre=a.add(t.centre,a.mult(s.position,r))}return t.centre=a.div(t.centre,t.mass),t}}()},function(e,t,n){var s={};e.exports=s;var r=n(4);s._motionWakeThreshold=.18,s._motionSleepThreshold=.08,s._minBias=.9,s.update=function(e,t){for(var n=t*t*t,r=0;r<e.length;r++){var a=e[r],i=a.speed*a.speed+a.angularSpeed*a.angularSpeed;if(0===a.force.x&&0===a.force.y){var o=Math.min(a.motion,i),l=Math.max(a.motion,i);a.motion=s._minBias*o+(1-s._minBias)*l,a.sleepThreshold>0&&a.motion<s._motionSleepThreshold*n?(a.sleepCounter+=1,a.sleepCounter>=a.sleepThreshold&&s.set(a,!0)):a.sleepCounter>0&&(a.sleepCounter-=1)}else s.set(a,!1)}},s.afterCollisions=function(e,t){for(var n=t*t*t,r=0;r<e.length;r++){var a=e[r];if(a.isActive){var i=a.collision,o=i.bodyA.parent,l=i.bodyB.parent;if(!(o.isSleeping&&l.isSleeping||o.isStatic||l.isStatic)&&(o.isSleeping||l.isSleeping)){var u=o.isSleeping&&!o.isStatic?o:l,c=u===o?l:o;!u.isStatic&&c.motion>s._motionWakeThreshold*n&&s.set(u,!1)}}}},s.set=function(e,t){var n=e.isSleeping;t?(e.isSleeping=!0,e.sleepCounter=e.sleepThreshold,e.positionImpulse.x=0,e.positionImpulse.y=0,e.positionPrev.x=e.position.x,e.positionPrev.y=e.position.y,e.anglePrev=e.angle,e.speed=0,e.angularSpeed=0,e.motion=0,n||r.trigger(e,"sleepStart")):(e.isSleeping=!1,e.sleepCounter=0,n&&r.trigger(e,"sleepEnd"))}},function(e,t,n){var s={};e.exports=s;var r,a,i,o=n(3),l=n(9);r=[],a={overlap:0,axis:null},i={overlap:0,axis:null},s.create=function(e,t){return{pair:null,collided:!1,bodyA:e,bodyB:t,parentA:e.parent,parentB:t.parent,depth:0,normal:{x:0,y:0},tangent:{x:0,y:0},penetration:{x:0,y:0},supports:[]}},s.collides=function(e,t,n){if(s._overlapAxes(a,e.vertices,t.vertices,e.axes),a.overlap<=0)return null;if(s._overlapAxes(i,t.vertices,e.vertices,t.axes),i.overlap<=0)return null;var r,u,c=n&&n.table[l.id(e,t)];c?r=c.collision:((r=s.create(e,t)).collided=!0,r.bodyA=e.id<t.id?e:t,r.bodyB=e.id<t.id?t:e,r.parentA=r.bodyA.parent,r.parentB=r.bodyB.parent),e=r.bodyA,t=r.bodyB,u=a.overlap<i.overlap?a:i;var h=r.normal,p=r.supports,d=u.axis,f=d.x,m=d.y;f*(t.position.x-e.position.x)+m*(t.position.y-e.position.y)<0?(h.x=f,h.y=m):(h.x=-f,h.y=-m),r.tangent.x=-h.y,r.tangent.y=h.x,r.depth=u.overlap,r.penetration.x=h.x*r.depth,r.penetration.y=h.y*r.depth;var g=s._findSupports(e,t,h,1),y=0;if(o.contains(e.vertices,g[0])&&(p[y++]=g[0]),o.contains(e.vertices,g[1])&&(p[y++]=g[1]),y<2){var b=s._findSupports(t,e,h,-1);o.contains(t.vertices,b[0])&&(p[y++]=b[0]),y<2&&o.contains(t.vertices,b[1])&&(p[y++]=b[1])}return 0===y&&(p[y++]=g[0]),p.length=y,r},s._overlapAxes=function(e,t,n,s){var r,a,i,o,l,u,c=t.length,h=n.length,p=t[0].x,d=t[0].y,f=n[0].x,m=n[0].y,g=s.length,y=Number.MAX_VALUE,b=0;for(l=0;l<g;l++){var x=s[l],v=x.x,w=x.y,k=p*v+d*w,I=f*v+m*w,S=k,N=I;for(u=1;u<c;u+=1)(o=t[u].x*v+t[u].y*w)>S?S=o:o<k&&(k=o);for(u=1;u<h;u+=1)(o=n[u].x*v+n[u].y*w)>N?N=o:o<I&&(I=o);if((r=(a=S-I)<(i=N-k)?a:i)<y&&(y=r,b=l,r<=0))break}e.axis=s[b],e.overlap=y},s._projectToAxis=function(e,t,n){for(var s=t[0].x*n.x+t[0].y*n.y,r=s,a=1;a<t.length;a+=1){var i=t[a].x*n.x+t[a].y*n.y;i>r?r=i:i<s&&(s=i)}e.min=s,e.max=r},s._findSupports=function(e,t,n,s){var a,i,o,l,u,c=t.vertices,h=c.length,p=e.position.x,d=e.position.y,f=n.x*s,m=n.y*s,g=Number.MAX_VALUE;for(u=0;u<h;u+=1)(l=f*(p-(i=c[u]).x)+m*(d-i.y))<g&&(g=l,a=i);return g=f*(p-(o=c[(h+a.index-1)%h]).x)+m*(d-o.y),f*(p-(i=c[(a.index+1)%h]).x)+m*(d-i.y)<g?(r[0]=a,r[1]=i,r):(r[0]=a,r[1]=o,r)}},function(e,t,n){var s={};e.exports=s;var r=n(17);s.create=function(e,t){var n=e.bodyA,r=e.bodyB,a={id:s.id(n,r),bodyA:n,bodyB:r,collision:e,contacts:[],activeContacts:[],separation:0,isActive:!0,confirmedActive:!0,isSensor:n.isSensor||r.isSensor,timeCreated:t,timeUpdated:t,inverseMass:0,friction:0,frictionStatic:0,restitution:0,slop:0};return s.update(a,e,t),a},s.update=function(e,t,n){var s=e.contacts,a=t.supports,i=e.activeContacts,o=t.parentA,l=t.parentB,u=o.vertices.length;e.isActive=!0,e.timeUpdated=n,e.collision=t,e.separation=t.depth,e.inverseMass=o.inverseMass+l.inverseMass,e.friction=o.friction<l.friction?o.friction:l.friction,e.frictionStatic=o.frictionStatic>l.frictionStatic?o.frictionStatic:l.frictionStatic,e.restitution=o.restitution>l.restitution?o.restitution:l.restitution,e.slop=o.slop>l.slop?o.slop:l.slop,t.pair=e,i.length=0;for(var c=0;c<a.length;c++){var h=a[c],p=h.body===o?h.index:u+h.index,d=s[p];d?i.push(d):i.push(s[p]=r.create(h))}},s.setActive=function(e,t,n){t?(e.isActive=!0,e.timeUpdated=n):(e.isActive=!1,e.activeContacts.length=0)},s.id=function(e,t){return e.id<t.id?"A"+e.id+"B"+t.id:"A"+t.id+"B"+e.id}},function(e,t,n){var s={};e.exports=s;var r=n(3),a=n(2),i=n(7),o=n(1),l=n(11),u=n(0);s._warming=.4,s._torqueDampen=1,s._minLength=1e-6,s.create=function(e){var t=e;t.bodyA&&!t.pointA&&(t.pointA={x:0,y:0}),t.bodyB&&!t.pointB&&(t.pointB={x:0,y:0});var n=t.bodyA?a.add(t.bodyA.position,t.pointA):t.pointA,s=t.bodyB?a.add(t.bodyB.position,t.pointB):t.pointB,r=a.magnitude(a.sub(n,s));t.length=void 0!==t.length?t.length:r,t.id=t.id||u.nextId(),t.label=t.label||"Constraint",t.type="constraint",t.stiffness=t.stiffness||(t.length>0?1:.7),t.damping=t.damping||0,t.angularStiffness=t.angularStiffness||0,t.angleA=t.bodyA?t.bodyA.angle:t.angleA,t.angleB=t.bodyB?t.bodyB.angle:t.angleB,t.plugin={};var i={visible:!0,lineWidth:2,strokeStyle:"#ffffff",type:"line",anchors:!0};return 0===t.length&&t.stiffness>.1?(i.type="pin",i.anchors=!1):t.stiffness<.9&&(i.type="spring"),t.render=u.extend(i,t.render),t},s.preSolveAll=function(e){for(var t=0;t<e.length;t+=1){var n=e[t],s=n.constraintImpulse;n.isStatic||0===s.x&&0===s.y&&0===s.angle||(n.position.x+=s.x,n.position.y+=s.y,n.angle+=s.angle)}},s.solveAll=function(e,t){for(var n=0;n<e.length;n+=1){var r=e[n],a=!r.bodyA||r.bodyA&&r.bodyA.isStatic,i=!r.bodyB||r.bodyB&&r.bodyB.isStatic;(a||i)&&s.solve(e[n],t)}for(n=0;n<e.length;n+=1)a=!(r=e[n]).bodyA||r.bodyA&&r.bodyA.isStatic,i=!r.bodyB||r.bodyB&&r.bodyB.isStatic,a||i||s.solve(e[n],t)},s.solve=function(e,t){var n=e.bodyA,r=e.bodyB,i=e.pointA,o=e.pointB;if(n||r){n&&!n.isStatic&&(a.rotate(i,n.angle-e.angleA,i),e.angleA=n.angle),r&&!r.isStatic&&(a.rotate(o,r.angle-e.angleB,o),e.angleB=r.angle);var l=i,u=o;if(n&&(l=a.add(n.position,i)),r&&(u=a.add(r.position,o)),l&&u){var c=a.sub(l,u),h=a.magnitude(c);h<s._minLength&&(h=s._minLength);var p,d,f,m,g,y=(h-e.length)/h,b=e.stiffness<1?e.stiffness*t:e.stiffness,x=a.mult(c,y*b),v=(n?n.inverseMass:0)+(r?r.inverseMass:0),w=v+((n?n.inverseInertia:0)+(r?r.inverseInertia:0));if(e.damping){var k=a.create();f=a.div(c,h),g=a.sub(r&&a.sub(r.position,r.positionPrev)||k,n&&a.sub(n.position,n.positionPrev)||k),m=a.dot(f,g)}n&&!n.isStatic&&(d=n.inverseMass/v,n.constraintImpulse.x-=x.x*d,n.constraintImpulse.y-=x.y*d,n.position.x-=x.x*d,n.position.y-=x.y*d,e.damping&&(n.positionPrev.x-=e.damping*f.x*m*d,n.positionPrev.y-=e.damping*f.y*m*d),p=a.cross(i,x)/w*s._torqueDampen*n.inverseInertia*(1-e.angularStiffness),n.constraintImpulse.angle-=p,n.angle-=p),r&&!r.isStatic&&(d=r.inverseMass/v,r.constraintImpulse.x+=x.x*d,r.constraintImpulse.y+=x.y*d,r.position.x+=x.x*d,r.position.y+=x.y*d,e.damping&&(r.positionPrev.x+=e.damping*f.x*m*d,r.positionPrev.y+=e.damping*f.y*m*d),p=a.cross(o,x)/w*s._torqueDampen*r.inverseInertia*(1-e.angularStiffness),r.constraintImpulse.angle+=p,r.angle+=p)}}},s.postSolveAll=function(e){for(var t=0;t<e.length;t++){var n=e[t],u=n.constraintImpulse;if(!(n.isStatic||0===u.x&&0===u.y&&0===u.angle)){i.set(n,!1);for(var c=0;c<n.parts.length;c++){var h=n.parts[c];r.translate(h.vertices,u),c>0&&(h.position.x+=u.x,h.position.y+=u.y),0!==u.angle&&(r.rotate(h.vertices,u.angle,n.position),l.rotate(h.axes,u.angle),c>0&&a.rotateAbout(h.position,u.angle,n.position,h.position)),o.update(h.bounds,h.vertices,n.velocity)}u.angle*=s._warming,u.x*=s._warming,u.y*=s._warming}}},s.pointAWorld=function(e){return{x:(e.bodyA?e.bodyA.position.x:0)+e.pointA.x,y:(e.bodyA?e.bodyA.position.y:0)+e.pointA.y}},s.pointBWorld=function(e){return{x:(e.bodyB?e.bodyB.position.x:0)+e.pointB.x,y:(e.bodyB?e.bodyB.position.y:0)+e.pointB.y}}},function(e,t,n){var s={};e.exports=s;var r=n(2),a=n(0);s.fromVertices=function(e){for(var t={},n=0;n<e.length;n++){var s=(n+1)%e.length,i=r.normalise({x:e[s].y-e[n].y,y:e[n].x-e[s].x}),o=0===i.y?1/0:i.x/i.y;t[o=o.toFixed(3).toString()]=i}return a.values(t)},s.rotate=function(e,t){if(0!==t)for(var n=Math.cos(t),s=Math.sin(t),r=0;r<e.length;r++){var a,i=e[r];a=i.x*n-i.y*s,i.y=i.x*s+i.y*n,i.x=a}}},function(e,t,n){var s={};e.exports=s;var r=n(3),a=n(0),i=n(6),o=n(1),l=n(2);s.rectangle=function(e,t,n,s,o){o=o||{};var l={label:"Rectangle Body",position:{x:e,y:t},vertices:r.fromPath("L 0 0 L "+n+" 0 L "+n+" "+s+" L 0 "+s)};if(o.chamfer){var u=o.chamfer;l.vertices=r.chamfer(l.vertices,u.radius,u.quality,u.qualityMin,u.qualityMax),delete o.chamfer}return i.create(a.extend({},l,o))},s.trapezoid=function(e,t,n,s,o,l){l=l||{};var u,c=n*(o*=.5),h=c+(1-2*o)*n,p=h+c;u=o<.5?"L 0 0 L "+c+" "+-s+" L "+h+" "+-s+" L "+p+" 0":"L 0 0 L "+h+" "+-s+" L "+p+" 0";var d={label:"Trapezoid Body",position:{x:e,y:t},vertices:r.fromPath(u)};if(l.chamfer){var f=l.chamfer;d.vertices=r.chamfer(d.vertices,f.radius,f.quality,f.qualityMin,f.qualityMax),delete l.chamfer}return i.create(a.extend({},d,l))},s.circle=function(e,t,n,r,i){r=r||{};var o={label:"Circle Body",circleRadius:n};i=i||25;var l=Math.ceil(Math.max(10,Math.min(i,n)));return l%2==1&&(l+=1),s.polygon(e,t,l,n,a.extend({},o,r))},s.polygon=function(e,t,n,o,l){if(l=l||{},n<3)return s.circle(e,t,o,l);for(var u=2*Math.PI/n,c="",h=.5*u,p=0;p<n;p+=1){var d=h+p*u,f=Math.cos(d)*o,m=Math.sin(d)*o;c+="L "+f.toFixed(3)+" "+m.toFixed(3)+" "}var g={label:"Polygon Body",position:{x:e,y:t},vertices:r.fromPath(c)};if(l.chamfer){var y=l.chamfer;g.vertices=r.chamfer(g.vertices,y.radius,y.quality,y.qualityMin,y.qualityMax),delete l.chamfer}return i.create(a.extend({},g,l))},s.fromVertices=function(e,t,n,s,u,c,h,p){var d,f,m,g,y,b,x,v,w,k,I=a.getDecomp();for(d=Boolean(I&&I.quickDecomp),s=s||{},m=[],u=void 0!==u&&u,c=void 0!==c?c:.01,h=void 0!==h?h:10,p=void 0!==p?p:.01,a.isArray(n[0])||(n=[n]),w=0;w<n.length;w+=1)if(y=n[w],!(g=r.isConvex(y))&&!d&&a.warnOnce("Bodies.fromVertices: Install the 'poly-decomp' library and use Common.setDecomp or provide 'decomp' as a global to decompose concave vertices."),g||!d)y=g?r.clockwiseSort(y):r.hull(y),m.push({position:{x:e,y:t},vertices:y});else{var S=y.map((function(e){return[e.x,e.y]}));I.makeCCW(S),!1!==c&&I.removeCollinearPoints(S,c),!1!==p&&I.removeDuplicatePoints&&I.removeDuplicatePoints(S,p);var N=I.quickDecomp(S);for(b=0;b<N.length;b++){var T=N[b].map((function(e){return{x:e[0],y:e[1]}}));h>0&&r.area(T)<h||m.push({position:r.centre(T),vertices:T})}}for(b=0;b<m.length;b++)m[b]=i.create(a.extend(m[b],s));if(u)for(b=0;b<m.length;b++){var C=m[b];for(x=b+1;x<m.length;x++){var $=m[x];if(o.overlaps(C.bounds,$.bounds)){var E=C.vertices,A=$.vertices;for(v=0;v<C.vertices.length;v++)for(k=0;k<$.vertices.length;k++){var _=l.magnitudeSquared(l.sub(E[(v+1)%E.length],A[k])),R=l.magnitudeSquared(l.sub(E[v],A[(k+1)%A.length]));_<5&&R<5&&(E[v].isInternal=!0,A[k].isInternal=!0)}}}}return m.length>1?(f=i.create(a.extend({parts:m.slice(0)},s)),i.setPosition(f,{x:e,y:t}),f):m[0]}},function(e,t,n){var s={};e.exports=s;var r=n(0);s.create=function(e){var t={};return e||r.log("Mouse.create: element was undefined, defaulting to document.body","warn"),t.element=e||document.body,t.absolute={x:0,y:0},t.position={x:0,y:0},t.mousedownPosition={x:0,y:0},t.mouseupPosition={x:0,y:0},t.offset={x:0,y:0},t.scale={x:1,y:1},t.wheelDelta=0,t.button=-1,t.pixelRatio=parseInt(t.element.getAttribute("data-pixel-ratio"),10)||1,t.sourceEvents={mousemove:null,mousedown:null,mouseup:null,mousewheel:null},t.mousemove=function(e){var n=s._getRelativeMousePosition(e,t.element,t.pixelRatio);e.changedTouches&&(t.button=0,e.preventDefault()),t.absolute.x=n.x,t.absolute.y=n.y,t.position.x=t.absolute.x*t.scale.x+t.offset.x,t.position.y=t.absolute.y*t.scale.y+t.offset.y,t.sourceEvents.mousemove=e},t.mousedown=function(e){var n=s._getRelativeMousePosition(e,t.element,t.pixelRatio);e.changedTouches?(t.button=0,e.preventDefault()):t.button=e.button,t.absolute.x=n.x,t.absolute.y=n.y,t.position.x=t.absolute.x*t.scale.x+t.offset.x,t.position.y=t.absolute.y*t.scale.y+t.offset.y,t.mousedownPosition.x=t.position.x,t.mousedownPosition.y=t.position.y,t.sourceEvents.mousedown=e},t.mouseup=function(e){var n=s._getRelativeMousePosition(e,t.element,t.pixelRatio);e.changedTouches&&e.preventDefault(),t.button=-1,t.absolute.x=n.x,t.absolute.y=n.y,t.position.x=t.absolute.x*t.scale.x+t.offset.x,t.position.y=t.absolute.y*t.scale.y+t.offset.y,t.mouseupPosition.x=t.position.x,t.mouseupPosition.y=t.position.y,t.sourceEvents.mouseup=e},t.mousewheel=function(e){t.wheelDelta=Math.max(-1,Math.min(1,e.wheelDelta||-e.detail)),e.preventDefault()},s.setElement(t,t.element),t},s.setElement=function(e,t){e.element=t,t.addEventListener("mousemove",e.mousemove),t.addEventListener("mousedown",e.mousedown),t.addEventListener("mouseup",e.mouseup),t.addEventListener("mousewheel",e.mousewheel),t.addEventListener("DOMMouseScroll",e.mousewheel),t.addEventListener("touchmove",e.mousemove),t.addEventListener("touchstart",e.mousedown),t.addEventListener("touchend",e.mouseup)},s.clearSourceEvents=function(e){e.sourceEvents.mousemove=null,e.sourceEvents.mousedown=null,e.sourceEvents.mouseup=null,e.sourceEvents.mousewheel=null,e.wheelDelta=0},s.setOffset=function(e,t){e.offset.x=t.x,e.offset.y=t.y,e.position.x=e.absolute.x*e.scale.x+e.offset.x,e.position.y=e.absolute.y*e.scale.y+e.offset.y},s.setScale=function(e,t){e.scale.x=t.x,e.scale.y=t.y,e.position.x=e.absolute.x*e.scale.x+e.offset.x,e.position.y=e.absolute.y*e.scale.y+e.offset.y},s._getRelativeMousePosition=function(e,t,n){var s,r,a=t.getBoundingClientRect(),i=document.documentElement||document.body.parentNode||document.body,o=void 0!==window.pageXOffset?window.pageXOffset:i.scrollLeft,l=void 0!==window.pageYOffset?window.pageYOffset:i.scrollTop,u=e.changedTouches;return u?(s=u[0].pageX-a.left-o,r=u[0].pageY-a.top-l):(s=e.pageX-a.left-o,r=e.pageY-a.top-l),{x:s/(t.clientWidth/(t.width||t.clientWidth)*n),y:r/(t.clientHeight/(t.height||t.clientHeight)*n)}}},function(e,t,n){var s={};e.exports=s;var r=n(0),a=n(8);s.create=function(e){return r.extend({bodies:[],pairs:null},e)},s.setBodies=function(e,t){e.bodies=t.slice(0)},s.clear=function(e){e.bodies=[]},s.collisions=function(e){var t,n,r=[],i=e.pairs,o=e.bodies,l=o.length,u=s.canCollide,c=a.collides;for(o.sort(s._compareBoundsX),t=0;t<l;t++){var h=o[t],p=h.bounds,d=h.bounds.max.x,f=h.bounds.max.y,m=h.bounds.min.y,g=h.isStatic||h.isSleeping,y=h.parts.length,b=1===y;for(n=t+1;n<l;n++){var x=o[n];if((C=x.bounds).min.x>d)break;if(!(f<C.min.y||m>C.max.y)&&(!g||!x.isStatic&&!x.isSleeping)&&u(h.collisionFilter,x.collisionFilter)){var v=x.parts.length;if(b&&1===v)(N=c(h,x,i))&&r.push(N);else for(var w=v>1?1:0,k=y>1?1:0;k<y;k++)for(var I=h.parts[k],S=(p=I.bounds,w);S<v;S++){var N,T=x.parts[S],C=T.bounds;p.min.x>C.max.x||p.max.x<C.min.x||p.max.y<C.min.y||p.min.y>C.max.y||(N=c(I,T,i))&&r.push(N)}}}}return r},s.canCollide=function(e,t){return e.group===t.group&&0!==e.group?e.group>0:0!=(e.mask&t.category)&&0!=(t.mask&e.category)},s._compareBoundsX=function(e,t){return e.bounds.min.x-t.bounds.min.x}},function(e,t,n){var s={};e.exports=s;var r=n(0);s._registry={},s.register=function(e){if(s.isPlugin(e)||r.warn("Plugin.register:",s.toString(e),"does not implement all required fields."),e.name in s._registry){var t=s._registry[e.name],n=s.versionParse(e.version).number,a=s.versionParse(t.version).number;n>a?(r.warn("Plugin.register:",s.toString(t),"was upgraded to",s.toString(e)),s._registry[e.name]=e):n<a?r.warn("Plugin.register:",s.toString(t),"can not be downgraded to",s.toString(e)):e!==t&&r.warn("Plugin.register:",s.toString(e),"is already registered to different plugin object")}else s._registry[e.name]=e;return e},s.resolve=function(e){return s._registry[s.dependencyParse(e).name]},s.toString=function(e){return"string"==typeof e?e:(e.name||"anonymous")+"@"+(e.version||e.range||"0.0.0")},s.isPlugin=function(e){return e&&e.name&&e.version&&e.install},s.isUsed=function(e,t){return e.used.indexOf(t)>-1},s.isFor=function(e,t){var n=e.for&&s.dependencyParse(e.for);return!e.for||t.name===n.name&&s.versionSatisfies(t.version,n.range)},s.use=function(e,t){if(e.uses=(e.uses||[]).concat(t||[]),0!==e.uses.length){for(var n=s.dependencies(e),a=r.topologicalSort(n),i=[],o=0;o<a.length;o+=1)if(a[o]!==e.name){var l=s.resolve(a[o]);l?s.isUsed(e,l.name)||(s.isFor(l,e)||(r.warn("Plugin.use:",s.toString(l),"is for",l.for,"but installed on",s.toString(e)+"."),l._warned=!0),l.install?l.install(e):(r.warn("Plugin.use:",s.toString(l),"does not specify an install function."),l._warned=!0),l._warned?(i.push("🔶 "+s.toString(l)),delete l._warned):i.push("✅ "+s.toString(l)),e.used.push(l.name)):i.push("❌ "+a[o])}i.length>0&&r.info(i.join("  "))}else r.warn("Plugin.use:",s.toString(e),"does not specify any dependencies to install.")},s.dependencies=function(e,t){var n=s.dependencyParse(e),a=n.name;if(!(a in(t=t||{}))){e=s.resolve(e)||e,t[a]=r.map(e.uses||[],(function(t){s.isPlugin(t)&&s.register(t);var a=s.dependencyParse(t),i=s.resolve(t);return i&&!s.versionSatisfies(i.version,a.range)?(r.warn("Plugin.dependencies:",s.toString(i),"does not satisfy",s.toString(a),"used by",s.toString(n)+"."),i._warned=!0,e._warned=!0):i||(r.warn("Plugin.dependencies:",s.toString(t),"used by",s.toString(n),"could not be resolved."),e._warned=!0),a.name}));for(var i=0;i<t[a].length;i+=1)s.dependencies(t[a][i],t);return t}},s.dependencyParse=function(e){return r.isString(e)?(/^[\w-]+(@(\*|[\^~]?\d+\.\d+\.\d+(-[0-9A-Za-z-+]+)?))?$/.test(e)||r.warn("Plugin.dependencyParse:",e,"is not a valid dependency string."),{name:e.split("@")[0],range:e.split("@")[1]||"*"}):{name:e.name,range:e.range||e.version}},s.versionParse=function(e){var t=/^(\*)|(\^|~|>=|>)?\s*((\d+)\.(\d+)\.(\d+))(-[0-9A-Za-z-+]+)?$/;t.test(e)||r.warn("Plugin.versionParse:",e,"is not a valid version or range.");var n=t.exec(e),s=Number(n[4]),a=Number(n[5]),i=Number(n[6]);return{isRange:Boolean(n[1]||n[2]),version:n[3],range:e,operator:n[1]||n[2]||"",major:s,minor:a,patch:i,parts:[s,a,i],prerelease:n[7],number:1e8*s+1e4*a+i}},s.versionSatisfies=function(e,t){t=t||"*";var n=s.versionParse(t),r=s.versionParse(e);if(n.isRange){if("*"===n.operator||"*"===e)return!0;if(">"===n.operator)return r.number>n.number;if(">="===n.operator)return r.number>=n.number;if("~"===n.operator)return r.major===n.major&&r.minor===n.minor&&r.patch>=n.patch;if("^"===n.operator)return n.major>0?r.major===n.major&&r.number>=n.number:n.minor>0?r.minor===n.minor&&r.patch>=n.patch:r.patch===n.patch}return e===t||"*"===e}},function(e,t,n){var s={};e.exports=s;var r=n(0),a=n(5),i=n(1),o=n(4),l=n(2),u=n(13);!function(){var e,t;"undefined"!=typeof window&&(e=window.requestAnimationFrame||window.webkitRequestAnimationFrame||window.mozRequestAnimationFrame||window.msRequestAnimationFrame||function(e){window.setTimeout((function(){e(r.now())}),1e3/60)},t=window.cancelAnimationFrame||window.mozCancelAnimationFrame||window.webkitCancelAnimationFrame||window.msCancelAnimationFrame),s._goodFps=30,s._goodDelta=1e3/60,s.create=function(e){var t={controller:s,engine:null,element:null,canvas:null,mouse:null,frameRequestId:null,timing:{historySize:60,delta:0,deltaHistory:[],lastTime:0,lastTimestamp:0,lastElapsed:0,timestampElapsed:0,timestampElapsedHistory:[],engineDeltaHistory:[],engineElapsedHistory:[],elapsedHistory:[]},options:{width:800,height:600,pixelRatio:1,background:"#14151f",wireframeBackground:"#14151f",hasBounds:!!e.bounds,enabled:!0,wireframes:!0,showSleeping:!0,showDebug:!1,showStats:!1,showPerformance:!1,showBounds:!1,showVelocity:!1,showCollisions:!1,showSeparations:!1,showAxes:!1,showPositions:!1,showAngleIndicator:!1,showIds:!1,showVertexNumbers:!1,showConvexHulls:!1,showInternalEdges:!1,showMousePosition:!1}},n=r.extend(t,e);return n.canvas&&(n.canvas.width=n.options.width||n.canvas.width,n.canvas.height=n.options.height||n.canvas.height),n.mouse=e.mouse,n.engine=e.engine,n.canvas=n.canvas||h(n.options.width,n.options.height),n.context=n.canvas.getContext("2d"),n.textures={},n.bounds=n.bounds||{min:{x:0,y:0},max:{x:n.canvas.width,y:n.canvas.height}},n.options.showBroadphase=!1,1!==n.options.pixelRatio&&s.setPixelRatio(n,n.options.pixelRatio),r.isElement(n.element)?n.element.appendChild(n.canvas):n.canvas.parentNode||r.log("Render.create: options.element was undefined, render.canvas was created but not appended","warn"),n},s.run=function(t){!function r(a){t.frameRequestId=e(r),n(t,a),s.world(t,a),(t.options.showStats||t.options.showDebug)&&s.stats(t,t.context,a),(t.options.showPerformance||t.options.showDebug)&&s.performance(t,t.context,a)}()},s.stop=function(e){t(e.frameRequestId)},s.setPixelRatio=function(e,t){var n=e.options,s=e.canvas;"auto"===t&&(t=p(s)),n.pixelRatio=t,s.setAttribute("data-pixel-ratio",t),s.width=n.width*t,s.height=n.height*t,s.style.width=n.width+"px",s.style.height=n.height+"px"},s.lookAt=function(e,t,n,s){s=void 0===s||s,t=r.isArray(t)?t:[t],n=n||{x:0,y:0};for(var a={min:{x:1/0,y:1/0},max:{x:-1/0,y:-1/0}},i=0;i<t.length;i+=1){var o=t[i],l=o.bounds?o.bounds.min:o.min||o.position||o,c=o.bounds?o.bounds.max:o.max||o.position||o;l&&c&&(l.x<a.min.x&&(a.min.x=l.x),c.x>a.max.x&&(a.max.x=c.x),l.y<a.min.y&&(a.min.y=l.y),c.y>a.max.y&&(a.max.y=c.y))}var h=a.max.x-a.min.x+2*n.x,p=a.max.y-a.min.y+2*n.y,d=e.canvas.height,f=e.canvas.width/d,m=h/p,g=1,y=1;m>f?y=m/f:g=f/m,e.options.hasBounds=!0,e.bounds.min.x=a.min.x,e.bounds.max.x=a.min.x+h*g,e.bounds.min.y=a.min.y,e.bounds.max.y=a.min.y+p*y,s&&(e.bounds.min.x+=.5*h-h*g*.5,e.bounds.max.x+=.5*h-h*g*.5,e.bounds.min.y+=.5*p-p*y*.5,e.bounds.max.y+=.5*p-p*y*.5),e.bounds.min.x-=n.x,e.bounds.max.x-=n.x,e.bounds.min.y-=n.y,e.bounds.max.y-=n.y,e.mouse&&(u.setScale(e.mouse,{x:(e.bounds.max.x-e.bounds.min.x)/e.canvas.width,y:(e.bounds.max.y-e.bounds.min.y)/e.canvas.height}),u.setOffset(e.mouse,e.bounds.min))},s.startViewTransform=function(e){var t=e.bounds.max.x-e.bounds.min.x,n=e.bounds.max.y-e.bounds.min.y,s=t/e.options.width,r=n/e.options.height;e.context.setTransform(e.options.pixelRatio/s,0,0,e.options.pixelRatio/r,0,0),e.context.translate(-e.bounds.min.x,-e.bounds.min.y)},s.endViewTransform=function(e){e.context.setTransform(e.options.pixelRatio,0,0,e.options.pixelRatio,0,0)},s.world=function(e,t){var n,c=r.now(),h=e.engine,p=h.world,d=e.canvas,m=e.context,g=e.options,y=e.timing,b=a.allBodies(p),x=a.allConstraints(p),v=g.wireframes?g.wireframeBackground:g.background,w=[],k=[],I={timestamp:h.timing.timestamp};if(o.trigger(e,"beforeRender",I),e.currentBackground!==v&&f(e,v),m.globalCompositeOperation="source-in",m.fillStyle="transparent",m.fillRect(0,0,d.width,d.height),m.globalCompositeOperation="source-over",g.hasBounds){for(n=0;n<b.length;n++){var S=b[n];i.overlaps(S.bounds,e.bounds)&&w.push(S)}for(n=0;n<x.length;n++){var N=x[n],T=N.bodyA,C=N.bodyB,$=N.pointA,E=N.pointB;T&&($=l.add(T.position,N.pointA)),C&&(E=l.add(C.position,N.pointB)),$&&E&&(i.contains(e.bounds,$)||i.contains(e.bounds,E))&&k.push(N)}s.startViewTransform(e),e.mouse&&(u.setScale(e.mouse,{x:(e.bounds.max.x-e.bounds.min.x)/e.options.width,y:(e.bounds.max.y-e.bounds.min.y)/e.options.height}),u.setOffset(e.mouse,e.bounds.min))}else k=x,w=b,1!==e.options.pixelRatio&&e.context.setTransform(e.options.pixelRatio,0,0,e.options.pixelRatio,0,0);!g.wireframes||h.enableSleeping&&g.showSleeping?s.bodies(e,w,m):(g.showConvexHulls&&s.bodyConvexHulls(e,w,m),s.bodyWireframes(e,w,m)),g.showBounds&&s.bodyBounds(e,w,m),(g.showAxes||g.showAngleIndicator)&&s.bodyAxes(e,w,m),g.showPositions&&s.bodyPositions(e,w,m),g.showVelocity&&s.bodyVelocity(e,w,m),g.showIds&&s.bodyIds(e,w,m),g.showSeparations&&s.separations(e,h.pairs.list,m),g.showCollisions&&s.collisions(e,h.pairs.list,m),g.showVertexNumbers&&s.vertexNumbers(e,w,m),g.showMousePosition&&s.mousePosition(e,e.mouse,m),s.constraints(k,m),g.hasBounds&&s.endViewTransform(e),o.trigger(e,"afterRender",I),y.lastElapsed=r.now()-c},s.stats=function(e,t,n){for(var s=e.engine,r=s.world,i=a.allBodies(r),o=0,l=0,u=0;u<i.length;u+=1)o+=i[u].parts.length;var c={Part:o,Body:i.length,Cons:a.allConstraints(r).length,Comp:a.allComposites(r).length,Pair:s.pairs.list.length};for(var h in t.fillStyle="#0e0f19",t.fillRect(l,0,302.5,44),t.font="12px Arial",t.textBaseline="top",t.textAlign="right",c){var p=c[h];t.fillStyle="#aaa",t.fillText(h,l+55,8),t.fillStyle="#eee",t.fillText(p,l+55,26),l+=55}},s.performance=function(e,t){var n=e.engine,r=e.timing,a=r.deltaHistory,i=r.elapsedHistory,o=r.timestampElapsedHistory,l=r.engineDeltaHistory,u=r.engineElapsedHistory,h=n.timing.lastDelta,p=c(a),d=c(i),f=c(l),m=c(u),g=c(o)/p||0,y=1e3/p||0;t.fillStyle="#0e0f19",t.fillRect(0,50,370,34),s.status(t,10,69,60,4,a.length,Math.round(y)+" fps",y/s._goodFps,(function(e){return a[e]/p-1})),s.status(t,82,69,60,4,l.length,h.toFixed(2)+" dt",s._goodDelta/h,(function(e){return l[e]/f-1})),s.status(t,154,69,60,4,u.length,m.toFixed(2)+" ut",1-m/s._goodFps,(function(e){return u[e]/m-1})),s.status(t,226,69,60,4,i.length,d.toFixed(2)+" rt",1-d/s._goodFps,(function(e){return i[e]/d-1})),s.status(t,298,69,60,4,o.length,g.toFixed(2)+" x",g*g*g,(function(e){return(o[e]/a[e]/g||0)-1}))},s.status=function(e,t,n,s,a,i,o,l,u){e.strokeStyle="#888",e.fillStyle="#444",e.lineWidth=1,e.fillRect(t,n+7,s,1),e.beginPath(),e.moveTo(t,n+7-a*r.clamp(.4*u(0),-2,2));for(var c=0;c<s;c+=1)e.lineTo(t+c,n+7-(c<i?a*r.clamp(.4*u(c),-2,2):0));e.stroke(),e.fillStyle="hsl("+r.clamp(25+95*l,0,120)+",100%,60%)",e.fillRect(t,n-7,4,4),e.font="12px Arial",e.textBaseline="middle",e.textAlign="right",e.fillStyle="#eee",e.fillText(o,t+s,n-5)},s.constraints=function(e,t){for(var n=t,s=0;s<e.length;s++){var a=e[s];if(a.render.visible&&a.pointA&&a.pointB){var i,o,u=a.bodyA,c=a.bodyB;if(i=u?l.add(u.position,a.pointA):a.pointA,"pin"===a.render.type)n.beginPath(),n.arc(i.x,i.y,3,0,2*Math.PI),n.closePath();else{if(o=c?l.add(c.position,a.pointB):a.pointB,n.beginPath(),n.moveTo(i.x,i.y),"spring"===a.render.type)for(var h,p=l.sub(o,i),d=l.perp(l.normalise(p)),f=Math.ceil(r.clamp(a.length/5,12,20)),m=1;m<f;m+=1)h=m%2==0?1:-1,n.lineTo(i.x+p.x*(m/f)+d.x*h*4,i.y+p.y*(m/f)+d.y*h*4);n.lineTo(o.x,o.y)}a.render.lineWidth&&(n.lineWidth=a.render.lineWidth,n.strokeStyle=a.render.strokeStyle,n.stroke()),a.render.anchors&&(n.fillStyle=a.render.strokeStyle,n.beginPath(),n.arc(i.x,i.y,3,0,2*Math.PI),n.arc(o.x,o.y,3,0,2*Math.PI),n.closePath(),n.fill())}}},s.bodies=function(e,t,n){var s,r,a,i,o=n,l=(e.engine,e.options),u=l.showInternalEdges||!l.wireframes;for(a=0;a<t.length;a++)if((s=t[a]).render.visible)for(i=s.parts.length>1?1:0;i<s.parts.length;i++)if((r=s.parts[i]).render.visible){if(l.showSleeping&&s.isSleeping?o.globalAlpha=.5*r.render.opacity:1!==r.render.opacity&&(o.globalAlpha=r.render.opacity),r.render.sprite&&r.render.sprite.texture&&!l.wireframes){var c=r.render.sprite,h=d(e,c.texture);o.translate(r.position.x,r.position.y),o.rotate(r.angle),o.drawImage(h,h.width*-c.xOffset*c.xScale,h.height*-c.yOffset*c.yScale,h.width*c.xScale,h.height*c.yScale),o.rotate(-r.angle),o.translate(-r.position.x,-r.position.y)}else{if(r.circleRadius)o.beginPath(),o.arc(r.position.x,r.position.y,r.circleRadius,0,2*Math.PI);else{o.beginPath(),o.moveTo(r.vertices[0].x,r.vertices[0].y);for(var p=1;p<r.vertices.length;p++)!r.vertices[p-1].isInternal||u?o.lineTo(r.vertices[p].x,r.vertices[p].y):o.moveTo(r.vertices[p].x,r.vertices[p].y),r.vertices[p].isInternal&&!u&&o.moveTo(r.vertices[(p+1)%r.vertices.length].x,r.vertices[(p+1)%r.vertices.length].y);o.lineTo(r.vertices[0].x,r.vertices[0].y),o.closePath()}l.wireframes?(o.lineWidth=1,o.strokeStyle="#bbb",o.stroke()):(o.fillStyle=r.render.fillStyle,r.render.lineWidth&&(o.lineWidth=r.render.lineWidth,o.strokeStyle=r.render.strokeStyle,o.stroke()),o.fill())}o.globalAlpha=1}},s.bodyWireframes=function(e,t,n){var s,r,a,i,o,l=n,u=e.options.showInternalEdges;for(l.beginPath(),a=0;a<t.length;a++)if((s=t[a]).render.visible)for(o=s.parts.length>1?1:0;o<s.parts.length;o++){for(r=s.parts[o],l.moveTo(r.vertices[0].x,r.vertices[0].y),i=1;i<r.vertices.length;i++)!r.vertices[i-1].isInternal||u?l.lineTo(r.vertices[i].x,r.vertices[i].y):l.moveTo(r.vertices[i].x,r.vertices[i].y),r.vertices[i].isInternal&&!u&&l.moveTo(r.vertices[(i+1)%r.vertices.length].x,r.vertices[(i+1)%r.vertices.length].y);l.lineTo(r.vertices[0].x,r.vertices[0].y)}l.lineWidth=1,l.strokeStyle="#bbb",l.stroke()},s.bodyConvexHulls=function(e,t,n){var s,r,a,i=n;for(i.beginPath(),r=0;r<t.length;r++)if((s=t[r]).render.visible&&1!==s.parts.length){for(i.moveTo(s.vertices[0].x,s.vertices[0].y),a=1;a<s.vertices.length;a++)i.lineTo(s.vertices[a].x,s.vertices[a].y);i.lineTo(s.vertices[0].x,s.vertices[0].y)}i.lineWidth=1,i.strokeStyle="rgba(255,255,255,0.2)",i.stroke()},s.vertexNumbers=function(e,t,n){var s,r,a,i=n;for(s=0;s<t.length;s++){var o=t[s].parts;for(a=o.length>1?1:0;a<o.length;a++){var l=o[a];for(r=0;r<l.vertices.length;r++)i.fillStyle="rgba(255,255,255,0.2)",i.fillText(s+"_"+r,l.position.x+.8*(l.vertices[r].x-l.position.x),l.position.y+.8*(l.vertices[r].y-l.position.y))}}},s.mousePosition=function(e,t,n){var s=n;s.fillStyle="rgba(255,255,255,0.8)",s.fillText(t.position.x+"  "+t.position.y,t.position.x+5,t.position.y-5)},s.bodyBounds=function(e,t,n){var s=n,r=(e.engine,e.options);s.beginPath();for(var a=0;a<t.length;a++)if(t[a].render.visible)for(var i=t[a].parts,o=i.length>1?1:0;o<i.length;o++){var l=i[o];s.rect(l.bounds.min.x,l.bounds.min.y,l.bounds.max.x-l.bounds.min.x,l.bounds.max.y-l.bounds.min.y)}r.wireframes?s.strokeStyle="rgba(255,255,255,0.08)":s.strokeStyle="rgba(0,0,0,0.1)",s.lineWidth=1,s.stroke()},s.bodyAxes=function(e,t,n){var s,r,a,i,o=n,l=(e.engine,e.options);for(o.beginPath(),r=0;r<t.length;r++){var u=t[r],c=u.parts;if(u.render.visible)if(l.showAxes)for(a=c.length>1?1:0;a<c.length;a++)for(s=c[a],i=0;i<s.axes.length;i++){var h=s.axes[i];o.moveTo(s.position.x,s.position.y),o.lineTo(s.position.x+20*h.x,s.position.y+20*h.y)}else for(a=c.length>1?1:0;a<c.length;a++)for(s=c[a],i=0;i<s.axes.length;i++)o.moveTo(s.position.x,s.position.y),o.lineTo((s.vertices[0].x+s.vertices[s.vertices.length-1].x)/2,(s.vertices[0].y+s.vertices[s.vertices.length-1].y)/2)}l.wireframes?(o.strokeStyle="indianred",o.lineWidth=1):(o.strokeStyle="rgba(255, 255, 255, 0.4)",o.globalCompositeOperation="overlay",o.lineWidth=2),o.stroke(),o.globalCompositeOperation="source-over"},s.bodyPositions=function(e,t,n){var s,r,a,i,o=n,l=(e.engine,e.options);for(o.beginPath(),a=0;a<t.length;a++)if((s=t[a]).render.visible)for(i=0;i<s.parts.length;i++)r=s.parts[i],o.arc(r.position.x,r.position.y,3,0,2*Math.PI,!1),o.closePath();for(l.wireframes?o.fillStyle="indianred":o.fillStyle="rgba(0,0,0,0.5)",o.fill(),o.beginPath(),a=0;a<t.length;a++)(s=t[a]).render.visible&&(o.arc(s.positionPrev.x,s.positionPrev.y,2,0,2*Math.PI,!1),o.closePath());o.fillStyle="rgba(255,165,0,0.8)",o.fill()},s.bodyVelocity=function(e,t,n){var s=n;s.beginPath();for(var r=0;r<t.length;r++){var a=t[r];a.render.visible&&(s.moveTo(a.position.x,a.position.y),s.lineTo(a.position.x+2*(a.position.x-a.positionPrev.x),a.position.y+2*(a.position.y-a.positionPrev.y)))}s.lineWidth=3,s.strokeStyle="cornflowerblue",s.stroke()},s.bodyIds=function(e,t,n){var s,r,a=n;for(s=0;s<t.length;s++)if(t[s].render.visible){var i=t[s].parts;for(r=i.length>1?1:0;r<i.length;r++){var o=i[r];a.font="12px Arial",a.fillStyle="rgba(255,255,255,0.5)",a.fillText(o.id,o.position.x+10,o.position.y-10)}}},s.collisions=function(e,t,n){var s,r,a,i,o=n,l=e.options;for(o.beginPath(),a=0;a<t.length;a++)if((s=t[a]).isActive)for(r=s.collision,i=0;i<s.activeContacts.length;i++){var u=s.activeContacts[i].vertex;o.rect(u.x-1.5,u.y-1.5,3.5,3.5)}for(l.wireframes?o.fillStyle="rgba(255,255,255,0.7)":o.fillStyle="orange",o.fill(),o.beginPath(),a=0;a<t.length;a++)if((s=t[a]).isActive&&(r=s.collision,s.activeContacts.length>0)){var c=s.activeContacts[0].vertex.x,h=s.activeContacts[0].vertex.y;2===s.activeContacts.length&&(c=(s.activeContacts[0].vertex.x+s.activeContacts[1].vertex.x)/2,h=(s.activeContacts[0].vertex.y+s.activeContacts[1].vertex.y)/2),r.bodyB===r.supports[0].body||!0===r.bodyA.isStatic?o.moveTo(c-8*r.normal.x,h-8*r.normal.y):o.moveTo(c+8*r.normal.x,h+8*r.normal.y),o.lineTo(c,h)}l.wireframes?o.strokeStyle="rgba(255,165,0,0.7)":o.strokeStyle="orange",o.lineWidth=1,o.stroke()},s.separations=function(e,t,n){var s,r,a,i,o,l=n,u=e.options;for(l.beginPath(),o=0;o<t.length;o++)if((s=t[o]).isActive){a=(r=s.collision).bodyA;var c=1;(i=r.bodyB).isStatic||a.isStatic||(c=.5),i.isStatic&&(c=0),l.moveTo(i.position.x,i.position.y),l.lineTo(i.position.x-r.penetration.x*c,i.position.y-r.penetration.y*c),c=1,i.isStatic||a.isStatic||(c=.5),a.isStatic&&(c=0),l.moveTo(a.position.x,a.position.y),l.lineTo(a.position.x+r.penetration.x*c,a.position.y+r.penetration.y*c)}u.wireframes?l.strokeStyle="rgba(255,165,0,0.5)":l.strokeStyle="orange",l.stroke()},s.inspector=function(e,t){e.engine;var n,s=e.selected,r=e.render,a=r.options;if(a.hasBounds){var i=r.bounds.max.x-r.bounds.min.x,o=r.bounds.max.y-r.bounds.min.y,l=i/r.options.width,u=o/r.options.height;t.scale(1/l,1/u),t.translate(-r.bounds.min.x,-r.bounds.min.y)}for(var c=0;c<s.length;c++){var h=s[c].data;switch(t.translate(.5,.5),t.lineWidth=1,t.strokeStyle="rgba(255,165,0,0.9)",t.setLineDash([1,2]),h.type){case"body":n=h.bounds,t.beginPath(),t.rect(Math.floor(n.min.x-3),Math.floor(n.min.y-3),Math.floor(n.max.x-n.min.x+6),Math.floor(n.max.y-n.min.y+6)),t.closePath(),t.stroke();break;case"constraint":var p=h.pointA;h.bodyA&&(p=h.pointB),t.beginPath(),t.arc(p.x,p.y,10,0,2*Math.PI),t.closePath(),t.stroke()}t.setLineDash([]),t.translate(-.5,-.5)}null!==e.selectStart&&(t.translate(.5,.5),t.lineWidth=1,t.strokeStyle="rgba(255,165,0,0.6)",t.fillStyle="rgba(255,165,0,0.1)",n=e.selectBounds,t.beginPath(),t.rect(Math.floor(n.min.x),Math.floor(n.min.y),Math.floor(n.max.x-n.min.x),Math.floor(n.max.y-n.min.y)),t.closePath(),t.stroke(),t.fill(),t.translate(-.5,-.5)),a.hasBounds&&t.setTransform(1,0,0,1,0,0)};var n=function(e,t){var n=e.engine,r=e.timing,a=r.historySize,i=n.timing.timestamp;r.delta=t-r.lastTime||s._goodDelta,r.lastTime=t,r.timestampElapsed=i-r.lastTimestamp||0,r.lastTimestamp=i,r.deltaHistory.unshift(r.delta),r.deltaHistory.length=Math.min(r.deltaHistory.length,a),r.engineDeltaHistory.unshift(n.timing.lastDelta),r.engineDeltaHistory.length=Math.min(r.engineDeltaHistory.length,a),r.timestampElapsedHistory.unshift(r.timestampElapsed),r.timestampElapsedHistory.length=Math.min(r.timestampElapsedHistory.length,a),r.engineElapsedHistory.unshift(n.timing.lastElapsed),r.engineElapsedHistory.length=Math.min(r.engineElapsedHistory.length,a),r.elapsedHistory.unshift(r.lastElapsed),r.elapsedHistory.length=Math.min(r.elapsedHistory.length,a)},c=function(e){for(var t=0,n=0;n<e.length;n+=1)t+=e[n];return t/e.length||0},h=function(e,t){var n=document.createElement("canvas");return n.width=e,n.height=t,n.oncontextmenu=function(){return!1},n.onselectstart=function(){return!1},n},p=function(e){var t=e.getContext("2d");return(window.devicePixelRatio||1)/(t.webkitBackingStorePixelRatio||t.mozBackingStorePixelRatio||t.msBackingStorePixelRatio||t.oBackingStorePixelRatio||t.backingStorePixelRatio||1)},d=function(e,t){var n=e.textures[t];return n||((n=e.textures[t]=new Image).src=t,n)},f=function(e,t){var n=t;/(jpg|gif|png)$/.test(t)&&(n="url("+t+")"),e.canvas.style.background=n,e.canvas.style.backgroundSize="contain",e.currentBackground=t}}()},function(e,t){var n={};e.exports=n,n.create=function(e){return{vertex:e,normalImpulse:0,tangentImpulse:0}}},function(e,t,n){var s={};e.exports=s;var r=n(7),a=n(19),i=n(14),o=n(20),l=n(4),u=n(5),c=n(10),h=n(0),p=n(6);s.create=function(e){e=e||{};var t=h.extend({positionIterations:6,velocityIterations:4,constraintIterations:2,enableSleeping:!1,events:[],plugin:{},gravity:{x:0,y:1,scale:.001},timing:{timestamp:0,timeScale:1,lastDelta:0,lastElapsed:0}},e);return t.world=e.world||u.create({label:"World"}),t.pairs=e.pairs||o.create(),t.detector=e.detector||i.create(),t.grid={buckets:[]},t.world.gravity=t.gravity,t.broadphase=t.grid,t.metrics={},t},s.update=function(e,t,n){var p=h.now();t=t||1e3/60,n=n||1;var d,f=e.world,m=e.detector,g=e.pairs,y=e.timing,b=y.timestamp;y.timestamp+=t*y.timeScale,y.lastDelta=t*y.timeScale;var x={timestamp:y.timestamp};l.trigger(e,"beforeUpdate",x);var v=u.allBodies(f),w=u.allConstraints(f);for(f.isModified&&i.setBodies(m,v),f.isModified&&u.setModified(f,!1,!1,!0),e.enableSleeping&&r.update(v,y.timeScale),s._bodiesApplyGravity(v,e.gravity),s._bodiesUpdate(v,t,y.timeScale,n,f.bounds),c.preSolveAll(v),d=0;d<e.constraintIterations;d++)c.solveAll(w,y.timeScale);c.postSolveAll(v),m.pairs=e.pairs;var k=i.collisions(m);for(o.update(g,k,b),e.enableSleeping&&r.afterCollisions(g.list,y.timeScale),g.collisionStart.length>0&&l.trigger(e,"collisionStart",{pairs:g.collisionStart}),a.preSolvePosition(g.list),d=0;d<e.positionIterations;d++)a.solvePosition(g.list,y.timeScale);for(a.postSolvePosition(v),c.preSolveAll(v),d=0;d<e.constraintIterations;d++)c.solveAll(w,y.timeScale);for(c.postSolveAll(v),a.preSolveVelocity(g.list),d=0;d<e.velocityIterations;d++)a.solveVelocity(g.list,y.timeScale);return g.collisionActive.length>0&&l.trigger(e,"collisionActive",{pairs:g.collisionActive}),g.collisionEnd.length>0&&l.trigger(e,"collisionEnd",{pairs:g.collisionEnd}),s._bodiesClearForces(v),l.trigger(e,"afterUpdate",x),e.timing.lastElapsed=h.now()-p,e},s.merge=function(e,t){if(h.extend(e,t),t.world){e.world=t.world,s.clear(e);for(var n=u.allBodies(e.world),a=0;a<n.length;a++){var i=n[a];r.set(i,!1),i.id=h.nextId()}}},s.clear=function(e){o.clear(e.pairs),i.clear(e.detector)},s._bodiesClearForces=function(e){for(var t=0;t<e.length;t++){var n=e[t];n.force.x=0,n.force.y=0,n.torque=0}},s._bodiesApplyGravity=function(e,t){var n=void 0!==t.scale?t.scale:.001;if((0!==t.x||0!==t.y)&&0!==n)for(var s=0;s<e.length;s++){var r=e[s];r.isStatic||r.isSleeping||(r.force.y+=r.mass*t.y*n,r.force.x+=r.mass*t.x*n)}},s._bodiesUpdate=function(e,t,n,s,r){for(var a=0;a<e.length;a++){var i=e[a];i.isStatic||i.isSleeping||p.update(i,t,n,s)}}},function(e,t,n){var s={};e.exports=s;var r=n(3),a=n(1);s._restingThresh=4,s._restingThreshTangent=6,s._positionDampen=.9,s._positionWarming=.8,s._frictionNormalMultiplier=5,s.preSolvePosition=function(e){var t,n,s,r=e.length;for(t=0;t<r;t++)(n=e[t]).isActive&&(s=n.activeContacts.length,n.collision.parentA.totalContacts+=s,n.collision.parentB.totalContacts+=s)},s.solvePosition=function(e,t){var n,r,a,i,o,l,u,c,h=s._positionDampen,p=e.length;for(n=0;n<p;n++)(r=e[n]).isActive&&!r.isSensor&&(i=(a=r.collision).parentA,o=a.parentB,l=a.normal,r.separation=l.x*(o.positionImpulse.x+a.penetration.x-i.positionImpulse.x)+l.y*(o.positionImpulse.y+a.penetration.y-i.positionImpulse.y));for(n=0;n<p;n++)(r=e[n]).isActive&&!r.isSensor&&(i=(a=r.collision).parentA,o=a.parentB,l=a.normal,c=(r.separation-r.slop)*t,(i.isStatic||o.isStatic)&&(c*=2),i.isStatic||i.isSleeping||(u=h/i.totalContacts,i.positionImpulse.x+=l.x*c*u,i.positionImpulse.y+=l.y*c*u),o.isStatic||o.isSleeping||(u=h/o.totalContacts,o.positionImpulse.x-=l.x*c*u,o.positionImpulse.y-=l.y*c*u))},s.postSolvePosition=function(e){for(var t=s._positionWarming,n=e.length,i=r.translate,o=a.update,l=0;l<n;l++){var u=e[l],c=u.positionImpulse,h=c.x,p=c.y,d=u.velocity;if(u.totalContacts=0,0!==h||0!==p){for(var f=0;f<u.parts.length;f++){var m=u.parts[f];i(m.vertices,c),o(m.bounds,m.vertices,d),m.position.x+=h,m.position.y+=p}u.positionPrev.x+=h,u.positionPrev.y+=p,h*d.x+p*d.y<0?(c.x=0,c.y=0):(c.x*=t,c.y*=t)}}},s.preSolveVelocity=function(e){var t,n,s=e.length;for(t=0;t<s;t++){var r=e[t];if(r.isActive&&!r.isSensor){var a=r.activeContacts,i=a.length,o=r.collision,l=o.parentA,u=o.parentB,c=o.normal,h=o.tangent;for(n=0;n<i;n++){var p=a[n],d=p.vertex,f=p.normalImpulse,m=p.tangentImpulse;if(0!==f||0!==m){var g=c.x*f+h.x*m,y=c.y*f+h.y*m;l.isStatic||l.isSleeping||(l.positionPrev.x+=g*l.inverseMass,l.positionPrev.y+=y*l.inverseMass,l.anglePrev+=l.inverseInertia*((d.x-l.position.x)*y-(d.y-l.position.y)*g)),u.isStatic||u.isSleeping||(u.positionPrev.x-=g*u.inverseMass,u.positionPrev.y-=y*u.inverseMass,u.anglePrev-=u.inverseInertia*((d.x-u.position.x)*y-(d.y-u.position.y)*g))}}}}},s.solveVelocity=function(e,t){var n,r,a,i,o=t*t,l=s._restingThresh*o,u=s._frictionNormalMultiplier,c=s._restingThreshTangent*o,h=Number.MAX_VALUE,p=e.length;for(a=0;a<p;a++){var d=e[a];if(d.isActive&&!d.isSensor){var f=d.collision,m=f.parentA,g=f.parentB,y=m.velocity,b=g.velocity,x=f.normal.x,v=f.normal.y,w=f.tangent.x,k=f.tangent.y,I=d.activeContacts,S=I.length,N=1/S,T=m.inverseMass+g.inverseMass,C=d.friction*d.frictionStatic*u*o;for(y.x=m.position.x-m.positionPrev.x,y.y=m.position.y-m.positionPrev.y,b.x=g.position.x-g.positionPrev.x,b.y=g.position.y-g.positionPrev.y,m.angularVelocity=m.angle-m.anglePrev,g.angularVelocity=g.angle-g.anglePrev,i=0;i<S;i++){var $=I[i],E=$.vertex,A=E.x-m.position.x,_=E.y-m.position.y,R=E.x-g.position.x,F=E.y-g.position.y,D=y.x-_*m.angularVelocity,O=y.y+A*m.angularVelocity,M=D-(b.x-F*g.angularVelocity),L=O-(b.y+R*g.angularVelocity),z=x*M+v*L,P=w*M+k*L,B=d.separation+z,W=Math.min(B,1),V=(W=B<0?0:W)*C;P>V||-P>V?(r=P>0?P:-P,(n=d.friction*(P>0?1:-1)*o)<-r?n=-r:n>r&&(n=r)):(n=P,r=h);var U=A*v-_*x,G=R*v-F*x,H=N/(T+m.inverseInertia*U*U+g.inverseInertia*G*G),j=(1+d.restitution)*z*H;if(n*=H,z*z>l&&z<0)$.normalImpulse=0;else{var q=$.normalImpulse;$.normalImpulse+=j,$.normalImpulse=Math.min($.normalImpulse,0),j=$.normalImpulse-q}if(P*P>c)$.tangentImpulse=0;else{var K=$.tangentImpulse;$.tangentImpulse+=n,$.tangentImpulse<-r&&($.tangentImpulse=-r),$.tangentImpulse>r&&($.tangentImpulse=r),n=$.tangentImpulse-K}var X=x*j+w*n,Y=v*j+k*n;m.isStatic||m.isSleeping||(m.positionPrev.x+=X*m.inverseMass,m.positionPrev.y+=Y*m.inverseMass,m.anglePrev+=(A*Y-_*X)*m.inverseInertia),g.isStatic||g.isSleeping||(g.positionPrev.x-=X*g.inverseMass,g.positionPrev.y-=Y*g.inverseMass,g.anglePrev-=(R*Y-F*X)*g.inverseInertia)}}}}},function(e,t,n){var s={};e.exports=s;var r=n(9),a=n(0);s.create=function(e){return a.extend({table:{},list:[],collisionStart:[],collisionActive:[],collisionEnd:[]},e)},s.update=function(e,t,n){var s,a,i,o,l=e.list,u=l.length,c=e.table,h=t.length,p=e.collisionStart,d=e.collisionEnd,f=e.collisionActive;for(p.length=0,d.length=0,f.length=0,o=0;o<u;o++)l[o].confirmedActive=!1;for(o=0;o<h;o++)(i=(s=t[o]).pair)?(i.isActive?f.push(i):p.push(i),r.update(i,s,n),i.confirmedActive=!0):(c[(i=r.create(s,n)).id]=i,p.push(i),l.push(i));var m=[];for(u=l.length,o=0;o<u;o++)(i=l[o]).confirmedActive||(r.setActive(i,!1,n),d.push(i),i.collision.bodyA.isSleeping||i.collision.bodyB.isSleeping||m.push(o));for(o=0;o<m.length;o++)i=l[a=m[o]-o],l.splice(a,1),delete c[i.id]},s.clear=function(e){return e.table={},e.list.length=0,e.collisionStart.length=0,e.collisionActive.length=0,e.collisionEnd.length=0,e}},function(e,t,n){var s=e.exports=n(22);s.Axes=n(11),s.Bodies=n(12),s.Body=n(6),s.Bounds=n(1),s.Collision=n(8),s.Common=n(0),s.Composite=n(5),s.Composites=n(23),s.Constraint=n(10),s.Contact=n(17),s.Detector=n(14),s.Engine=n(18),s.Events=n(4),s.Grid=n(24),s.Mouse=n(13),s.MouseConstraint=n(25),s.Pair=n(9),s.Pairs=n(20),s.Plugin=n(15),s.Query=n(26),s.Render=n(16),s.Resolver=n(19),s.Runner=n(27),s.SAT=n(28),s.Sleeping=n(7),s.Svg=n(29),s.Vector=n(2),s.Vertices=n(3),s.World=n(30),s.Engine.run=s.Runner.run,s.Common.deprecated(s.Engine,"run","Engine.run ➤ use Matter.Runner.run(engine) instead")},function(e,t,n){var s={};e.exports=s;var r=n(15),a=n(0);s.name="matter-js",s.version="0.18.0",s.uses=[],s.used=[],s.use=function(){r.use(s,Array.prototype.slice.call(arguments))},s.before=function(e,t){return e=e.replace(/^Matter./,""),a.chainPathBefore(s,e,t)},s.after=function(e,t){return e=e.replace(/^Matter./,""),a.chainPathAfter(s,e,t)}},function(e,t,n){var s={};e.exports=s;var r=n(5),a=n(10),i=n(0),o=n(6),l=n(12),u=i.deprecated;s.stack=function(e,t,n,s,a,i,l){for(var u,c=r.create({label:"Stack"}),h=e,p=t,d=0,f=0;f<s;f++){for(var m=0,g=0;g<n;g++){var y=l(h,p,g,f,u,d);if(y){var b=y.bounds.max.y-y.bounds.min.y,x=y.bounds.max.x-y.bounds.min.x;b>m&&(m=b),o.translate(y,{x:.5*x,y:.5*b}),h=y.bounds.max.x+a,r.addBody(c,y),u=y,d+=1}else h+=a}p+=m+i,h=e}return c},s.chain=function(e,t,n,s,o,l){for(var u=e.bodies,c=1;c<u.length;c++){var h=u[c-1],p=u[c],d=h.bounds.max.y-h.bounds.min.y,f=h.bounds.max.x-h.bounds.min.x,m=p.bounds.max.y-p.bounds.min.y,g={bodyA:h,pointA:{x:f*t,y:d*n},bodyB:p,pointB:{x:(p.bounds.max.x-p.bounds.min.x)*s,y:m*o}},y=i.extend(g,l);r.addConstraint(e,a.create(y))}return e.label+=" Chain",e},s.mesh=function(e,t,n,s,o){var l,u,c,h,p,d=e.bodies;for(l=0;l<n;l++){for(u=1;u<t;u++)c=d[u-1+l*t],h=d[u+l*t],r.addConstraint(e,a.create(i.extend({bodyA:c,bodyB:h},o)));if(l>0)for(u=0;u<t;u++)c=d[u+(l-1)*t],h=d[u+l*t],r.addConstraint(e,a.create(i.extend({bodyA:c,bodyB:h},o))),s&&u>0&&(p=d[u-1+(l-1)*t],r.addConstraint(e,a.create(i.extend({bodyA:p,bodyB:h},o)))),s&&u<t-1&&(p=d[u+1+(l-1)*t],r.addConstraint(e,a.create(i.extend({bodyA:p,bodyB:h},o))))}return e.label+=" Mesh",e},s.pyramid=function(e,t,n,r,a,i,l){return s.stack(e,t,n,r,a,i,(function(t,s,i,u,c,h){var p=Math.min(r,Math.ceil(n/2)),d=c?c.bounds.max.x-c.bounds.min.x:0;if(!(u>p||i<(u=p-u)||i>n-1-u))return 1===h&&o.translate(c,{x:(i+(n%2==1?1:-1))*d,y:0}),l(e+(c?i*d:0)+i*a,s,i,u,c,h)}))},s.newtonsCradle=function(e,t,n,s,i){for(var o=r.create({label:"Newtons Cradle"}),u=0;u<n;u++){var c=l.circle(e+u*(1.9*s),t+i,s,{inertia:1/0,restitution:1,friction:0,frictionAir:1e-4,slop:1}),h=a.create({pointA:{x:e+u*(1.9*s),y:t},bodyB:c});r.addBody(o,c),r.addConstraint(o,h)}return o},u(s,"newtonsCradle","Composites.newtonsCradle ➤ moved to newtonsCradle example"),s.car=function(e,t,n,s,i){var u=o.nextGroup(!0),c=.5*-n+20,h=.5*n-20,p=r.create({label:"Car"}),d=l.rectangle(e,t,n,s,{collisionFilter:{group:u},chamfer:{radius:.5*s},density:2e-4}),f=l.circle(e+c,t+0,i,{collisionFilter:{group:u},friction:.8}),m=l.circle(e+h,t+0,i,{collisionFilter:{group:u},friction:.8}),g=a.create({bodyB:d,pointB:{x:c,y:0},bodyA:f,stiffness:1,length:0}),y=a.create({bodyB:d,pointB:{x:h,y:0},bodyA:m,stiffness:1,length:0});return r.addBody(p,d),r.addBody(p,f),r.addBody(p,m),r.addConstraint(p,g),r.addConstraint(p,y),p},u(s,"car","Composites.car ➤ moved to car example"),s.softBody=function(e,t,n,r,a,o,u,c,h,p){h=i.extend({inertia:1/0},h),p=i.extend({stiffness:.2,render:{type:"line",anchors:!1}},p);var d=s.stack(e,t,n,r,a,o,(function(e,t){return l.circle(e,t,c,h)}));return s.mesh(d,n,r,u,p),d.label="Soft Body",d},u(s,"softBody","Composites.softBody ➤ moved to softBody and cloth examples")},function(e,t,n){var s={};e.exports=s;var r=n(9),a=n(0),i=a.deprecated;s.create=function(e){return a.extend({buckets:{},pairs:{},pairsList:[],bucketWidth:48,bucketHeight:48},e)},s.update=function(e,t,n,r){var a,i,o,l,u,c=n.world,h=e.buckets,p=!1;for(a=0;a<t.length;a++){var d=t[a];if((!d.isSleeping||r)&&(!c.bounds||!(d.bounds.max.x<c.bounds.min.x||d.bounds.min.x>c.bounds.max.x||d.bounds.max.y<c.bounds.min.y||d.bounds.min.y>c.bounds.max.y))){var f=s._getRegion(e,d);if(!d.region||f.id!==d.region.id||r){d.region&&!r||(d.region=f);var m=s._regionUnion(f,d.region);for(i=m.startCol;i<=m.endCol;i++)for(o=m.startRow;o<=m.endRow;o++){l=h[u=s._getBucketId(i,o)];var g=i>=f.startCol&&i<=f.endCol&&o>=f.startRow&&o<=f.endRow,y=i>=d.region.startCol&&i<=d.region.endCol&&o>=d.region.startRow&&o<=d.region.endRow;!g&&y&&y&&l&&s._bucketRemoveBody(e,l,d),(d.region===f||g&&!y||r)&&(l||(l=s._createBucket(h,u)),s._bucketAddBody(e,l,d))}d.region=f,p=!0}}}p&&(e.pairsList=s._createActivePairsList(e))},i(s,"update","Grid.update ➤ replaced by Matter.Detector"),s.clear=function(e){e.buckets={},e.pairs={},e.pairsList=[]},i(s,"clear","Grid.clear ➤ replaced by Matter.Detector"),s._regionUnion=function(e,t){var n=Math.min(e.startCol,t.startCol),r=Math.max(e.endCol,t.endCol),a=Math.min(e.startRow,t.startRow),i=Math.max(e.endRow,t.endRow);return s._createRegion(n,r,a,i)},s._getRegion=function(e,t){var n=t.bounds,r=Math.floor(n.min.x/e.bucketWidth),a=Math.floor(n.max.x/e.bucketWidth),i=Math.floor(n.min.y/e.bucketHeight),o=Math.floor(n.max.y/e.bucketHeight);return s._createRegion(r,a,i,o)},s._createRegion=function(e,t,n,s){return{id:e+","+t+","+n+","+s,startCol:e,endCol:t,startRow:n,endRow:s}},s._getBucketId=function(e,t){return"C"+e+"R"+t},s._createBucket=function(e,t){return e[t]=[]},s._bucketAddBody=function(e,t,n){var s,a=e.pairs,i=r.id,o=t.length;for(s=0;s<o;s++){var l=t[s];if(!(n.id===l.id||n.isStatic&&l.isStatic)){var u=i(n,l),c=a[u];c?c[2]+=1:a[u]=[n,l,1]}}t.push(n)},s._bucketRemoveBody=function(e,t,n){var s,i=e.pairs,o=r.id;t.splice(a.indexOf(t,n),1);var l=t.length;for(s=0;s<l;s++){var u=i[o(n,t[s])];u&&(u[2]-=1)}},s._createActivePairsList=function(e){var t,n,s=e.pairs,r=a.keys(s),i=r.length,o=[];for(n=0;n<i;n++)(t=s[r[n]])[2]>0?o.push(t):delete s[r[n]];return o}},function(e,t,n){var s={};e.exports=s;var r=n(3),a=n(7),i=n(13),o=n(4),l=n(14),u=n(10),c=n(5),h=n(0),p=n(1);s.create=function(e,t){var n=(e?e.mouse:null)||(t?t.mouse:null);n||(e&&e.render&&e.render.canvas?n=i.create(e.render.canvas):t&&t.element?n=i.create(t.element):(n=i.create(),h.warn("MouseConstraint.create: options.mouse was undefined, options.element was undefined, may not function as expected")));var r={type:"mouseConstraint",mouse:n,element:null,body:null,constraint:u.create({label:"Mouse Constraint",pointA:n.position,pointB:{x:0,y:0},length:.01,stiffness:.1,angularStiffness:1,render:{strokeStyle:"#90EE90",lineWidth:3}}),collisionFilter:{category:1,mask:4294967295,group:0}},a=h.extend(r,t);return o.on(e,"beforeUpdate",(function(){var t=c.allBodies(e.world);s.update(a,t),s._triggerEvents(a)})),a},s.update=function(e,t){var n=e.mouse,s=e.constraint,i=e.body;if(0===n.button){if(s.bodyB)a.set(s.bodyB,!1),s.pointA=n.position;else for(var u=0;u<t.length;u++)if(i=t[u],p.contains(i.bounds,n.position)&&l.canCollide(i.collisionFilter,e.collisionFilter))for(var c=i.parts.length>1?1:0;c<i.parts.length;c++){var h=i.parts[c];if(r.contains(h.vertices,n.position)){s.pointA=n.position,s.bodyB=e.body=i,s.pointB={x:n.position.x-i.position.x,y:n.position.y-i.position.y},s.angleB=i.angle,a.set(i,!1),o.trigger(e,"startdrag",{mouse:n,body:i});break}}}else s.bodyB=e.body=null,s.pointB=null,i&&o.trigger(e,"enddrag",{mouse:n,body:i})},s._triggerEvents=function(e){var t=e.mouse,n=t.sourceEvents;n.mousemove&&o.trigger(e,"mousemove",{mouse:t}),n.mousedown&&o.trigger(e,"mousedown",{mouse:t}),n.mouseup&&o.trigger(e,"mouseup",{mouse:t}),i.clearSourceEvents(t)}},function(e,t,n){var s={};e.exports=s;var r=n(2),a=n(8),i=n(1),o=n(12),l=n(3);s.collides=function(e,t){for(var n=[],s=t.length,r=e.bounds,o=a.collides,l=i.overlaps,u=0;u<s;u++){var c=t[u],h=c.parts.length,p=1===h?0:1;if(l(c.bounds,r))for(var d=p;d<h;d++){var f=c.parts[d];if(l(f.bounds,r)){var m=o(f,e);if(m){n.push(m);break}}}}return n},s.ray=function(e,t,n,a){a=a||1e-100;for(var i=r.angle(t,n),l=r.magnitude(r.sub(t,n)),u=.5*(n.x+t.x),c=.5*(n.y+t.y),h=o.rectangle(u,c,l,a,{angle:i}),p=s.collides(h,e),d=0;d<p.length;d+=1){var f=p[d];f.body=f.bodyB=f.bodyA}return p},s.region=function(e,t,n){for(var s=[],r=0;r<e.length;r++){var a=e[r],o=i.overlaps(a.bounds,t);(o&&!n||!o&&n)&&s.push(a)}return s},s.point=function(e,t){for(var n=[],s=0;s<e.length;s++){var r=e[s];if(i.contains(r.bounds,t))for(var a=1===r.parts.length?0:1;a<r.parts.length;a++){var o=r.parts[a];if(i.contains(o.bounds,t)&&l.contains(o.vertices,t)){n.push(r);break}}}return n}},function(e,t,n){var s={};e.exports=s;var r,a,i,o=n(4),l=n(18),u=n(0);"undefined"!=typeof window&&(r=window.requestAnimationFrame||window.webkitRequestAnimationFrame||window.mozRequestAnimationFrame||window.msRequestAnimationFrame,a=window.cancelAnimationFrame||window.mozCancelAnimationFrame||window.webkitCancelAnimationFrame||window.msCancelAnimationFrame),r||(r=function(e){i=setTimeout((function(){e(u.now())}),1e3/60)},a=function(){clearTimeout(i)}),s.create=function(e){var t=u.extend({fps:60,correction:1,deltaSampleSize:60,counterTimestamp:0,frameCounter:0,deltaHistory:[],timePrev:null,timeScalePrev:1,frameRequestId:null,isFixed:!1,enabled:!0},e);return t.delta=t.delta||1e3/t.fps,t.deltaMin=t.deltaMin||1e3/t.fps,t.deltaMax=t.deltaMax||1e3/(.5*t.fps),t.fps=1e3/t.delta,t},s.run=function(e,t){return void 0!==e.positionIterations&&(t=e,e=s.create()),function n(a){e.frameRequestId=r(n),a&&e.enabled&&s.tick(e,t,a)}(),e},s.tick=function(e,t,n){var s,r=t.timing,a=1,i={timestamp:r.timestamp};o.trigger(e,"beforeTick",i),e.isFixed?s=e.delta:(s=n-e.timePrev||e.delta,e.timePrev=n,e.deltaHistory.push(s),e.deltaHistory=e.deltaHistory.slice(-e.deltaSampleSize),a=(s=(s=(s=Math.min.apply(null,e.deltaHistory))<e.deltaMin?e.deltaMin:s)>e.deltaMax?e.deltaMax:s)/e.delta,e.delta=s),0!==e.timeScalePrev&&(a*=r.timeScale/e.timeScalePrev),0===r.timeScale&&(a=0),e.timeScalePrev=r.timeScale,e.correction=a,e.frameCounter+=1,n-e.counterTimestamp>=1e3&&(e.fps=e.frameCounter*((n-e.counterTimestamp)/1e3),e.counterTimestamp=n,e.frameCounter=0),o.trigger(e,"tick",i),o.trigger(e,"beforeUpdate",i),l.update(t,s,a),o.trigger(e,"afterUpdate",i),o.trigger(e,"afterTick",i)},s.stop=function(e){a(e.frameRequestId)},s.start=function(e,t){s.run(e,t)}},function(e,t,n){var s={};e.exports=s;var r=n(8),a=n(0).deprecated;s.collides=function(e,t){return r.collides(e,t)},a(s,"collides","SAT.collides ➤ replaced by Collision.collides")},function(e,t,n){var s={};e.exports=s,n(1);var r=n(0);s.pathToVertices=function(e,t){"undefined"==typeof window||"SVGPathSeg"in window||r.warn("Svg.pathToVertices: SVGPathSeg not defined, a polyfill is required.");var n,a,i,o,l,u,c,h,p,d,f,m=[],g=0,y=0,b=0;t=t||15;var x=function(e,t,n){var s=n%2==1&&n>1;if(!p||e!=p.x||t!=p.y){p&&s?(d=p.x,f=p.y):(d=0,f=0);var r={x:d+e,y:f+t};!s&&p||(p=r),m.push(r),y=d+e,b=f+t}},v=function(e){var t=e.pathSegTypeAsLetter.toUpperCase();if("Z"!==t){switch(t){case"M":case"L":case"T":case"C":case"S":case"Q":y=e.x,b=e.y;break;case"H":y=e.x;break;case"V":b=e.y}x(y,b,e.pathSegType)}};for(s._svgPathToAbsolute(e),i=e.getTotalLength(),u=[],n=0;n<e.pathSegList.numberOfItems;n+=1)u.push(e.pathSegList.getItem(n));for(c=u.concat();g<i;){if((l=u[e.getPathSegAtLength(g)])!=h){for(;c.length&&c[0]!=l;)v(c.shift());h=l}switch(l.pathSegTypeAsLetter.toUpperCase()){case"C":case"T":case"S":case"Q":case"A":o=e.getPointAtLength(g),x(o.x,o.y,0)}g+=t}for(n=0,a=c.length;n<a;++n)v(c[n]);return m},s._svgPathToAbsolute=function(e){for(var t,n,s,r,a,i,o=e.pathSegList,l=0,u=0,c=o.numberOfItems,h=0;h<c;++h){var p=o.getItem(h),d=p.pathSegTypeAsLetter;if(/[MLHVCSQTA]/.test(d))"x"in p&&(l=p.x),"y"in p&&(u=p.y);else switch("x1"in p&&(s=l+p.x1),"x2"in p&&(a=l+p.x2),"y1"in p&&(r=u+p.y1),"y2"in p&&(i=u+p.y2),"x"in p&&(l+=p.x),"y"in p&&(u+=p.y),d){case"m":o.replaceItem(e.createSVGPathSegMovetoAbs(l,u),h);break;case"l":o.replaceItem(e.createSVGPathSegLinetoAbs(l,u),h);break;case"h":o.replaceItem(e.createSVGPathSegLinetoHorizontalAbs(l),h);break;case"v":o.replaceItem(e.createSVGPathSegLinetoVerticalAbs(u),h);break;case"c":o.replaceItem(e.createSVGPathSegCurvetoCubicAbs(l,u,s,r,a,i),h);break;case"s":o.replaceItem(e.createSVGPathSegCurvetoCubicSmoothAbs(l,u,a,i),h);break;case"q":o.replaceItem(e.createSVGPathSegCurvetoQuadraticAbs(l,u,s,r),h);break;case"t":o.replaceItem(e.createSVGPathSegCurvetoQuadraticSmoothAbs(l,u),h);break;case"a":o.replaceItem(e.createSVGPathSegArcAbs(l,u,p.r1,p.r2,p.angle,p.largeArcFlag,p.sweepFlag),h);break;case"z":case"Z":l=t,u=n}"M"!=d&&"m"!=d||(t=l,n=u)}}},function(e,t,n){var s={};e.exports=s;var r=n(5);n(0),s.create=r.create,s.add=r.add,s.remove=r.remove,s.clear=r.clear,s.addComposite=r.addComposite,s.addBody=r.addBody,s.addConstraint=r.addConstraint}])},e.exports=s()},377:(e,t,n)=>{var s=n(832),r=n(652),a=n(801),i=n(30),o=n(618),l=n(49),u=n(971);u.alea=s,u.xor128=r,u.xorwow=a,u.xorshift7=i,u.xor4096=o,u.tychei=l,e.exports=u},832:function(e,t,n){var s;!function(e,r,a){function i(e){var t,n=this,s=(t=4022871197,function(e){e=e.toString();for(var n=0;n<e.length;n++){var s=.02519603282416938*(t+=e.charCodeAt(n));s-=t=s>>>0,t=(s*=t)>>>0,t+=4294967296*(s-=t)}return 2.3283064365386963e-10*(t>>>0)});n.next=function(){var e=2091639*n.s0+2.3283064365386963e-10*n.c;return n.s0=n.s1,n.s1=n.s2,n.s2=e-(n.c=0|e)},n.c=1,n.s0=s(" "),n.s1=s(" "),n.s2=s(" "),n.s0-=s(e),n.s0<0&&(n.s0+=1),n.s1-=s(e),n.s1<0&&(n.s1+=1),n.s2-=s(e),n.s2<0&&(n.s2+=1),s=null}function o(e,t){return t.c=e.c,t.s0=e.s0,t.s1=e.s1,t.s2=e.s2,t}function l(e,t){var n=new i(e),s=t&&t.state,r=n.next;return r.int32=function(){return 4294967296*n.next()|0},r.double=function(){return r()+11102230246251565e-32*(2097152*r()|0)},r.quick=r,s&&("object"==typeof s&&o(s,n),r.state=function(){return o(n,{})}),r}r&&r.exports?r.exports=l:n.amdD&&n.amdO?void 0===(s=function(){return l}.call(t,n,t,r))||(r.exports=s):this.alea=l}(0,e=n.nmd(e),n.amdD)},49:function(e,t,n){var s;!function(e,r,a){function i(e){var t=this,n="";t.next=function(){var e=t.b,n=t.c,s=t.d,r=t.a;return e=e<<25^e>>>7^n,n=n-s|0,s=s<<24^s>>>8^r,r=r-e|0,t.b=e=e<<20^e>>>12^n,t.c=n=n-s|0,t.d=s<<16^n>>>16^r,t.a=r-e|0},t.a=0,t.b=0,t.c=-1640531527,t.d=1367130551,e===Math.floor(e)?(t.a=e/4294967296|0,t.b=0|e):n+=e;for(var s=0;s<n.length+20;s++)t.b^=0|n.charCodeAt(s),t.next()}function o(e,t){return t.a=e.a,t.b=e.b,t.c=e.c,t.d=e.d,t}function l(e,t){var n=new i(e),s=t&&t.state,r=function(){return(n.next()>>>0)/4294967296};return r.double=function(){do{var e=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===e);return e},r.int32=n.next,r.quick=r,s&&("object"==typeof s&&o(s,n),r.state=function(){return o(n,{})}),r}r&&r.exports?r.exports=l:n.amdD&&n.amdO?void 0===(s=function(){return l}.call(t,n,t,r))||(r.exports=s):this.tychei=l}(0,e=n.nmd(e),n.amdD)},652:function(e,t,n){var s;!function(e,r,a){function i(e){var t=this,n="";t.x=0,t.y=0,t.z=0,t.w=0,t.next=function(){var e=t.x^t.x<<11;return t.x=t.y,t.y=t.z,t.z=t.w,t.w^=t.w>>>19^e^e>>>8},e===(0|e)?t.x=e:n+=e;for(var s=0;s<n.length+64;s++)t.x^=0|n.charCodeAt(s),t.next()}function o(e,t){return t.x=e.x,t.y=e.y,t.z=e.z,t.w=e.w,t}function l(e,t){var n=new i(e),s=t&&t.state,r=function(){return(n.next()>>>0)/4294967296};return r.double=function(){do{var e=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===e);return e},r.int32=n.next,r.quick=r,s&&("object"==typeof s&&o(s,n),r.state=function(){return o(n,{})}),r}r&&r.exports?r.exports=l:n.amdD&&n.amdO?void 0===(s=function(){return l}.call(t,n,t,r))||(r.exports=s):this.xor128=l}(0,e=n.nmd(e),n.amdD)},618:function(e,t,n){var s;!function(e,r,a){function i(e){var t=this;t.next=function(){var e,n,s=t.w,r=t.X,a=t.i;return t.w=s=s+1640531527|0,n=r[a+34&127],e=r[a=a+1&127],n^=n<<13,e^=e<<17,n^=n>>>15,e^=e>>>12,n=r[a]=n^e,t.i=a,n+(s^s>>>16)|0},function(e,t){var n,s,r,a,i,o=[],l=128;for(t===(0|t)?(s=t,t=null):(t+="\0",s=0,l=Math.max(l,t.length)),r=0,a=-32;a<l;++a)t&&(s^=t.charCodeAt((a+32)%t.length)),0===a&&(i=s),s^=s<<10,s^=s>>>15,s^=s<<4,s^=s>>>13,a>=0&&(i=i+1640531527|0,r=0==(n=o[127&a]^=s+i)?r+1:0);for(r>=128&&(o[127&(t&&t.length||0)]=-1),r=127,a=512;a>0;--a)s=o[r+34&127],n=o[r=r+1&127],s^=s<<13,n^=n<<17,s^=s>>>15,n^=n>>>12,o[r]=s^n;e.w=i,e.X=o,e.i=r}(t,e)}function o(e,t){return t.i=e.i,t.w=e.w,t.X=e.X.slice(),t}function l(e,t){null==e&&(e=+new Date);var n=new i(e),s=t&&t.state,r=function(){return(n.next()>>>0)/4294967296};return r.double=function(){do{var e=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===e);return e},r.int32=n.next,r.quick=r,s&&(s.X&&o(s,n),r.state=function(){return o(n,{})}),r}r&&r.exports?r.exports=l:n.amdD&&n.amdO?void 0===(s=function(){return l}.call(t,n,t,r))||(r.exports=s):this.xor4096=l}(0,e=n.nmd(e),n.amdD)},30:function(e,t,n){var s;!function(e,r,a){function i(e){var t=this;t.next=function(){var e,n,s=t.x,r=t.i;return e=s[r],n=(e^=e>>>7)^e<<24,n^=(e=s[r+1&7])^e>>>10,n^=(e=s[r+3&7])^e>>>3,n^=(e=s[r+4&7])^e<<7,e=s[r+7&7],n^=(e^=e<<13)^e<<9,s[r]=n,t.i=r+1&7,n},function(e,t){var n,s=[];if(t===(0|t))s[0]=t;else for(t=""+t,n=0;n<t.length;++n)s[7&n]=s[7&n]<<15^t.charCodeAt(n)+s[n+1&7]<<13;for(;s.length<8;)s.push(0);for(n=0;n<8&&0===s[n];++n);for(8==n?s[7]=-1:s[n],e.x=s,e.i=0,n=256;n>0;--n)e.next()}(t,e)}function o(e,t){return t.x=e.x.slice(),t.i=e.i,t}function l(e,t){null==e&&(e=+new Date);var n=new i(e),s=t&&t.state,r=function(){return(n.next()>>>0)/4294967296};return r.double=function(){do{var e=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===e);return e},r.int32=n.next,r.quick=r,s&&(s.x&&o(s,n),r.state=function(){return o(n,{})}),r}r&&r.exports?r.exports=l:n.amdD&&n.amdO?void 0===(s=function(){return l}.call(t,n,t,r))||(r.exports=s):this.xorshift7=l}(0,e=n.nmd(e),n.amdD)},801:function(e,t,n){var s;!function(e,r,a){function i(e){var t=this,n="";t.next=function(){var e=t.x^t.x>>>2;return t.x=t.y,t.y=t.z,t.z=t.w,t.w=t.v,(t.d=t.d+362437|0)+(t.v=t.v^t.v<<4^e^e<<1)|0},t.x=0,t.y=0,t.z=0,t.w=0,t.v=0,e===(0|e)?t.x=e:n+=e;for(var s=0;s<n.length+64;s++)t.x^=0|n.charCodeAt(s),s==n.length&&(t.d=t.x<<10^t.x>>>4),t.next()}function o(e,t){return t.x=e.x,t.y=e.y,t.z=e.z,t.w=e.w,t.v=e.v,t.d=e.d,t}function l(e,t){var n=new i(e),s=t&&t.state,r=function(){return(n.next()>>>0)/4294967296};return r.double=function(){do{var e=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===e);return e},r.int32=n.next,r.quick=r,s&&("object"==typeof s&&o(s,n),r.state=function(){return o(n,{})}),r}r&&r.exports?r.exports=l:n.amdD&&n.amdO?void 0===(s=function(){return l}.call(t,n,t,r))||(r.exports=s):this.xorwow=l}(0,e=n.nmd(e),n.amdD)},971:(e,t,n)=>{var s;!function(r,a){var i,o=(0,eval)("this"),l=256,u=a.pow(l,6),c=a.pow(2,52),h=2*c,p=255;function d(e,t,n){var s=[],p=y(g((t=1==t?{entropy:!0}:t||{}).entropy?[e,b(r)]:null==e?function(){try{var e;return i&&(e=i.randomBytes)?e=e(l):(e=new Uint8Array(l),(o.crypto||o.msCrypto).getRandomValues(e)),b(e)}catch(e){var t=o.navigator,n=t&&t.plugins;return[+new Date,o,n,o.screen,b(r)]}}():e,3),s),d=new f(s),x=function(){for(var e=d.g(6),t=u,n=0;e<c;)e=(e+n)*l,t*=l,n=d.g(1);for(;e>=h;)e/=2,t/=2,n>>>=1;return(e+n)/t};return x.int32=function(){return 0|d.g(4)},x.quick=function(){return d.g(4)/4294967296},x.double=x,y(b(d.S),r),(t.pass||n||function(e,t,n,s){return s&&(s.S&&m(s,d),e.state=function(){return m(d,{})}),n?(a.random=e,t):e})(x,p,"global"in t?t.global:this==a,t.state)}function f(e){var t,n=e.length,s=this,r=0,a=s.i=s.j=0,i=s.S=[];for(n||(e=[n++]);r<l;)i[r]=r++;for(r=0;r<l;r++)i[r]=i[a=p&a+e[r%n]+(t=i[r])],i[a]=t;(s.g=function(e){for(var t,n=0,r=s.i,a=s.j,i=s.S;e--;)t=i[r=p&r+1],n=n*l+i[p&(i[r]=i[a=p&a+t])+(i[a]=t)];return s.i=r,s.j=a,n})(l)}function m(e,t){return t.i=e.i,t.j=e.j,t.S=e.S.slice(),t}function g(e,t){var n,s=[],r=typeof e;if(t&&"object"==r)for(n in e)try{s.push(g(e[n],t-1))}catch(e){}return s.length?s:"string"==r?e:e+"\0"}function y(e,t){for(var n,s=e+"",r=0;r<s.length;)t[p&r]=p&(n^=19*t[p&r])+s.charCodeAt(r++);return b(t)}function b(e){return String.fromCharCode.apply(0,e)}if(a.seedrandom=d,y(a.random(),r),e.exports){e.exports=d;try{i=n(42)}catch(e){}}else void 0===(s=function(){return d}.call(t,n,t,e))||(e.exports=s)}([],Math)},352:(e,t)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.ascii=void 0,t.ascii={" ":[0,0,0,0,0,0],"!":[0,0,95,0,0,0],'"':[0,7,0,7,0,0],"#":[20,127,20,127,20,0],$:[36,42,127,42,18,0],"%":[35,19,8,100,98,0],"&":[54,73,85,34,80,0],"'":[0,0,7,0,0,0],"(":[0,28,34,65,0,0],")":[0,65,34,28,0,0],"*":[10,4,31,4,10,0],"+":[8,8,62,8,8,0],",":[0,80,48,0,0,0],"-":[8,8,8,8,8,0],".":[0,96,96,0,0,0],"/":[32,16,8,4,2,0],0:[62,81,73,69,62,0],1:[0,66,127,64,0,0],2:[66,97,81,73,70,0],3:[33,65,69,75,49,0],4:[24,20,18,127,16,0],5:[39,69,69,69,57,0],6:[60,74,73,73,48,0],7:[3,113,9,5,3,0],8:[54,73,73,73,54,0],9:[6,73,73,41,30,0],":":[0,54,54,0,0,0],";":[0,86,54,0,0,0],"<":[8,20,34,65,0,0],"=":[20,20,20,20,20,0],">":[0,65,34,20,8,0],"?":[2,1,81,9,6,0],"@":[50,73,121,65,62,0],A:[126,17,17,17,126,0],B:[127,73,73,73,54,0],C:[62,65,65,65,34,0],D:[127,65,65,65,62,0],E:[127,73,73,73,65,0],F:[127,9,9,9,1,0],G:[62,65,65,73,122,0],H:[127,8,8,8,127,0],I:[0,65,127,65,0,0],J:[32,64,65,63,1,0],K:[127,8,20,34,65,0],L:[127,64,64,64,64,0],M:[127,2,12,2,127,0],N:[127,4,8,16,127,0],O:[62,65,65,65,62,0],P:[127,9,9,9,6,0],Q:[62,65,81,33,94,0],R:[127,9,25,41,70,0],S:[38,73,73,73,50,0],T:[1,1,127,1,1,0],U:[63,64,64,64,63,0],V:[31,32,64,32,31,0],W:[63,64,56,64,63,0],X:[99,20,8,20,99,0],Y:[7,8,112,8,7,0],Z:[97,81,73,69,67,0],"[":[0,127,65,65,0,0],"\\":[2,4,8,16,32,0],"]":[0,65,65,127,0,0],"^":[4,2,1,2,4,0],_:[64,64,64,64,64,0],"`":[0,1,2,4,0,0],a:[32,84,84,84,120,0],b:[127,72,68,68,56,0],c:[56,68,68,68,32,0],d:[56,68,68,72,127,0],e:[56,84,84,84,24,0],f:[8,126,9,1,2,0],g:[8,84,84,84,60,0],h:[127,8,4,4,120,0],i:[0,72,125,64,0,0],j:[32,64,68,61,0,0],k:[127,16,40,68,0,0],l:[0,65,127,64,0,0],m:[124,4,120,4,120,0],n:[124,8,4,4,120,0],o:[56,68,68,68,56,0],p:[124,20,20,20,8,0],q:[8,20,20,24,124,0],r:[124,8,4,4,8,0],s:[72,84,84,84,32,0],t:[4,63,68,64,32,0],u:[60,64,64,32,124,0],v:[28,32,64,32,28,0],w:[60,64,48,64,60,0],x:[68,40,16,40,68,0],y:[12,80,80,80,60,0],z:[68,100,84,76,68,0],"{":[0,8,54,65,0,0],"|":[0,0,127,0,0,0],"}":[0,65,54,8,0,0],"~":[16,8,8,16,8,0],Ö:[16,48,127,127,48,16]}},651:(e,t,n)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.convert_ascii=void 0;const s=n(352);function r(e){return("00000000"+parseInt(e,16).toString(2)).substr(-8)}t.convert_ascii=function(e){if(e in s.ascii){const n=s.ascii[e],a=[];for(let e=0;e<n.length;e++){const s=r((t=n[e],t.toString(16))).split("").reverse().map((e=>"1"==e));a.push(s)}return a}var t;throw new Error(`Invalid char: ${e}`)}},243:function(e,t,n){"use strict";var s=this&&this.__createBinding||(Object.create?function(e,t,n,s){void 0===s&&(s=n);var r=Object.getOwnPropertyDescriptor(t,n);r&&!("get"in r?!t.__esModule:r.writable||r.configurable)||(r={enumerable:!0,get:function(){return t[n]}}),Object.defineProperty(e,s,r)}:function(e,t,n,s){void 0===s&&(s=n),e[s]=t[n]}),r=this&&this.__setModuleDefault||(Object.create?function(e,t){Object.defineProperty(e,"default",{enumerable:!0,value:t})}:function(e,t){e.default=t}),a=this&&this.__importStar||function(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var n in e)"default"!==n&&Object.prototype.hasOwnProperty.call(e,n)&&s(t,e,n);return r(t,e),t};Object.defineProperty(t,"__esModule",{value:!0}),t.Writer=void 0;const i=n(842),o=a(n(843)),l=n(651),u=n(87),c=n(476),h=n(882);t.Writer=class{_word;canvas;ctx;pixel_size=30;drones=[];destroyed_drones=[];mouse_drone;input_field=document.getElementById("input-field");input_timer;drone_brain;element_1=document.getElementById("element-1");element_2=document.getElementById("element-2");_hover_progress=0;hover_field=document.getElementById("hover-progress");hover_position;constructor(e){this.canvas=e,this.ctx=e.getContext("2d"),this.hover_position=i.Vector.create(e.width/2,e.height/2+132),this.input_field.onchange=this.input_change.bind(this),this.input_field.onkeyup=this.input_change.bind(this),this.input_field.onpaste=this.input_change.bind(this),this.load_drone_brain().then((e=>{this.drone_brain=e,document.onscroll=this.scroll.bind(this),this.scroll(),this.init_mouse_drone()}))}async load_drone_brain(){const e=await o.loadLayersModel("/clever-drones/res/trained_drone/drone.json");return new u.Neural_Network(e)}scroll(){this.scroll_percentage>=.9?(this.set_word("try it"),this.element_1.style.display="none",this.element_2.style.display="flex"):this.scroll_percentage<=.1?(this.set_word("Drones"),this.element_2.style.display="none",this.element_1.style.display="flex"):(this.set_word("Ö"),this.element_2.style.display="none",this.element_1.style.display="none")}get scroll_percentage(){return document.scrollingElement?document.scrollingElement.scrollTop/document.scrollingElement.clientHeight:1}async update(){await this.mouse_drone.update(),(0,h.calculate_distance)(this.mouse_drone.body.position,this.hover_position)<=20?this.hover_progress<100?this.hover_progress++:(this.hover_progress=0,window.location.href="/clever-drones/trainer.html"):this.hover_progress=0,this.mouse_drone.is_destroyed&&(this.mouse_drone.destroy(),this.destroyed_drones.push(this.mouse_drone),this.init_mouse_drone()),this.destroyed_drones=this.destroyed_drones.filter((e=>!e.is_disposed));const e=[];for(let t=0;t<this.drones.length;t++){const n=this.drones[t];await n.update(),n.is_destroyed&&e.push(n.brain.model.id)}this.drones=this.drones.filter((t=>!e.includes(t.brain.model.id)||(t.destroy(),this.destroyed_drones.push(t),!1)))}draw(){[this.mouse_drone,...this.drones,...this.destroyed_drones].forEach((e=>{e.draw()}))}init_mouse_drone(){this.mouse_drone=new c.Drone(this.drone_brain.copy()),this.mouse_drone.set_mouse_mode(!0)}input_change(){clearTimeout(this.input_timer),this.input_timer=setTimeout((()=>{this.input_field.value&&this.set_word(this.input_field.value)}),500)}get word(){return this._word}async set_word(e){if(this.word==e)return;this._word=e;const t=[],n=(this.canvas.width-6*e.length*this.pixel_size+this.pixel_size)/2,s=this.canvas.height/2-4*this.pixel_size;for(let r=0;r<e.length;r++){const a=(0,l.convert_ascii)(e[r]);for(let e=0;e<6;e++)for(let o=0;o<8;o++)if(a[e][o]){const a=i.Vector.create(e*this.pixel_size+r*(6*this.pixel_size)+n,o*this.pixel_size-this.pixel_size/2+s);t.push(a)}}const r=[];for(let e=0;e<t.length;e++){const n=this.drones.filter((e=>!r.includes(e))),s=this.drones.length<t.length;let a=this.get_closest_drone(n,t[e],s);a||(a=new c.Drone(this.drone_brain.copy())),r.push(a),a.set_target(t[e])}for(let e=0;e<this.drones.length;e++)r.includes(this.drones[e])||(this.drones[e].destroy(),this.destroyed_drones.push(this.drones[e]));this.drones=r}get_closest_drone(e,t,n){if(0==e.length)return null;let s=null,r=1/0;for(let a=0;a<e.length;a++){const i=e[a],o=(0,h.calculate_distance)(i.body.position,t),l=(0,h.calculate_distance)(c.Drone.spawn_point,t);(o<r&&!n||o<l&&o<r&&n)&&(s=i,r=o)}return s}set hover_progress(e){this._hover_progress=e,this.hover_field.style.height=`${e}%`}get hover_progress(){return this._hover_progress}}},476:function(e,t,n){"use strict";var s=this&&this.__createBinding||(Object.create?function(e,t,n,s){void 0===s&&(s=n);var r=Object.getOwnPropertyDescriptor(t,n);r&&!("get"in r?!t.__esModule:r.writable||r.configurable)||(r={enumerable:!0,get:function(){return t[n]}}),Object.defineProperty(e,s,r)}:function(e,t,n,s){void 0===s&&(s=n),e[s]=t[n]}),r=this&&this.__setModuleDefault||(Object.create?function(e,t){Object.defineProperty(e,"default",{enumerable:!0,value:t})}:function(e,t){e.default=t}),a=this&&this.__importStar||function(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var n in e)"default"!==n&&Object.prototype.hasOwnProperty.call(e,n)&&s(t,e,n);return r(t,e),t};Object.defineProperty(t,"__esModule",{value:!0}),t.Drone=void 0;const i=a(n(842)),o=n(704),l=n(87),u=n(882),c=n(241);class h{size=20;thruster_power=8e-4;max_duration=600;thrusters=[];brain;timer;percentage_targets=[i.Vector.create(.5,.5),i.Vector.create(.3,.6),i.Vector.create(.5,.8),i.Vector.create(.3,.4),i.Vector.create(.2,.8),i.Vector.create(.5,.5),i.Vector.create(.8,.2),i.Vector.create(.8,.8),i.Vector.create(.2,.2)];targets=[];current_target=0;mouse_mode=!1;manual_target=null;target_arrived;target_arrived_total;score;fitness;is_destroyed;is_disposed;body;main_body;static spawn_point=i.Vector.create(0,0);constructor(e=null,t=null){t||(t=h.spawn_point),this.main_body=i.Bodies.rectangle(t.x,t.y,this.size,this.size),i.Body.setAngle(this.main_body,-Math.PI),this.thrusters.push(new o.Thruster(this,i.Vector.create(10,10),this.thruster_power)),this.thrusters.push(new o.Thruster(this,i.Vector.create(-10,10),this.thruster_power));const n={parts:[this.main_body],collisionFilter:{group:-1}};for(let e=0;e<this.thrusters.length;e++){const t=this.thrusters[e];n.parts.push(t.body)}this.body=i.Body.create(n),i.Composite.add(c.Mat.engine.world,this.body),this.score=0,this.fitness=0,this.is_destroyed=!1,this.timer=0,this.target_arrived=0,this.target_arrived_total=0,this.mouse_mode&&(this.max_duration=1e5),this.percentage_targets.forEach((e=>{this.targets.push(i.Vector.create(Math.floor(c.Mat.canvas.width*e.x),Math.floor(c.Mat.canvas.height*e.y)))})),this.brain=e||new l.Neural_Network}draw(){(0,u.draw_body)(c.Mat.ctx,this.main_body),this.is_destroyed||this.manual_target||(c.Mat.ctx.fillStyle="red",c.Mat.ctx.fillRect(this.target.x-5,this.target.y-5,10,10)),this.thrusters.forEach((e=>e.draw()))}set_mouse_mode(e){this.mouse_mode=e,this.max_duration=1e5}async update(){if(this.is_destroyed)return;c.Mat.boundaries.forEach((e=>{i.default.SAT.collides(this.body,e.body)&&(this.is_destroyed=!0,this.target_arrived=0,this.manual_target||this.mouse_mode||i.Composite.remove(c.Mat.engine.world,this.body,!0))}));let e=1/(this.get_distance_to_taget()+1);this.score+=Math.pow(e,1),this.get_distance_to_taget()<=20&&!this.mouse_mode?(this.target_arrived++,100==this.target_arrived&&(this.score+=.1*(this.max_duration-this.timer)+200,this.current_target++,this.target_arrived=0,this.timer=0,this.current_target!=this.targets.length||this.mouse_mode||(this.current_target=0,this.is_destroyed=!0)),this.target_arrived_total++):this.target_arrived=0,await this.calculate_action();for(let e=0;e<this.thrusters.length;e++)this.thrusters[e].update();this.timer++,this.timer==this.max_duration&&(this.is_destroyed=!0)}get_distance_to_taget(){const e=Math.sqrt(Math.pow(this.target.y-this.body.position.y,2)+Math.pow(this.target.x-this.body.position.x,2));return Math.round(e)}set_target(e){this.set_mouse_mode(!0),this.manual_target=e}get target(){return this.manual_target?this.manual_target:this.mouse_mode?c.Mat.mouse.position:this.targets[this.current_target]}get target_vector(){return i.Vector.sub(this.target,this.body.position)}destroy(){this.is_destroyed=!0,setTimeout(this.dispose.bind(this),2e3)}async calculate_action(){const e={velocity:this.body.velocity,angular_velocity:this.body.angularVelocity,angle:this.body.angle,target_vector:this.target_vector},t=await this.brain.predict(e),n=Math.abs(t[0]),s=Math.abs(t[1]),r=.5*t[2]*Math.PI,a=.5*t[3]*Math.PI;this.thrusters[0].set_angle(r),this.thrusters[1].set_angle(a),this.thrusters[0].set_power(n),this.thrusters[1].set_power(s)}dispose(){i.Composite.remove(c.Mat.engine.world,this.body,!0),delete this.thrusters[0],delete this.thrusters[1],this.brain.dispose(),this.is_disposed=!0}freeze(){i.Composite.remove(c.Mat.engine.world,this.body,!0)}unfreeze(){i.Composite.add(c.Mat.engine.world,this.body)}copy(){const e=new h(this.brain.copy());return e.score=this.score,e}}t.Drone=h},87:function(e,t,n){"use strict";var s=this&&this.__createBinding||(Object.create?function(e,t,n,s){void 0===s&&(s=n);var r=Object.getOwnPropertyDescriptor(t,n);r&&!("get"in r?!t.__esModule:r.writable||r.configurable)||(r={enumerable:!0,get:function(){return t[n]}}),Object.defineProperty(e,s,r)}:function(e,t,n,s){void 0===s&&(s=n),e[s]=t[n]}),r=this&&this.__setModuleDefault||(Object.create?function(e,t){Object.defineProperty(e,"default",{enumerable:!0,value:t})}:function(e,t){e.default=t}),a=this&&this.__importStar||function(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var n in e)"default"!==n&&Object.prototype.hasOwnProperty.call(e,n)&&s(t,e,n);return r(t,e),t};Object.defineProperty(t,"__esModule",{value:!0}),t.Neural_Network=void 0;const i=a(n(843)),o=n(241),l=n(882);class u{model;constructor(e=null){this.model=e||u.create_network(),i.setBackend("cpu")}static create_network(){const e=i.sequential(),t=i.layers.dense({units:10,inputShape:[6],activation:"tanh"});e.add(t);const n=i.layers.dense({units:10,activation:"tanh"});e.add(n);const s=i.layers.dense({units:4,activation:"tanh"});return e.add(s),e}copy(){return i.tidy((()=>{const e=u.create_network(),t=this.copy_weights();return e.setWeights(t),i.dispose(t),new u(e)}))}copy_weights(){const e=this.model.getWeights(),t=[];for(let n=0;n<e.length;n++)t[n]=e[n].clone();return t}crossover(e){return i.tidy((()=>{const t=this.model.getWeights(),n=e.getWeights(),s=Math.random()<.5?t:n,r=u.create_network();return r.setWeights(s),new u(r)}))}mutate(){i.tidy((()=>{const e=this.model.getWeights(),t=[];for(let n=0;n<e.length;n++){let s=e[n],r=e[n].shape,a=s.dataSync().slice();for(let e=0;e<a.length;e++)if(Math.random()<.2){let t=a[e];a[e]=t+.25*(0,l.randomGaussian)()}let o=i.tensor(a,r);t[n]=o}this.model.setWeights(t)}))}async predict(e){const t=i.tensor2d([[e.velocity.x/100,e.velocity.y/100,e.angular_velocity/2,e.target_vector.x/o.Mat.canvas.width,e.target_vector.y/o.Mat.canvas.height,Math.sin(e.angle)]]),n=this.model.predict(t);try{const e=await n.data();return i.dispose(n),i.dispose(t),e}catch(e){throw e}}dispose(){this.model.dispose()}}t.Neural_Network=u},704:function(e,t,n){"use strict";var s=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0}),t.Thruster=void 0;const r=s(n(842)),a=n(842),i=n(241),o=n(882),l=new Image;l.src="./res/flame_v2.png",t.Thruster=class{drone;force;power;current_force;body;constructor(e,t,n){this.drone=e,this.force=n,this.body=a.Bodies.rectangle(this.drone.main_body.position.x+t.x,this.drone.main_body.position.y+t.y,5,10,{isSensor:!0}),a.Body.setAngle(this.body,-Math.PI),this.current_force=0,this.power=0}set_angle(e){a.Body.setAngle(this.body,this.drone.main_body.angle+e)}set_power(e){this.power=e,this.current_force=e*this.force}get_force(){return r.default.Vector.create(this.body.axes[1].y*this.current_force,this.body.axes[0].y*this.current_force)}update(){a.Body.applyForce(this.drone.body,this.body.position,this.get_force())}draw(){if((0,o.draw_body)(i.Mat.ctx,this.body),this.drone.is_destroyed)return;const e=this.body.angle+this.drone.body.angle+Math.PI,t=Math.pow(1.6,9*this.power)+10*Math.random()+10;i.Mat.ctx.translate(this.body.position.x,this.body.position.y),i.Mat.ctx.rotate(e),i.Mat.ctx.drawImage(l,-t/2,0,t,t),i.Mat.ctx.rotate(-e),i.Mat.ctx.translate(-this.body.position.x,-this.body.position.y)}}},104:(e,t,n)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.Boundary=void 0;const s=n(842),r=n(241);t.Boundary=class{body;width;height;constructor(e,t,n,a){this.width=n,this.height=a,this.body=s.Bodies.rectangle(e,t,n,a),this.body.isStatic=!0,s.Composite.add(r.Mat.engine.world,this.body)}}},241:function(e,t,n){"use strict";var s=this&&this.__createBinding||(Object.create?function(e,t,n,s){void 0===s&&(s=n);var r=Object.getOwnPropertyDescriptor(t,n);r&&!("get"in r?!t.__esModule:r.writable||r.configurable)||(r={enumerable:!0,get:function(){return t[n]}}),Object.defineProperty(e,s,r)}:function(e,t,n,s){void 0===s&&(s=n),e[s]=t[n]}),r=this&&this.__setModuleDefault||(Object.create?function(e,t){Object.defineProperty(e,"default",{enumerable:!0,value:t})}:function(e,t){e.default=t}),a=this&&this.__importStar||function(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var n in e)"default"!==n&&Object.prototype.hasOwnProperty.call(e,n)&&s(t,e,n);return r(t,e),t};Object.defineProperty(t,"__esModule",{value:!0}),t.Mat=void 0;const i=a(n(842)),o=n(476),l=n(104);t.Mat=new class{engine;boundaries;mouse;canvas;ctx;constructor(){this.engine=i.default.Engine.create()}add_boundary(e){this.boundaries.push(e)}update(){i.default.Engine.update(this.engine)}set_canvas(e){this.canvas=e,this.ctx=e.getContext("2d"),this.set_mouse(e),this.boundaries=[new l.Boundary(t.Mat.canvas.width/2,t.Mat.canvas.height+10,4*t.Mat.canvas.width,20),new l.Boundary(t.Mat.canvas.width/2,-10,t.Mat.canvas.width,20),new l.Boundary(-10,t.Mat.canvas.height/2,20,t.Mat.canvas.height),new l.Boundary(t.Mat.canvas.width+10,t.Mat.canvas.height/2,20,t.Mat.canvas.height)],o.Drone.spawn_point=i.Vector.create(Math.round(t.Mat.canvas.width/2),Math.round(t.Mat.canvas.height)-400)}set_mouse(e){this.mouse=i.default.Mouse.create(e),this.mouse.element.removeEventListener("mousewheel",this.mouse.mousewheel),this.mouse.element.removeEventListener("DOMMouseScroll",this.mouse.mousewheel)}get random_positon(){const e=Math.random(),t=Math.random();let n,s;return n=e*this.canvas.width,s=t*this.canvas.height,i.Vector.create(n,s)}}},882:(e,t)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.random=t.sleep=t.draw_body=t.calculate_distance=t.randomGaussian=t.lerp=void 0,t.lerp=function(e,t,n){return(1-n)*e+n*t},t.randomGaussian=function(){for(var e=0,t=0;0==e;)e=Math.random();for(;0==t;)t=Math.random();return Math.sqrt(-2*Math.log(e))*Math.cos(2*Math.PI*t)},t.calculate_distance=function(e,t){const n=Math.sqrt(Math.pow(t.y-e.y,2)+Math.pow(t.x-e.x,2));return Math.abs(n)},t.draw_body=function(e,t){e.beginPath();var n=t.vertices;e.moveTo(n[0].x,n[0].y);for(var s=1;s<n.length;s+=1)e.lineTo(n[s].x,n[s].y);e.lineTo(n[0].x,n[0].y),e.lineWidth=1,e.strokeStyle="#999",e.stroke()},t.sleep=function(e){return new Promise((t=>{setTimeout(t,e)}))},t.random=function(e,t){return Math.floor(Math.random()*(t-e+1)+e)}},914:()=>{},410:()=>{},628:()=>{},778:()=>{},601:()=>{},792:()=>{},977:()=>{},42:()=>{}},t={};function n(s){var r=t[s];if(void 0!==r)return r.exports;var a=t[s]={id:s,loaded:!1,exports:{}};return e[s].call(a.exports,a,a.exports,n),a.loaded=!0,a.exports}n.amdD=function(){throw new Error("define cannot be used indirect")},n.amdO={},n.n=e=>{var t=e&&e.__esModule?()=>e.default:()=>e;return n.d(t,{a:t}),t},n.d=(e,t)=>{for(var s in t)n.o(t,s)&&!n.o(e,s)&&Object.defineProperty(e,s,{enumerable:!0,get:t[s]})},n.g=function(){if("object"==typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(e){if("object"==typeof window)return window}}(),n.o=(e,t)=>Object.prototype.hasOwnProperty.call(e,t),n.r=e=>{"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},n.nmd=e=>(e.paths=[],e.children||(e.children=[]),e),(()=>{"use strict";const e=n(243),t=n(241),s=document.getElementById("main-canvas");let r;s.setAttribute("height",""+s.parentElement.clientHeight),s.setAttribute("width",""+s.parentElement.clientWidth),t.Mat.set_canvas(s),r=new e.Writer(s),window.requestAnimationFrame((async function e(){r.drone_brain?(t.Mat.ctx.clearRect(0,0,t.Mat.canvas.width,t.Mat.canvas.height),await r.update(),t.Mat.update(),r.draw(),window.requestAnimationFrame(e)):window.requestAnimationFrame(e)}))})()})();